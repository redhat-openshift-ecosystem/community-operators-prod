name: Operator test


on:
  pull_request_target:
    types: [opened, synchronize, reopened, ready_for_review, unlabeled]

env:
  OPP_DEBUG: 1
  OPP_CONTAINER_OPT: "-t"
  OPP_SCRIPT_URL: "https://raw.githubusercontent.com/operator-framework/community-operators/support/ci_01/ci/scripts/opp.sh"
  OPP_SCRIPT_ENV_URL: "https://raw.githubusercontent.com/operator-framework/community-operators/support/ci_01/ci/scripts/opp-env.sh"
  OPP_IMAGE: "quay.io/operator_testing/operator-test-playbooks:latest"
  OPP_THIS_REPO_BASE: "https://github.com"
  OPP_THIS_REPO: "redhat-openshift-ecosystem/community-operators-prod"
  OPP_THIS_BRANCH: "main"
  OPP_RELEASE_BUNDLE_REGISTRY: "quay.io"
  OPP_RELEASE_BUNDLE_ORGANIZATION: "openshift-community-operators"
  OPP_RELEASE_INDEX_REGISTRY: "quay.io"
  OPP_RELEASE_INDEX_ORGANIZATION: "openshift-community-operators"
  OPP_RELEASE_INDEX_NAME: "catalog"
  OPP_PROD: 0
  OPP_DRY_RUN: 0
  KIND_KUBE_VERSION: "v1.21.1"
  OPP_PRODUCTION_TYPE: "ocp"
  OPP_REVIEWERS_ENABLED: 1


jobs:
  pr-check:
    if: github.event.pull_request.draft == false || contains(github.event.pull_request.labels.*.name, 'allow/test-in-draft-mode')
    name: "PR-traffic-light"
    runs-on: ubuntu-latest
    steps:
      # Checks out a copy of your repository on the ubuntu-latest machine
      - name: Checkout code
        uses: actions/checkout@v2
      - id: files
        uses: jitterbit/get-changed-files@v1
        continue-on-error: true
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: python -m pip install --upgrade pip yq
      - name: Operator traffic light
        id: op-traffic-light
        env:
          OPP_LABELS: "${{ join(github.event.pull_request.labels.*.name, ' ') }}"
          OPP_MODIFIED_FILES: "${{ steps.files.outputs.modified }}"
          OPP_ADDED_MODIFIED_FILES: "${{ steps.files.outputs.added_modified }}"
          OPP_RENAMED_FILES: "${{ steps.files.outputs.renamed }}"
          OPP_REMOVED_FILES: "${{ steps.files.outputs.removed }}"
        run: |
          echo "Using script '$OPP_SCRIPT_ENV_URL' ..."
          echo "global labels $OPP_LABELS"
          bash <(curl -sL $OPP_SCRIPT_ENV_URL)
    outputs:
      opp_test_ready: "${{ steps.op-traffic-light.outputs.opp_test_ready }}"
      opp_release_ready: "${{ steps.op-traffic-light.outputs.opp_release_ready }}"
      opp_stream: "${{ steps.op-traffic-light.outputs.opp_stream }}"
      opp_name: "${{ steps.op-traffic-light.outputs.opp_name }}"
      opp_version: "${{ steps.op-traffic-light.outputs.opp_version }}"
      opp_ci_yaml_only: "${{ steps.op-traffic-light.outputs.opp_ci_yaml_only }}"
      opp_op_delete: "${{ steps.op-traffic-light.outputs.opp_op_delete }}"

  test-kiwi:
    name: "kiwi / Full operator test"
    id: kiwi-full-operator-test
    needs: pr-check
    if: needs.pr-check.outputs.opp_test_ready == '1'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Operator test
        env:
          OPP_LABELS: "${{ join(github.event.pull_request.labels.*.name, ' ') }}"
        run: |
          echo "kiwi operators/${{ needs.pr-check.outputs.opp_name }}/${{ needs.pr-check.outputs.opp_version }}"
          bash <(curl -sL $OPP_SCRIPT_URL) kiwi "operators/${{ needs.pr-check.outputs.opp_name }}/${{ needs.pr-check.outputs.opp_version }}"
      - name: "Comment operator test error olm.maxOpenShiftVersion"
        if: contains(steps.kiwi-full-operator-test.outputs, 'not specified olm.maxOpenShiftVersion') == true
        uses: mshick/add-pr-comment@v1
        with:
          message: |
            IMPORTANT Kubernetes has been deprecating API(s) which will be removed and no longer available in 1.22 and in the Openshift version 4.9. Note that your project will be unable to use them on OCP 4.9/K8s 1.22 and then, it is strongly recommended to check [Deprecated API Migration Guide from v1.22](https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22) and ensure that your projects have them migrated and are not using any deprecated API.
            To prevent workflow issues, its users will need to have installed in their OCP cluster a version of your operator compatible with 4.9 before they try to upgrade their cluster from any previous version to 4.9 or higher. However, If you still need to publish the operator bundles with any of these API(s) for use on earlier k8s/OCP versions, ensure that the operator bundle is configured accordingly:
            Use the olm.openShiftMaxVersion property in the CSV to prevent the user from upgrading their OCP cluster before upgrading the installed operator version to any distribution which is compatible with:
            ```yaml
            apiVersion: operators.coreos.com/v1alpha1
            kind: ClusterServiceVersion
            metadata:
              annotations:
                # Prevent cluster upgrades to OpenShift Version 4.9 when this
                # bundle is installed on the cluster
                "olm.properties": '[{"type": "olm.maxOpenShiftVersion", "value": "4.8"}]'
            ```
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          repo-token-user-login: 'github-actions[bot]' # The user.login for temporary GitHub tokens
          allow-repeats: true

  test-lemon-openshift_4_6:
    name: "lemon / Deploy from scratch (v4.6)"
    needs: pr-check
    if: needs.pr-check.outputs.opp_test_ready == '1'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Operator test
        env:
          OPP_LABELS: "${{ join(github.event.pull_request.labels.*.name, ' ') }}"
        run: |
          echo "lemon_v4.6 operators/${{ needs.pr-check.outputs.opp_name }}/${{ needs.pr-check.outputs.opp_version }}"
          bash <(curl -sL $OPP_SCRIPT_URL) lemon_v4.6 "operators/${{ needs.pr-check.outputs.opp_name }}/${{ needs.pr-check.outputs.opp_version }}"

  test-lemon-openshift_4_7:
    name: "lemon / Deploy from scratch (v4.7)"
    needs: pr-check
    if: needs.pr-check.outputs.opp_test_ready == '1'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Operator test
        env:
          OPP_LABELS: "${{ join(github.event.pull_request.labels.*.name, ' ') }}"
        run: |
          echo "lemon_v4.7 operators/${{ needs.pr-check.outputs.opp_name }}/${{ needs.pr-check.outputs.opp_version }}"
          bash <(curl -sL $OPP_SCRIPT_URL) lemon_v4.7 "operators/${{ needs.pr-check.outputs.opp_name }}/${{ needs.pr-check.outputs.opp_version }}"

  test-lemon-openshift_4_8:
    name: "lemon / Deploy from scratch (v4.8)"
    needs: pr-check
    if: needs.pr-check.outputs.opp_test_ready == '1'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Operator test
        env:
          OPP_LABELS: "${{ join(github.event.pull_request.labels.*.name, ' ') }}"
        run: |
          echo "lemon_v4.8 operators/${{ needs.pr-check.outputs.opp_name }}/${{ needs.pr-check.outputs.opp_version }}"
          bash <(curl -sL $OPP_SCRIPT_URL) lemon_v4.8 "operators/${{ needs.pr-check.outputs.opp_name }}/${{ needs.pr-check.outputs.opp_version }}"



  test-orange-openshift_4_6:
    name: "orange / Deploy o7t v4.6"
    needs: pr-check
    if: needs.pr-check.outputs.opp_test_ready == '1' && needs.pr-check.outputs.opp_op_delete == '0'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Operator test
        env:
          OPP_LABELS: "${{ join(github.event.pull_request.labels.*.name, ' ') }}"
        run: |
          echo "orange_v4.6 operators/${{ needs.pr-check.outputs.opp_name }}/${{ needs.pr-check.outputs.opp_version }}"
          bash <(curl -sL $OPP_SCRIPT_URL) orange_v4.6 "operators/${{ needs.pr-check.outputs.opp_name }}/${{ needs.pr-check.outputs.opp_version }}"

  test-orange-openshift_4_7:
    name: "orange / Deploy o7t v4.7"
    needs: pr-check
    if: needs.pr-check.outputs.opp_test_ready == '1' && needs.pr-check.outputs.opp_op_delete == '0'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Operator test
        env:
          OPP_LABELS: "${{ join(github.event.pull_request.labels.*.name, ' ') }}"
        run: |
          echo "orange_v4.7 operators/${{ needs.pr-check.outputs.opp_name }}/${{ needs.pr-check.outputs.opp_version }}"
          bash <(curl -sL $OPP_SCRIPT_URL) orange_v4.7 "operators/${{ needs.pr-check.outputs.opp_name }}/${{ needs.pr-check.outputs.opp_version }}"

  test-orange-openshift_4_8:
    name: "orange / Deploy o7t v4.8"
    needs: pr-check
    if: needs.pr-check.outputs.opp_test_ready == '1' && needs.pr-check.outputs.opp_op_delete == '0'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Operator test
        env:
          OPP_LABELS: "${{ join(github.event.pull_request.labels.*.name, ' ') }}"
        run: |
          echo "orange_v4.8 operators/${{ needs.pr-check.outputs.opp_name }}/${{ needs.pr-check.outputs.opp_version }}"
          bash <(curl -sL $OPP_SCRIPT_URL) orange_v4.8 "operators/${{ needs.pr-check.outputs.opp_name }}/${{ needs.pr-check.outputs.opp_version }}"
          
  test-dco:
    name: "DCO test (commits signoff)"
    needs: pr-check
    runs-on: ubuntu-latest
    steps:
      - name: Get PR Commits
        id: 'get-pr-commits'
        uses: tim-actions/get-pr-commits@master
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: DCO Check
        uses: tim-actions/dco@v1.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commits: ${{ steps.get-pr-commits.outputs.commits }}

  test-summary:
    name: "Summary"

    needs: [ pr-check, test-dco, test-kiwi, test-lemon-openshift_4_6, test-lemon-openshift_4_7, test-lemon-openshift_4_8, test-orange-openshift_4_6, test-orange-openshift_4_7, test-orange-openshift_4_8 ]

    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: PR
        if: needs.pr-check.outputs.opp_test_ready == '1'
        continue-on-error: true
        run: |
          echo "OP_PR=${{ github.event.pull_request.number }}"
      - name: Save PR number
        run: |
          mkdir -p ./pr
          echo ${{ github.event.number }} > ./pr/NR
      - uses: actions/upload-artifact@v2
        with:
          name: pr
          path: pr/
