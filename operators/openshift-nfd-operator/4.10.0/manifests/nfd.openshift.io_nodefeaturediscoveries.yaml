apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.1
  creationTimestamp: null
  name: nodefeaturediscoveries.nfd.openshift.io
spec:
  group: nfd.openshift.io
  names:
    kind: NodeFeatureDiscovery
    listKind: NodeFeatureDiscoveryList
    plural: nodefeaturediscoveries
    singular: nodefeaturediscovery
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: An Node Feature Discovery cluster instance
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Specification of the desired behavior of the Node Feature
              Discovery
            properties:
              customConfig:
                description: WorkerConfig describes configuration options for the
                  NFD worker.
                properties:
                  configData:
                    description: BinaryData holds the NFD configuration file
                    type: string
                required:
                - configData
                type: object
              extraLabelNs:
                description: ExtraLabelNs defines the list of of allowed extra label
                  namespaces By default, only allow labels in the default `feature.node.kubernetes.io`
                  label namespace
                items:
                  type: string
                nullable: true
                type: array
              instance:
                description: Run NFD in multiple deployment mode https://kubernetes-sigs.github.io/node-feature-discovery/v0.8/advanced/master-commandline-reference.html#-instance
                nullable: true
                type: string
              labelWhiteList:
                description: LabelWhiteList defines a regular expression for filtering
                  feature labels based on their name. Each label must match against
                  the given reqular expression in order to be published.
                nullable: true
                type: string
              operand:
                description: OperandSpec describes configuration options for the operand
                properties:
                  image:
                    description: Image defines the image to pull for the NFD operand
                    nullable: true
                    pattern: '[a-zA-Z0-9\-]+'
                    type: string
                  imagePullPolicy:
                    description: ImagePullPolicy defines Image pull policy for the
                      NFD operand image [defaults to Always]
                    nullable: true
                    type: string
                  servicePort:
                    description: ServicePort specifies the TCP port that nfd-master
                      listens for incoming requests.
                    type: integer
                type: object
              resourceLabels:
                description: ResourceLabels defines the list of features to be advertised
                  as extended resources instead of labels.
                items:
                  type: string
                nullable: true
                type: array
              topologyupdater:
                description: Deploy the NFD-Topology-Updater NFD-Topology-Updater
                  is a daemon responsible for examining allocated resources on a worker
                  node to account for resources available to be allocated to new pod
                  on a per-zone basis https://kubernetes-sigs.github.io/node-feature-discovery/v0.10/get-started/introduction.html#nfd-topology-updater
                type: boolean
              workerConfig:
                description: ConfigMap describes configuration options for the NFD
                  worker
                properties:
                  configData:
                    description: BinaryData holds the NFD configuration file
                    type: string
                required:
                - configData
                type: object
            type: object
          status:
            description: NodeFeatureDiscoveryStatus defines the observed state of
              NodeFeatureDiscovery
            properties:
              conditions:
                description: Conditions represents the latest available observations
                  of current state.
                items:
                  description: Condition represents the state of the operator's reconciliation
                    functionality.
                  properties:
                    lastHeartbeatTime:
                      format: date-time
                      type: string
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      description: ConditionType is the state of the operator's reconciliation
                        functionality.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
