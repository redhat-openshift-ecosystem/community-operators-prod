---
defaultChannel: alpha
icon:
  base64data: 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AABA1gQsAAAAALImYAEAAACQNQELAAAAgKwJWAAAAABkTcACAAAAIGsCFgAAAABZE7AAAAAAyJqABQAAAEDWBCwAAAAAsiZgAQAAAJA1AQsAAACArAlYAAAAAGRNwAIAAAAgawIWAAAAAFkTsAAAAADImoAFAAAAQNYELAAAAACyJmABAAAAkDUBCwAAAICsCVgAAAAAZE3AAgAAACBrAhYAAAAAWROwAAAAAMiagAUAAABA1gQsAAAAALImYAEAAACQNQELAAAAgKwJWAAAAABkTcACAAAAIGsCFgAAAABZE7AAAAAAyJqABQAAAEDWBCwAAAAAsiZgAQAAAJA1AQsAAACArAlYAAAAAGRNwAIAAAAgawIWAAAAAFkTsAAAAADImoAFAAAAQNYELAAAAACyJmABAAAAkDUBCwAAAICsCVgAAAAAZE3AAgAAACBrAhYAAAAAWROwAAAAAMiagAUAAABA1gQsAAAAALImYAEAAACQNQELAAAAgKwJWAAAAABkTcACAAAAIGsCFgAAAABZE7AAAAAAyJqABQAAAEDWBCwAAAAAsiZgAQAAAJA1AQsAAACArAlYAAAAAGRNwAIAAAAgawIWAAAAAFkTsAAAAADImoAFAAAAQNYELAAAAACyJmABAAAAkDUBCwAAAICsCVgAAAAAZE3AAgAAACBrAhYAAAAAWROwAAAAAMiagAUAAABA1gQsAAAAALImYAEAAACQNQELAAAAgKwJWAAAAABkTcACAAAAIGsCFgAAAABZE7AAAAAAyJqABQAAAEDWBCwAAAAAsiZgAQAAAJA1AQsAAACArAlYAAAAAGRNwAIAAAAgawIWAAAAAFkTsAAAAADImoAFAAAAQNYELAAAAACyJmABAAAAkDUBCwAAAICsCVgAAAAAZE3AAgAAACBrAhYAAAAAWROwAAAAAMiagAUAAABA1gQsAAAAALImYAEAAACQNQELAAAAgKwJWAAAAABkTcACAAAAIGsCFgAAAABZE7AAAAAAyJqABQAAAEDWBCwAAAAAsiZgAQAAAJA1AQsAAACArAlYAAAAAGRNwAIAAAAgawIWAAAAAFkTsAAAAADImoAFAAAAQNYELAAAAACyJmABAAAAkDUBCwAAAICsCVgAAAAAZE3AAgAAACBrAhYAAAAAWROwAAAAAMiagAUAAABA1gQsAAAAALImYAEA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awIWAAAAAFkTsAAAAADImoAFAAAAQNYELAAAAACyJmABAAAAkDUBCwAAAICsCVgAAAAAZE3AAgAAACBrAhYAAAAAWROwAAAAAMiagAUAAABA1gQsAAAAALImYAEAAACQNQELAAAAgKwJWAAAAABkTcACAAAAIGsCFgAAAABZE7AAAAAAyJqABQAAAEDWBCwAAAAAsiZgAQAAAJA1AQsAAACArAlYAAAAAGRNwAIAAAAgawIWAAAAAFkTsAAAAADImoAFAAAAQNYELAAAAACyJmABAAAAkDUBCwAAAICsCVgAAAAAZE3AAgAAACBrAhYAAAAAWROwAAAAAMiagAUAAABA1gQsAAAAALImYAEAAACQNQELAAAAgKwJWAAAAABkTcACAAAAIGsCFgAAAABZE7AAAAAAyJqABQAAAEDWBCwAAAAAsiZgAQAAAJA1AQsAAACArAlYAAAAAGRNwAIAAAAgawIWAAAAAFkTsAAAAADImoAFAAAAQNYELAAAAACyJmABAAAAkDUBCwAAAICsCVgAAAAAZE3AAgAAACBrAhYAAAAAWROwAAAAAMiagAUAAABA1gQsAAAAALImYAEAAACQNQELAAAAgKwJWAAAAABkTcACAAAAIGsCFgAAAABZE7AAAAAAyJqABQAAAEDWBCwAAAAAsiZgAQAAAJA1AQsAAACArAlYAAAAAGRNwAIAAAAgawIWAAAAAFkTsAAAAADImoAFAAAAQNYELAAAAACyJmABAAAAkDUBCwAAAICsCVgAAAAAZE3AAgAAACBrAhYAAAAAWROwAAAAAMiagAUAAABA1gQsAAAAALImYAEAAACQNQELAAAAgKwJWAAAAABkTcACAAAAIGsCFgAAAABZE7AAAAAAyJqABQAAAEDWBCwAAAAAsiZgAQAAAJA1AQsAAACArAlYAAAAAGRNwAIAAAAgawIWAAAAAFkTsAAAAADImoAFAAAAQNYELAAAAACyJmABAAAAkDUBCwAAAICsCVgAAAAAZE3AAgAAACBrAhYAAAAAWROwAAAAAMiagAUAAABA1gQsAAAAALImYAEAAACQNQELAAAAgKwJWAAAAABkTcACAAAAIGsCFgAAAABZE7AAAAAAyJqABQAAAEDWBCwAAAAAsiZgAQAAAJA1AQsAAACArAlYAAAAAGRNwAIAAAAgawIWAAAAAFkTsAAAAADI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
  mediatype: image/png
name: hazelcast-platform-operator
schema: olm.package
---
entries:
- name: hazelcast-platform-operator.v5.0.0
- name: hazelcast-platform-operator.v5.1.0
  replaces: hazelcast-platform-operator.v5.0.0
- name: hazelcast-platform-operator.v5.10.0
  replaces: hazelcast-platform-operator.v5.9.0
- name: hazelcast-platform-operator.v5.11.0
  replaces: hazelcast-platform-operator.v5.10.0
- name: hazelcast-platform-operator.v5.12.0
  replaces: hazelcast-platform-operator.v5.11.0
- name: hazelcast-platform-operator.v5.13.0
  replaces: hazelcast-platform-operator.v5.12.0
- name: hazelcast-platform-operator.v5.13.1
  replaces: hazelcast-platform-operator.v5.13.0
- name: hazelcast-platform-operator.v5.2.0
  replaces: hazelcast-platform-operator.v5.1.0
- name: hazelcast-platform-operator.v5.3.0
  replaces: hazelcast-platform-operator.v5.2.0
- name: hazelcast-platform-operator.v5.4.0
  replaces: hazelcast-platform-operator.v5.3.0
- name: hazelcast-platform-operator.v5.5.0
  replaces: hazelcast-platform-operator.v5.4.0
- name: hazelcast-platform-operator.v5.6.0
  replaces: hazelcast-platform-operator.v5.5.0
- name: hazelcast-platform-operator.v5.7.0
  replaces: hazelcast-platform-operator.v5.6.0
- name: hazelcast-platform-operator.v5.8.0
  replaces: hazelcast-platform-operator.v5.7.0
- name: hazelcast-platform-operator.v5.9.0
  replaces: hazelcast-platform-operator.v5.8.0
name: alpha
package: hazelcast-platform-operator
schema: olm.channel
---
image: quay.io/openshift-community-operators/hazelcast-platform-operator@sha256:69fb3fed154a8e53f9f9d5fb8390d96a90fd8c41d7bcedd0dd51e3b6257b8e0e
name: hazelcast-platform-operator.v5.0.0
package: hazelcast-platform-operator
properties:
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: Hazelcast
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: ManagementCenter
    version: v1alpha1
- type: olm.package
  value:
    packageName: hazelcast-platform-operator
    version: 5.0.0
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjQuMSJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibmFtZSI6Im1hbmFnZW1lbnRjZW50ZXJzLmhhemVsY2FzdC5jb20ifSwic3BlYyI6eyJncm91cCI6ImhhemVsY2FzdC5jb20iLCJuYW1lcyI6eyJraW5kIjoiTWFuYWdlbWVudENlbnRlciIsImxpc3RLaW5kIjoiTWFuYWdlbWVudENlbnRlckxpc3QiLCJwbHVyYWwiOiJtYW5hZ2VtZW50Y2VudGVycyIsInNpbmd1bGFyIjoibWFuYWdlbWVudGNlbnRlciJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJkZXNjcmlwdGlvbiI6IkN1cnJlbnQgc3RhdGUgb2YgdGhlIE1hbmFnZW1lbnQgQ2VudGVyIGRlcGxveW1lbnQiLCJqc29uUGF0aCI6Ii5zdGF0dXMucGhhc2UiLCJuYW1lIjoiU3RhdHVzIiwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6Ik1hbmFnZW1lbnRDZW50ZXIgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIG1hbmFnZW1lbnRjZW50ZXJzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiTWFuYWdlbWVudENlbnRlclNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBNYW5hZ2VtZW50Q2VudGVyLiIsInByb3BlcnRpZXMiOnsiZXh0ZXJuYWxDb25uZWN0aXZpdHkiOnsiZGVzY3JpcHRpb24iOiJDb25maWd1cmF0aW9uIHRvIGV4cG9zZSBNYW5hZ2VtZW50IENlbnRlciB0byBvdXRzaWRlLiIsInByb3BlcnRpZXMiOnsidHlwZSI6eyJkZWZhdWx0IjoiTG9hZEJhbGFuY2VyIiwiZGVzY3JpcHRpb24iOiJIb3cgTWFuYWdlbWVudCBDZW50ZXIgaXMgZXhwb3NlZC4gVmFsaWQgdmFsdWVzIGFyZTogLSBcIkNsdXN0ZXJJUFwiIC0gXCJOb2RlUG9ydFwiIC0gXCJMb2FkYmFsYW5jZXJcIiAoZGVmYXVsdCkiLCJlbnVtIjpbIkNsdXN0ZXJJUCIsIk5vZGVQb3J0IiwiTG9hZEJhbGFuY2VyIl0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwiaGF6ZWxjYXN0Q2x1c3RlcnMiOnsiZGVzY3JpcHRpb24iOiJDb25uZWN0aW9uIGNvbmZpZ3VyYXRpb24gZm9yIHRoZSBIYXplbGNhc3QgY2x1c3RlcnMgdGhhdCBNYW5hZ2VtZW50IENlbnRlciB3aWxsIG1vbml0b3IuIiwiaXRlbXMiOnsicHJvcGVydGllcyI6eyJhZGRyZXNzIjp7ImRlc2NyaXB0aW9uIjoiSVAgYWRkcmVzcyBvciBETlMgbmFtZSBvZiB0aGUgSGF6ZWxjYXN0IGNsdXN0ZXIuIElmIHRoZSBjbHVzdGVyIGlzIGV4cG9zZWQgd2l0aCBhIHNlcnZpY2UgbmFtZSBpbiBhIGRpZmZlcmVudCBuYW1lc3BhY2UsIHVzZSB0aGUgZm9sbG93aW5nIHN5bnRheCBcIlx1MDAzY3NlcnZpY2UtbmFtZVx1MDAzZS5cdTAwM2NzZXJ2aWNlLW5hbWVzcGFjZVx1MDAzZVwiLiIsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZWZhdWx0IjoiZGV2IiwiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBIYXplbGNhc3QgY2x1c3RlciB0aGF0IE1hbmFnZW1lbnQgQ2VudGVyIHdpbGwgY29ubmVjdCB0bywgZGVmYXVsdCBpcyBkZXYuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiYWRkcmVzcyJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJsaWNlbnNlS2V5U2VjcmV0Ijp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgc2VjcmV0IHdpdGggSGF6ZWxjYXN0IEVudGVycHJpc2UgTGljZW5zZSBLZXkuIiwidHlwZSI6InN0cmluZyJ9LCJwZXJzaXN0ZW5jZSI6eyJkZXNjcmlwdGlvbiI6IkNvbmZpZ3VyYXRpb24gZm9yIE1hbmFnZW1lbnQgQ2VudGVyIHBlcnNpc3RlbmNlLiIsInByb3BlcnRpZXMiOnsiZW5hYmxlZCI6eyJkZWZhdWx0Ijp0cnVlLCJ0eXBlIjoiYm9vbGVhbiJ9LCJzaXplIjp7ImFueU9mIjpbeyJ0eXBlIjoiaW50ZWdlciJ9LHsidHlwZSI6InN0cmluZyJ9XSwiZGVmYXVsdCI6IjEwR2kiLCJwYXR0ZXJuIjoiXihcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSgoW0tNR1RQRV1pKXxbbnVta01HVFBFXXwoW2VFXShcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSkpPyQiLCJ4LWt1YmVybmV0ZXMtaW50LW9yLXN0cmluZyI6dHJ1ZX0sInN0b3JhZ2VDbGFzcyI6eyJudWxsYWJsZSI6dHJ1ZSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJyZXBvc2l0b3J5Ijp7ImRlZmF1bHQiOiJkb2NrZXIuaW8vaGF6ZWxjYXN0L21hbmFnZW1lbnQtY2VudGVyIiwiZGVzY3JpcHRpb24iOiJSZXBvc2l0b3J5IHRvIHB1bGwgdGhlIE1hbmFnZW1lbnQgQ2VudGVyIGltYWdlIGZyb20uIiwidHlwZSI6InN0cmluZyJ9LCJ2ZXJzaW9uIjp7ImRlZmF1bHQiOiI1LjAuNCIsImRlc2NyaXB0aW9uIjoiVmVyc2lvbiBvZiBNYW5hZ2VtZW50IENlbnRlci4iLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6Ik1hbmFnZW1lbnRDZW50ZXJTdGF0dXMgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgTWFuYWdlbWVudENlbnRlci4iLCJwcm9wZXJ0aWVzIjp7Im1lc3NhZ2UiOnsidHlwZSI6InN0cmluZyJ9LCJwaGFzZSI6eyJkZXNjcmlwdGlvbiI6IlBoYXNlIHJlcHJlc2VudHMgdGhlIGN1cnJlbnQgc3RhdGUgb2YgdGhlIGNsdXN0ZXIiLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJwaGFzZSJdLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfSwic3RhdHVzIjp7ImFjY2VwdGVkTmFtZXMiOnsia2luZCI6IiIsInBsdXJhbCI6IiJ9LCJjb25kaXRpb25zIjpbXSwic3RvcmVkVmVyc2lvbnMiOltdfX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjQuMSJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibmFtZSI6ImhhemVsY2FzdHMuaGF6ZWxjYXN0LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiaGF6ZWxjYXN0LmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJIYXplbGNhc3QiLCJsaXN0S2luZCI6IkhhemVsY2FzdExpc3QiLCJwbHVyYWwiOiJoYXplbGNhc3RzIiwic2luZ3VsYXIiOiJoYXplbGNhc3QifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3siZGVzY3JpcHRpb24iOiJDdXJyZW50IHN0YXRlIG9mIHRoZSBIYXplbGNhc3QgZGVwbG95bWVudCIsImpzb25QYXRoIjoiLnN0YXR1cy5waGFzZSIsIm5hbWUiOiJTdGF0dXMiLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6IkN1cnJlbnQgbnVtYmVycyBvZiByZWFkeSBIYXplbGNhc3QgbWVtYmVycyIsImpzb25QYXRoIjoiLnN0YXR1cy5oYXplbGNhc3RDbHVzdGVyU3RhdHVzLnJlYWR5TWVtYmVycyIsIm5hbWUiOiJNZW1iZXJzIiwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkhhemVsY2FzdCBpcyB0aGUgU2NoZW1hIGZvciB0aGUgaGF6ZWxjYXN0cyBBUEkiLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuIFNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZCBtYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy4gU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uIENhbm5vdCBiZSB1cGRhdGVkLiBJbiBDYW1lbENhc2UuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IkhhemVsY2FzdFNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBIYXplbGNhc3QiLCJwcm9wZXJ0aWVzIjp7ImNsdXN0ZXJOYW1lIjp7ImRlZmF1bHQiOiJkZXYiLCJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIEhhemVsY2FzdCBjbHVzdGVyLiIsInR5cGUiOiJzdHJpbmcifSwiY2x1c3RlclNpemUiOnsiZGVmYXVsdCI6MywiZGVzY3JpcHRpb24iOiJOdW1iZXIgb2YgSGF6ZWxjYXN0IG1lbWJlcnMgaW4gdGhlIGNsdXN0ZXIuIiwiZm9ybWF0IjoiaW50MzIiLCJtaW5pbXVtIjowLCJ0eXBlIjoiaW50ZWdlciJ9LCJleHBvc2VFeHRlcm5hbGx5Ijp7ImRlc2NyaXB0aW9uIjoiQ29uZmlndXJhdGlvbiB0byBleHBvc2UgSGF6ZWxjYXN0IGNsdXN0ZXIgdG8gZXh0ZXJuYWwgY2xpZW50cy4iLCJwcm9wZXJ0aWVzIjp7ImRpc2NvdmVyeVNlcnZpY2VUeXBlIjp7ImRlc2NyaXB0aW9uIjoiVHlwZSBvZiB0aGUgc2VydmljZSB1c2VkIHRvIGRpc2NvdmVyIEhhemVsY2FzdCBjbHVzdGVyLiIsInR5cGUiOiJzdHJpbmcifSwibWVtYmVyQWNjZXNzIjp7ImRlc2NyaXB0aW9uIjoiSG93IGVhY2ggbWVtYmVyIGlzIGFjY2Vzc2VkIGZyb20gdGhlIGV4dGVybmFsIGNsaWVudC4gVmFsaWQgdmFsdWVzIGFyZTogLSBcIk5vZGVQb3J0RXh0ZXJuYWxJUFwiIChkZWZhdWx0KTogZWFjaCBtZW1iZXIgaXMgYWNjZXNzZWQgYnkgdGhlIE5vZGVQb3J0IHNlcnZpY2UgYW5kIHRoZSBub2RlIGV4dGVybmFsIElQL2hvc3RuYW1lIC0gXCJOb2RlUG9ydE5vZGVOYW1lXCI6IGVhY2ggbWVtYmVyIGlzIGFjY2Vzc2VkIGJ5IHRoZSBOb2RlUG9ydCBzZXJ2aWNlIGFuZCB0aGUgbm9kZSBuYW1lIC0gXCJMb2FkQmFsYW5jZXJcIjogZWFjaCBtZW1iZXIgaXMgYWNjZXNzZWQgYnkgdGhlIExvYWRCYWxhbmNlciBzZXJ2aWNlIGV4dGVybmFsIGFkZHJlc3MiLCJlbnVtIjpbIk5vZGVQb3J0RXh0ZXJuYWxJUCIsIk5vZGVQb3J0Tm9kZU5hbWUiLCJMb2FkQmFsYW5jZXIiXSwidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjp7ImRlc2NyaXB0aW9uIjoiU3BlY2lmaWVzIGhvdyBtZW1iZXJzIGFyZSBleHBvc2VkLiBWYWxpZCB2YWx1ZXMgYXJlOiAtIFwiU21hcnRcIiAoZGVmYXVsdCk6IGVhY2ggbWVtYmVyIHBvZCBpcyBleHBvc2VkIHdpdGggYSBzZXBhcmF0ZSBleHRlcm5hbCBhZGRyZXNzIC0gXCJVbmlzb2NrZXRcIjogYWxsIG1lbWJlciBwb2RzIGFyZSBleHBvc2VkIHdpdGggb25lIGV4dGVybmFsIGFkZHJlc3MiLCJlbnVtIjpbIlNtYXJ0IiwiVW5pc29ja2V0Il0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwibGljZW5zZUtleVNlY3JldCI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIHNlY3JldCB3aXRoIEhhemVsY2FzdCBFbnRlcnByaXNlIExpY2Vuc2UgS2V5LiIsInR5cGUiOiJzdHJpbmcifSwicmVwb3NpdG9yeSI6eyJkZWZhdWx0IjoiZG9ja2VyLmlvL2hhemVsY2FzdC9oYXplbGNhc3QiLCJkZXNjcmlwdGlvbiI6IlJlcG9zaXRvcnkgdG8gcHVsbCB0aGUgSGF6ZWxjYXN0IFBsYXRmb3JtIGltYWdlIGZyb20uIiwidHlwZSI6InN0cmluZyJ9LCJ2ZXJzaW9uIjp7ImRlZmF1bHQiOiI1LjAuMiIsImRlc2NyaXB0aW9uIjoiVmVyc2lvbiBvZiBIYXplbGNhc3QgUGxhdGZvcm0uIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJIYXplbGNhc3RTdGF0dXMgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgSGF6ZWxjYXN0IiwicHJvcGVydGllcyI6eyJoYXplbGNhc3RDbHVzdGVyU3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiSGF6ZWxjYXN0Q2x1c3RlclN0YXR1cyBkZWZpbmVzIHRoZSBzdGF0dXMgb2YgdGhlIEhhemVsY2FzdCBjbHVzdGVyIiwicHJvcGVydGllcyI6eyJyZWFkeU1lbWJlcnMiOnsiZGVzY3JpcHRpb24iOiJSZWFkeU1lbWJlcnMgcmVwcmVzZW50cyB0aGUgbnVtYmVyIG9mIG1lbWJlcnMgdGhhdCBhcmUgY29ubmVjdGVkIHRvIGNsdXN0ZXIgZnJvbSB0aGUgZGVzaXJlZCBudW1iZXIgb2YgbWVtYmVycyBpbiB0aGUgZm9ybWF0IFx1MDAzY3JlYWR5XHUwMDNlL1x1MDAzY2Rlc2lyZWRcdTAwM2UiLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJyZWFkeU1lbWJlcnMiXSwidHlwZSI6Im9iamVjdCJ9LCJtZXNzYWdlIjp7InR5cGUiOiJzdHJpbmcifSwicGhhc2UiOnsiZGVzY3JpcHRpb24iOiJQaGFzZSByZXByZXNlbnRzIHRoZSBjdXJyZW50IHN0YXRlIG9mIHRoZSBjbHVzdGVyIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiaGF6ZWxjYXN0Q2x1c3RlclN0YXR1cyIsInBoYXNlIl0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOltdLCJzdG9yZWRWZXJzaW9ucyI6W119fQ==
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: hazelcast/hazelcast-platform-operator:5.0
  name: ""
- image: quay.io/openshift-community-operators/hazelcast-platform-operator@sha256:69fb3fed154a8e53f9f9d5fb8390d96a90fd8c41d7bcedd0dd51e3b6257b8e0e
  name: ""
schema: olm.bundle
---
image: quay.io/openshift-community-operators/hazelcast-platform-operator@sha256:ff5348bd49c8001b1fb468e17b878de951de0bbe3938afbf4a86d67313d57949
name: hazelcast-platform-operator.v5.1.0
package: hazelcast-platform-operator
properties:
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: Hazelcast
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: ManagementCenter
    version: v1alpha1
- type: olm.package
  value:
    packageName: hazelcast-platform-operator
    version: 5.1.0
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjQuMSJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibmFtZSI6Im1hbmFnZW1lbnRjZW50ZXJzLmhhemVsY2FzdC5jb20ifSwic3BlYyI6eyJncm91cCI6ImhhemVsY2FzdC5jb20iLCJuYW1lcyI6eyJraW5kIjoiTWFuYWdlbWVudENlbnRlciIsImxpc3RLaW5kIjoiTWFuYWdlbWVudENlbnRlckxpc3QiLCJwbHVyYWwiOiJtYW5hZ2VtZW50Y2VudGVycyIsInNpbmd1bGFyIjoibWFuYWdlbWVudGNlbnRlciJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJkZXNjcmlwdGlvbiI6IkN1cnJlbnQgc3RhdGUgb2YgdGhlIE1hbmFnZW1lbnQgQ2VudGVyIGRlcGxveW1lbnQiLCJqc29uUGF0aCI6Ii5zdGF0dXMucGhhc2UiLCJuYW1lIjoiU3RhdHVzIiwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6Ik1hbmFnZW1lbnRDZW50ZXIgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIG1hbmFnZW1lbnRjZW50ZXJzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiTWFuYWdlbWVudENlbnRlclNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBNYW5hZ2VtZW50Q2VudGVyLiIsInByb3BlcnRpZXMiOnsiZXh0ZXJuYWxDb25uZWN0aXZpdHkiOnsiZGVzY3JpcHRpb24iOiJDb25maWd1cmF0aW9uIHRvIGV4cG9zZSBNYW5hZ2VtZW50IENlbnRlciB0byBvdXRzaWRlLiIsInByb3BlcnRpZXMiOnsidHlwZSI6eyJkZWZhdWx0IjoiTG9hZEJhbGFuY2VyIiwiZGVzY3JpcHRpb24iOiJIb3cgTWFuYWdlbWVudCBDZW50ZXIgaXMgZXhwb3NlZC4gVmFsaWQgdmFsdWVzIGFyZTogLSBcIkNsdXN0ZXJJUFwiIC0gXCJOb2RlUG9ydFwiIC0gXCJMb2FkYmFsYW5jZXJcIiAoZGVmYXVsdCkiLCJlbnVtIjpbIkNsdXN0ZXJJUCIsIk5vZGVQb3J0IiwiTG9hZEJhbGFuY2VyIl0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwiaGF6ZWxjYXN0Q2x1c3RlcnMiOnsiZGVzY3JpcHRpb24iOiJDb25uZWN0aW9uIGNvbmZpZ3VyYXRpb24gZm9yIHRoZSBIYXplbGNhc3QgY2x1c3RlcnMgdGhhdCBNYW5hZ2VtZW50IENlbnRlciB3aWxsIG1vbml0b3IuIiwiaXRlbXMiOnsicHJvcGVydGllcyI6eyJhZGRyZXNzIjp7ImRlc2NyaXB0aW9uIjoiSVAgYWRkcmVzcyBvciBETlMgbmFtZSBvZiB0aGUgSGF6ZWxjYXN0IGNsdXN0ZXIuIElmIHRoZSBjbHVzdGVyIGlzIGV4cG9zZWQgd2l0aCBhIHNlcnZpY2UgbmFtZSBpbiBhIGRpZmZlcmVudCBuYW1lc3BhY2UsIHVzZSB0aGUgZm9sbG93aW5nIHN5bnRheCBcIlx1MDAzY3NlcnZpY2UtbmFtZVx1MDAzZS5cdTAwM2NzZXJ2aWNlLW5hbWVzcGFjZVx1MDAzZVwiLiIsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZWZhdWx0IjoiZGV2IiwiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBIYXplbGNhc3QgY2x1c3RlciB0aGF0IE1hbmFnZW1lbnQgQ2VudGVyIHdpbGwgY29ubmVjdCB0bywgZGVmYXVsdCBpcyBkZXYuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiYWRkcmVzcyJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJpbWFnZVB1bGxQb2xpY3kiOnsiZGVmYXVsdCI6IklmTm90UHJlc2VudCIsImRlc2NyaXB0aW9uIjoiUHVsbCBwb2xpY3kgZm9yIHRoZSBNYW5hZ2VtZW50IENlbnRlciBpbWFnZSIsInR5cGUiOiJzdHJpbmcifSwibGljZW5zZUtleVNlY3JldCI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIHNlY3JldCB3aXRoIEhhemVsY2FzdCBFbnRlcnByaXNlIExpY2Vuc2UgS2V5LiIsInR5cGUiOiJzdHJpbmcifSwicGVyc2lzdGVuY2UiOnsiZGVzY3JpcHRpb24iOiJDb25maWd1cmF0aW9uIGZvciBNYW5hZ2VtZW50IENlbnRlciBwZXJzaXN0ZW5jZS4iLCJwcm9wZXJ0aWVzIjp7ImVuYWJsZWQiOnsiZGVmYXVsdCI6dHJ1ZSwidHlwZSI6ImJvb2xlYW4ifSwic2l6ZSI6eyJhbnlPZiI6W3sidHlwZSI6ImludGVnZXIifSx7InR5cGUiOiJzdHJpbmcifV0sImRlZmF1bHQiOiIxMEdpIiwicGF0dGVybiI6Il4oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkoKFtLTUdUUEVdaSl8W251bWtNR1RQRV18KFtlRV0oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkpKT8kIiwieC1rdWJlcm5ldGVzLWludC1vci1zdHJpbmciOnRydWV9LCJzdG9yYWdlQ2xhc3MiOnsibnVsbGFibGUiOnRydWUsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwicmVwb3NpdG9yeSI6eyJkZWZhdWx0IjoiZG9ja2VyLmlvL2hhemVsY2FzdC9tYW5hZ2VtZW50LWNlbnRlciIsImRlc2NyaXB0aW9uIjoiUmVwb3NpdG9yeSB0byBwdWxsIHRoZSBNYW5hZ2VtZW50IENlbnRlciBpbWFnZSBmcm9tLiIsInR5cGUiOiJzdHJpbmcifSwidmVyc2lvbiI6eyJkZWZhdWx0IjoiNS4wLjQiLCJkZXNjcmlwdGlvbiI6IlZlcnNpb24gb2YgTWFuYWdlbWVudCBDZW50ZXIuIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJNYW5hZ2VtZW50Q2VudGVyU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIE1hbmFnZW1lbnRDZW50ZXIuIiwicHJvcGVydGllcyI6eyJtZXNzYWdlIjp7InR5cGUiOiJzdHJpbmcifSwicGhhc2UiOnsiZGVzY3JpcHRpb24iOiJQaGFzZSByZXByZXNlbnRzIHRoZSBjdXJyZW50IHN0YXRlIG9mIHRoZSBjbHVzdGVyIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsicGhhc2UiXSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6W10sInN0b3JlZFZlcnNpb25zIjpbXX19
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: hazelcast/hazelcast-platform-operator:5.1
  name: ""
- image: quay.io/openshift-community-operators/hazelcast-platform-operator@sha256:ff5348bd49c8001b1fb468e17b878de951de0bbe3938afbf4a86d67313d57949
  name: ""
schema: olm.bundle
---
image: quay.io/openshift-community-operators/hazelcast-platform-operator@sha256:fe8112d189060c6c7335e1342c0ab848b116c33a7f71ad9bb09fd3a2f5a272b4
name: hazelcast-platform-operator.v5.10.0
package: hazelcast-platform-operator
properties:
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: Cache
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: CronHotBackup
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: Hazelcast
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: HazelcastEndpoint
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: HotBackup
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: JetJob
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: JetJobSnapshot
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: ManagementCenter
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: Map
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: MultiMap
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: Queue
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: ReplicatedMap
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: Topic
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: WanReplication
    version: v1alpha1
- type: olm.package
  value:
    packageName: hazelcast-platform-operator
    version: 5.10.0
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEwLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJ0b3BpY3MuaGF6ZWxjYXN0LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiaGF6ZWxjYXN0LmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJUb3BpYyIsImxpc3RLaW5kIjoiVG9waWNMaXN0IiwicGx1cmFsIjoidG9waWNzIiwic2luZ3VsYXIiOiJ0b3BpYyJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJkZXNjcmlwdGlvbiI6IkN1cnJlbnQgc3RhdGUgb2YgdGhlIFRvcGljIENvbmZpZyIsImpzb25QYXRoIjoiLnN0YXR1cy5zdGF0ZSIsIm5hbWUiOiJTdGF0dXMiLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIEhhemVsY2FzdCByZXNvdXJjZSB0aGF0IHRoaXMgcmVzb3VyY2UgaXMgY3JlYXRlZCBmb3IiLCJqc29uUGF0aCI6Ii5zcGVjLmhhemVsY2FzdFJlc291cmNlTmFtZSIsIm5hbWUiOiJIYXplbGNhc3QtUmVzb3VyY2UiLCJwcmlvcml0eSI6MSwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJNZXNzYWdlIGZvciB0aGUgY3VycmVudCBUb3BpYyBDb25maWciLCJqc29uUGF0aCI6Ii5zdGF0dXMubWVzc2FnZSIsIm5hbWUiOiJNZXNzYWdlIiwicHJpb3JpdHkiOjEsInR5cGUiOiJzdHJpbmcifV0sIm5hbWUiOiJ2MWFscGhhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJUb3BpYyBpcyB0aGUgU2NoZW1hIGZvciB0aGUgdG9waWNzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiVG9waWNTcGVjIGRlZmluZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgVG9waWMiLCJwcm9wZXJ0aWVzIjp7Imdsb2JhbE9yZGVyaW5nRW5hYmxlZCI6eyJkZWZhdWx0IjpmYWxzZSwiZGVzY3JpcHRpb24iOiJnbG9iYWxPcmRlcmluZ0VuYWJsZWQgYWxsb3dzIGFsbCBub2RlcyBsaXN0ZW5pbmcgdG8gdGhlIHNhbWUgdG9waWMgZ2V0IHRoZWlyIG1lc3NhZ2VzIGluIHRoZSBzYW1lIG9yZGVyIHRoZSBzYW1lIG9yZGVyIiwidHlwZSI6ImJvb2xlYW4ifSwiaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIjp7ImRlc2NyaXB0aW9uIjoiSGF6ZWxjYXN0UmVzb3VyY2VOYW1lIGRlZmluZXMgdGhlIG5hbWUgb2YgdGhlIEhhemVsY2FzdCByZXNvdXJjZSBmb3Igd2hpY2ggdG9waWMgY29uZmlnIHdpbGwgYmUgY3JlYXRlZCIsIm1pbkxlbmd0aCI6MSwidHlwZSI6InN0cmluZyJ9LCJtdWx0aVRocmVhZGluZ0VuYWJsZWQiOnsiZGVmYXVsdCI6ZmFsc2UsImRlc2NyaXB0aW9uIjoibXVsdGlUaHJlYWRpbmdFbmFibGVkIGVuYWJsZXMgbXVsdGktdGhyZWFkZWQgcHJvY2Vzc2luZyBvZiBpbmNvbWluZyBtZXNzYWdlcyBhIHNpbmdsZSB0aHJlYWQgd2lsbCBoYW5kbGUgYWxsIHRvcGljIG1lc3NhZ2VzIiwidHlwZSI6ImJvb2xlYW4ifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIHRvcGljIGNvbmZpZyB0byBiZSBjcmVhdGVkLiBJZiBlbXB0eSwgQ1IgbmFtZSB3aWxsIGJlIHVzZWQuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIl0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiVG9waWNTdGF0dXMgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgVG9waWMiLCJwcm9wZXJ0aWVzIjp7Im1lbWJlclN0YXR1c2VzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7ImVudW0iOlsiU3VjY2VzcyIsIkZhaWxlZCIsIlBlbmRpbmciLCJQZXJzaXN0aW5nIiwiVGVybWluYXRpbmciXSwidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6IkhvbGRzIHN0YXR1cyBvZiBkYXRhIHN0cnVjdHVyZSBmb3IgZWFjaCBIYXplbGNhc3QgbWVtYmVyIiwidHlwZSI6Im9iamVjdCJ9LCJtZXNzYWdlIjp7ImRlc2NyaXB0aW9uIjoiTWVzc2FnZSBleHBsYWluaW5nIHRoZSBjdXJyZW50IHN0YXRlIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0ZSI6eyJkZXNjcmlwdGlvbiI6IlN0YXRlIG9mIHRoZSBkYXRhIHN0cnVjdHVyZSIsImVudW0iOlsiU3VjY2VzcyIsIkZhaWxlZCIsIlBlbmRpbmciLCJQZXJzaXN0aW5nIiwiVGVybWluYXRpbmciXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsic3BlYyJdLCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfSwic3RhdHVzIjp7ImFjY2VwdGVkTmFtZXMiOnsia2luZCI6IiIsInBsdXJhbCI6IiJ9LCJjb25kaXRpb25zIjpudWxsLCJzdG9yZWRWZXJzaW9ucyI6bnVsbH19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEwLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJ3YW5yZXBsaWNhdGlvbnMuaGF6ZWxjYXN0LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiaGF6ZWxjYXN0LmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJXYW5SZXBsaWNhdGlvbiIsImxpc3RLaW5kIjoiV2FuUmVwbGljYXRpb25MaXN0IiwicGx1cmFsIjoid2FucmVwbGljYXRpb25zIiwic2hvcnROYW1lcyI6WyJ3ciJdLCJzaW5ndWxhciI6IndhbnJlcGxpY2F0aW9uIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJhZGRpdGlvbmFsUHJpbnRlckNvbHVtbnMiOlt7ImRlc2NyaXB0aW9uIjoiQ3VycmVudCBzdGF0ZSBvZiB0aGUgSGF6ZWxjYXN0IFdBTiBSZXBsaWNhdGlvbiIsImpzb25QYXRoIjoiLnN0YXR1cy5zdGF0dXMiLCJuYW1lIjoiU3RhdHVzIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJNZXNzYWdlIGZvciB0aGUgY3VycmVudCBXYW5SZXBsaWNhdGlvbiBDb25maWciLCJqc29uUGF0aCI6Ii5zdGF0dXMubWVzc2FnZSIsIm5hbWUiOiJNZXNzYWdlIiwicHJpb3JpdHkiOjEsInR5cGUiOiJzdHJpbmcifV0sIm5hbWUiOiJ2MWFscGhhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJXYW5SZXBsaWNhdGlvbiBpcyB0aGUgU2NoZW1hIGZvciB0aGUgd2FucmVwbGljYXRpb25zIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiV2FuUmVwbGljYXRpb25TcGVjIGRlZmluZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgV2FuUmVwbGljYXRpb24iLCJwcm9wZXJ0aWVzIjp7ImFja25vd2xlZGdlbWVudCI6eyJkZWZhdWx0Ijp7InRpbWVvdXQiOjYwMDAwLCJ0eXBlIjoiQUNLX09OX09QRVJBVElPTl9DT01QTEVURSJ9LCJkZXNjcmlwdGlvbiI6IkFja25vd2xlZGdlbWVudCBpcyB0aGUgY29uZmlndXJhdGlvbiBmb3IgdGhlIGNvbmRpdGlvbiB3aGVuIHRoZSBuZXh0IGJhdGNoIG9mIFdBTiBldmVudHMgYXJlIHNlbnQuIiwicHJvcGVydGllcyI6eyJ0aW1lb3V0Ijp7ImRlZmF1bHQiOjYwMDAwLCJkZXNjcmlwdGlvbiI6IlRpbWVvdXQgcmVwcmVzZW50cyB0aGUgdGltZSBpbiBtaWxsaXNlY29uZHMgdGhlIHNvdXJjZSBjbHVzdGVyIHdhaXRzIGZvciB0aGUgYWNrbm93bGVkZ2VtZW50LiBBZnRlciB0aW1lb3V0LCB0aGUgZXZlbnRzIHdpbGwgYmUgcmVzZW50LiIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifSwidHlwZSI6eyJkZWZhdWx0IjoiQUNLX09OX09QRVJBVElPTl9DT01QTEVURSIsImRlc2NyaXB0aW9uIjoiVHlwZSByZXByZXNlbnRzIGhvdyBhIGJhdGNoIG9mIHJlcGxpY2F0aW9uIGV2ZW50cyBpcyBjb25zaWRlcmVkIHN1Y2Nlc3NmdWxseSByZXBsaWNhdGVkLiIsImVudW0iOlsiQUNLX09OX09QRVJBVElPTl9DT01QTEVURSIsIkFDS19PTl9SRUNFSVBUIl0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwiYmF0Y2giOnsiZGVmYXVsdCI6eyJtYXhpbXVtRGVsYXkiOjEwMDAsInNpemUiOjUwMH0sImRlc2NyaXB0aW9uIjoiQmF0Y2ggaXMgdGhlIGNvbmZpZ3VyYXRpb24gZm9yIFdBTiBldmVudHMgYmF0Y2guIiwicHJvcGVydGllcyI6eyJtYXhpbXVtRGVsYXkiOnsiZGVmYXVsdCI6MTAwMCwiZGVzY3JpcHRpb24iOiJNYXhpbXVtRGVsYXkgcmVwcmVzZW50cyB0aGUgbWF4aW11bSBkZWxheSBpbiBtaWxsaXNlY29uZHMuIElmIHRoZSBiYXRjaCBzaXplIGlzIG5vdCByZWFjaGVkLCB0aGUgZXZlbnRzIHdpbGwgYmUgc2VudCBhZnRlciB0aGUgbWF4aW11bSBkZWxheS4iLCJmb3JtYXQiOiJpbnQzMiIsInR5cGUiOiJpbnRlZ2VyIn0sInNpemUiOnsiZGVmYXVsdCI6NTAwLCJkZXNjcmlwdGlvbiI6IlNpemUgcmVwcmVzZW50cyB0aGUgbWF4aW11bSBiYXRjaCBzaXplLiIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifX0sInR5cGUiOiJvYmplY3QifSwiZW5kcG9pbnRzIjp7ImRlc2NyaXB0aW9uIjoiRW5kcG9pbnRzIGlzIHRoZSB0YXJnZXQgY2x1c3RlciBjb21tYSBzZXBhcmF0ZWQgZW5kcG9pbnQgbGlzdCAuIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn0sInF1ZXVlIjp7ImRlZmF1bHQiOnsiY2FwYWNpdHkiOjEwMDAwLCJmdWxsQmVoYXZpb3IiOiJESVNDQVJEX0FGVEVSX01VVEFUSU9OIn0sImRlc2NyaXB0aW9uIjoiUXVldWUgaXMgdGhlIGNvbmZpZ3VyYXRpb24gZm9yIFdBTiBldmVudHMgcXVldWUuIiwicHJvcGVydGllcyI6eyJjYXBhY2l0eSI6eyJkZWZhdWx0IjoxMDAwMCwiZGVzY3JpcHRpb24iOiJDYXBhY2l0eSBpcyB0aGUgdG90YWwgY2FwYWNpdHkgb2YgV0FOIHF1ZXVlLiIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifSwiZnVsbEJlaGF2aW9yIjp7ImRlZmF1bHQiOiJESVNDQVJEX0FGVEVSX01VVEFUSU9OIiwiZGVzY3JpcHRpb24iOiJGdWxsQmVoYXZpb3IgcmVwcmVzZW50cyB0aGUgYmVoYXZpb3Igb2YgdGhlIG5ldyBhcnJpdmFsIHdoZW4gdGhlIHF1ZXVlIGlzIGZ1bGwuIiwiZW51bSI6WyJESVNDQVJEX0FGVEVSX01VVEFUSU9OIiwiVEhST1dfRVhDRVBUSU9OIiwiVEhST1dfRVhDRVBUSU9OX09OTFlfSUZfUkVQTElDQVRJT05fQUNUSVZFIl0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwicmVzb3VyY2VzIjp7ImRlc2NyaXB0aW9uIjoiUmVzb3VyY2VzIGlzIHRoZSBsaXN0IG9mIGN1c3RvbSByZXNvdXJjZXMgdG8gd2hpY2ggV0FOIHJlcGxpY2F0aW9uIGFwcGxpZXMuIiwiaXRlbXMiOnsicHJvcGVydGllcyI6eyJraW5kIjp7ImRlZmF1bHQiOiJNYXAiLCJkZXNjcmlwdGlvbiI6IktpbmQgaXMgdGhlIGtpbmQgb2YgY3VzdG9tIHJlc291cmNlIHRvIHdoaWNoIFdBTiByZXBsaWNhdGlvbiBhcHBsaWVzLiIsImVudW0iOlsiTWFwIiwiSGF6ZWxjYXN0Il0sInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgaXMgdGhlIG5hbWUgb2YgY3VzdG9tIHJlc291cmNlIHRvIHdoaWNoIFdBTiByZXBsaWNhdGlvbiBhcHBsaWVzLiIsIm1pbkxlbmd0aCI6MSwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sIm1pbkl0ZW1zIjoxLCJ0eXBlIjoiYXJyYXkifSwidGFyZ2V0Q2x1c3Rlck5hbWUiOnsiZGVzY3JpcHRpb24iOiJDbHVzdGVyTmFtZSBpcyB0aGUgY2x1c3Rlck5hbWUgZmllbGQgb2YgdGhlIHRhcmdldCBIYXplbGNhc3QgcmVzb3VyY2UuIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJlbmRwb2ludHMiLCJyZXNvdXJjZXMiLCJ0YXJnZXRDbHVzdGVyTmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IldhblJlcGxpY2F0aW9uU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIFdhblJlcGxpY2F0aW9uIiwicHJvcGVydGllcyI6eyJtZXNzYWdlIjp7ImRlc2NyaXB0aW9uIjoiTWVzc2FnZSBpcyB0aGUgZmllbGQgdG8gc2hvdyBkZXRhaWwgaW5mb3JtYXRpb24gb3IgZXJyb3IiLCJ0eXBlIjoic3RyaW5nIn0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IlN0YXR1cyBpcyB0aGUgc3RhdHVzIG9mIFdBTiByZXBsaWNhdGlvbiIsInR5cGUiOiJzdHJpbmcifSwid2FuUmVwbGljYXRpb25NYXBzU3RhdHVzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InByb3BlcnRpZXMiOnsibWVzc2FnZSI6eyJkZXNjcmlwdGlvbiI6Ik1lc3NhZ2UgaXMgdGhlIGZpZWxkIHRvIHNob3cgZGV0YWlsIGluZm9ybWF0aW9uIG9yIGVycm9yIiwidHlwZSI6InN0cmluZyJ9LCJwdWJsaXNoZXJJZCI6eyJkZXNjcmlwdGlvbiI6IlB1Ymxpc2hlcklkIGlzIHRoZSBJRCB1c2VkIGZvciBXQU4gcHVibGlzaGVyIElEIiwidHlwZSI6InN0cmluZyJ9LCJyZXNvdXJjZU5hbWUiOnsiZGVzY3JpcHRpb24iOiJSZXNvdXJjZU5hbWUgaXMgdGhlIG5hbWUgb2YgdGhlIE1hcCBDdXN0b20gUmVzb3VyY2UuIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJTdGF0dXMgaXMgdGhlIHN0YXR1cyBvZiBXQU4gcmVwbGljYXRpb24iLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sImRlc2NyaXB0aW9uIjoiV2FuUmVwbGljYXRpb25NYXBzU3RhdHVzIGlzIHRoZSBXQU4gUmVwbGljYXRpb24gc3RhdHVzIG9mIHRoZSBNYXBzIGdpdmVuIGluIHRoZSBzcGVjIGRpcmVjdGx5IG9yIGluZGlyZWN0bHkgYnkgSGF6ZWxjYXN0IHJlc291cmNlLiIsInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInNwZWMiXSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6bnVsbCwic3RvcmVkVmVyc2lvbnMiOm51bGx9fQ==
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEwLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJjYWNoZXMuaGF6ZWxjYXN0LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiaGF6ZWxjYXN0LmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJDYWNoZSIsImxpc3RLaW5kIjoiQ2FjaGVMaXN0IiwicGx1cmFsIjoiY2FjaGVzIiwic2hvcnROYW1lcyI6WyJjaCJdLCJzaW5ndWxhciI6ImNhY2hlIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJhZGRpdGlvbmFsUHJpbnRlckNvbHVtbnMiOlt7ImRlc2NyaXB0aW9uIjoiQ3VycmVudCBzdGF0ZSBvZiB0aGUgQ2FjaGUgQ29uZmlnIiwianNvblBhdGgiOiIuc3RhdHVzLnN0YXRlIiwibmFtZSI6IlN0YXR1cyIsInR5cGUiOiJzdHJpbmcifSx7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgSGF6ZWxjYXN0IHJlc291cmNlIHRoYXQgdGhpcyByZXNvdXJjZSBpcyBjcmVhdGVkIGZvciIsImpzb25QYXRoIjoiLnNwZWMuaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIiwibmFtZSI6IkhhemVsY2FzdC1SZXNvdXJjZSIsInByaW9yaXR5IjoxLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6Ik1lc3NhZ2UgZm9yIHRoZSBjdXJyZW50IENhY2hlIENvbmZpZyIsImpzb25QYXRoIjoiLnN0YXR1cy5tZXNzYWdlIiwibmFtZSI6Ik1lc3NhZ2UiLCJwcmlvcml0eSI6MSwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkNhY2hlIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSBjYWNoZXMgQVBJIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJDYWNoZVNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBDYWNoZSBJdCBjYW5ub3QgYmUgdXBkYXRlZCBhZnRlciB0aGUgQ2FjaGUgaXMgY3JlYXRlZCIsInByb3BlcnRpZXMiOnsiYXN5bmNCYWNrdXBDb3VudCI6eyJkZWZhdWx0IjowLCJkZXNjcmlwdGlvbiI6Ik51bWJlciBvZiBhc3luY2hyb25vdXMgYmFja3Vwcy4iLCJmb3JtYXQiOiJpbnQzMiIsIm1heGltdW0iOjYsIm1pbmltdW0iOjAsInR5cGUiOiJpbnRlZ2VyIn0sImJhY2t1cENvdW50Ijp7ImRlZmF1bHQiOjEsImRlc2NyaXB0aW9uIjoiTnVtYmVyIG9mIHN5bmNocm9ub3VzIGJhY2t1cHMuIiwiZm9ybWF0IjoiaW50MzIiLCJtYXhpbXVtIjo2LCJtaW5pbXVtIjowLCJ0eXBlIjoiaW50ZWdlciJ9LCJldmVudEpvdXJuYWwiOnsiZGVzY3JpcHRpb24iOiJFdmVudEpvdXJuYWwgc3BlY2lmaWVzIGV2ZW50IGpvdXJuYWwgY29uZmlndXJhdGlvbiBvZiB0aGUgQ2FjaGUiLCJwcm9wZXJ0aWVzIjp7ImNhcGFjaXR5Ijp7ImRlZmF1bHQiOjEwMDAwLCJkZXNjcmlwdGlvbiI6IkNhcGFjaXR5IHNldHMgdGhlIGNhcGFjaXR5IG9mIHRoZSByaW5nYnVmZmVyIHVuZGVybHlpbmcgdGhlIGV2ZW50IGpvdXJuYWwuIiwiZm9ybWF0IjoiaW50MzIiLCJ0eXBlIjoiaW50ZWdlciJ9LCJ0aW1lVG9MaXZlU2Vjb25kcyI6eyJkZWZhdWx0IjowLCJkZXNjcmlwdGlvbiI6IlRpbWVUb0xpdmVTZWNvbmRzIGluZGljYXRlcyBob3cgbG9uZyB0aGUgaXRlbXMgcmVtYWluIGluIHRoZSBldmVudCBqb3VybmFsIGJlZm9yZSB0aGV5IGFyZSBleHBpcmVkLiIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifX0sInR5cGUiOiJvYmplY3QifSwiaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIjp7ImRlc2NyaXB0aW9uIjoiSGF6ZWxjYXN0UmVzb3VyY2VOYW1lIGRlZmluZXMgdGhlIG5hbWUgb2YgdGhlIEhhemVsY2FzdCByZXNvdXJjZSB0aGF0IHRoaXMgcmVzb3VyY2UgaXMgY3JlYXRlZCBmb3IuIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn0sImluTWVtb3J5Rm9ybWF0Ijp7ImRlZmF1bHQiOiJCSU5BUlkiLCJkZXNjcmlwdGlvbiI6IkluTWVtb3J5Rm9ybWF0IHNwZWNpZmllcyBpbiB3aGljaCBmb3JtYXQgZGF0YSB3aWxsIGJlIHN0b3JlZCBpbiB5b3VyIGNhY2hlIiwiZW51bSI6WyJCSU5BUlkiLCJPQkpFQ1QiLCJOQVRJVkUiXSwidHlwZSI6InN0cmluZyJ9LCJrZXlUeXBlIjp7ImRlc2NyaXB0aW9uIjoiQ2xhc3MgbmFtZSBvZiB0aGUga2V5IHR5cGUiLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBkYXRhIHN0cnVjdHVyZSBjb25maWcgdG8gYmUgY3JlYXRlZC4gSWYgZW1wdHksIENSIG5hbWUgd2lsbCBiZSB1c2VkLiBJdCBjYW5ub3QgYmUgdXBkYXRlZCBhZnRlciB0aGUgY29uZmlnIGlzIGNyZWF0ZWQgc3VjY2Vzc2Z1bGx5LiIsInR5cGUiOiJzdHJpbmcifSwicGVyc2lzdGVuY2VFbmFibGVkIjp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6IldoZW4gZW5hYmxlZCwgY2FjaGUgZGF0YSB3aWxsIGJlIHBlcnNpc3RlZC4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJ2YWx1ZVR5cGUiOnsiZGVzY3JpcHRpb24iOiJDbGFzcyBuYW1lIG9mIHRoZSB2YWx1ZSB0eXBlIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIl0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiQ2FjaGVTdGF0dXMgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgQ2FjaGUiLCJwcm9wZXJ0aWVzIjp7Im1lbWJlclN0YXR1c2VzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7ImVudW0iOlsiU3VjY2VzcyIsIkZhaWxlZCIsIlBlbmRpbmciLCJQZXJzaXN0aW5nIiwiVGVybWluYXRpbmciXSwidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6IkhvbGRzIHN0YXR1cyBvZiBkYXRhIHN0cnVjdHVyZSBmb3IgZWFjaCBIYXplbGNhc3QgbWVtYmVyIiwidHlwZSI6Im9iamVjdCJ9LCJtZXNzYWdlIjp7ImRlc2NyaXB0aW9uIjoiTWVzc2FnZSBleHBsYWluaW5nIHRoZSBjdXJyZW50IHN0YXRlIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0ZSI6eyJkZXNjcmlwdGlvbiI6IlN0YXRlIG9mIHRoZSBkYXRhIHN0cnVjdHVyZSIsImVudW0iOlsiU3VjY2VzcyIsIkZhaWxlZCIsIlBlbmRpbmciLCJQZXJzaXN0aW5nIiwiVGVybWluYXRpbmciXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsic3BlYyJdLCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfSwic3RhdHVzIjp7ImFjY2VwdGVkTmFtZXMiOnsia2luZCI6IiIsInBsdXJhbCI6IiJ9LCJjb25kaXRpb25zIjpudWxsLCJzdG9yZWRWZXJzaW9ucyI6bnVsbH19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEwLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJjcm9uaG90YmFja3Vwcy5oYXplbGNhc3QuY29tIn0sInNwZWMiOnsiZ3JvdXAiOiJoYXplbGNhc3QuY29tIiwibmFtZXMiOnsia2luZCI6IkNyb25Ib3RCYWNrdXAiLCJsaXN0S2luZCI6IkNyb25Ib3RCYWNrdXBMaXN0IiwicGx1cmFsIjoiY3JvbmhvdGJhY2t1cHMiLCJzaG9ydE5hbWVzIjpbImNoYiJdLCJzaW5ndWxhciI6ImNyb25ob3RiYWNrdXAifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3siZGVzY3JpcHRpb24iOiJTdXNwZW50aW9uIHN0YXR1cyBvZiB0aGUgQ3JvbkhvdEJhY2t1cCIsImpzb25QYXRoIjoiLnNwZWMuc3VzcGVuZCIsIm5hbWUiOiJTVVNQRU5ERUQiLCJ0eXBlIjoiYm9vbGVhbiJ9LHsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBIYXplbGNhc3QgcmVzb3VyY2UgdGhhdCB0aGlzIHJlc291cmNlIGlzIGNyZWF0ZWQgZm9yIiwianNvblBhdGgiOiIuc3BlYy5ob3RCYWNrdXBUZW1wbGF0ZS5zcGVjLmhhemVsY2FzdFJlc291cmNlTmFtZSIsIm5hbWUiOiJIYXplbGNhc3QtUmVzb3VyY2UiLCJwcmlvcml0eSI6MSwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkNyb25Ib3RCYWNrdXAgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIGNyb25ob3RiYWNrdXBzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiQ3JvbkhvdEJhY2t1cFNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBDcm9uSG90QmFja3VwIiwicHJvcGVydGllcyI6eyJmYWlsZWRIb3RCYWNrdXBzSGlzdG9yeUxpbWl0Ijp7ImRlZmF1bHQiOjMsImRlc2NyaXB0aW9uIjoiVGhlIG51bWJlciBvZiBmYWlsZWQgZmluaXNoZWQgaG90IGJhY2t1cHMgdG8gcmV0YWluLiIsImZvcm1hdCI6ImludDMyIiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifSwiaG90QmFja3VwVGVtcGxhdGUiOnsiZGVzY3JpcHRpb24iOiJTcGVjaWZpZXMgdGhlIGhvdCBiYWNrdXAgdGhhdCB3aWxsIGJlIGNyZWF0ZWQgd2hlbiBleGVjdXRpbmcgYSBDcm9uSG90QmFja3VwLiIsInByb3BlcnRpZXMiOnsibWV0YWRhdGEiOnsiZGVzY3JpcHRpb24iOiJTdGFuZGFyZCBvYmplY3QncyBtZXRhZGF0YSBvZiB0aGUgaG90IGJhY2t1cHMgY3JlYXRlZCBmcm9tIHRoaXMgdGVtcGxhdGUuIiwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJTcGVjaWZpY2F0aW9uIG9mIHRoZSBkZXNpcmVkIGJlaGF2aW9yIG9mIHRoZSBob3QgYmFja3VwLiIsInByb3BlcnRpZXMiOnsiYnVja2V0VVJJIjp7ImRlc2NyaXB0aW9uIjoiVVJMIG9mIHRoZSBidWNrZXQgdG8gZG93bmxvYWQgSG90QmFja3VwIGZvbGRlcnMuIEFXUyBTMywgR0NQIEJ1Y2tldCBhbmQgQXp1cmUgQmxvYiBzdG9yYWdlIGJ1Y2tldHMgYXJlIHN1cHBvcnRlZC4gRXhhbXBsZSBidWNrZXQgVVJJczogLSBBV1MgUzMgICAgIC1cdTAwM2UgczM6Ly9idWNrZXQtbmFtZS9wYXRoL3RvL2ZvbGRlciAtIEdDUCBCdWNrZXQgLVx1MDAzZSBnczovL2J1Y2tldC1uYW1lL3BhdGgvdG8vZm9sZGVyIC0gQXp1cmUgQmxvYiAtXHUwMDNlIGF6YmxvYjovL2J1Y2tldC1uYW1lL3BhdGgvdG8vZm9sZGVyIiwidHlwZSI6InN0cmluZyJ9LCJoYXplbGNhc3RSZXNvdXJjZU5hbWUiOnsiZGVzY3JpcHRpb24iOiJIYXplbGNhc3RSZXNvdXJjZU5hbWUgZGVmaW5lcyB0aGUgbmFtZSBvZiB0aGUgSGF6ZWxjYXN0IHJlc291cmNlIiwidHlwZSI6InN0cmluZyJ9LCJzZWNyZXQiOnsiZGVzY3JpcHRpb24iOiJzZWNyZXQgaXMgYSBkZXByZWNhdGVkIGFsaWFzIGZvciBzZWNyZXROYW1lLiIsInR5cGUiOiJzdHJpbmcifSwic2VjcmV0TmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIHNlY3JldCB3aXRoIGNyZWRlbnRpYWxzIGZvciBjbG91ZCBwcm92aWRlcnMuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIl0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInNwZWMiXSwidHlwZSI6Im9iamVjdCJ9LCJzY2hlZHVsZSI6eyJkZXNjcmlwdGlvbiI6IlNjaGVkdWxlIGNvbnRhaW5zIGEgY3JvbnRhYi1saWtlIGV4cHJlc3Npb24gdGhhdCBkZWZpbmVzIHRoZSBzY2hlZHVsZSBpbiB3aGljaCBIb3RCYWNrdXAgd2lsbCBiZSBzdGFydGVkLiBJZiB0aGUgU2NoZWR1bGUgaXMgZW1wdHkgdGhlIEhvdEJhY2t1cCB3aWxsIHN0YXJ0IG9ubHkgb25jZSB3aGVuIGFwcGxpZWQuIC0tLSBTZXZlcmFsIHByZS1kZWZpbmVkIHNjaGVkdWxlcyBpbiBwbGFjZSBvZiBhIGNyb24gZXhwcmVzc2lvbiBjYW4gYmUgdXNlZC4gRW50cnkgICAgICAgICAgICAgICAgICB8IERlc2NyaXB0aW9uICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IEVxdWl2YWxlbnQgVG8gLS0tLS0gICAgICAgICAgICAgICAgICB8IC0tLS0tLS0tLS0tICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IC0tLS0tLS0tLS0tLS0gQHllYXJseSAob3IgQGFubnVhbGx5KSB8IFJ1biBvbmNlIGEgeWVhciwgbWlkbmlnaHQsIEphbi4gMXN0ICAgICAgICB8IDAgMCAxIDEgKiBAbW9udGhseSAgICAgICAgICAgICAgIHwgUnVuIG9uY2UgYSBtb250aCwgbWlkbmlnaHQsIGZpcnN0IG9mIG1vbnRoIHwgMCAwIDEgKiAqIEB3ZWVrbHkgICAgICAgICAgICAgICAgfCBSdW4gb25jZSBhIHdlZWssIG1pZG5pZ2h0IGJldHdlZW4gU2F0L1N1biAgfCAwIDAgKiAqIDAgQGRhaWx5IChvciBAbWlkbmlnaHQpICB8IFJ1biBvbmNlIGEgZGF5LCBtaWRuaWdodCAgICAgICAgICAgICAgICAgICB8IDAgMCAqICogKiBAaG91cmx5ICAgICAgICAgICAgICAgIHwgUnVuIG9uY2UgYW4gaG91ciwgYmVnaW5uaW5nIG9mIGhvdXIgICAgICAgIHwgMCAqICogKiAqIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn0sInN1Y2Nlc3NmdWxIb3RCYWNrdXBzSGlzdG9yeUxpbWl0Ijp7ImRlZmF1bHQiOjUsImRlc2NyaXB0aW9uIjoiVGhlIG51bWJlciBvZiBzdWNjZXNzZnVsIGZpbmlzaGVkIGhvdCBiYWNrdXBzIHRvIHJldGFpbi4iLCJmb3JtYXQiOiJpbnQzMiIsIm1pbmltdW0iOjAsInR5cGUiOiJpbnRlZ2VyIn0sInN1c3BlbmQiOnsiZGVmYXVsdCI6ZmFsc2UsImRlc2NyaXB0aW9uIjoiV2hlbiB0cnVlLCBDcm9uSG90QmFja3VwIHdpbGwgc3RvcCBjcmVhdGluZyBIb3RCYWNrdXAgQ1JzIHVudGlsIGl0IGlzIGRpc2FibGVkIiwidHlwZSI6ImJvb2xlYW4ifX0sInJlcXVpcmVkIjpbImhvdEJhY2t1cFRlbXBsYXRlIiwic2NoZWR1bGUiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJDcm9uSG90QmFja3VwU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIENyb25Ib3RCYWNrdXAiLCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJzcGVjIl0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOm51bGwsInN0b3JlZFZlcnNpb25zIjpudWxsfX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEwLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJoYXplbGNhc3RlbmRwb2ludHMuaGF6ZWxjYXN0LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiaGF6ZWxjYXN0LmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJIYXplbGNhc3RFbmRwb2ludCIsImxpc3RLaW5kIjoiSGF6ZWxjYXN0RW5kcG9pbnRMaXN0IiwicGx1cmFsIjoiaGF6ZWxjYXN0ZW5kcG9pbnRzIiwic2hvcnROYW1lcyI6WyJoemVwIl0sInNpbmd1bGFyIjoiaGF6ZWxjYXN0ZW5kcG9pbnQifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3siZGVzY3JpcHRpb24iOiJUeXBlIG9mIHRoZSBIYXplbGNhc3RFbmRwb2ludCIsImpzb25QYXRoIjoiLnNwZWMudHlwZSIsIm5hbWUiOiJUeXBlIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJBZGRyZXNzIG9mIHRoZSBIYXplbGNhc3RFbmRwb2ludCIsImpzb25QYXRoIjoiLnN0YXR1cy5hZGRyZXNzIiwibmFtZSI6IkFkZHJlc3MiLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIEhhemVsY2FzdCByZXNvdXJjZSB0aGF0IHRoaXMgcmVzb3VyY2UgaXMgY3JlYXRlZCBmb3IiLCJqc29uUGF0aCI6Ii5zcGVjLmhhemVsY2FzdFJlc291cmNlTmFtZSIsIm5hbWUiOiJIYXplbGNhc3QtUmVzb3VyY2UiLCJwcmlvcml0eSI6MSwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJNZXNzYWdlIGZvciB0aGUgY3VycmVudCBIYXplbGNhc3RFbmRwb2ludCIsImpzb25QYXRoIjoiLnN0YXR1cy5tZXNzYWdlIiwibmFtZSI6Ik1lc3NhZ2UiLCJwcmlvcml0eSI6MSwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkhhemVsY2FzdEVuZHBvaW50IGlzIHRoZSBTY2hlbWEgZm9yIHRoZSBoYXplbGNhc3RlbmRwb2ludHMgQVBJIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJIYXplbGNhc3RFbmRwb2ludFNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBIYXplbGNhc3RFbmRwb2ludCIsInByb3BlcnRpZXMiOnsiaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIjp7ImRlc2NyaXB0aW9uIjoiSGF6ZWxjYXN0UmVzb3VyY2VOYW1lIGRlZmluZXMgdGhlIG5hbWUgb2YgdGhlIEhhemVsY2FzdCByZXNvdXJjZSB0aGF0IHRoaXMgcmVzb3VyY2UgaXMgY3JlYXRlZCBmb3IuIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn0sInBvcnQiOnsiZGVzY3JpcHRpb24iOiJQb3J0IG9mIHRoZSBlbmRwb2ludC4iLCJmb3JtYXQiOiJpbnQzMiIsInR5cGUiOiJpbnRlZ2VyIn0sInR5cGUiOnsiZGVzY3JpcHRpb24iOiJUeXBlIGRlZmluZXMgdGhlIGVuZHBvaW50IGNvbm5lY3Rpb24uIEl0IGlzIHVzZWQgdG8gaWRlbnRpZnkgdGhlIHRhcmdldCBvZiB0aGUgZW5kcG9pbnQuIiwiZW51bSI6WyJEaXNjb3ZlcnkiLCJNZW1iZXIiLCJXQU4iXSwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIiwicG9ydCIsInR5cGUiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJIYXplbGNhc3RFbmRwb2ludFN0YXR1cyBkZWZpbmVzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBIYXplbGNhc3RFbmRwb2ludCIsInByb3BlcnRpZXMiOnsiYWRkcmVzcyI6eyJkZXNjcmlwdGlvbiI6IkFkZHJlc3MgaXMgdGhlIGV4dGVybmFsIGFkZHJlc3Mgb2YgdGhlIGVuZHBvaW50LiBJdCBpcyB0YWtlbiBmcm9tIHRoZSBjb3JyZXNwb25kaW5nIHNlcnZpY2UuIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6bnVsbCwic3RvcmVkVmVyc2lvbnMiOm51bGx9fQ==
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEwLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJob3RiYWNrdXBzLmhhemVsY2FzdC5jb20ifSwic3BlYyI6eyJncm91cCI6ImhhemVsY2FzdC5jb20iLCJuYW1lcyI6eyJraW5kIjoiSG90QmFja3VwIiwibGlzdEtpbmQiOiJIb3RCYWNrdXBMaXN0IiwicGx1cmFsIjoiaG90YmFja3VwcyIsInNob3J0TmFtZXMiOlsiaGIiXSwic2luZ3VsYXIiOiJob3RiYWNrdXAifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3siZGVzY3JpcHRpb24iOiJDdXJyZW50IHN0YXRlIG9mIHRoZSBIb3RCYWNrdXAgcHJvY2VzcyIsImpzb25QYXRoIjoiLnN0YXR1cy5zdGF0ZSIsIm5hbWUiOiJTdGF0dXMiLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIEhhemVsY2FzdCByZXNvdXJjZSB0aGF0IHRoaXMgcmVzb3VyY2UgaXMgY3JlYXRlZCBmb3IiLCJqc29uUGF0aCI6Ii5zcGVjLmhhemVsY2FzdFJlc291cmNlTmFtZSIsIm5hbWUiOiJIYXplbGNhc3QtUmVzb3VyY2UiLCJwcmlvcml0eSI6MSwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJNZXNzYWdlIGZvciB0aGUgY3VycmVudCBIb3RCYWNrdXAgQ29uZmlnIiwianNvblBhdGgiOiIuc3RhdHVzLm1lc3NhZ2UiLCJuYW1lIjoiTWVzc2FnZSIsInByaW9yaXR5IjoxLCJ0eXBlIjoic3RyaW5nIn1dLCJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiSG90QmFja3VwIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSBob3QgYmFja3VwIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiSG90QmFja3VwU3BlYyBkZWZpbmVzIHRoZSBTcGVjIG9mIEhvdEJhY2t1cCIsInByb3BlcnRpZXMiOnsiYnVja2V0VVJJIjp7ImRlc2NyaXB0aW9uIjoiVVJMIG9mIHRoZSBidWNrZXQgdG8gZG93bmxvYWQgSG90QmFja3VwIGZvbGRlcnMuIEFXUyBTMywgR0NQIEJ1Y2tldCBhbmQgQXp1cmUgQmxvYiBzdG9yYWdlIGJ1Y2tldHMgYXJlIHN1cHBvcnRlZC4gRXhhbXBsZSBidWNrZXQgVVJJczogLSBBV1MgUzMgICAgIC1cdTAwM2UgczM6Ly9idWNrZXQtbmFtZS9wYXRoL3RvL2ZvbGRlciAtIEdDUCBCdWNrZXQgLVx1MDAzZSBnczovL2J1Y2tldC1uYW1lL3BhdGgvdG8vZm9sZGVyIC0gQXp1cmUgQmxvYiAtXHUwMDNlIGF6YmxvYjovL2J1Y2tldC1uYW1lL3BhdGgvdG8vZm9sZGVyIiwidHlwZSI6InN0cmluZyJ9LCJoYXplbGNhc3RSZXNvdXJjZU5hbWUiOnsiZGVzY3JpcHRpb24iOiJIYXplbGNhc3RSZXNvdXJjZU5hbWUgZGVmaW5lcyB0aGUgbmFtZSBvZiB0aGUgSGF6ZWxjYXN0IHJlc291cmNlIiwidHlwZSI6InN0cmluZyJ9LCJzZWNyZXQiOnsiZGVzY3JpcHRpb24iOiJzZWNyZXQgaXMgYSBkZXByZWNhdGVkIGFsaWFzIGZvciBzZWNyZXROYW1lLiIsInR5cGUiOiJzdHJpbmcifSwic2VjcmV0TmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIHNlY3JldCB3aXRoIGNyZWRlbnRpYWxzIGZvciBjbG91ZCBwcm92aWRlcnMuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIl0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiSG90QmFja3VwU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIEhvdEJhY2t1cCIsInByb3BlcnRpZXMiOnsiYmFja3VwVVVJRHMiOnsiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifSwibWVzc2FnZSI6eyJ0eXBlIjoic3RyaW5nIn0sInN0YXRlIjp7ImVudW0iOlsiVW5rbm93biIsIlBlbmRpbmciLCJOb3RTdGFydGVkIiwiSW5Qcm9ncmVzcyIsIkZhaWx1cmUiLCJTdWNjZXNzIl0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInNwZWMiXSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6bnVsbCwic3RvcmVkVmVyc2lvbnMiOm51bGx9fQ==
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEwLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJqZXRqb2JzLmhhemVsY2FzdC5jb20ifSwic3BlYyI6eyJncm91cCI6ImhhemVsY2FzdC5jb20iLCJuYW1lcyI6eyJraW5kIjoiSmV0Sm9iIiwibGlzdEtpbmQiOiJKZXRKb2JMaXN0IiwicGx1cmFsIjoiamV0am9icyIsInNob3J0TmFtZXMiOlsiamoiXSwic2luZ3VsYXIiOiJqZXRqb2IifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3siZGVzY3JpcHRpb24iOiJDdXJyZW50IHN0YXRlIG9mIHRoZSBKZXRKb2IiLCJqc29uUGF0aCI6Ii5zdGF0dXMucGhhc2UiLCJuYW1lIjoiU3RhdHVzIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJJRCBvZiB0aGUgSmV0Sm9iIiwianNvblBhdGgiOiIuc3RhdHVzLmlkIiwibmFtZSI6IklkIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBIYXplbGNhc3QgcmVzb3VyY2UgdGhhdCB0aGlzIHJlc291cmNlIGlzIGNyZWF0ZWQgZm9yIiwianNvblBhdGgiOiIuc3BlYy5oYXplbGNhc3RSZXNvdXJjZU5hbWUiLCJuYW1lIjoiSGF6ZWxjYXN0LVJlc291cmNlIiwicHJpb3JpdHkiOjEsInR5cGUiOiJzdHJpbmcifSx7ImRlc2NyaXB0aW9uIjoiVGltZSB3aGVuIHRoZSBKZXRKb2Igd2FzIHN1Ym1pdHRlZCIsImpzb25QYXRoIjoiLnN0YXR1cy5zdWJtaXNzaW9uVGltZSIsIm5hbWUiOiJTdWJtaXNzaW9uVGltZSIsInR5cGUiOiJzdHJpbmcifSx7ImRlc2NyaXB0aW9uIjoiVGltZSB3aGVuIHRoZSBKZXRKb2Igd2FzIGNvbXBsZXRlZCIsImpzb25QYXRoIjoiLnN0YXR1cy5jb21wbGV0aW9uVGltZSIsIm5hbWUiOiJDb21wbGV0aW9uVGltZSIsInR5cGUiOiJzdHJpbmcifV0sIm5hbWUiOiJ2MWFscGhhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJKZXRKb2IgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIGpldGpvYnMgQVBJIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJKZXRKb2JTcGVjIGRlZmluZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgSmV0Sm9iIiwicHJvcGVydGllcyI6eyJidWNrZXRDb25maWciOnsiZGVzY3JpcHRpb24iOiJCdWNrZXQgY29uZmlnIGZyb20gd2hlcmUgdGhlIEpBUiBmaWxlcyB3aWxsIGJlIGRvd25sb2FkZWQuIiwicHJvcGVydGllcyI6eyJidWNrZXRVUkkiOnsiZGVzY3JpcHRpb24iOiJVUkwgb2YgdGhlIGJ1Y2tldCB0byBkb3dubG9hZCBIb3RCYWNrdXAgZm9sZGVycy4gQVdTIFMzLCBHQ1AgQnVja2V0IGFuZCBBenVyZSBCbG9iIHN0b3JhZ2UgYnVja2V0cyBhcmUgc3VwcG9ydGVkLiBFeGFtcGxlIGJ1Y2tldCBVUklzOiAtIEFXUyBTMyAgICAgLVx1MDAzZSBzMzovL2J1Y2tldC1uYW1lL3BhdGgvdG8vZm9sZGVyIC0gR0NQIEJ1Y2tldCAtXHUwMDNlIGdzOi8vYnVja2V0LW5hbWUvcGF0aC90by9mb2xkZXIgLSBBenVyZSBCbG9iIC1cdTAwM2UgYXpibG9iOi8vYnVja2V0LW5hbWUvcGF0aC90by9mb2xkZXIiLCJtaW5MZW5ndGgiOjYsInR5cGUiOiJzdHJpbmcifSwic2VjcmV0Ijp7ImRlc2NyaXB0aW9uIjoic2VjcmV0IGlzIGEgZGVwcmVjYXRlZCBhbGlhcyBmb3Igc2VjcmV0TmFtZS4iLCJ0eXBlIjoic3RyaW5nIn0sInNlY3JldE5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBzZWNyZXQgd2l0aCBjcmVkZW50aWFscyBmb3IgY2xvdWQgcHJvdmlkZXJzLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImJ1Y2tldFVSSSJdLCJ0eXBlIjoib2JqZWN0In0sImhhemVsY2FzdFJlc291cmNlTmFtZSI6eyJkZXNjcmlwdGlvbiI6IkhhemVsY2FzdFJlc291cmNlTmFtZSBkZWZpbmVzIHRoZSBuYW1lIG9mIHRoZSBIYXplbGNhc3QgcmVzb3VyY2UgdGhhdCB0aGlzIHJlc291cmNlIGlzIGNyZWF0ZWQgZm9yLiIsIm1pbkxlbmd0aCI6MSwidHlwZSI6InN0cmluZyJ9LCJpbml0aWFsU25hcHNob3RSZXNvdXJjZU5hbWUiOnsiZGVzY3JpcHRpb24iOiJJbml0aWFsU25hcHNob3RSZXNvdXJjZU5hbWUgc3BlY2lmeSB0aGUgbmFtZSBvZiB0aGUgSmV0Sm9iU25hcHNob3Qgb2JqZWN0IGZyb20gd2hpY2ggdGhlIEpldEpvYiBpcyBpbml0aWFsaXplZC4iLCJ0eXBlIjoic3RyaW5nIn0sImphck5hbWUiOnsiZGVzY3JpcHRpb24iOiJKYXJOYW1lIHNwZWNpZnkgdGhlIG5hbWUgb2YgdGhlIEphciB0byBydW4gdGhhdCBpcyBwcmVzZW50IG9uIHRoZSBtZW1iZXIuIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn0sIm1haW5DbGFzcyI6eyJkZXNjcmlwdGlvbiI6Ik1haW5DbGFzcyBpcyB0aGUgbmFtZSBvZiB0aGUgbWFpbiBjbGFzcyB0aGF0IHdpbGwgYmUgcnVuIG9uIHRoZSBzdWJtaXR0ZWQgam9iLiIsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIEpldEpvYiB0byBiZSBjcmVhdGVkLiBJZiBlbXB0eSwgQ1IgbmFtZSB3aWxsIGJlIHVzZWQuIEl0IGNhbm5vdCBiZSB1cGRhdGVkIGFmdGVyIHRoZSBjb25maWcgaXMgY3JlYXRlZCBzdWNjZXNzZnVsbHkuIiwidHlwZSI6InN0cmluZyJ9LCJyZW1vdGVVUkwiOnsiZGVzY3JpcHRpb24iOiJVUkwgZnJvbSB3aGVyZSB0aGUgZmlsZSB3aWxsIGJlIGRvd25sb2FkZWQuIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0ZSI6eyJkZWZhdWx0IjoiUnVubmluZyIsImRlc2NyaXB0aW9uIjoiU3RhdGUgaXMgdXNlZCB0byBtYW5hZ2UgdGhlIGpvYiBzdGF0ZS4iLCJlbnVtIjpbIlJ1bm5pbmciLCJTdXNwZW5kZWQiLCJDYW5jZWxlZCIsIlJlc3RhcnRlZCJdLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJoYXplbGNhc3RSZXNvdXJjZU5hbWUiLCJqYXJOYW1lIiwic3RhdGUiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJKZXRKb2JTdGF0dXMgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgSmV0Sm9iIiwicHJvcGVydGllcyI6eyJjb21wbGV0aW9uVGltZSI6eyJmb3JtYXQiOiJkYXRlLXRpbWUiLCJ0eXBlIjoic3RyaW5nIn0sImZhaWx1cmVUZXh0Ijp7InR5cGUiOiJzdHJpbmcifSwiaWQiOnsiZm9ybWF0IjoiaW50NjQiLCJ0eXBlIjoiaW50ZWdlciJ9LCJwaGFzZSI6eyJlbnVtIjpbIkZhaWxlZCIsIk5vdFJ1bm5pbmciLCJTdGFydGluZyIsIlJ1bm5pbmciLCJTdXNwZW5kZWQiLCJTdXNwZW5kZWRFeHBvcnRpbmdTbmFwc2hvdCIsIkNvbXBsZXRpbmciLCJFeGVjdXRpb25GYWlsZWQiLCJDb21wbGV0ZWQiXSwidHlwZSI6InN0cmluZyJ9LCJzdWJtaXNzaW9uVGltZSI6eyJmb3JtYXQiOiJkYXRlLXRpbWUiLCJ0eXBlIjoic3RyaW5nIn0sInN1c3BlbnNpb25DYXVzZSI6eyJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJpZCIsInBoYXNlIl0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOm51bGwsInN0b3JlZFZlcnNpb25zIjpudWxsfX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEwLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJqZXRqb2JzbmFwc2hvdHMuaGF6ZWxjYXN0LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiaGF6ZWxjYXN0LmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJKZXRKb2JTbmFwc2hvdCIsImxpc3RLaW5kIjoiSmV0Sm9iU25hcHNob3RMaXN0IiwicGx1cmFsIjoiamV0am9ic25hcHNob3RzIiwic2hvcnROYW1lcyI6WyJqanMiXSwic2luZ3VsYXIiOiJqZXRqb2JzbmFwc2hvdCJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJkZXNjcmlwdGlvbiI6IkN1cnJlbnQgc3RhdGUgb2YgdGhlIEpldEpvYlNuYXBzaG90IiwianNvblBhdGgiOiIuc3RhdHVzLnN0YXRlIiwibmFtZSI6IlN0YXRlIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJUaW1lIHdoZW4gdGhlIEpldEpvYlNuYXBzaG90IHdhcyBjcmVhdGVkLCBpZiBjcmVhdGVkIiwianNvblBhdGgiOiIuc3RhdHVzLmNyZWF0aW9uVGltZSIsIm5hbWUiOiJDcmVhdGlvblRpbWUiLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6Ik1lc3NhZ2UgZm9yIHRoZSBKZXRKb2JTbmFwc2hvdCIsImpzb25QYXRoIjoiLnN0YXR1cy5tZXNzYWdlIiwibmFtZSI6Ik1lc3NhZ2UiLCJwcmlvcml0eSI6MSwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkpldEpvYlNuYXBzaG90IGlzIHRoZSBTY2hlbWEgZm9yIHRoZSBqZXRqb2JzbmFwc2hvdHMgQVBJIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJKZXRKb2JTbmFwc2hvdFNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBKZXRKb2JTbmFwc2hvdCIsInByb3BlcnRpZXMiOnsiY2FuY2VsSm9iIjp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6IkNhbmNlbEpvYiBkZXRlcm1pbmVzIHdoZXRoZXIgdGhlIGpvYiBpcyBjYW5jZWxlZCBhZnRlciBleHBvcnRpbmcgc25hcHNob3QiLCJ0eXBlIjoiYm9vbGVhbiJ9LCJqZXRKb2JSZXNvdXJjZU5hbWUiOnsiZGVzY3JpcHRpb24iOiJKZXRKb2JSZXNvdXJjZU5hbWUgaXMgdGhlIG5hbWUgb2YgdGhlIEpldEpvYiBDUiB3aGVyZSB0aGUgU25hcHNob3QgaXMgZXhwb3J0ZWQgZnJvbSIsIm1pbkxlbmd0aCI6MSwidHlwZSI6InN0cmluZyJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgZXhwb3J0ZWQgc25hcHNob3QiLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJqZXRKb2JSZXNvdXJjZU5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVmYXVsdCI6eyJzdGF0ZSI6IldhaXRpbmcifSwiZGVzY3JpcHRpb24iOiJKZXRKb2JTbmFwc2hvdFN0YXR1cyBkZWZpbmVzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBKZXRKb2JTbmFwc2hvdCIsInByb3BlcnRpZXMiOnsiY3JlYXRpb25UaW1lIjp7ImZvcm1hdCI6ImRhdGUtdGltZSIsInR5cGUiOiJzdHJpbmcifSwibWVzc2FnZSI6eyJ0eXBlIjoic3RyaW5nIn0sInN0YXRlIjp7ImVudW0iOlsiV2FpdGluZyIsIkV4cG9ydGluZyIsIkV4cG9ydGVkIiwiRmFpbGVkIl0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInNwZWMiXSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6bnVsbCwic3RvcmVkVmVyc2lvbnMiOm51bGx9fQ==
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEwLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJtdWx0aW1hcHMuaGF6ZWxjYXN0LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiaGF6ZWxjYXN0LmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJNdWx0aU1hcCIsImxpc3RLaW5kIjoiTXVsdGlNYXBMaXN0IiwicGx1cmFsIjoibXVsdGltYXBzIiwic2hvcnROYW1lcyI6WyJtbWFwIl0sInNpbmd1bGFyIjoibXVsdGltYXAifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3siZGVzY3JpcHRpb24iOiJDdXJyZW50IHN0YXRlIG9mIHRoZSBNdWx0aU1hcCBDb25maWciLCJqc29uUGF0aCI6Ii5zdGF0dXMuc3RhdGUiLCJuYW1lIjoiU3RhdHVzIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBIYXplbGNhc3QgcmVzb3VyY2UgdGhhdCB0aGlzIHJlc291cmNlIGlzIGNyZWF0ZWQgZm9yIiwianNvblBhdGgiOiIuc3BlYy5oYXplbGNhc3RSZXNvdXJjZU5hbWUiLCJuYW1lIjoiSGF6ZWxjYXN0LVJlc291cmNlIiwicHJpb3JpdHkiOjEsInR5cGUiOiJzdHJpbmcifSx7ImRlc2NyaXB0aW9uIjoiTWVzc2FnZSBmb3IgdGhlIGN1cnJlbnQgTXVsdGlNYXAgQ29uZmlnIiwianNvblBhdGgiOiIuc3RhdHVzLm1lc3NhZ2UiLCJuYW1lIjoiTWVzc2FnZSIsInByaW9yaXR5IjoxLCJ0eXBlIjoic3RyaW5nIn1dLCJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiTXVsdGlNYXAgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIG11bHRpbWFwcyBBUEkiLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuIFNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZCBtYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy4gU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uIENhbm5vdCBiZSB1cGRhdGVkLiBJbiBDYW1lbENhc2UuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6Ik11bHRpTWFwU3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIE11bHRpTWFwIiwicHJvcGVydGllcyI6eyJhc3luY0JhY2t1cENvdW50Ijp7ImRlZmF1bHQiOjAsImRlc2NyaXB0aW9uIjoiTnVtYmVyIG9mIGFzeW5jaHJvbm91cyBiYWNrdXBzLiIsImZvcm1hdCI6ImludDMyIiwibWF4aW11bSI6NiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifSwiYmFja3VwQ291bnQiOnsiZGVmYXVsdCI6MSwiZGVzY3JpcHRpb24iOiJOdW1iZXIgb2Ygc3luY2hyb25vdXMgYmFja3Vwcy4iLCJmb3JtYXQiOiJpbnQzMiIsIm1heGltdW0iOjYsIm1pbmltdW0iOjAsInR5cGUiOiJpbnRlZ2VyIn0sImJpbmFyeSI6eyJkZWZhdWx0IjpmYWxzZSwiZGVzY3JpcHRpb24iOiJTcGVjaWZpZXMgaW4gd2hpY2ggZm9ybWF0IGRhdGEgd2lsbCBiZSBzdG9yZWQgaW4geW91ciBNdWx0aU1hcC4gZmFsc2U6IE9CSkVDVCB0cnVlOiBCSU5BUlkiLCJ0eXBlIjoiYm9vbGVhbiJ9LCJjb2xsZWN0aW9uVHlwZSI6eyJkZWZhdWx0IjoiU0VUIiwiZGVzY3JpcHRpb24iOiJUeXBlIG9mIHRoZSB2YWx1ZSBjb2xsZWN0aW9uIiwiZW51bSI6WyJTRVQiLCJMSVNUIl0sInR5cGUiOiJzdHJpbmcifSwiaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIjp7ImRlc2NyaXB0aW9uIjoiSGF6ZWxjYXN0UmVzb3VyY2VOYW1lIGRlZmluZXMgdGhlIG5hbWUgb2YgdGhlIEhhemVsY2FzdCByZXNvdXJjZSB0aGF0IHRoaXMgcmVzb3VyY2UgaXMgY3JlYXRlZCBmb3IuIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBkYXRhIHN0cnVjdHVyZSBjb25maWcgdG8gYmUgY3JlYXRlZC4gSWYgZW1wdHksIENSIG5hbWUgd2lsbCBiZSB1c2VkLiBJdCBjYW5ub3QgYmUgdXBkYXRlZCBhZnRlciB0aGUgY29uZmlnIGlzIGNyZWF0ZWQgc3VjY2Vzc2Z1bGx5LiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImhhemVsY2FzdFJlc291cmNlTmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6Ik11bHRpTWFwU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIE11bHRpTWFwIiwicHJvcGVydGllcyI6eyJtZW1iZXJTdGF0dXNlcyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJlbnVtIjpbIlN1Y2Nlc3MiLCJGYWlsZWQiLCJQZW5kaW5nIiwiUGVyc2lzdGluZyIsIlRlcm1pbmF0aW5nIl0sInR5cGUiOiJzdHJpbmcifSwiZGVzY3JpcHRpb24iOiJIb2xkcyBzdGF0dXMgb2YgZGF0YSBzdHJ1Y3R1cmUgZm9yIGVhY2ggSGF6ZWxjYXN0IG1lbWJlciIsInR5cGUiOiJvYmplY3QifSwibWVzc2FnZSI6eyJkZXNjcmlwdGlvbiI6Ik1lc3NhZ2UgZXhwbGFpbmluZyB0aGUgY3VycmVudCBzdGF0ZSIsInR5cGUiOiJzdHJpbmcifSwic3RhdGUiOnsiZGVzY3JpcHRpb24iOiJTdGF0ZSBvZiB0aGUgZGF0YSBzdHJ1Y3R1cmUiLCJlbnVtIjpbIlN1Y2Nlc3MiLCJGYWlsZWQiLCJQZW5kaW5nIiwiUGVyc2lzdGluZyIsIlRlcm1pbmF0aW5nIl0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInNwZWMiXSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6bnVsbCwic3RvcmVkVmVyc2lvbnMiOm51bGx9fQ==
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEwLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJxdWV1ZXMuaGF6ZWxjYXN0LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiaGF6ZWxjYXN0LmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJRdWV1ZSIsImxpc3RLaW5kIjoiUXVldWVMaXN0IiwicGx1cmFsIjoicXVldWVzIiwic2hvcnROYW1lcyI6WyJxIl0sInNpbmd1bGFyIjoicXVldWUifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3siZGVzY3JpcHRpb24iOiJDdXJyZW50IHN0YXRlIG9mIHRoZSBRdWV1ZSBDb25maWciLCJqc29uUGF0aCI6Ii5zdGF0dXMuc3RhdGUiLCJuYW1lIjoiU3RhdHVzIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBIYXplbGNhc3QgcmVzb3VyY2UgdGhhdCB0aGlzIHJlc291cmNlIGlzIGNyZWF0ZWQgZm9yIiwianNvblBhdGgiOiIuc3BlYy5oYXplbGNhc3RSZXNvdXJjZU5hbWUiLCJuYW1lIjoiSGF6ZWxjYXN0LVJlc291cmNlIiwicHJpb3JpdHkiOjEsInR5cGUiOiJzdHJpbmcifSx7ImRlc2NyaXB0aW9uIjoiTWVzc2FnZSBmb3IgdGhlIGN1cnJlbnQgUXVldWUgQ29uZmlnIiwianNvblBhdGgiOiIuc3RhdHVzLm1lc3NhZ2UiLCJuYW1lIjoiTWVzc2FnZSIsInByaW9yaXR5IjoxLCJ0eXBlIjoic3RyaW5nIn1dLCJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiUXVldWUgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIHF1ZXVlcyBBUEkiLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuIFNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZCBtYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy4gU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uIENhbm5vdCBiZSB1cGRhdGVkLiBJbiBDYW1lbENhc2UuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IlF1ZXVlU3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIFF1ZXVlIEl0IGNhbm5vdCBiZSB1cGRhdGVkIGFmdGVyIHRoZSBRdWV1ZSBpcyBjcmVhdGVkIiwicHJvcGVydGllcyI6eyJhc3luY0JhY2t1cENvdW50Ijp7ImRlZmF1bHQiOjAsImRlc2NyaXB0aW9uIjoiTnVtYmVyIG9mIGFzeW5jaHJvbm91cyBiYWNrdXBzLiIsImZvcm1hdCI6ImludDMyIiwibWF4aW11bSI6NiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifSwiYmFja3VwQ291bnQiOnsiZGVmYXVsdCI6MSwiZGVzY3JpcHRpb24iOiJOdW1iZXIgb2Ygc3luY2hyb25vdXMgYmFja3Vwcy4iLCJmb3JtYXQiOiJpbnQzMiIsIm1heGltdW0iOjYsIm1pbmltdW0iOjAsInR5cGUiOiJpbnRlZ2VyIn0sImVtcHR5UXVldWVUVExTZWNvbmRzIjp7ImRlZmF1bHQiOi0xLCJkZXNjcmlwdGlvbiI6IlRpbWUgaW4gc2Vjb25kcyBhZnRlciB3aGljaCB0aGUgUXVldWUgd2lsbCBiZSBkZXN0cm95ZWQgaWYgaXQgc3RheXMgZW1wdHkgb3IgdW51c2VkLiBJZiB0aGUgdmFsdWVzIGlzIG5vdCBwcm92aWRlZCB0aGUgUXVldWUgd2lsbCBuZXZlciBiZSBkZXN0cm95ZWQuIiwiZm9ybWF0IjoiaW50MzIiLCJ0eXBlIjoiaW50ZWdlciJ9LCJoYXplbGNhc3RSZXNvdXJjZU5hbWUiOnsiZGVzY3JpcHRpb24iOiJIYXplbGNhc3RSZXNvdXJjZU5hbWUgZGVmaW5lcyB0aGUgbmFtZSBvZiB0aGUgSGF6ZWxjYXN0IHJlc291cmNlIHRoYXQgdGhpcyByZXNvdXJjZSBpcyBjcmVhdGVkIGZvci4iLCJtaW5MZW5ndGgiOjEsInR5cGUiOiJzdHJpbmcifSwibWF4U2l6ZSI6eyJkZWZhdWx0IjowLCJkZXNjcmlwdGlvbiI6Ik1heCBzaXplIG9mIHRoZSBxdWV1ZS4iLCJmb3JtYXQiOiJpbnQzMiIsIm1pbmltdW0iOjAsInR5cGUiOiJpbnRlZ2VyIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBkYXRhIHN0cnVjdHVyZSBjb25maWcgdG8gYmUgY3JlYXRlZC4gSWYgZW1wdHksIENSIG5hbWUgd2lsbCBiZSB1c2VkLiBJdCBjYW5ub3QgYmUgdXBkYXRlZCBhZnRlciB0aGUgY29uZmlnIGlzIGNyZWF0ZWQgc3VjY2Vzc2Z1bGx5LiIsInR5cGUiOiJzdHJpbmcifSwicHJpb3JpdHlDb21wYXJhdG9yQ2xhc3NOYW1lIjp7ImRlc2NyaXB0aW9uIjoiVGhlIG5hbWUgb2YgdGhlIGNvbXBhcmF0b3IgY2xhc3MuIElmIHRoZSBjbGFzcyBuYW1lIGlzIHByb3ZpZGVkLCB0aGUgUXVldWUgYmVjb21lcyBQcmlvcml0eSBRdWV1ZS4gWW91IGNhbiBsZWFybiBtb3JlIGF0IGh0dHBzOi8vZG9jcy5oYXplbGNhc3QuY29tL2hhemVsY2FzdC9sYXRlc3QvZGF0YS1zdHJ1Y3R1cmVzL3ByaW9yaXR5LXF1ZXVlLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImhhemVsY2FzdFJlc291cmNlTmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IlF1ZXVlU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIFF1ZXVlIiwicHJvcGVydGllcyI6eyJtZW1iZXJTdGF0dXNlcyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJlbnVtIjpbIlN1Y2Nlc3MiLCJGYWlsZWQiLCJQZW5kaW5nIiwiUGVyc2lzdGluZyIsIlRlcm1pbmF0aW5nIl0sInR5cGUiOiJzdHJpbmcifSwiZGVzY3JpcHRpb24iOiJIb2xkcyBzdGF0dXMgb2YgZGF0YSBzdHJ1Y3R1cmUgZm9yIGVhY2ggSGF6ZWxjYXN0IG1lbWJlciIsInR5cGUiOiJvYmplY3QifSwibWVzc2FnZSI6eyJkZXNjcmlwdGlvbiI6Ik1lc3NhZ2UgZXhwbGFpbmluZyB0aGUgY3VycmVudCBzdGF0ZSIsInR5cGUiOiJzdHJpbmcifSwic3RhdGUiOnsiZGVzY3JpcHRpb24iOiJTdGF0ZSBvZiB0aGUgZGF0YSBzdHJ1Y3R1cmUiLCJlbnVtIjpbIlN1Y2Nlc3MiLCJGYWlsZWQiLCJQZW5kaW5nIiwiUGVyc2lzdGluZyIsIlRlcm1pbmF0aW5nIl0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInNwZWMiXSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6bnVsbCwic3RvcmVkVmVyc2lvbnMiOm51bGx9fQ==
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEwLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJyZXBsaWNhdGVkbWFwcy5oYXplbGNhc3QuY29tIn0sInNwZWMiOnsiZ3JvdXAiOiJoYXplbGNhc3QuY29tIiwibmFtZXMiOnsia2luZCI6IlJlcGxpY2F0ZWRNYXAiLCJsaXN0S2luZCI6IlJlcGxpY2F0ZWRNYXBMaXN0IiwicGx1cmFsIjoicmVwbGljYXRlZG1hcHMiLCJzaG9ydE5hbWVzIjpbInJtYXAiXSwic2luZ3VsYXIiOiJyZXBsaWNhdGVkbWFwIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJhZGRpdGlvbmFsUHJpbnRlckNvbHVtbnMiOlt7ImRlc2NyaXB0aW9uIjoiQ3VycmVudCBzdGF0ZSBvZiB0aGUgUmVwbGljYXRlZE1hcCBDb25maWciLCJqc29uUGF0aCI6Ii5zdGF0dXMuc3RhdGUiLCJuYW1lIjoiU3RhdHVzIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBIYXplbGNhc3QgcmVzb3VyY2UgdGhhdCB0aGlzIHJlc291cmNlIGlzIGNyZWF0ZWQgZm9yIiwianNvblBhdGgiOiIuc3BlYy5oYXplbGNhc3RSZXNvdXJjZU5hbWUiLCJuYW1lIjoiSGF6ZWxjYXN0LVJlc291cmNlIiwicHJpb3JpdHkiOjEsInR5cGUiOiJzdHJpbmcifSx7ImRlc2NyaXB0aW9uIjoiTWVzc2FnZSBmb3IgdGhlIGN1cnJlbnQgUmVwbGljYXRlZE1hcCBDb25maWciLCJqc29uUGF0aCI6Ii5zdGF0dXMubWVzc2FnZSIsIm5hbWUiOiJNZXNzYWdlIiwicHJpb3JpdHkiOjEsInR5cGUiOiJzdHJpbmcifV0sIm5hbWUiOiJ2MWFscGhhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJSZXBsaWNhdGVkTWFwIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSByZXBsaWNhdGVkbWFwcyBBUEkiLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuIFNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZCBtYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy4gU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uIENhbm5vdCBiZSB1cGRhdGVkLiBJbiBDYW1lbENhc2UuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IlJlcGxpY2F0ZWRNYXBTcGVjIGRlZmluZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgUmVwbGljYXRlZE1hcCIsInByb3BlcnRpZXMiOnsiYXN5bmNGaWxsdXAiOnsiZGVmYXVsdCI6dHJ1ZSwiZGVzY3JpcHRpb24iOiJBc3luY0ZpbGx1cCBzcGVjaWZpZXMgd2hldGhlciB0aGUgUmVwbGljYXRlZE1hcCBpcyBhdmFpbGFibGUgZm9yIHJlYWRzIGJlZm9yZSB0aGUgaW5pdGlhbCByZXBsaWNhdGlvbiBpcyBjb21wbGV0ZWQiLCJ0eXBlIjoiYm9vbGVhbiJ9LCJoYXplbGNhc3RSZXNvdXJjZU5hbWUiOnsiZGVzY3JpcHRpb24iOiJIYXplbGNhc3RSZXNvdXJjZU5hbWUgZGVmaW5lcyB0aGUgbmFtZSBvZiB0aGUgSGF6ZWxjYXN0IHJlc291cmNlLiIsIm1pbkxlbmd0aCI6MSwidHlwZSI6InN0cmluZyJ9LCJpbk1lbW9yeUZvcm1hdCI6eyJkZWZhdWx0IjoiT0JKRUNUIiwiZGVzY3JpcHRpb24iOiJJbk1lbW9yeUZvcm1hdCBzcGVjaWZpZXMgaW4gd2hpY2ggZm9ybWF0IGRhdGEgd2lsbCBiZSBzdG9yZWQgaW4gdGhlIFJlcGxpY2F0ZWRNYXAiLCJlbnVtIjpbIkJJTkFSWSIsIk9CSkVDVCJdLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBSZXBsaWNhdGVkTWFwIGNvbmZpZyB0byBiZSBjcmVhdGVkLiBJZiBlbXB0eSwgQ1IgbmFtZSB3aWxsIGJlIHVzZWQuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIl0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiUmVwbGljYXRlZE1hcFN0YXR1cyBkZWZpbmVzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBSZXBsaWNhdGVkTWFwIiwicHJvcGVydGllcyI6eyJtZW1iZXJTdGF0dXNlcyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJlbnVtIjpbIlN1Y2Nlc3MiLCJGYWlsZWQiLCJQZW5kaW5nIiwiUGVyc2lzdGluZyIsIlRlcm1pbmF0aW5nIl0sInR5cGUiOiJzdHJpbmcifSwiZGVzY3JpcHRpb24iOiJIb2xkcyBzdGF0dXMgb2YgZGF0YSBzdHJ1Y3R1cmUgZm9yIGVhY2ggSGF6ZWxjYXN0IG1lbWJlciIsInR5cGUiOiJvYmplY3QifSwibWVzc2FnZSI6eyJkZXNjcmlwdGlvbiI6Ik1lc3NhZ2UgZXhwbGFpbmluZyB0aGUgY3VycmVudCBzdGF0ZSIsInR5cGUiOiJzdHJpbmcifSwic3RhdGUiOnsiZGVzY3JpcHRpb24iOiJTdGF0ZSBvZiB0aGUgZGF0YSBzdHJ1Y3R1cmUiLCJlbnVtIjpbIlN1Y2Nlc3MiLCJGYWlsZWQiLCJQZW5kaW5nIiwiUGVyc2lzdGluZyIsIlRlcm1pbmF0aW5nIl0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInNwZWMiXSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6bnVsbCwic3RvcmVkVmVyc2lvbnMiOm51bGx9fQ==
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwLmt1YmVybmV0ZXMuaW8vY29tcG9uZW50Ijoid2ViaG9vayIsImFwcC5rdWJlcm5ldGVzLmlvL2NyZWF0ZWQtYnkiOiJoYXplbGNhc3QtcGxhdGZvcm0tb3BlcmF0b3IiLCJhcHAua3ViZXJuZXRlcy5pby9pbnN0YW5jZSI6IndlYmhvb2stc2VydmljZSIsImFwcC5rdWJlcm5ldGVzLmlvL21hbmFnZWQtYnkiOiJrdXN0b21pemUiLCJhcHAua3ViZXJuZXRlcy5pby9uYW1lIjoic2VydmljZSIsImFwcC5rdWJlcm5ldGVzLmlvL3BhcnQtb2YiOiJoYXplbGNhc3QtcGxhdGZvcm0tb3BlcmF0b3IifSwibmFtZSI6ImhhemVsY2FzdC1wbGF0Zm9ybS13ZWJob29rLXNlcnZpY2UifSwic3BlYyI6eyJwb3J0cyI6W3sicG9ydCI6NDQzLCJwcm90b2NvbCI6IlRDUCIsInRhcmdldFBvcnQiOjk0NDN9XSwic2VsZWN0b3IiOnsiY29udHJvbC1wbGFuZSI6ImNvbnRyb2xsZXItbWFuYWdlciJ9fSwic3RhdHVzIjp7ImxvYWRCYWxhbmNlciI6e319fQ==
relatedImages:
- image: docker.io/hazelcast/hazelcast-platform-operator@sha256:919776c1f82eff76a2407896a1b8603a002e90641de58751d26e15862f36e55a
  name: manager
- image: quay.io/openshift-community-operators/hazelcast-platform-operator@sha256:fe8112d189060c6c7335e1342c0ab848b116c33a7f71ad9bb09fd3a2f5a272b4
  name: ""
schema: olm.bundle
---
image: quay.io/community-operator-pipeline-prod/hazelcast-platform-operator@sha256:08860aaf068795bc46b0c9bbbbaab2dcd7a125af3d1fda7424794773e895d4ab
name: hazelcast-platform-operator.v5.11.0
package: hazelcast-platform-operator
properties:
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: Cache
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: CronHotBackup
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: Hazelcast
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: HazelcastEndpoint
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: HotBackup
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: JetJob
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: JetJobSnapshot
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: ManagementCenter
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: Map
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: MultiMap
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: Queue
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: ReplicatedMap
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: Topic
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: WanReplication
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: WanSync
    version: v1alpha1
- type: olm.package
  value:
    packageName: hazelcast-platform-operator
    version: 5.11.0
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEzLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJ0b3BpY3MuaGF6ZWxjYXN0LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiaGF6ZWxjYXN0LmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJUb3BpYyIsImxpc3RLaW5kIjoiVG9waWNMaXN0IiwicGx1cmFsIjoidG9waWNzIiwic2luZ3VsYXIiOiJ0b3BpYyJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJkZXNjcmlwdGlvbiI6IkN1cnJlbnQgc3RhdGUgb2YgdGhlIFRvcGljIENvbmZpZyIsImpzb25QYXRoIjoiLnN0YXR1cy5zdGF0ZSIsIm5hbWUiOiJTdGF0dXMiLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIEhhemVsY2FzdCByZXNvdXJjZSB0aGF0IHRoaXMgcmVzb3VyY2UgaXMgY3JlYXRlZCBmb3IiLCJqc29uUGF0aCI6Ii5zcGVjLmhhemVsY2FzdFJlc291cmNlTmFtZSIsIm5hbWUiOiJIYXplbGNhc3QtUmVzb3VyY2UiLCJwcmlvcml0eSI6MSwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJNZXNzYWdlIGZvciB0aGUgY3VycmVudCBUb3BpYyBDb25maWciLCJqc29uUGF0aCI6Ii5zdGF0dXMubWVzc2FnZSIsIm5hbWUiOiJNZXNzYWdlIiwicHJpb3JpdHkiOjEsInR5cGUiOiJzdHJpbmcifV0sIm5hbWUiOiJ2MWFscGhhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJUb3BpYyBpcyB0aGUgU2NoZW1hIGZvciB0aGUgdG9waWNzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiVG9waWNTcGVjIGRlZmluZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgVG9waWMiLCJwcm9wZXJ0aWVzIjp7Imdsb2JhbE9yZGVyaW5nRW5hYmxlZCI6eyJkZWZhdWx0IjpmYWxzZSwiZGVzY3JpcHRpb24iOiJnbG9iYWxPcmRlcmluZ0VuYWJsZWQgYWxsb3dzIGFsbCBub2RlcyBsaXN0ZW5pbmcgdG8gdGhlIHNhbWUgdG9waWMgZ2V0IHRoZWlyIG1lc3NhZ2VzIGluIHRoZSBzYW1lIG9yZGVyIHRoZSBzYW1lIG9yZGVyIiwidHlwZSI6ImJvb2xlYW4ifSwiaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIjp7ImRlc2NyaXB0aW9uIjoiSGF6ZWxjYXN0UmVzb3VyY2VOYW1lIGRlZmluZXMgdGhlIG5hbWUgb2YgdGhlIEhhemVsY2FzdCByZXNvdXJjZSBmb3Igd2hpY2ggdG9waWMgY29uZmlnIHdpbGwgYmUgY3JlYXRlZCIsIm1pbkxlbmd0aCI6MSwidHlwZSI6InN0cmluZyJ9LCJtdWx0aVRocmVhZGluZ0VuYWJsZWQiOnsiZGVmYXVsdCI6ZmFsc2UsImRlc2NyaXB0aW9uIjoibXVsdGlUaHJlYWRpbmdFbmFibGVkIGVuYWJsZXMgbXVsdGktdGhyZWFkZWQgcHJvY2Vzc2luZyBvZiBpbmNvbWluZyBtZXNzYWdlcyBhIHNpbmdsZSB0aHJlYWQgd2lsbCBoYW5kbGUgYWxsIHRvcGljIG1lc3NhZ2VzIiwidHlwZSI6ImJvb2xlYW4ifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIHRvcGljIGNvbmZpZyB0byBiZSBjcmVhdGVkLiBJZiBlbXB0eSwgQ1IgbmFtZSB3aWxsIGJlIHVzZWQuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIl0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiVG9waWNTdGF0dXMgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgVG9waWMiLCJwcm9wZXJ0aWVzIjp7Im1lbWJlclN0YXR1c2VzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7ImVudW0iOlsiU3VjY2VzcyIsIkZhaWxlZCIsIlBlbmRpbmciLCJQZXJzaXN0aW5nIiwiVGVybWluYXRpbmciXSwidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6IkhvbGRzIHN0YXR1cyBvZiBkYXRhIHN0cnVjdHVyZSBmb3IgZWFjaCBIYXplbGNhc3QgbWVtYmVyIiwidHlwZSI6Im9iamVjdCJ9LCJtZXNzYWdlIjp7ImRlc2NyaXB0aW9uIjoiTWVzc2FnZSBleHBsYWluaW5nIHRoZSBjdXJyZW50IHN0YXRlIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0ZSI6eyJkZXNjcmlwdGlvbiI6IlN0YXRlIG9mIHRoZSBkYXRhIHN0cnVjdHVyZSIsImVudW0iOlsiU3VjY2VzcyIsIkZhaWxlZCIsIlBlbmRpbmciLCJQZXJzaXN0aW5nIiwiVGVybWluYXRpbmciXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsic3BlYyJdLCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfSwic3RhdHVzIjp7ImFjY2VwdGVkTmFtZXMiOnsia2luZCI6IiIsInBsdXJhbCI6IiJ9LCJjb25kaXRpb25zIjpudWxsLCJzdG9yZWRWZXJzaW9ucyI6bnVsbH19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEzLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJ3YW5yZXBsaWNhdGlvbnMuaGF6ZWxjYXN0LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiaGF6ZWxjYXN0LmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJXYW5SZXBsaWNhdGlvbiIsImxpc3RLaW5kIjoiV2FuUmVwbGljYXRpb25MaXN0IiwicGx1cmFsIjoid2FucmVwbGljYXRpb25zIiwic2hvcnROYW1lcyI6WyJ3ciJdLCJzaW5ndWxhciI6IndhbnJlcGxpY2F0aW9uIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJhZGRpdGlvbmFsUHJpbnRlckNvbHVtbnMiOlt7ImRlc2NyaXB0aW9uIjoiQ3VycmVudCBzdGF0ZSBvZiB0aGUgSGF6ZWxjYXN0IFdBTiBSZXBsaWNhdGlvbiIsImpzb25QYXRoIjoiLnN0YXR1cy5zdGF0dXMiLCJuYW1lIjoiU3RhdHVzIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJNZXNzYWdlIGZvciB0aGUgY3VycmVudCBXYW5SZXBsaWNhdGlvbiBDb25maWciLCJqc29uUGF0aCI6Ii5zdGF0dXMubWVzc2FnZSIsIm5hbWUiOiJNZXNzYWdlIiwicHJpb3JpdHkiOjEsInR5cGUiOiJzdHJpbmcifV0sIm5hbWUiOiJ2MWFscGhhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJXYW5SZXBsaWNhdGlvbiBpcyB0aGUgU2NoZW1hIGZvciB0aGUgd2FucmVwbGljYXRpb25zIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiV2FuUmVwbGljYXRpb25TcGVjIGRlZmluZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgV2FuUmVwbGljYXRpb24iLCJwcm9wZXJ0aWVzIjp7ImFja25vd2xlZGdlbWVudCI6eyJkZWZhdWx0Ijp7InRpbWVvdXQiOjYwMDAwLCJ0eXBlIjoiQUNLX09OX09QRVJBVElPTl9DT01QTEVURSJ9LCJkZXNjcmlwdGlvbiI6IkFja25vd2xlZGdlbWVudCBpcyB0aGUgY29uZmlndXJhdGlvbiBmb3IgdGhlIGNvbmRpdGlvbiB3aGVuIHRoZSBuZXh0IGJhdGNoIG9mIFdBTiBldmVudHMgYXJlIHNlbnQuIiwicHJvcGVydGllcyI6eyJ0aW1lb3V0Ijp7ImRlZmF1bHQiOjYwMDAwLCJkZXNjcmlwdGlvbiI6IlRpbWVvdXQgcmVwcmVzZW50cyB0aGUgdGltZSBpbiBtaWxsaXNlY29uZHMgdGhlIHNvdXJjZSBjbHVzdGVyIHdhaXRzIGZvciB0aGUgYWNrbm93bGVkZ2VtZW50LiBBZnRlciB0aW1lb3V0LCB0aGUgZXZlbnRzIHdpbGwgYmUgcmVzZW50LiIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifSwidHlwZSI6eyJkZWZhdWx0IjoiQUNLX09OX09QRVJBVElPTl9DT01QTEVURSIsImRlc2NyaXB0aW9uIjoiVHlwZSByZXByZXNlbnRzIGhvdyBhIGJhdGNoIG9mIHJlcGxpY2F0aW9uIGV2ZW50cyBpcyBjb25zaWRlcmVkIHN1Y2Nlc3NmdWxseSByZXBsaWNhdGVkLiIsImVudW0iOlsiQUNLX09OX09QRVJBVElPTl9DT01QTEVURSIsIkFDS19PTl9SRUNFSVBUIl0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwiYmF0Y2giOnsiZGVmYXVsdCI6eyJtYXhpbXVtRGVsYXkiOjEwMDAsInNpemUiOjUwMH0sImRlc2NyaXB0aW9uIjoiQmF0Y2ggaXMgdGhlIGNvbmZpZ3VyYXRpb24gZm9yIFdBTiBldmVudHMgYmF0Y2guIiwicHJvcGVydGllcyI6eyJtYXhpbXVtRGVsYXkiOnsiZGVmYXVsdCI6MTAwMCwiZGVzY3JpcHRpb24iOiJNYXhpbXVtRGVsYXkgcmVwcmVzZW50cyB0aGUgbWF4aW11bSBkZWxheSBpbiBtaWxsaXNlY29uZHMuIElmIHRoZSBiYXRjaCBzaXplIGlzIG5vdCByZWFjaGVkLCB0aGUgZXZlbnRzIHdpbGwgYmUgc2VudCBhZnRlciB0aGUgbWF4aW11bSBkZWxheS4iLCJmb3JtYXQiOiJpbnQzMiIsInR5cGUiOiJpbnRlZ2VyIn0sInNpemUiOnsiZGVmYXVsdCI6NTAwLCJkZXNjcmlwdGlvbiI6IlNpemUgcmVwcmVzZW50cyB0aGUgbWF4aW11bSBiYXRjaCBzaXplLiIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifX0sInR5cGUiOiJvYmplY3QifSwiZW5kcG9pbnRzIjp7ImRlc2NyaXB0aW9uIjoiRW5kcG9pbnRzIGlzIHRoZSB0YXJnZXQgY2x1c3RlciBjb21tYSBzZXBhcmF0ZWQgZW5kcG9pbnQgbGlzdCAuIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn0sInF1ZXVlIjp7ImRlZmF1bHQiOnsiY2FwYWNpdHkiOjEwMDAwLCJmdWxsQmVoYXZpb3IiOiJESVNDQVJEX0FGVEVSX01VVEFUSU9OIn0sImRlc2NyaXB0aW9uIjoiUXVldWUgaXMgdGhlIGNvbmZpZ3VyYXRpb24gZm9yIFdBTiBldmVudHMgcXVldWUuIiwicHJvcGVydGllcyI6eyJjYXBhY2l0eSI6eyJkZWZhdWx0IjoxMDAwMCwiZGVzY3JpcHRpb24iOiJDYXBhY2l0eSBpcyB0aGUgdG90YWwgY2FwYWNpdHkgb2YgV0FOIHF1ZXVlLiIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifSwiZnVsbEJlaGF2aW9yIjp7ImRlZmF1bHQiOiJESVNDQVJEX0FGVEVSX01VVEFUSU9OIiwiZGVzY3JpcHRpb24iOiJGdWxsQmVoYXZpb3IgcmVwcmVzZW50cyB0aGUgYmVoYXZpb3Igb2YgdGhlIG5ldyBhcnJpdmFsIHdoZW4gdGhlIHF1ZXVlIGlzIGZ1bGwuIiwiZW51bSI6WyJESVNDQVJEX0FGVEVSX01VVEFUSU9OIiwiVEhST1dfRVhDRVBUSU9OIiwiVEhST1dfRVhDRVBUSU9OX09OTFlfSUZfUkVQTElDQVRJT05fQUNUSVZFIl0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwicmVzb3VyY2VzIjp7ImRlc2NyaXB0aW9uIjoiUmVzb3VyY2VzIGlzIHRoZSBsaXN0IG9mIGN1c3RvbSByZXNvdXJjZXMgdG8gd2hpY2ggV0FOIHJlcGxpY2F0aW9uIGFwcGxpZXMuIiwiaXRlbXMiOnsicHJvcGVydGllcyI6eyJraW5kIjp7ImRlZmF1bHQiOiJNYXAiLCJkZXNjcmlwdGlvbiI6IktpbmQgaXMgdGhlIGtpbmQgb2YgY3VzdG9tIHJlc291cmNlIHRvIHdoaWNoIFdBTiByZXBsaWNhdGlvbiBhcHBsaWVzLiIsImVudW0iOlsiTWFwIiwiSGF6ZWxjYXN0Il0sInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgaXMgdGhlIG5hbWUgb2YgY3VzdG9tIHJlc291cmNlIHRvIHdoaWNoIFdBTiByZXBsaWNhdGlvbiBhcHBsaWVzLiIsIm1pbkxlbmd0aCI6MSwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sIm1pbkl0ZW1zIjoxLCJ0eXBlIjoiYXJyYXkifSwic3luY0NvbnNpc3RlbmN5Q2hlY2tTdHJhdGVneSI6eyJkZXNjcmlwdGlvbiI6IlN5bmNDb25zaXN0ZW5jeUNoZWNrU3RyYXRlZ3kgaXMgdGhlIHN0cmF0ZWd5IGZvciBjaGVja2luZyB0aGUgY29uc2lzdGVuY3kgb2YgZGF0YSBiZXR3ZWVuIHJlcGxpY2FzLiIsInR5cGUiOiJzdHJpbmcifSwidGFyZ2V0Q2x1c3Rlck5hbWUiOnsiZGVzY3JpcHRpb24iOiJDbHVzdGVyTmFtZSBpcyB0aGUgY2x1c3Rlck5hbWUgZmllbGQgb2YgdGhlIHRhcmdldCBIYXplbGNhc3QgcmVzb3VyY2UuIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJlbmRwb2ludHMiLCJyZXNvdXJjZXMiLCJ0YXJnZXRDbHVzdGVyTmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IldhblJlcGxpY2F0aW9uU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIFdhblJlcGxpY2F0aW9uIiwicHJvcGVydGllcyI6eyJtZXNzYWdlIjp7ImRlc2NyaXB0aW9uIjoiTWVzc2FnZSBpcyB0aGUgZmllbGQgdG8gc2hvdyBkZXRhaWwgaW5mb3JtYXRpb24gb3IgZXJyb3IiLCJ0eXBlIjoic3RyaW5nIn0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IlN0YXR1cyBpcyB0aGUgc3RhdHVzIG9mIFdBTiByZXBsaWNhdGlvbiIsInR5cGUiOiJzdHJpbmcifSwid2FuUmVwbGljYXRpb25NYXBzU3RhdHVzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InByb3BlcnRpZXMiOnsibWVzc2FnZSI6eyJkZXNjcmlwdGlvbiI6Ik1lc3NhZ2UgaXMgdGhlIGZpZWxkIHRvIHNob3cgZGV0YWlsIGluZm9ybWF0aW9uIG9yIGVycm9yIiwidHlwZSI6InN0cmluZyJ9LCJwdWJsaXNoZXJJZCI6eyJkZXNjcmlwdGlvbiI6IlB1Ymxpc2hlcklkIGlzIHRoZSBJRCB1c2VkIGZvciBXQU4gcHVibGlzaGVyIElEIiwidHlwZSI6InN0cmluZyJ9LCJyZXNvdXJjZU5hbWUiOnsiZGVzY3JpcHRpb24iOiJSZXNvdXJjZU5hbWUgaXMgdGhlIG5hbWUgb2YgdGhlIE1hcCBDdXN0b20gUmVzb3VyY2UuIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJTdGF0dXMgaXMgdGhlIHN0YXR1cyBvZiBXQU4gcmVwbGljYXRpb24iLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sImRlc2NyaXB0aW9uIjoiV2FuUmVwbGljYXRpb25NYXBzU3RhdHVzIGlzIHRoZSBXQU4gUmVwbGljYXRpb24gc3RhdHVzIG9mIHRoZSBNYXBzIGdpdmVuIGluIHRoZSBzcGVjIGRpcmVjdGx5IG9yIGluZGlyZWN0bHkgYnkgSGF6ZWxjYXN0IHJlc291cmNlLiIsInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInNwZWMiXSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6bnVsbCwic3RvcmVkVmVyc2lvbnMiOm51bGx9fQ==
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEzLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJ3YW5zeW5jcy5oYXplbGNhc3QuY29tIn0sInNwZWMiOnsiZ3JvdXAiOiJoYXplbGNhc3QuY29tIiwibmFtZXMiOnsia2luZCI6IldhblN5bmMiLCJsaXN0S2luZCI6IldhblN5bmNMaXN0IiwicGx1cmFsIjoid2Fuc3luY3MiLCJzaG9ydE5hbWVzIjpbIndzIl0sInNpbmd1bGFyIjoid2Fuc3luYyJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJkZXNjcmlwdGlvbiI6IkN1cnJlbnQgc3RhdGUgb2YgdGhlIEhhemVsY2FzdCBXQU4gU3luYyIsImpzb25QYXRoIjoiLnN0YXR1cy5zdGF0dXMiLCJuYW1lIjoiU3RhdHVzIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJNZXNzYWdlIGZvciB0aGUgY3VycmVudCBXYW5TeW5jIiwianNvblBhdGgiOiIuc3RhdHVzLm1lc3NhZ2UiLCJuYW1lIjoiTWVzc2FnZSIsInByaW9yaXR5IjoxLCJ0eXBlIjoic3RyaW5nIn1dLCJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiV2FuU3luYyBpcyB0aGUgU2NoZW1hIGZvciB0aGUgd2Fuc3luY3MgQVBJIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJXYW5TeW5jU3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIFdhblN5bmMiLCJwcm9wZXJ0aWVzIjp7IndhblJlcGxpY2F0aW9uUmVzb3VyY2VOYW1lIjp7ImRlc2NyaXB0aW9uIjoiV2FuUmVwbGljYXRpb25SZXNvdXJjZU5hbWUgaXMgdGhlIG5hbWUgb2YgV2FuUmVwbGljYXRpb24gQ1IgdGhhdCBjb250YWlucyB0aGUgV0FOIHB1Ymxpc2hlciBjb25maWd1cmF0aW9uLiBJZiBzcGVjaWZpZWQgdGhlIFN5bmMgb3BlcmF0aW9uIHdpbGwgdXNlIGV4aXN0aW5nIFdBTiBwdWJsaXNoZXIuIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJ3YW5SZXBsaWNhdGlvblJlc291cmNlTmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IldhblN5bmNTdGF0dXMgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgV2FuU3luYyIsInByb3BlcnRpZXMiOnsibWVzc2FnZSI6eyJkZXNjcmlwdGlvbiI6Ik1lc3NhZ2UgaXMgdGhlIGZpZWxkIHRvIHNob3cgZGV0YWlsIGluZm9ybWF0aW9uIG9yIGVycm9yIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJTdGF0dXMgaXMgdGhlIHN0YXR1cyBvZiBXQU4gU3luYyIsInR5cGUiOiJzdHJpbmcifSwid2FuU3luY01hcHNTdGF0dXMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsicHJvcGVydGllcyI6eyJtZXNzYWdlIjp7ImRlc2NyaXB0aW9uIjoiTWVzc2FnZSBpcyB0aGUgZmllbGQgdG8gc2hvdyBkZXRhaWwgaW5mb3JtYXRpb24gb3IgZXJyb3IiLCJ0eXBlIjoic3RyaW5nIn0sInBoYXNlIjp7ImRlc2NyaXB0aW9uIjoiU3RhdHVzIGlzIHRoZSBzdGF0dXMgb2YgdGhlIHJlc291cmNlIFdBTiBzeW5jIiwidHlwZSI6InN0cmluZyJ9LCJwdWJsaXNoZXJJZCI6eyJkZXNjcmlwdGlvbiI6IlB1Ymxpc2hlcklkIGlzIHRoZSBJRCB1c2VkIGZvciBXQU4gcHVibGlzaGVyIElEIiwidHlwZSI6InN0cmluZyJ9LCJyZXNvdXJjZU5hbWUiOnsiZGVzY3JpcHRpb24iOiJSZXNvdXJjZU5hbWUgaXMgdGhlIG5hbWUgb2YgdGhlIE1hcCBDdXN0b20gUmVzb3VyY2UuIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJkZXNjcmlwdGlvbiI6IldhblN5bmNNYXBTdGF0dXMgaXMgdGhlIFdBTiBTeW5jIHN0YXR1cyBvZiB0aGUgTWFwcyBnaXZlbiBpbiB0aGUgc3BlYyBkaXJlY3RseSBvciBpbmRpcmVjdGx5IGJ5IEhhemVsY2FzdCByZXNvdXJjZS4iLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJzcGVjIl0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOm51bGwsInN0b3JlZFZlcnNpb25zIjpudWxsfX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEzLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJjYWNoZXMuaGF6ZWxjYXN0LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiaGF6ZWxjYXN0LmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJDYWNoZSIsImxpc3RLaW5kIjoiQ2FjaGVMaXN0IiwicGx1cmFsIjoiY2FjaGVzIiwic2hvcnROYW1lcyI6WyJjaCJdLCJzaW5ndWxhciI6ImNhY2hlIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJhZGRpdGlvbmFsUHJpbnRlckNvbHVtbnMiOlt7ImRlc2NyaXB0aW9uIjoiQ3VycmVudCBzdGF0ZSBvZiB0aGUgQ2FjaGUgQ29uZmlnIiwianNvblBhdGgiOiIuc3RhdHVzLnN0YXRlIiwibmFtZSI6IlN0YXR1cyIsInR5cGUiOiJzdHJpbmcifSx7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgSGF6ZWxjYXN0IHJlc291cmNlIHRoYXQgdGhpcyByZXNvdXJjZSBpcyBjcmVhdGVkIGZvciIsImpzb25QYXRoIjoiLnNwZWMuaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIiwibmFtZSI6IkhhemVsY2FzdC1SZXNvdXJjZSIsInByaW9yaXR5IjoxLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6Ik1lc3NhZ2UgZm9yIHRoZSBjdXJyZW50IENhY2hlIENvbmZpZyIsImpzb25QYXRoIjoiLnN0YXR1cy5tZXNzYWdlIiwibmFtZSI6Ik1lc3NhZ2UiLCJwcmlvcml0eSI6MSwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkNhY2hlIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSBjYWNoZXMgQVBJIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJDYWNoZVNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBDYWNoZSBJdCBjYW5ub3QgYmUgdXBkYXRlZCBhZnRlciB0aGUgQ2FjaGUgaXMgY3JlYXRlZCIsInByb3BlcnRpZXMiOnsiYXN5bmNCYWNrdXBDb3VudCI6eyJkZWZhdWx0IjowLCJkZXNjcmlwdGlvbiI6Ik51bWJlciBvZiBhc3luY2hyb25vdXMgYmFja3Vwcy4iLCJmb3JtYXQiOiJpbnQzMiIsIm1heGltdW0iOjYsIm1pbmltdW0iOjAsInR5cGUiOiJpbnRlZ2VyIn0sImJhY2t1cENvdW50Ijp7ImRlZmF1bHQiOjEsImRlc2NyaXB0aW9uIjoiTnVtYmVyIG9mIHN5bmNocm9ub3VzIGJhY2t1cHMuIiwiZm9ybWF0IjoiaW50MzIiLCJtYXhpbXVtIjo2LCJtaW5pbXVtIjowLCJ0eXBlIjoiaW50ZWdlciJ9LCJldmVudEpvdXJuYWwiOnsiZGVzY3JpcHRpb24iOiJFdmVudEpvdXJuYWwgc3BlY2lmaWVzIGV2ZW50IGpvdXJuYWwgY29uZmlndXJhdGlvbiBvZiB0aGUgQ2FjaGUiLCJwcm9wZXJ0aWVzIjp7ImNhcGFjaXR5Ijp7ImRlZmF1bHQiOjEwMDAwLCJkZXNjcmlwdGlvbiI6IkNhcGFjaXR5IHNldHMgdGhlIGNhcGFjaXR5IG9mIHRoZSByaW5nYnVmZmVyIHVuZGVybHlpbmcgdGhlIGV2ZW50IGpvdXJuYWwuIiwiZm9ybWF0IjoiaW50MzIiLCJ0eXBlIjoiaW50ZWdlciJ9LCJ0aW1lVG9MaXZlU2Vjb25kcyI6eyJkZWZhdWx0IjowLCJkZXNjcmlwdGlvbiI6IlRpbWVUb0xpdmVTZWNvbmRzIGluZGljYXRlcyBob3cgbG9uZyB0aGUgaXRlbXMgcmVtYWluIGluIHRoZSBldmVudCBqb3VybmFsIGJlZm9yZSB0aGV5IGFyZSBleHBpcmVkLiIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifX0sInR5cGUiOiJvYmplY3QifSwiaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIjp7ImRlc2NyaXB0aW9uIjoiSGF6ZWxjYXN0UmVzb3VyY2VOYW1lIGRlZmluZXMgdGhlIG5hbWUgb2YgdGhlIEhhemVsY2FzdCByZXNvdXJjZSB0aGF0IHRoaXMgcmVzb3VyY2UgaXMgY3JlYXRlZCBmb3IuIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn0sImluTWVtb3J5Rm9ybWF0Ijp7ImRlZmF1bHQiOiJCSU5BUlkiLCJkZXNjcmlwdGlvbiI6IkluTWVtb3J5Rm9ybWF0IHNwZWNpZmllcyBpbiB3aGljaCBmb3JtYXQgZGF0YSB3aWxsIGJlIHN0b3JlZCBpbiB5b3VyIGNhY2hlIiwiZW51bSI6WyJCSU5BUlkiLCJPQkpFQ1QiLCJOQVRJVkUiXSwidHlwZSI6InN0cmluZyJ9LCJrZXlUeXBlIjp7ImRlc2NyaXB0aW9uIjoiQ2xhc3MgbmFtZSBvZiB0aGUga2V5IHR5cGUiLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBkYXRhIHN0cnVjdHVyZSBjb25maWcgdG8gYmUgY3JlYXRlZC4gSWYgZW1wdHksIENSIG5hbWUgd2lsbCBiZSB1c2VkLiBJdCBjYW5ub3QgYmUgdXBkYXRlZCBhZnRlciB0aGUgY29uZmlnIGlzIGNyZWF0ZWQgc3VjY2Vzc2Z1bGx5LiIsInR5cGUiOiJzdHJpbmcifSwicGVyc2lzdGVuY2VFbmFibGVkIjp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6IldoZW4gZW5hYmxlZCwgY2FjaGUgZGF0YSB3aWxsIGJlIHBlcnNpc3RlZC4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJ2YWx1ZVR5cGUiOnsiZGVzY3JpcHRpb24iOiJDbGFzcyBuYW1lIG9mIHRoZSB2YWx1ZSB0eXBlIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIl0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiQ2FjaGVTdGF0dXMgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgQ2FjaGUiLCJwcm9wZXJ0aWVzIjp7Im1lbWJlclN0YXR1c2VzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7ImVudW0iOlsiU3VjY2VzcyIsIkZhaWxlZCIsIlBlbmRpbmciLCJQZXJzaXN0aW5nIiwiVGVybWluYXRpbmciXSwidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6IkhvbGRzIHN0YXR1cyBvZiBkYXRhIHN0cnVjdHVyZSBmb3IgZWFjaCBIYXplbGNhc3QgbWVtYmVyIiwidHlwZSI6Im9iamVjdCJ9LCJtZXNzYWdlIjp7ImRlc2NyaXB0aW9uIjoiTWVzc2FnZSBleHBsYWluaW5nIHRoZSBjdXJyZW50IHN0YXRlIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0ZSI6eyJkZXNjcmlwdGlvbiI6IlN0YXRlIG9mIHRoZSBkYXRhIHN0cnVjdHVyZSIsImVudW0iOlsiU3VjY2VzcyIsIkZhaWxlZCIsIlBlbmRpbmciLCJQZXJzaXN0aW5nIiwiVGVybWluYXRpbmciXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsic3BlYyJdLCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfSwic3RhdHVzIjp7ImFjY2VwdGVkTmFtZXMiOnsia2luZCI6IiIsInBsdXJhbCI6IiJ9LCJjb25kaXRpb25zIjpudWxsLCJzdG9yZWRWZXJzaW9ucyI6bnVsbH19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEzLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJjcm9uaG90YmFja3Vwcy5oYXplbGNhc3QuY29tIn0sInNwZWMiOnsiZ3JvdXAiOiJoYXplbGNhc3QuY29tIiwibmFtZXMiOnsia2luZCI6IkNyb25Ib3RCYWNrdXAiLCJsaXN0S2luZCI6IkNyb25Ib3RCYWNrdXBMaXN0IiwicGx1cmFsIjoiY3JvbmhvdGJhY2t1cHMiLCJzaG9ydE5hbWVzIjpbImNoYiJdLCJzaW5ndWxhciI6ImNyb25ob3RiYWNrdXAifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3siZGVzY3JpcHRpb24iOiJTdXNwZW50aW9uIHN0YXR1cyBvZiB0aGUgQ3JvbkhvdEJhY2t1cCIsImpzb25QYXRoIjoiLnNwZWMuc3VzcGVuZCIsIm5hbWUiOiJTVVNQRU5ERUQiLCJ0eXBlIjoiYm9vbGVhbiJ9LHsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBIYXplbGNhc3QgcmVzb3VyY2UgdGhhdCB0aGlzIHJlc291cmNlIGlzIGNyZWF0ZWQgZm9yIiwianNvblBhdGgiOiIuc3BlYy5ob3RCYWNrdXBUZW1wbGF0ZS5zcGVjLmhhemVsY2FzdFJlc291cmNlTmFtZSIsIm5hbWUiOiJIYXplbGNhc3QtUmVzb3VyY2UiLCJwcmlvcml0eSI6MSwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkNyb25Ib3RCYWNrdXAgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIGNyb25ob3RiYWNrdXBzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiQ3JvbkhvdEJhY2t1cFNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBDcm9uSG90QmFja3VwIiwicHJvcGVydGllcyI6eyJmYWlsZWRIb3RCYWNrdXBzSGlzdG9yeUxpbWl0Ijp7ImRlZmF1bHQiOjMsImRlc2NyaXB0aW9uIjoiVGhlIG51bWJlciBvZiBmYWlsZWQgZmluaXNoZWQgaG90IGJhY2t1cHMgdG8gcmV0YWluLiIsImZvcm1hdCI6ImludDMyIiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifSwiaG90QmFja3VwVGVtcGxhdGUiOnsiZGVzY3JpcHRpb24iOiJTcGVjaWZpZXMgdGhlIGhvdCBiYWNrdXAgdGhhdCB3aWxsIGJlIGNyZWF0ZWQgd2hlbiBleGVjdXRpbmcgYSBDcm9uSG90QmFja3VwLiIsInByb3BlcnRpZXMiOnsibWV0YWRhdGEiOnsiZGVzY3JpcHRpb24iOiJTdGFuZGFyZCBvYmplY3QncyBtZXRhZGF0YSBvZiB0aGUgaG90IGJhY2t1cHMgY3JlYXRlZCBmcm9tIHRoaXMgdGVtcGxhdGUuIiwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJTcGVjaWZpY2F0aW9uIG9mIHRoZSBkZXNpcmVkIGJlaGF2aW9yIG9mIHRoZSBob3QgYmFja3VwLiIsInByb3BlcnRpZXMiOnsiYnVja2V0VVJJIjp7ImRlc2NyaXB0aW9uIjoiVVJMIG9mIHRoZSBidWNrZXQgdG8gZG93bmxvYWQgSG90QmFja3VwIGZvbGRlcnMuIEFXUyBTMywgR0NQIEJ1Y2tldCBhbmQgQXp1cmUgQmxvYiBzdG9yYWdlIGJ1Y2tldHMgYXJlIHN1cHBvcnRlZC4gRXhhbXBsZSBidWNrZXQgVVJJczogLSBBV1MgUzMgICAgIC1cdTAwM2UgczM6Ly9idWNrZXQtbmFtZS9wYXRoL3RvL2ZvbGRlciAtIEdDUCBCdWNrZXQgLVx1MDAzZSBnczovL2J1Y2tldC1uYW1lL3BhdGgvdG8vZm9sZGVyIC0gQXp1cmUgQmxvYiAtXHUwMDNlIGF6YmxvYjovL2J1Y2tldC1uYW1lL3BhdGgvdG8vZm9sZGVyIiwidHlwZSI6InN0cmluZyJ9LCJoYXplbGNhc3RSZXNvdXJjZU5hbWUiOnsiZGVzY3JpcHRpb24iOiJIYXplbGNhc3RSZXNvdXJjZU5hbWUgZGVmaW5lcyB0aGUgbmFtZSBvZiB0aGUgSGF6ZWxjYXN0IHJlc291cmNlIiwidHlwZSI6InN0cmluZyJ9LCJzZWNyZXQiOnsiZGVzY3JpcHRpb24iOiJzZWNyZXQgaXMgYSBkZXByZWNhdGVkIGFsaWFzIGZvciBzZWNyZXROYW1lLiIsInR5cGUiOiJzdHJpbmcifSwic2VjcmV0TmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIHNlY3JldCB3aXRoIGNyZWRlbnRpYWxzIGZvciBjbG91ZCBwcm92aWRlcnMuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIl0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInNwZWMiXSwidHlwZSI6Im9iamVjdCJ9LCJzY2hlZHVsZSI6eyJkZXNjcmlwdGlvbiI6IlNjaGVkdWxlIGNvbnRhaW5zIGEgY3JvbnRhYi1saWtlIGV4cHJlc3Npb24gdGhhdCBkZWZpbmVzIHRoZSBzY2hlZHVsZSBpbiB3aGljaCBIb3RCYWNrdXAgd2lsbCBiZSBzdGFydGVkLiBJZiB0aGUgU2NoZWR1bGUgaXMgZW1wdHkgdGhlIEhvdEJhY2t1cCB3aWxsIHN0YXJ0IG9ubHkgb25jZSB3aGVuIGFwcGxpZWQuIC0tLSBTZXZlcmFsIHByZS1kZWZpbmVkIHNjaGVkdWxlcyBpbiBwbGFjZSBvZiBhIGNyb24gZXhwcmVzc2lvbiBjYW4gYmUgdXNlZC4gRW50cnkgICAgICAgICAgICAgICAgICB8IERlc2NyaXB0aW9uICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IEVxdWl2YWxlbnQgVG8gLS0tLS0gICAgICAgICAgICAgICAgICB8IC0tLS0tLS0tLS0tICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IC0tLS0tLS0tLS0tLS0gQHllYXJseSAob3IgQGFubnVhbGx5KSB8IFJ1biBvbmNlIGEgeWVhciwgbWlkbmlnaHQsIEphbi4gMXN0ICAgICAgICB8IDAgMCAxIDEgKiBAbW9udGhseSAgICAgICAgICAgICAgIHwgUnVuIG9uY2UgYSBtb250aCwgbWlkbmlnaHQsIGZpcnN0IG9mIG1vbnRoIHwgMCAwIDEgKiAqIEB3ZWVrbHkgICAgICAgICAgICAgICAgfCBSdW4gb25jZSBhIHdlZWssIG1pZG5pZ2h0IGJldHdlZW4gU2F0L1N1biAgfCAwIDAgKiAqIDAgQGRhaWx5IChvciBAbWlkbmlnaHQpICB8IFJ1biBvbmNlIGEgZGF5LCBtaWRuaWdodCAgICAgICAgICAgICAgICAgICB8IDAgMCAqICogKiBAaG91cmx5ICAgICAgICAgICAgICAgIHwgUnVuIG9uY2UgYW4gaG91ciwgYmVnaW5uaW5nIG9mIGhvdXIgICAgICAgIHwgMCAqICogKiAqIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn0sInN1Y2Nlc3NmdWxIb3RCYWNrdXBzSGlzdG9yeUxpbWl0Ijp7ImRlZmF1bHQiOjUsImRlc2NyaXB0aW9uIjoiVGhlIG51bWJlciBvZiBzdWNjZXNzZnVsIGZpbmlzaGVkIGhvdCBiYWNrdXBzIHRvIHJldGFpbi4iLCJmb3JtYXQiOiJpbnQzMiIsIm1pbmltdW0iOjAsInR5cGUiOiJpbnRlZ2VyIn0sInN1c3BlbmQiOnsiZGVmYXVsdCI6ZmFsc2UsImRlc2NyaXB0aW9uIjoiV2hlbiB0cnVlLCBDcm9uSG90QmFja3VwIHdpbGwgc3RvcCBjcmVhdGluZyBIb3RCYWNrdXAgQ1JzIHVudGlsIGl0IGlzIGRpc2FibGVkIiwidHlwZSI6ImJvb2xlYW4ifX0sInJlcXVpcmVkIjpbImhvdEJhY2t1cFRlbXBsYXRlIiwic2NoZWR1bGUiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJDcm9uSG90QmFja3VwU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIENyb25Ib3RCYWNrdXAiLCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJzcGVjIl0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOm51bGwsInN0b3JlZFZlcnNpb25zIjpudWxsfX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEzLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJoYXplbGNhc3RlbmRwb2ludHMuaGF6ZWxjYXN0LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiaGF6ZWxjYXN0LmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJIYXplbGNhc3RFbmRwb2ludCIsImxpc3RLaW5kIjoiSGF6ZWxjYXN0RW5kcG9pbnRMaXN0IiwicGx1cmFsIjoiaGF6ZWxjYXN0ZW5kcG9pbnRzIiwic2hvcnROYW1lcyI6WyJoemVwIl0sInNpbmd1bGFyIjoiaGF6ZWxjYXN0ZW5kcG9pbnQifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3siZGVzY3JpcHRpb24iOiJUeXBlIG9mIHRoZSBIYXplbGNhc3RFbmRwb2ludCIsImpzb25QYXRoIjoiLnNwZWMudHlwZSIsIm5hbWUiOiJUeXBlIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJBZGRyZXNzIG9mIHRoZSBIYXplbGNhc3RFbmRwb2ludCIsImpzb25QYXRoIjoiLnN0YXR1cy5hZGRyZXNzIiwibmFtZSI6IkFkZHJlc3MiLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIEhhemVsY2FzdCByZXNvdXJjZSB0aGF0IHRoaXMgcmVzb3VyY2UgaXMgY3JlYXRlZCBmb3IiLCJqc29uUGF0aCI6Ii5zcGVjLmhhemVsY2FzdFJlc291cmNlTmFtZSIsIm5hbWUiOiJIYXplbGNhc3QtUmVzb3VyY2UiLCJwcmlvcml0eSI6MSwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJNZXNzYWdlIGZvciB0aGUgY3VycmVudCBIYXplbGNhc3RFbmRwb2ludCIsImpzb25QYXRoIjoiLnN0YXR1cy5tZXNzYWdlIiwibmFtZSI6Ik1lc3NhZ2UiLCJwcmlvcml0eSI6MSwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkhhemVsY2FzdEVuZHBvaW50IGlzIHRoZSBTY2hlbWEgZm9yIHRoZSBoYXplbGNhc3RlbmRwb2ludHMgQVBJIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJIYXplbGNhc3RFbmRwb2ludFNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBIYXplbGNhc3RFbmRwb2ludCIsInByb3BlcnRpZXMiOnsiaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIjp7ImRlc2NyaXB0aW9uIjoiSGF6ZWxjYXN0UmVzb3VyY2VOYW1lIGRlZmluZXMgdGhlIG5hbWUgb2YgdGhlIEhhemVsY2FzdCByZXNvdXJjZSB0aGF0IHRoaXMgcmVzb3VyY2UgaXMgY3JlYXRlZCBmb3IuIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn0sInBvcnQiOnsiZGVzY3JpcHRpb24iOiJQb3J0IG9mIHRoZSBlbmRwb2ludC4iLCJmb3JtYXQiOiJpbnQzMiIsInR5cGUiOiJpbnRlZ2VyIn0sInR5cGUiOnsiZGVzY3JpcHRpb24iOiJUeXBlIGRlZmluZXMgdGhlIGVuZHBvaW50IGNvbm5lY3Rpb24uIEl0IGlzIHVzZWQgdG8gaWRlbnRpZnkgdGhlIHRhcmdldCBvZiB0aGUgZW5kcG9pbnQuIiwiZW51bSI6WyJEaXNjb3ZlcnkiLCJNZW1iZXIiLCJXQU4iXSwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIiwicG9ydCIsInR5cGUiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJIYXplbGNhc3RFbmRwb2ludFN0YXR1cyBkZWZpbmVzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBIYXplbGNhc3RFbmRwb2ludCIsInByb3BlcnRpZXMiOnsiYWRkcmVzcyI6eyJkZXNjcmlwdGlvbiI6IkFkZHJlc3MgaXMgdGhlIGV4dGVybmFsIGFkZHJlc3Mgb2YgdGhlIGVuZHBvaW50LiBJdCBpcyB0YWtlbiBmcm9tIHRoZSBjb3JyZXNwb25kaW5nIHNlcnZpY2UuIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6bnVsbCwic3RvcmVkVmVyc2lvbnMiOm51bGx9fQ==
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEzLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJob3RiYWNrdXBzLmhhemVsY2FzdC5jb20ifSwic3BlYyI6eyJncm91cCI6ImhhemVsY2FzdC5jb20iLCJuYW1lcyI6eyJraW5kIjoiSG90QmFja3VwIiwibGlzdEtpbmQiOiJIb3RCYWNrdXBMaXN0IiwicGx1cmFsIjoiaG90YmFja3VwcyIsInNob3J0TmFtZXMiOlsiaGIiXSwic2luZ3VsYXIiOiJob3RiYWNrdXAifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3siZGVzY3JpcHRpb24iOiJDdXJyZW50IHN0YXRlIG9mIHRoZSBIb3RCYWNrdXAgcHJvY2VzcyIsImpzb25QYXRoIjoiLnN0YXR1cy5zdGF0ZSIsIm5hbWUiOiJTdGF0dXMiLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIEhhemVsY2FzdCByZXNvdXJjZSB0aGF0IHRoaXMgcmVzb3VyY2UgaXMgY3JlYXRlZCBmb3IiLCJqc29uUGF0aCI6Ii5zcGVjLmhhemVsY2FzdFJlc291cmNlTmFtZSIsIm5hbWUiOiJIYXplbGNhc3QtUmVzb3VyY2UiLCJwcmlvcml0eSI6MSwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJNZXNzYWdlIGZvciB0aGUgY3VycmVudCBIb3RCYWNrdXAgQ29uZmlnIiwianNvblBhdGgiOiIuc3RhdHVzLm1lc3NhZ2UiLCJuYW1lIjoiTWVzc2FnZSIsInByaW9yaXR5IjoxLCJ0eXBlIjoic3RyaW5nIn1dLCJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiSG90QmFja3VwIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSBob3QgYmFja3VwIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiSG90QmFja3VwU3BlYyBkZWZpbmVzIHRoZSBTcGVjIG9mIEhvdEJhY2t1cCIsInByb3BlcnRpZXMiOnsiYnVja2V0VVJJIjp7ImRlc2NyaXB0aW9uIjoiVVJMIG9mIHRoZSBidWNrZXQgdG8gZG93bmxvYWQgSG90QmFja3VwIGZvbGRlcnMuIEFXUyBTMywgR0NQIEJ1Y2tldCBhbmQgQXp1cmUgQmxvYiBzdG9yYWdlIGJ1Y2tldHMgYXJlIHN1cHBvcnRlZC4gRXhhbXBsZSBidWNrZXQgVVJJczogLSBBV1MgUzMgICAgIC1cdTAwM2UgczM6Ly9idWNrZXQtbmFtZS9wYXRoL3RvL2ZvbGRlciAtIEdDUCBCdWNrZXQgLVx1MDAzZSBnczovL2J1Y2tldC1uYW1lL3BhdGgvdG8vZm9sZGVyIC0gQXp1cmUgQmxvYiAtXHUwMDNlIGF6YmxvYjovL2J1Y2tldC1uYW1lL3BhdGgvdG8vZm9sZGVyIiwidHlwZSI6InN0cmluZyJ9LCJoYXplbGNhc3RSZXNvdXJjZU5hbWUiOnsiZGVzY3JpcHRpb24iOiJIYXplbGNhc3RSZXNvdXJjZU5hbWUgZGVmaW5lcyB0aGUgbmFtZSBvZiB0aGUgSGF6ZWxjYXN0IHJlc291cmNlIiwidHlwZSI6InN0cmluZyJ9LCJzZWNyZXQiOnsiZGVzY3JpcHRpb24iOiJzZWNyZXQgaXMgYSBkZXByZWNhdGVkIGFsaWFzIGZvciBzZWNyZXROYW1lLiIsInR5cGUiOiJzdHJpbmcifSwic2VjcmV0TmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIHNlY3JldCB3aXRoIGNyZWRlbnRpYWxzIGZvciBjbG91ZCBwcm92aWRlcnMuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIl0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiSG90QmFja3VwU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIEhvdEJhY2t1cCIsInByb3BlcnRpZXMiOnsiYmFja3VwVVVJRHMiOnsiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifSwibWVzc2FnZSI6eyJ0eXBlIjoic3RyaW5nIn0sInN0YXRlIjp7ImVudW0iOlsiVW5rbm93biIsIlBlbmRpbmciLCJOb3RTdGFydGVkIiwiSW5Qcm9ncmVzcyIsIkZhaWx1cmUiLCJTdWNjZXNzIl0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInNwZWMiXSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6bnVsbCwic3RvcmVkVmVyc2lvbnMiOm51bGx9fQ==
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEzLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJqZXRqb2JzLmhhemVsY2FzdC5jb20ifSwic3BlYyI6eyJncm91cCI6ImhhemVsY2FzdC5jb20iLCJuYW1lcyI6eyJraW5kIjoiSmV0Sm9iIiwibGlzdEtpbmQiOiJKZXRKb2JMaXN0IiwicGx1cmFsIjoiamV0am9icyIsInNob3J0TmFtZXMiOlsiamoiXSwic2luZ3VsYXIiOiJqZXRqb2IifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3siZGVzY3JpcHRpb24iOiJDdXJyZW50IHN0YXRlIG9mIHRoZSBKZXRKb2IiLCJqc29uUGF0aCI6Ii5zdGF0dXMucGhhc2UiLCJuYW1lIjoiU3RhdHVzIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJJRCBvZiB0aGUgSmV0Sm9iIiwianNvblBhdGgiOiIuc3RhdHVzLmlkIiwibmFtZSI6IklkIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBIYXplbGNhc3QgcmVzb3VyY2UgdGhhdCB0aGlzIHJlc291cmNlIGlzIGNyZWF0ZWQgZm9yIiwianNvblBhdGgiOiIuc3BlYy5oYXplbGNhc3RSZXNvdXJjZU5hbWUiLCJuYW1lIjoiSGF6ZWxjYXN0LVJlc291cmNlIiwicHJpb3JpdHkiOjEsInR5cGUiOiJzdHJpbmcifSx7ImRlc2NyaXB0aW9uIjoiVGltZSB3aGVuIHRoZSBKZXRKb2Igd2FzIHN1Ym1pdHRlZCIsImpzb25QYXRoIjoiLnN0YXR1cy5zdWJtaXNzaW9uVGltZSIsIm5hbWUiOiJTdWJtaXNzaW9uVGltZSIsInR5cGUiOiJzdHJpbmcifSx7ImRlc2NyaXB0aW9uIjoiVGltZSB3aGVuIHRoZSBKZXRKb2Igd2FzIGNvbXBsZXRlZCIsImpzb25QYXRoIjoiLnN0YXR1cy5jb21wbGV0aW9uVGltZSIsIm5hbWUiOiJDb21wbGV0aW9uVGltZSIsInR5cGUiOiJzdHJpbmcifV0sIm5hbWUiOiJ2MWFscGhhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJKZXRKb2IgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIGpldGpvYnMgQVBJIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJKZXRKb2JTcGVjIGRlZmluZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgSmV0Sm9iIiwicHJvcGVydGllcyI6eyJidWNrZXRDb25maWciOnsiZGVzY3JpcHRpb24iOiJCdWNrZXQgY29uZmlnIGZyb20gd2hlcmUgdGhlIEpBUiBmaWxlcyB3aWxsIGJlIGRvd25sb2FkZWQuIiwicHJvcGVydGllcyI6eyJidWNrZXRVUkkiOnsiZGVzY3JpcHRpb24iOiJVUkwgb2YgdGhlIGJ1Y2tldCB0byBkb3dubG9hZCBIb3RCYWNrdXAgZm9sZGVycy4gQVdTIFMzLCBHQ1AgQnVja2V0IGFuZCBBenVyZSBCbG9iIHN0b3JhZ2UgYnVja2V0cyBhcmUgc3VwcG9ydGVkLiBFeGFtcGxlIGJ1Y2tldCBVUklzOiAtIEFXUyBTMyAgICAgLVx1MDAzZSBzMzovL2J1Y2tldC1uYW1lL3BhdGgvdG8vZm9sZGVyIC0gR0NQIEJ1Y2tldCAtXHUwMDNlIGdzOi8vYnVja2V0LW5hbWUvcGF0aC90by9mb2xkZXIgLSBBenVyZSBCbG9iIC1cdTAwM2UgYXpibG9iOi8vYnVja2V0LW5hbWUvcGF0aC90by9mb2xkZXIiLCJtaW5MZW5ndGgiOjYsInR5cGUiOiJzdHJpbmcifSwic2VjcmV0Ijp7ImRlc2NyaXB0aW9uIjoic2VjcmV0IGlzIGEgZGVwcmVjYXRlZCBhbGlhcyBmb3Igc2VjcmV0TmFtZS4iLCJ0eXBlIjoic3RyaW5nIn0sInNlY3JldE5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBzZWNyZXQgd2l0aCBjcmVkZW50aWFscyBmb3IgY2xvdWQgcHJvdmlkZXJzLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImJ1Y2tldFVSSSJdLCJ0eXBlIjoib2JqZWN0In0sImhhemVsY2FzdFJlc291cmNlTmFtZSI6eyJkZXNjcmlwdGlvbiI6IkhhemVsY2FzdFJlc291cmNlTmFtZSBkZWZpbmVzIHRoZSBuYW1lIG9mIHRoZSBIYXplbGNhc3QgcmVzb3VyY2UgdGhhdCB0aGlzIHJlc291cmNlIGlzIGNyZWF0ZWQgZm9yLiIsIm1pbkxlbmd0aCI6MSwidHlwZSI6InN0cmluZyJ9LCJpbml0aWFsU25hcHNob3RSZXNvdXJjZU5hbWUiOnsiZGVzY3JpcHRpb24iOiJJbml0aWFsU25hcHNob3RSZXNvdXJjZU5hbWUgc3BlY2lmeSB0aGUgbmFtZSBvZiB0aGUgSmV0Sm9iU25hcHNob3Qgb2JqZWN0IGZyb20gd2hpY2ggdGhlIEpldEpvYiBpcyBpbml0aWFsaXplZC4iLCJ0eXBlIjoic3RyaW5nIn0sImphck5hbWUiOnsiZGVzY3JpcHRpb24iOiJKYXJOYW1lIHNwZWNpZnkgdGhlIG5hbWUgb2YgdGhlIEphciB0byBydW4gdGhhdCBpcyBwcmVzZW50IG9uIHRoZSBtZW1iZXIuIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn0sIm1haW5DbGFzcyI6eyJkZXNjcmlwdGlvbiI6Ik1haW5DbGFzcyBpcyB0aGUgbmFtZSBvZiB0aGUgbWFpbiBjbGFzcyB0aGF0IHdpbGwgYmUgcnVuIG9uIHRoZSBzdWJtaXR0ZWQgam9iLiIsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIEpldEpvYiB0byBiZSBjcmVhdGVkLiBJZiBlbXB0eSwgQ1IgbmFtZSB3aWxsIGJlIHVzZWQuIEl0IGNhbm5vdCBiZSB1cGRhdGVkIGFmdGVyIHRoZSBjb25maWcgaXMgY3JlYXRlZCBzdWNjZXNzZnVsbHkuIiwidHlwZSI6InN0cmluZyJ9LCJyZW1vdGVVUkwiOnsiZGVzY3JpcHRpb24iOiJVUkwgZnJvbSB3aGVyZSB0aGUgZmlsZSB3aWxsIGJlIGRvd25sb2FkZWQuIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0ZSI6eyJkZWZhdWx0IjoiUnVubmluZyIsImRlc2NyaXB0aW9uIjoiU3RhdGUgaXMgdXNlZCB0byBtYW5hZ2UgdGhlIGpvYiBzdGF0ZS4iLCJlbnVtIjpbIlJ1bm5pbmciLCJTdXNwZW5kZWQiLCJDYW5jZWxlZCIsIlJlc3RhcnRlZCJdLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJoYXplbGNhc3RSZXNvdXJjZU5hbWUiLCJqYXJOYW1lIiwic3RhdGUiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJKZXRKb2JTdGF0dXMgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgSmV0Sm9iIiwicHJvcGVydGllcyI6eyJjb21wbGV0aW9uVGltZSI6eyJmb3JtYXQiOiJkYXRlLXRpbWUiLCJ0eXBlIjoic3RyaW5nIn0sImZhaWx1cmVUZXh0Ijp7InR5cGUiOiJzdHJpbmcifSwiaWQiOnsiZm9ybWF0IjoiaW50NjQiLCJ0eXBlIjoiaW50ZWdlciJ9LCJwaGFzZSI6eyJlbnVtIjpbIkZhaWxlZCIsIk5vdFJ1bm5pbmciLCJTdGFydGluZyIsIlJ1bm5pbmciLCJTdXNwZW5kZWQiLCJTdXNwZW5kZWRFeHBvcnRpbmdTbmFwc2hvdCIsIkNvbXBsZXRpbmciLCJFeGVjdXRpb25GYWlsZWQiLCJDb21wbGV0ZWQiXSwidHlwZSI6InN0cmluZyJ9LCJzdWJtaXNzaW9uVGltZSI6eyJmb3JtYXQiOiJkYXRlLXRpbWUiLCJ0eXBlIjoic3RyaW5nIn0sInN1c3BlbnNpb25DYXVzZSI6eyJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJpZCIsInBoYXNlIl0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOm51bGwsInN0b3JlZFZlcnNpb25zIjpudWxsfX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEzLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJqZXRqb2JzbmFwc2hvdHMuaGF6ZWxjYXN0LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiaGF6ZWxjYXN0LmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJKZXRKb2JTbmFwc2hvdCIsImxpc3RLaW5kIjoiSmV0Sm9iU25hcHNob3RMaXN0IiwicGx1cmFsIjoiamV0am9ic25hcHNob3RzIiwic2hvcnROYW1lcyI6WyJqanMiXSwic2luZ3VsYXIiOiJqZXRqb2JzbmFwc2hvdCJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJkZXNjcmlwdGlvbiI6IkN1cnJlbnQgc3RhdGUgb2YgdGhlIEpldEpvYlNuYXBzaG90IiwianNvblBhdGgiOiIuc3RhdHVzLnN0YXRlIiwibmFtZSI6IlN0YXRlIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJUaW1lIHdoZW4gdGhlIEpldEpvYlNuYXBzaG90IHdhcyBjcmVhdGVkLCBpZiBjcmVhdGVkIiwianNvblBhdGgiOiIuc3RhdHVzLmNyZWF0aW9uVGltZSIsIm5hbWUiOiJDcmVhdGlvblRpbWUiLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6Ik1lc3NhZ2UgZm9yIHRoZSBKZXRKb2JTbmFwc2hvdCIsImpzb25QYXRoIjoiLnN0YXR1cy5tZXNzYWdlIiwibmFtZSI6Ik1lc3NhZ2UiLCJwcmlvcml0eSI6MSwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkpldEpvYlNuYXBzaG90IGlzIHRoZSBTY2hlbWEgZm9yIHRoZSBqZXRqb2JzbmFwc2hvdHMgQVBJIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJKZXRKb2JTbmFwc2hvdFNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBKZXRKb2JTbmFwc2hvdCIsInByb3BlcnRpZXMiOnsiY2FuY2VsSm9iIjp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6IkNhbmNlbEpvYiBkZXRlcm1pbmVzIHdoZXRoZXIgdGhlIGpvYiBpcyBjYW5jZWxlZCBhZnRlciBleHBvcnRpbmcgc25hcHNob3QiLCJ0eXBlIjoiYm9vbGVhbiJ9LCJqZXRKb2JSZXNvdXJjZU5hbWUiOnsiZGVzY3JpcHRpb24iOiJKZXRKb2JSZXNvdXJjZU5hbWUgaXMgdGhlIG5hbWUgb2YgdGhlIEpldEpvYiBDUiB3aGVyZSB0aGUgU25hcHNob3QgaXMgZXhwb3J0ZWQgZnJvbSIsIm1pbkxlbmd0aCI6MSwidHlwZSI6InN0cmluZyJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgZXhwb3J0ZWQgc25hcHNob3QiLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJqZXRKb2JSZXNvdXJjZU5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVmYXVsdCI6eyJzdGF0ZSI6IldhaXRpbmcifSwiZGVzY3JpcHRpb24iOiJKZXRKb2JTbmFwc2hvdFN0YXR1cyBkZWZpbmVzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBKZXRKb2JTbmFwc2hvdCIsInByb3BlcnRpZXMiOnsiY3JlYXRpb25UaW1lIjp7ImZvcm1hdCI6ImRhdGUtdGltZSIsInR5cGUiOiJzdHJpbmcifSwibWVzc2FnZSI6eyJ0eXBlIjoic3RyaW5nIn0sInN0YXRlIjp7ImVudW0iOlsiV2FpdGluZyIsIkV4cG9ydGluZyIsIkV4cG9ydGVkIiwiRmFpbGVkIl0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInNwZWMiXSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6bnVsbCwic3RvcmVkVmVyc2lvbnMiOm51bGx9fQ==
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEzLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJtdWx0aW1hcHMuaGF6ZWxjYXN0LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiaGF6ZWxjYXN0LmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJNdWx0aU1hcCIsImxpc3RLaW5kIjoiTXVsdGlNYXBMaXN0IiwicGx1cmFsIjoibXVsdGltYXBzIiwic2hvcnROYW1lcyI6WyJtbWFwIl0sInNpbmd1bGFyIjoibXVsdGltYXAifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3siZGVzY3JpcHRpb24iOiJDdXJyZW50IHN0YXRlIG9mIHRoZSBNdWx0aU1hcCBDb25maWciLCJqc29uUGF0aCI6Ii5zdGF0dXMuc3RhdGUiLCJuYW1lIjoiU3RhdHVzIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBIYXplbGNhc3QgcmVzb3VyY2UgdGhhdCB0aGlzIHJlc291cmNlIGlzIGNyZWF0ZWQgZm9yIiwianNvblBhdGgiOiIuc3BlYy5oYXplbGNhc3RSZXNvdXJjZU5hbWUiLCJuYW1lIjoiSGF6ZWxjYXN0LVJlc291cmNlIiwicHJpb3JpdHkiOjEsInR5cGUiOiJzdHJpbmcifSx7ImRlc2NyaXB0aW9uIjoiTWVzc2FnZSBmb3IgdGhlIGN1cnJlbnQgTXVsdGlNYXAgQ29uZmlnIiwianNvblBhdGgiOiIuc3RhdHVzLm1lc3NhZ2UiLCJuYW1lIjoiTWVzc2FnZSIsInByaW9yaXR5IjoxLCJ0eXBlIjoic3RyaW5nIn1dLCJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiTXVsdGlNYXAgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIG11bHRpbWFwcyBBUEkiLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuIFNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZCBtYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy4gU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uIENhbm5vdCBiZSB1cGRhdGVkLiBJbiBDYW1lbENhc2UuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6Ik11bHRpTWFwU3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIE11bHRpTWFwIiwicHJvcGVydGllcyI6eyJhc3luY0JhY2t1cENvdW50Ijp7ImRlZmF1bHQiOjAsImRlc2NyaXB0aW9uIjoiTnVtYmVyIG9mIGFzeW5jaHJvbm91cyBiYWNrdXBzLiIsImZvcm1hdCI6ImludDMyIiwibWF4aW11bSI6NiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifSwiYmFja3VwQ291bnQiOnsiZGVmYXVsdCI6MSwiZGVzY3JpcHRpb24iOiJOdW1iZXIgb2Ygc3luY2hyb25vdXMgYmFja3Vwcy4iLCJmb3JtYXQiOiJpbnQzMiIsIm1heGltdW0iOjYsIm1pbmltdW0iOjAsInR5cGUiOiJpbnRlZ2VyIn0sImJpbmFyeSI6eyJkZWZhdWx0IjpmYWxzZSwiZGVzY3JpcHRpb24iOiJTcGVjaWZpZXMgaW4gd2hpY2ggZm9ybWF0IGRhdGEgd2lsbCBiZSBzdG9yZWQgaW4geW91ciBNdWx0aU1hcC4gZmFsc2U6IE9CSkVDVCB0cnVlOiBCSU5BUlkiLCJ0eXBlIjoiYm9vbGVhbiJ9LCJjb2xsZWN0aW9uVHlwZSI6eyJkZWZhdWx0IjoiU0VUIiwiZGVzY3JpcHRpb24iOiJUeXBlIG9mIHRoZSB2YWx1ZSBjb2xsZWN0aW9uIiwiZW51bSI6WyJTRVQiLCJMSVNUIl0sInR5cGUiOiJzdHJpbmcifSwiaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIjp7ImRlc2NyaXB0aW9uIjoiSGF6ZWxjYXN0UmVzb3VyY2VOYW1lIGRlZmluZXMgdGhlIG5hbWUgb2YgdGhlIEhhemVsY2FzdCByZXNvdXJjZSB0aGF0IHRoaXMgcmVzb3VyY2UgaXMgY3JlYXRlZCBmb3IuIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBkYXRhIHN0cnVjdHVyZSBjb25maWcgdG8gYmUgY3JlYXRlZC4gSWYgZW1wdHksIENSIG5hbWUgd2lsbCBiZSB1c2VkLiBJdCBjYW5ub3QgYmUgdXBkYXRlZCBhZnRlciB0aGUgY29uZmlnIGlzIGNyZWF0ZWQgc3VjY2Vzc2Z1bGx5LiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImhhemVsY2FzdFJlc291cmNlTmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6Ik11bHRpTWFwU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIE11bHRpTWFwIiwicHJvcGVydGllcyI6eyJtZW1iZXJTdGF0dXNlcyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJlbnVtIjpbIlN1Y2Nlc3MiLCJGYWlsZWQiLCJQZW5kaW5nIiwiUGVyc2lzdGluZyIsIlRlcm1pbmF0aW5nIl0sInR5cGUiOiJzdHJpbmcifSwiZGVzY3JpcHRpb24iOiJIb2xkcyBzdGF0dXMgb2YgZGF0YSBzdHJ1Y3R1cmUgZm9yIGVhY2ggSGF6ZWxjYXN0IG1lbWJlciIsInR5cGUiOiJvYmplY3QifSwibWVzc2FnZSI6eyJkZXNjcmlwdGlvbiI6Ik1lc3NhZ2UgZXhwbGFpbmluZyB0aGUgY3VycmVudCBzdGF0ZSIsInR5cGUiOiJzdHJpbmcifSwic3RhdGUiOnsiZGVzY3JpcHRpb24iOiJTdGF0ZSBvZiB0aGUgZGF0YSBzdHJ1Y3R1cmUiLCJlbnVtIjpbIlN1Y2Nlc3MiLCJGYWlsZWQiLCJQZW5kaW5nIiwiUGVyc2lzdGluZyIsIlRlcm1pbmF0aW5nIl0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInNwZWMiXSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6bnVsbCwic3RvcmVkVmVyc2lvbnMiOm51bGx9fQ==
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEzLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJxdWV1ZXMuaGF6ZWxjYXN0LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiaGF6ZWxjYXN0LmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJRdWV1ZSIsImxpc3RLaW5kIjoiUXVldWVMaXN0IiwicGx1cmFsIjoicXVldWVzIiwic2hvcnROYW1lcyI6WyJxIl0sInNpbmd1bGFyIjoicXVldWUifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3siZGVzY3JpcHRpb24iOiJDdXJyZW50IHN0YXRlIG9mIHRoZSBRdWV1ZSBDb25maWciLCJqc29uUGF0aCI6Ii5zdGF0dXMuc3RhdGUiLCJuYW1lIjoiU3RhdHVzIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBIYXplbGNhc3QgcmVzb3VyY2UgdGhhdCB0aGlzIHJlc291cmNlIGlzIGNyZWF0ZWQgZm9yIiwianNvblBhdGgiOiIuc3BlYy5oYXplbGNhc3RSZXNvdXJjZU5hbWUiLCJuYW1lIjoiSGF6ZWxjYXN0LVJlc291cmNlIiwicHJpb3JpdHkiOjEsInR5cGUiOiJzdHJpbmcifSx7ImRlc2NyaXB0aW9uIjoiTWVzc2FnZSBmb3IgdGhlIGN1cnJlbnQgUXVldWUgQ29uZmlnIiwianNvblBhdGgiOiIuc3RhdHVzLm1lc3NhZ2UiLCJuYW1lIjoiTWVzc2FnZSIsInByaW9yaXR5IjoxLCJ0eXBlIjoic3RyaW5nIn1dLCJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiUXVldWUgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIHF1ZXVlcyBBUEkiLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuIFNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZCBtYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy4gU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uIENhbm5vdCBiZSB1cGRhdGVkLiBJbiBDYW1lbENhc2UuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IlF1ZXVlU3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIFF1ZXVlIEl0IGNhbm5vdCBiZSB1cGRhdGVkIGFmdGVyIHRoZSBRdWV1ZSBpcyBjcmVhdGVkIiwicHJvcGVydGllcyI6eyJhc3luY0JhY2t1cENvdW50Ijp7ImRlZmF1bHQiOjAsImRlc2NyaXB0aW9uIjoiTnVtYmVyIG9mIGFzeW5jaHJvbm91cyBiYWNrdXBzLiIsImZvcm1hdCI6ImludDMyIiwibWF4aW11bSI6NiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifSwiYmFja3VwQ291bnQiOnsiZGVmYXVsdCI6MSwiZGVzY3JpcHRpb24iOiJOdW1iZXIgb2Ygc3luY2hyb25vdXMgYmFja3Vwcy4iLCJmb3JtYXQiOiJpbnQzMiIsIm1heGltdW0iOjYsIm1pbmltdW0iOjAsInR5cGUiOiJpbnRlZ2VyIn0sImVtcHR5UXVldWVUVExTZWNvbmRzIjp7ImRlZmF1bHQiOi0xLCJkZXNjcmlwdGlvbiI6IlRpbWUgaW4gc2Vjb25kcyBhZnRlciB3aGljaCB0aGUgUXVldWUgd2lsbCBiZSBkZXN0cm95ZWQgaWYgaXQgc3RheXMgZW1wdHkgb3IgdW51c2VkLiBJZiB0aGUgdmFsdWVzIGlzIG5vdCBwcm92aWRlZCB0aGUgUXVldWUgd2lsbCBuZXZlciBiZSBkZXN0cm95ZWQuIiwiZm9ybWF0IjoiaW50MzIiLCJ0eXBlIjoiaW50ZWdlciJ9LCJoYXplbGNhc3RSZXNvdXJjZU5hbWUiOnsiZGVzY3JpcHRpb24iOiJIYXplbGNhc3RSZXNvdXJjZU5hbWUgZGVmaW5lcyB0aGUgbmFtZSBvZiB0aGUgSGF6ZWxjYXN0IHJlc291cmNlIHRoYXQgdGhpcyByZXNvdXJjZSBpcyBjcmVhdGVkIGZvci4iLCJtaW5MZW5ndGgiOjEsInR5cGUiOiJzdHJpbmcifSwibWF4U2l6ZSI6eyJkZWZhdWx0IjowLCJkZXNjcmlwdGlvbiI6Ik1heCBzaXplIG9mIHRoZSBxdWV1ZS4iLCJmb3JtYXQiOiJpbnQzMiIsIm1pbmltdW0iOjAsInR5cGUiOiJpbnRlZ2VyIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBkYXRhIHN0cnVjdHVyZSBjb25maWcgdG8gYmUgY3JlYXRlZC4gSWYgZW1wdHksIENSIG5hbWUgd2lsbCBiZSB1c2VkLiBJdCBjYW5ub3QgYmUgdXBkYXRlZCBhZnRlciB0aGUgY29uZmlnIGlzIGNyZWF0ZWQgc3VjY2Vzc2Z1bGx5LiIsInR5cGUiOiJzdHJpbmcifSwicHJpb3JpdHlDb21wYXJhdG9yQ2xhc3NOYW1lIjp7ImRlc2NyaXB0aW9uIjoiVGhlIG5hbWUgb2YgdGhlIGNvbXBhcmF0b3IgY2xhc3MuIElmIHRoZSBjbGFzcyBuYW1lIGlzIHByb3ZpZGVkLCB0aGUgUXVldWUgYmVjb21lcyBQcmlvcml0eSBRdWV1ZS4gWW91IGNhbiBsZWFybiBtb3JlIGF0IGh0dHBzOi8vZG9jcy5oYXplbGNhc3QuY29tL2hhemVsY2FzdC9sYXRlc3QvZGF0YS1zdHJ1Y3R1cmVzL3ByaW9yaXR5LXF1ZXVlLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImhhemVsY2FzdFJlc291cmNlTmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IlF1ZXVlU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIFF1ZXVlIiwicHJvcGVydGllcyI6eyJtZW1iZXJTdGF0dXNlcyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJlbnVtIjpbIlN1Y2Nlc3MiLCJGYWlsZWQiLCJQZW5kaW5nIiwiUGVyc2lzdGluZyIsIlRlcm1pbmF0aW5nIl0sInR5cGUiOiJzdHJpbmcifSwiZGVzY3JpcHRpb24iOiJIb2xkcyBzdGF0dXMgb2YgZGF0YSBzdHJ1Y3R1cmUgZm9yIGVhY2ggSGF6ZWxjYXN0IG1lbWJlciIsInR5cGUiOiJvYmplY3QifSwibWVzc2FnZSI6eyJkZXNjcmlwdGlvbiI6Ik1lc3NhZ2UgZXhwbGFpbmluZyB0aGUgY3VycmVudCBzdGF0ZSIsInR5cGUiOiJzdHJpbmcifSwic3RhdGUiOnsiZGVzY3JpcHRpb24iOiJTdGF0ZSBvZiB0aGUgZGF0YSBzdHJ1Y3R1cmUiLCJlbnVtIjpbIlN1Y2Nlc3MiLCJGYWlsZWQiLCJQZW5kaW5nIiwiUGVyc2lzdGluZyIsIlRlcm1pbmF0aW5nIl0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInNwZWMiXSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6bnVsbCwic3RvcmVkVmVyc2lvbnMiOm51bGx9fQ==
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEzLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJyZXBsaWNhdGVkbWFwcy5oYXplbGNhc3QuY29tIn0sInNwZWMiOnsiZ3JvdXAiOiJoYXplbGNhc3QuY29tIiwibmFtZXMiOnsia2luZCI6IlJlcGxpY2F0ZWRNYXAiLCJsaXN0S2luZCI6IlJlcGxpY2F0ZWRNYXBMaXN0IiwicGx1cmFsIjoicmVwbGljYXRlZG1hcHMiLCJzaG9ydE5hbWVzIjpbInJtYXAiXSwic2luZ3VsYXIiOiJyZXBsaWNhdGVkbWFwIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJhZGRpdGlvbmFsUHJpbnRlckNvbHVtbnMiOlt7ImRlc2NyaXB0aW9uIjoiQ3VycmVudCBzdGF0ZSBvZiB0aGUgUmVwbGljYXRlZE1hcCBDb25maWciLCJqc29uUGF0aCI6Ii5zdGF0dXMuc3RhdGUiLCJuYW1lIjoiU3RhdHVzIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBIYXplbGNhc3QgcmVzb3VyY2UgdGhhdCB0aGlzIHJlc291cmNlIGlzIGNyZWF0ZWQgZm9yIiwianNvblBhdGgiOiIuc3BlYy5oYXplbGNhc3RSZXNvdXJjZU5hbWUiLCJuYW1lIjoiSGF6ZWxjYXN0LVJlc291cmNlIiwicHJpb3JpdHkiOjEsInR5cGUiOiJzdHJpbmcifSx7ImRlc2NyaXB0aW9uIjoiTWVzc2FnZSBmb3IgdGhlIGN1cnJlbnQgUmVwbGljYXRlZE1hcCBDb25maWciLCJqc29uUGF0aCI6Ii5zdGF0dXMubWVzc2FnZSIsIm5hbWUiOiJNZXNzYWdlIiwicHJpb3JpdHkiOjEsInR5cGUiOiJzdHJpbmcifV0sIm5hbWUiOiJ2MWFscGhhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJSZXBsaWNhdGVkTWFwIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSByZXBsaWNhdGVkbWFwcyBBUEkiLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuIFNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZCBtYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy4gU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uIENhbm5vdCBiZSB1cGRhdGVkLiBJbiBDYW1lbENhc2UuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IlJlcGxpY2F0ZWRNYXBTcGVjIGRlZmluZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgUmVwbGljYXRlZE1hcCIsInByb3BlcnRpZXMiOnsiYXN5bmNGaWxsdXAiOnsiZGVmYXVsdCI6dHJ1ZSwiZGVzY3JpcHRpb24iOiJBc3luY0ZpbGx1cCBzcGVjaWZpZXMgd2hldGhlciB0aGUgUmVwbGljYXRlZE1hcCBpcyBhdmFpbGFibGUgZm9yIHJlYWRzIGJlZm9yZSB0aGUgaW5pdGlhbCByZXBsaWNhdGlvbiBpcyBjb21wbGV0ZWQiLCJ0eXBlIjoiYm9vbGVhbiJ9LCJoYXplbGNhc3RSZXNvdXJjZU5hbWUiOnsiZGVzY3JpcHRpb24iOiJIYXplbGNhc3RSZXNvdXJjZU5hbWUgZGVmaW5lcyB0aGUgbmFtZSBvZiB0aGUgSGF6ZWxjYXN0IHJlc291cmNlLiIsIm1pbkxlbmd0aCI6MSwidHlwZSI6InN0cmluZyJ9LCJpbk1lbW9yeUZvcm1hdCI6eyJkZWZhdWx0IjoiT0JKRUNUIiwiZGVzY3JpcHRpb24iOiJJbk1lbW9yeUZvcm1hdCBzcGVjaWZpZXMgaW4gd2hpY2ggZm9ybWF0IGRhdGEgd2lsbCBiZSBzdG9yZWQgaW4gdGhlIFJlcGxpY2F0ZWRNYXAiLCJlbnVtIjpbIkJJTkFSWSIsIk9CSkVDVCJdLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBSZXBsaWNhdGVkTWFwIGNvbmZpZyB0byBiZSBjcmVhdGVkLiBJZiBlbXB0eSwgQ1IgbmFtZSB3aWxsIGJlIHVzZWQuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIl0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiUmVwbGljYXRlZE1hcFN0YXR1cyBkZWZpbmVzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBSZXBsaWNhdGVkTWFwIiwicHJvcGVydGllcyI6eyJtZW1iZXJTdGF0dXNlcyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJlbnVtIjpbIlN1Y2Nlc3MiLCJGYWlsZWQiLCJQZW5kaW5nIiwiUGVyc2lzdGluZyIsIlRlcm1pbmF0aW5nIl0sInR5cGUiOiJzdHJpbmcifSwiZGVzY3JpcHRpb24iOiJIb2xkcyBzdGF0dXMgb2YgZGF0YSBzdHJ1Y3R1cmUgZm9yIGVhY2ggSGF6ZWxjYXN0IG1lbWJlciIsInR5cGUiOiJvYmplY3QifSwibWVzc2FnZSI6eyJkZXNjcmlwdGlvbiI6Ik1lc3NhZ2UgZXhwbGFpbmluZyB0aGUgY3VycmVudCBzdGF0ZSIsInR5cGUiOiJzdHJpbmcifSwic3RhdGUiOnsiZGVzY3JpcHRpb24iOiJTdGF0ZSBvZiB0aGUgZGF0YSBzdHJ1Y3R1cmUiLCJlbnVtIjpbIlN1Y2Nlc3MiLCJGYWlsZWQiLCJQZW5kaW5nIiwiUGVyc2lzdGluZyIsIlRlcm1pbmF0aW5nIl0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInNwZWMiXSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6bnVsbCwic3RvcmVkVmVyc2lvbnMiOm51bGx9fQ==
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwLmt1YmVybmV0ZXMuaW8vY29tcG9uZW50Ijoid2ViaG9vayIsImFwcC5rdWJlcm5ldGVzLmlvL2NyZWF0ZWQtYnkiOiJoYXplbGNhc3QtcGxhdGZvcm0tb3BlcmF0b3IiLCJhcHAua3ViZXJuZXRlcy5pby9pbnN0YW5jZSI6IndlYmhvb2stc2VydmljZSIsImFwcC5rdWJlcm5ldGVzLmlvL21hbmFnZWQtYnkiOiJrdXN0b21pemUiLCJhcHAua3ViZXJuZXRlcy5pby9uYW1lIjoic2VydmljZSIsImFwcC5rdWJlcm5ldGVzLmlvL3BhcnQtb2YiOiJoYXplbGNhc3QtcGxhdGZvcm0tb3BlcmF0b3IifSwibmFtZSI6ImhhemVsY2FzdC1wbGF0Zm9ybS13ZWJob29rLXNlcnZpY2UifSwic3BlYyI6eyJwb3J0cyI6W3sicG9ydCI6NDQzLCJwcm90b2NvbCI6IlRDUCIsInRhcmdldFBvcnQiOjk0NDN9XSwic2VsZWN0b3IiOnsiY29udHJvbC1wbGFuZSI6ImNvbnRyb2xsZXItbWFuYWdlciJ9fSwic3RhdHVzIjp7ImxvYWRCYWxhbmNlciI6e319fQ==
relatedImages:
- image: docker.io/hazelcast/hazelcast-platform-operator@sha256:c47518440412e86d3cf195967212ac2ca39774ed2c3dfd780ce8cc07df33ea1a
  name: manager
- image: quay.io/community-operator-pipeline-prod/hazelcast-platform-operator@sha256:08860aaf068795bc46b0c9bbbbaab2dcd7a125af3d1fda7424794773e895d4ab
  name: ""
schema: olm.bundle
---
image: quay.io/community-operator-pipeline-prod/hazelcast-platform-operator@sha256:32873c188f7503687d73ee2d17f4addfd043d4f73a4e1e34511ee89bca5779dc
name: hazelcast-platform-operator.v5.12.0
package: hazelcast-platform-operator
properties:
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: Cache
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: CronHotBackup
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: Hazelcast
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: HazelcastEndpoint
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: HotBackup
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: JetJob
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: JetJobSnapshot
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: ManagementCenter
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: Map
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: MultiMap
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: Queue
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: ReplicatedMap
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: Topic
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: UserCodeNamespace
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: WanReplication
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: WanSync
    version: v1alpha1
- type: olm.package
  value:
    packageName: hazelcast-platform-operator
    version: 5.12.0
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEzLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJ0b3BpY3MuaGF6ZWxjYXN0LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiaGF6ZWxjYXN0LmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJUb3BpYyIsImxpc3RLaW5kIjoiVG9waWNMaXN0IiwicGx1cmFsIjoidG9waWNzIiwic2luZ3VsYXIiOiJ0b3BpYyJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJkZXNjcmlwdGlvbiI6IkN1cnJlbnQgc3RhdGUgb2YgdGhlIFRvcGljIENvbmZpZyIsImpzb25QYXRoIjoiLnN0YXR1cy5zdGF0ZSIsIm5hbWUiOiJTdGF0dXMiLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIEhhemVsY2FzdCByZXNvdXJjZSB0aGF0IHRoaXMgcmVzb3VyY2UgaXMgY3JlYXRlZCBmb3IiLCJqc29uUGF0aCI6Ii5zcGVjLmhhemVsY2FzdFJlc291cmNlTmFtZSIsIm5hbWUiOiJIYXplbGNhc3QtUmVzb3VyY2UiLCJwcmlvcml0eSI6MSwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJNZXNzYWdlIGZvciB0aGUgY3VycmVudCBUb3BpYyBDb25maWciLCJqc29uUGF0aCI6Ii5zdGF0dXMubWVzc2FnZSIsIm5hbWUiOiJNZXNzYWdlIiwicHJpb3JpdHkiOjEsInR5cGUiOiJzdHJpbmcifV0sIm5hbWUiOiJ2MWFscGhhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJUb3BpYyBpcyB0aGUgU2NoZW1hIGZvciB0aGUgdG9waWNzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiVG9waWNTcGVjIGRlZmluZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgVG9waWMiLCJwcm9wZXJ0aWVzIjp7Imdsb2JhbE9yZGVyaW5nRW5hYmxlZCI6eyJkZWZhdWx0IjpmYWxzZSwiZGVzY3JpcHRpb24iOiJnbG9iYWxPcmRlcmluZ0VuYWJsZWQgYWxsb3dzIGFsbCBub2RlcyBsaXN0ZW5pbmcgdG8gdGhlIHNhbWUgdG9waWMgZ2V0IHRoZWlyIG1lc3NhZ2VzIGluIHRoZSBzYW1lIG9yZGVyIHRoZSBzYW1lIG9yZGVyIiwidHlwZSI6ImJvb2xlYW4ifSwiaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIjp7ImRlc2NyaXB0aW9uIjoiSGF6ZWxjYXN0UmVzb3VyY2VOYW1lIGRlZmluZXMgdGhlIG5hbWUgb2YgdGhlIEhhemVsY2FzdCByZXNvdXJjZSBmb3Igd2hpY2ggdG9waWMgY29uZmlnIHdpbGwgYmUgY3JlYXRlZCIsIm1pbkxlbmd0aCI6MSwidHlwZSI6InN0cmluZyJ9LCJtdWx0aVRocmVhZGluZ0VuYWJsZWQiOnsiZGVmYXVsdCI6ZmFsc2UsImRlc2NyaXB0aW9uIjoibXVsdGlUaHJlYWRpbmdFbmFibGVkIGVuYWJsZXMgbXVsdGktdGhyZWFkZWQgcHJvY2Vzc2luZyBvZiBpbmNvbWluZyBtZXNzYWdlcyBhIHNpbmdsZSB0aHJlYWQgd2lsbCBoYW5kbGUgYWxsIHRvcGljIG1lc3NhZ2VzIiwidHlwZSI6ImJvb2xlYW4ifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIHRvcGljIGNvbmZpZyB0byBiZSBjcmVhdGVkLiBJZiBlbXB0eSwgQ1IgbmFtZSB3aWxsIGJlIHVzZWQuIiwidHlwZSI6InN0cmluZyJ9LCJ1c2VyQ29kZU5hbWVzcGFjZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIFVzZXIgQ29kZSBOYW1lc3BhY2UgYXBwbGllZCB0byB0aGlzIGluc3RhbmNlIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJoYXplbGNhc3RSZXNvdXJjZU5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJUb3BpY1N0YXR1cyBkZWZpbmVzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBUb3BpYyIsInByb3BlcnRpZXMiOnsibWVtYmVyU3RhdHVzZXMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsiZW51bSI6WyJTdWNjZXNzIiwiRmFpbGVkIiwiUGVuZGluZyIsIlBlcnNpc3RpbmciLCJUZXJtaW5hdGluZyJdLCJ0eXBlIjoic3RyaW5nIn0sImRlc2NyaXB0aW9uIjoiSG9sZHMgc3RhdHVzIG9mIGRhdGEgc3RydWN0dXJlIGZvciBlYWNoIEhhemVsY2FzdCBtZW1iZXIiLCJ0eXBlIjoib2JqZWN0In0sIm1lc3NhZ2UiOnsiZGVzY3JpcHRpb24iOiJNZXNzYWdlIGV4cGxhaW5pbmcgdGhlIGN1cnJlbnQgc3RhdGUiLCJ0eXBlIjoic3RyaW5nIn0sInN0YXRlIjp7ImRlc2NyaXB0aW9uIjoiU3RhdGUgb2YgdGhlIGRhdGEgc3RydWN0dXJlIiwiZW51bSI6WyJTdWNjZXNzIiwiRmFpbGVkIiwiUGVuZGluZyIsIlBlcnNpc3RpbmciLCJUZXJtaW5hdGluZyJdLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJzcGVjIl0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOm51bGwsInN0b3JlZFZlcnNpb25zIjpudWxsfX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEzLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJ1c2VyY29kZW5hbWVzcGFjZXMuaGF6ZWxjYXN0LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiaGF6ZWxjYXN0LmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJVc2VyQ29kZU5hbWVzcGFjZSIsImxpc3RLaW5kIjoiVXNlckNvZGVOYW1lc3BhY2VMaXN0IiwicGx1cmFsIjoidXNlcmNvZGVuYW1lc3BhY2VzIiwic2hvcnROYW1lcyI6WyJ1Y24iXSwic2luZ3VsYXIiOiJ1c2VyY29kZW5hbWVzcGFjZSJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJkZXNjcmlwdGlvbiI6IlN0YXR1cyBvZiB0aGUgVXNlciBDb2RlIE5hbWVzcGFjZSIsImpzb25QYXRoIjoiLnN0YXR1cy5zdGF0ZSIsIm5hbWUiOiJTdGF0dXMiLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6Ik1lc3NhZ2UgZm9yIHRoZSBjdXJyZW50IFVzZXJDb2RlTmFtZXNwYWNlIiwianNvblBhdGgiOiIuc3RhdHVzLm1lc3NhZ2UiLCJuYW1lIjoiTWVzc2FnZSIsInByaW9yaXR5IjoxLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIEhhemVsY2FzdCByZXNvdXJjZSB0aGF0IHRoaXMgcmVzb3VyY2UgaXMgY3JlYXRlZCBmb3IiLCJqc29uUGF0aCI6Ii5zcGVjLmhhemVsY2FzdFJlc291cmNlTmFtZSIsIm5hbWUiOiJIYXplbGNhc3QtUmVzb3VyY2UiLCJwcmlvcml0eSI6MSwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IlVzZXJDb2RlTmFtZXNwYWNlIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSB1c2VyY29kZW5hbWVzcGFjZXMgQVBJIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJVc2VyQ29kZU5hbWVzcGFjZVNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBVc2VyQ29kZU5hbWVzcGFjZSIsInByb3BlcnRpZXMiOnsiYnVja2V0Q29uZmlnIjp7ImRlc2NyaXB0aW9uIjoiQnVja2V0IGNvbmZpZyBmcm9tIHdoZXJlIHRoZSBKQVIgZmlsZXMgd2lsbCBiZSBkb3dubG9hZGVkLiIsInByb3BlcnRpZXMiOnsiYnVja2V0VVJJIjp7ImRlc2NyaXB0aW9uIjoiVVJMIG9mIHRoZSBidWNrZXQgdG8gZG93bmxvYWQgSG90QmFja3VwIGZvbGRlcnMuIEFXUyBTMywgR0NQIEJ1Y2tldCBhbmQgQXp1cmUgQmxvYiBzdG9yYWdlIGJ1Y2tldHMgYXJlIHN1cHBvcnRlZC4gRXhhbXBsZSBidWNrZXQgVVJJczogLSBBV1MgUzMgICAgIC1cdTAwM2UgczM6Ly9idWNrZXQtbmFtZS9wYXRoL3RvL2ZvbGRlciAtIEdDUCBCdWNrZXQgLVx1MDAzZSBnczovL2J1Y2tldC1uYW1lL3BhdGgvdG8vZm9sZGVyIC0gQXp1cmUgQmxvYiAtXHUwMDNlIGF6YmxvYjovL2J1Y2tldC1uYW1lL3BhdGgvdG8vZm9sZGVyIiwibWluTGVuZ3RoIjo2LCJ0eXBlIjoic3RyaW5nIn0sInNlY3JldCI6eyJkZXNjcmlwdGlvbiI6InNlY3JldCBpcyBhIGRlcHJlY2F0ZWQgYWxpYXMgZm9yIHNlY3JldE5hbWUuIiwidHlwZSI6InN0cmluZyJ9LCJzZWNyZXROYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgc2VjcmV0IHdpdGggY3JlZGVudGlhbHMgZm9yIGNsb3VkIHByb3ZpZGVycy4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJidWNrZXRVUkkiXSwidHlwZSI6Im9iamVjdCJ9LCJoYXplbGNhc3RSZXNvdXJjZU5hbWUiOnsiZGVzY3JpcHRpb24iOiJIYXplbGNhc3RSZXNvdXJjZU5hbWUgZGVmaW5lcyB0aGUgbmFtZSBvZiB0aGUgSGF6ZWxjYXN0IHJlc291cmNlIHRoYXQgdGhpcyByZXNvdXJjZSBpcyBjcmVhdGVkIGZvci4iLCJtaW5MZW5ndGgiOjEsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImhhemVsY2FzdFJlc291cmNlTmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IlVzZXJDb2RlTmFtZXNwYWNlU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIFVzZXJDb2RlTmFtZXNwYWNlIiwicHJvcGVydGllcyI6eyJtZXNzYWdlIjp7InR5cGUiOiJzdHJpbmcifSwic3RhdGUiOnsiZW51bSI6WyJVbmtub3duIiwiUGVuZGluZyIsIk5vdFN0YXJ0ZWQiLCJJblByb2dyZXNzIiwiRmFpbHVyZSIsIlN1Y2Nlc3MiXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6bnVsbCwic3RvcmVkVmVyc2lvbnMiOm51bGx9fQ==
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEzLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJ3YW5yZXBsaWNhdGlvbnMuaGF6ZWxjYXN0LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiaGF6ZWxjYXN0LmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJXYW5SZXBsaWNhdGlvbiIsImxpc3RLaW5kIjoiV2FuUmVwbGljYXRpb25MaXN0IiwicGx1cmFsIjoid2FucmVwbGljYXRpb25zIiwic2hvcnROYW1lcyI6WyJ3ciJdLCJzaW5ndWxhciI6IndhbnJlcGxpY2F0aW9uIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJhZGRpdGlvbmFsUHJpbnRlckNvbHVtbnMiOlt7ImRlc2NyaXB0aW9uIjoiQ3VycmVudCBzdGF0ZSBvZiB0aGUgSGF6ZWxjYXN0IFdBTiBSZXBsaWNhdGlvbiIsImpzb25QYXRoIjoiLnN0YXR1cy5zdGF0dXMiLCJuYW1lIjoiU3RhdHVzIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJNZXNzYWdlIGZvciB0aGUgY3VycmVudCBXYW5SZXBsaWNhdGlvbiBDb25maWciLCJqc29uUGF0aCI6Ii5zdGF0dXMubWVzc2FnZSIsIm5hbWUiOiJNZXNzYWdlIiwicHJpb3JpdHkiOjEsInR5cGUiOiJzdHJpbmcifV0sIm5hbWUiOiJ2MWFscGhhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJXYW5SZXBsaWNhdGlvbiBpcyB0aGUgU2NoZW1hIGZvciB0aGUgd2FucmVwbGljYXRpb25zIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiV2FuUmVwbGljYXRpb25TcGVjIGRlZmluZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgV2FuUmVwbGljYXRpb24iLCJwcm9wZXJ0aWVzIjp7ImFja25vd2xlZGdlbWVudCI6eyJkZWZhdWx0Ijp7InRpbWVvdXQiOjYwMDAwLCJ0eXBlIjoiQUNLX09OX09QRVJBVElPTl9DT01QTEVURSJ9LCJkZXNjcmlwdGlvbiI6IkFja25vd2xlZGdlbWVudCBpcyB0aGUgY29uZmlndXJhdGlvbiBmb3IgdGhlIGNvbmRpdGlvbiB3aGVuIHRoZSBuZXh0IGJhdGNoIG9mIFdBTiBldmVudHMgYXJlIHNlbnQuIiwicHJvcGVydGllcyI6eyJ0aW1lb3V0Ijp7ImRlZmF1bHQiOjYwMDAwLCJkZXNjcmlwdGlvbiI6IlRpbWVvdXQgcmVwcmVzZW50cyB0aGUgdGltZSBpbiBtaWxsaXNlY29uZHMgdGhlIHNvdXJjZSBjbHVzdGVyIHdhaXRzIGZvciB0aGUgYWNrbm93bGVkZ2VtZW50LiBBZnRlciB0aW1lb3V0LCB0aGUgZXZlbnRzIHdpbGwgYmUgcmVzZW50LiIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifSwidHlwZSI6eyJkZWZhdWx0IjoiQUNLX09OX09QRVJBVElPTl9DT01QTEVURSIsImRlc2NyaXB0aW9uIjoiVHlwZSByZXByZXNlbnRzIGhvdyBhIGJhdGNoIG9mIHJlcGxpY2F0aW9uIGV2ZW50cyBpcyBjb25zaWRlcmVkIHN1Y2Nlc3NmdWxseSByZXBsaWNhdGVkLiIsImVudW0iOlsiQUNLX09OX09QRVJBVElPTl9DT01QTEVURSIsIkFDS19PTl9SRUNFSVBUIl0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwiYmF0Y2giOnsiZGVmYXVsdCI6eyJtYXhpbXVtRGVsYXkiOjEwMDAsInNpemUiOjUwMH0sImRlc2NyaXB0aW9uIjoiQmF0Y2ggaXMgdGhlIGNvbmZpZ3VyYXRpb24gZm9yIFdBTiBldmVudHMgYmF0Y2guIiwicHJvcGVydGllcyI6eyJtYXhpbXVtRGVsYXkiOnsiZGVmYXVsdCI6MTAwMCwiZGVzY3JpcHRpb24iOiJNYXhpbXVtRGVsYXkgcmVwcmVzZW50cyB0aGUgbWF4aW11bSBkZWxheSBpbiBtaWxsaXNlY29uZHMuIElmIHRoZSBiYXRjaCBzaXplIGlzIG5vdCByZWFjaGVkLCB0aGUgZXZlbnRzIHdpbGwgYmUgc2VudCBhZnRlciB0aGUgbWF4aW11bSBkZWxheS4iLCJmb3JtYXQiOiJpbnQzMiIsInR5cGUiOiJpbnRlZ2VyIn0sInNpemUiOnsiZGVmYXVsdCI6NTAwLCJkZXNjcmlwdGlvbiI6IlNpemUgcmVwcmVzZW50cyB0aGUgbWF4aW11bSBiYXRjaCBzaXplLiIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifX0sInR5cGUiOiJvYmplY3QifSwiZW5kcG9pbnRzIjp7ImRlc2NyaXB0aW9uIjoiRW5kcG9pbnRzIGlzIHRoZSB0YXJnZXQgY2x1c3RlciBjb21tYSBzZXBhcmF0ZWQgZW5kcG9pbnQgbGlzdCAuIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn0sInF1ZXVlIjp7ImRlZmF1bHQiOnsiY2FwYWNpdHkiOjEwMDAwLCJmdWxsQmVoYXZpb3IiOiJESVNDQVJEX0FGVEVSX01VVEFUSU9OIn0sImRlc2NyaXB0aW9uIjoiUXVldWUgaXMgdGhlIGNvbmZpZ3VyYXRpb24gZm9yIFdBTiBldmVudHMgcXVldWUuIiwicHJvcGVydGllcyI6eyJjYXBhY2l0eSI6eyJkZWZhdWx0IjoxMDAwMCwiZGVzY3JpcHRpb24iOiJDYXBhY2l0eSBpcyB0aGUgdG90YWwgY2FwYWNpdHkgb2YgV0FOIHF1ZXVlLiIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifSwiZnVsbEJlaGF2aW9yIjp7ImRlZmF1bHQiOiJESVNDQVJEX0FGVEVSX01VVEFUSU9OIiwiZGVzY3JpcHRpb24iOiJGdWxsQmVoYXZpb3IgcmVwcmVzZW50cyB0aGUgYmVoYXZpb3Igb2YgdGhlIG5ldyBhcnJpdmFsIHdoZW4gdGhlIHF1ZXVlIGlzIGZ1bGwuIiwiZW51bSI6WyJESVNDQVJEX0FGVEVSX01VVEFUSU9OIiwiVEhST1dfRVhDRVBUSU9OIiwiVEhST1dfRVhDRVBUSU9OX09OTFlfSUZfUkVQTElDQVRJT05fQUNUSVZFIl0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwicmVzb3VyY2VzIjp7ImRlc2NyaXB0aW9uIjoiUmVzb3VyY2VzIGlzIHRoZSBsaXN0IG9mIGN1c3RvbSByZXNvdXJjZXMgdG8gd2hpY2ggV0FOIHJlcGxpY2F0aW9uIGFwcGxpZXMuIiwiaXRlbXMiOnsicHJvcGVydGllcyI6eyJraW5kIjp7ImRlZmF1bHQiOiJNYXAiLCJkZXNjcmlwdGlvbiI6IktpbmQgaXMgdGhlIGtpbmQgb2YgY3VzdG9tIHJlc291cmNlIHRvIHdoaWNoIFdBTiByZXBsaWNhdGlvbiBhcHBsaWVzLiIsImVudW0iOlsiTWFwIiwiSGF6ZWxjYXN0Il0sInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgaXMgdGhlIG5hbWUgb2YgY3VzdG9tIHJlc291cmNlIHRvIHdoaWNoIFdBTiByZXBsaWNhdGlvbiBhcHBsaWVzLiIsIm1pbkxlbmd0aCI6MSwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sIm1pbkl0ZW1zIjoxLCJ0eXBlIjoiYXJyYXkifSwic3luY0NvbnNpc3RlbmN5Q2hlY2tTdHJhdGVneSI6eyJkZXNjcmlwdGlvbiI6IlN5bmNDb25zaXN0ZW5jeUNoZWNrU3RyYXRlZ3kgaXMgdGhlIHN0cmF0ZWd5IGZvciBjaGVja2luZyB0aGUgY29uc2lzdGVuY3kgb2YgZGF0YSBiZXR3ZWVuIHJlcGxpY2FzLiIsInR5cGUiOiJzdHJpbmcifSwidGFyZ2V0Q2x1c3Rlck5hbWUiOnsiZGVzY3JpcHRpb24iOiJDbHVzdGVyTmFtZSBpcyB0aGUgY2x1c3Rlck5hbWUgZmllbGQgb2YgdGhlIHRhcmdldCBIYXplbGNhc3QgcmVzb3VyY2UuIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJlbmRwb2ludHMiLCJyZXNvdXJjZXMiLCJ0YXJnZXRDbHVzdGVyTmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IldhblJlcGxpY2F0aW9uU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIFdhblJlcGxpY2F0aW9uIiwicHJvcGVydGllcyI6eyJtZXNzYWdlIjp7ImRlc2NyaXB0aW9uIjoiTWVzc2FnZSBpcyB0aGUgZmllbGQgdG8gc2hvdyBkZXRhaWwgaW5mb3JtYXRpb24gb3IgZXJyb3IiLCJ0eXBlIjoic3RyaW5nIn0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IlN0YXR1cyBpcyB0aGUgc3RhdHVzIG9mIFdBTiByZXBsaWNhdGlvbiIsInR5cGUiOiJzdHJpbmcifSwid2FuUmVwbGljYXRpb25NYXBzU3RhdHVzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InByb3BlcnRpZXMiOnsibWVzc2FnZSI6eyJkZXNjcmlwdGlvbiI6Ik1lc3NhZ2UgaXMgdGhlIGZpZWxkIHRvIHNob3cgZGV0YWlsIGluZm9ybWF0aW9uIG9yIGVycm9yIiwidHlwZSI6InN0cmluZyJ9LCJwdWJsaXNoZXJJZCI6eyJkZXNjcmlwdGlvbiI6IlB1Ymxpc2hlcklkIGlzIHRoZSBJRCB1c2VkIGZvciBXQU4gcHVibGlzaGVyIElEIiwidHlwZSI6InN0cmluZyJ9LCJyZXNvdXJjZU5hbWUiOnsiZGVzY3JpcHRpb24iOiJSZXNvdXJjZU5hbWUgaXMgdGhlIG5hbWUgb2YgdGhlIE1hcCBDdXN0b20gUmVzb3VyY2UuIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJTdGF0dXMgaXMgdGhlIHN0YXR1cyBvZiBXQU4gcmVwbGljYXRpb24iLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sImRlc2NyaXB0aW9uIjoiV2FuUmVwbGljYXRpb25NYXBzU3RhdHVzIGlzIHRoZSBXQU4gUmVwbGljYXRpb24gc3RhdHVzIG9mIHRoZSBNYXBzIGdpdmVuIGluIHRoZSBzcGVjIGRpcmVjdGx5IG9yIGluZGlyZWN0bHkgYnkgSGF6ZWxjYXN0IHJlc291cmNlLiIsInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInNwZWMiXSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6bnVsbCwic3RvcmVkVmVyc2lvbnMiOm51bGx9fQ==
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEzLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJ3YW5zeW5jcy5oYXplbGNhc3QuY29tIn0sInNwZWMiOnsiZ3JvdXAiOiJoYXplbGNhc3QuY29tIiwibmFtZXMiOnsia2luZCI6IldhblN5bmMiLCJsaXN0S2luZCI6IldhblN5bmNMaXN0IiwicGx1cmFsIjoid2Fuc3luY3MiLCJzaG9ydE5hbWVzIjpbIndzIl0sInNpbmd1bGFyIjoid2Fuc3luYyJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJkZXNjcmlwdGlvbiI6IkN1cnJlbnQgc3RhdGUgb2YgdGhlIEhhemVsY2FzdCBXQU4gU3luYyIsImpzb25QYXRoIjoiLnN0YXR1cy5zdGF0dXMiLCJuYW1lIjoiU3RhdHVzIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJNZXNzYWdlIGZvciB0aGUgY3VycmVudCBXYW5TeW5jIiwianNvblBhdGgiOiIuc3RhdHVzLm1lc3NhZ2UiLCJuYW1lIjoiTWVzc2FnZSIsInByaW9yaXR5IjoxLCJ0eXBlIjoic3RyaW5nIn1dLCJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiV2FuU3luYyBpcyB0aGUgU2NoZW1hIGZvciB0aGUgd2Fuc3luY3MgQVBJIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJXYW5TeW5jU3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIFdhblN5bmMiLCJwcm9wZXJ0aWVzIjp7IndhblJlcGxpY2F0aW9uUmVzb3VyY2VOYW1lIjp7ImRlc2NyaXB0aW9uIjoiV2FuUmVwbGljYXRpb25SZXNvdXJjZU5hbWUgaXMgdGhlIG5hbWUgb2YgV2FuUmVwbGljYXRpb24gQ1IgdGhhdCBjb250YWlucyB0aGUgV0FOIHB1Ymxpc2hlciBjb25maWd1cmF0aW9uLiBJZiBzcGVjaWZpZWQgdGhlIFN5bmMgb3BlcmF0aW9uIHdpbGwgdXNlIGV4aXN0aW5nIFdBTiBwdWJsaXNoZXIuIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJ3YW5SZXBsaWNhdGlvblJlc291cmNlTmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IldhblN5bmNTdGF0dXMgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgV2FuU3luYyIsInByb3BlcnRpZXMiOnsibWVzc2FnZSI6eyJkZXNjcmlwdGlvbiI6Ik1lc3NhZ2UgaXMgdGhlIGZpZWxkIHRvIHNob3cgZGV0YWlsIGluZm9ybWF0aW9uIG9yIGVycm9yIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJTdGF0dXMgaXMgdGhlIHN0YXR1cyBvZiBXQU4gU3luYyIsInR5cGUiOiJzdHJpbmcifSwid2FuU3luY01hcHNTdGF0dXMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsicHJvcGVydGllcyI6eyJtZXNzYWdlIjp7ImRlc2NyaXB0aW9uIjoiTWVzc2FnZSBpcyB0aGUgZmllbGQgdG8gc2hvdyBkZXRhaWwgaW5mb3JtYXRpb24gb3IgZXJyb3IiLCJ0eXBlIjoic3RyaW5nIn0sInBoYXNlIjp7ImRlc2NyaXB0aW9uIjoiU3RhdHVzIGlzIHRoZSBzdGF0dXMgb2YgdGhlIHJlc291cmNlIFdBTiBzeW5jIiwidHlwZSI6InN0cmluZyJ9LCJwdWJsaXNoZXJJZCI6eyJkZXNjcmlwdGlvbiI6IlB1Ymxpc2hlcklkIGlzIHRoZSBJRCB1c2VkIGZvciBXQU4gcHVibGlzaGVyIElEIiwidHlwZSI6InN0cmluZyJ9LCJyZXNvdXJjZU5hbWUiOnsiZGVzY3JpcHRpb24iOiJSZXNvdXJjZU5hbWUgaXMgdGhlIG5hbWUgb2YgdGhlIE1hcCBDdXN0b20gUmVzb3VyY2UuIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJkZXNjcmlwdGlvbiI6IldhblN5bmNNYXBTdGF0dXMgaXMgdGhlIFdBTiBTeW5jIHN0YXR1cyBvZiB0aGUgTWFwcyBnaXZlbiBpbiB0aGUgc3BlYyBkaXJlY3RseSBvciBpbmRpcmVjdGx5IGJ5IEhhemVsY2FzdCByZXNvdXJjZS4iLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJzcGVjIl0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOm51bGwsInN0b3JlZFZlcnNpb25zIjpudWxsfX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEzLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJjYWNoZXMuaGF6ZWxjYXN0LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiaGF6ZWxjYXN0LmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJDYWNoZSIsImxpc3RLaW5kIjoiQ2FjaGVMaXN0IiwicGx1cmFsIjoiY2FjaGVzIiwic2hvcnROYW1lcyI6WyJjaCJdLCJzaW5ndWxhciI6ImNhY2hlIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJhZGRpdGlvbmFsUHJpbnRlckNvbHVtbnMiOlt7ImRlc2NyaXB0aW9uIjoiQ3VycmVudCBzdGF0ZSBvZiB0aGUgQ2FjaGUgQ29uZmlnIiwianNvblBhdGgiOiIuc3RhdHVzLnN0YXRlIiwibmFtZSI6IlN0YXR1cyIsInR5cGUiOiJzdHJpbmcifSx7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgSGF6ZWxjYXN0IHJlc291cmNlIHRoYXQgdGhpcyByZXNvdXJjZSBpcyBjcmVhdGVkIGZvciIsImpzb25QYXRoIjoiLnNwZWMuaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIiwibmFtZSI6IkhhemVsY2FzdC1SZXNvdXJjZSIsInByaW9yaXR5IjoxLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6Ik1lc3NhZ2UgZm9yIHRoZSBjdXJyZW50IENhY2hlIENvbmZpZyIsImpzb25QYXRoIjoiLnN0YXR1cy5tZXNzYWdlIiwibmFtZSI6Ik1lc3NhZ2UiLCJwcmlvcml0eSI6MSwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkNhY2hlIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSBjYWNoZXMgQVBJIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJDYWNoZVNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBDYWNoZSBJdCBjYW5ub3QgYmUgdXBkYXRlZCBhZnRlciB0aGUgQ2FjaGUgaXMgY3JlYXRlZCIsInByb3BlcnRpZXMiOnsiYXN5bmNCYWNrdXBDb3VudCI6eyJkZWZhdWx0IjowLCJkZXNjcmlwdGlvbiI6Ik51bWJlciBvZiBhc3luY2hyb25vdXMgYmFja3Vwcy4iLCJmb3JtYXQiOiJpbnQzMiIsIm1heGltdW0iOjYsIm1pbmltdW0iOjAsInR5cGUiOiJpbnRlZ2VyIn0sImJhY2t1cENvdW50Ijp7ImRlZmF1bHQiOjEsImRlc2NyaXB0aW9uIjoiTnVtYmVyIG9mIHN5bmNocm9ub3VzIGJhY2t1cHMuIiwiZm9ybWF0IjoiaW50MzIiLCJtYXhpbXVtIjo2LCJtaW5pbXVtIjowLCJ0eXBlIjoiaW50ZWdlciJ9LCJldmVudEpvdXJuYWwiOnsiZGVzY3JpcHRpb24iOiJFdmVudEpvdXJuYWwgc3BlY2lmaWVzIGV2ZW50IGpvdXJuYWwgY29uZmlndXJhdGlvbiBvZiB0aGUgQ2FjaGUiLCJwcm9wZXJ0aWVzIjp7ImNhcGFjaXR5Ijp7ImRlZmF1bHQiOjEwMDAwLCJkZXNjcmlwdGlvbiI6IkNhcGFjaXR5IHNldHMgdGhlIGNhcGFjaXR5IG9mIHRoZSByaW5nYnVmZmVyIHVuZGVybHlpbmcgdGhlIGV2ZW50IGpvdXJuYWwuIiwiZm9ybWF0IjoiaW50MzIiLCJ0eXBlIjoiaW50ZWdlciJ9LCJ0aW1lVG9MaXZlU2Vjb25kcyI6eyJkZWZhdWx0IjowLCJkZXNjcmlwdGlvbiI6IlRpbWVUb0xpdmVTZWNvbmRzIGluZGljYXRlcyBob3cgbG9uZyB0aGUgaXRlbXMgcmVtYWluIGluIHRoZSBldmVudCBqb3VybmFsIGJlZm9yZSB0aGV5IGFyZSBleHBpcmVkLiIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifX0sInR5cGUiOiJvYmplY3QifSwiaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIjp7ImRlc2NyaXB0aW9uIjoiSGF6ZWxjYXN0UmVzb3VyY2VOYW1lIGRlZmluZXMgdGhlIG5hbWUgb2YgdGhlIEhhemVsY2FzdCByZXNvdXJjZSB0aGF0IHRoaXMgcmVzb3VyY2UgaXMgY3JlYXRlZCBmb3IuIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn0sImluTWVtb3J5Rm9ybWF0Ijp7ImRlZmF1bHQiOiJCSU5BUlkiLCJkZXNjcmlwdGlvbiI6IkluTWVtb3J5Rm9ybWF0IHNwZWNpZmllcyBpbiB3aGljaCBmb3JtYXQgZGF0YSB3aWxsIGJlIHN0b3JlZCBpbiB5b3VyIGNhY2hlIiwiZW51bSI6WyJCSU5BUlkiLCJPQkpFQ1QiLCJOQVRJVkUiXSwidHlwZSI6InN0cmluZyJ9LCJrZXlUeXBlIjp7ImRlc2NyaXB0aW9uIjoiQ2xhc3MgbmFtZSBvZiB0aGUga2V5IHR5cGUiLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBkYXRhIHN0cnVjdHVyZSBjb25maWcgdG8gYmUgY3JlYXRlZC4gSWYgZW1wdHksIENSIG5hbWUgd2lsbCBiZSB1c2VkLiBJdCBjYW5ub3QgYmUgdXBkYXRlZCBhZnRlciB0aGUgY29uZmlnIGlzIGNyZWF0ZWQgc3VjY2Vzc2Z1bGx5LiIsInR5cGUiOiJzdHJpbmcifSwicGVyc2lzdGVuY2VFbmFibGVkIjp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6IldoZW4gZW5hYmxlZCwgY2FjaGUgZGF0YSB3aWxsIGJlIHBlcnNpc3RlZC4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJ1c2VyQ29kZU5hbWVzcGFjZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIFVzZXIgQ29kZSBOYW1lc3BhY2UgYXBwbGllZCB0byB0aGlzIGluc3RhbmNlIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlVHlwZSI6eyJkZXNjcmlwdGlvbiI6IkNsYXNzIG5hbWUgb2YgdGhlIHZhbHVlIHR5cGUiLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJoYXplbGNhc3RSZXNvdXJjZU5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJDYWNoZVN0YXR1cyBkZWZpbmVzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBDYWNoZSIsInByb3BlcnRpZXMiOnsibWVtYmVyU3RhdHVzZXMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsiZW51bSI6WyJTdWNjZXNzIiwiRmFpbGVkIiwiUGVuZGluZyIsIlBlcnNpc3RpbmciLCJUZXJtaW5hdGluZyJdLCJ0eXBlIjoic3RyaW5nIn0sImRlc2NyaXB0aW9uIjoiSG9sZHMgc3RhdHVzIG9mIGRhdGEgc3RydWN0dXJlIGZvciBlYWNoIEhhemVsY2FzdCBtZW1iZXIiLCJ0eXBlIjoib2JqZWN0In0sIm1lc3NhZ2UiOnsiZGVzY3JpcHRpb24iOiJNZXNzYWdlIGV4cGxhaW5pbmcgdGhlIGN1cnJlbnQgc3RhdGUiLCJ0eXBlIjoic3RyaW5nIn0sInN0YXRlIjp7ImRlc2NyaXB0aW9uIjoiU3RhdGUgb2YgdGhlIGRhdGEgc3RydWN0dXJlIiwiZW51bSI6WyJTdWNjZXNzIiwiRmFpbGVkIiwiUGVuZGluZyIsIlBlcnNpc3RpbmciLCJUZXJtaW5hdGluZyJdLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJzcGVjIl0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOm51bGwsInN0b3JlZFZlcnNpb25zIjpudWxsfX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEzLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJjcm9uaG90YmFja3Vwcy5oYXplbGNhc3QuY29tIn0sInNwZWMiOnsiZ3JvdXAiOiJoYXplbGNhc3QuY29tIiwibmFtZXMiOnsia2luZCI6IkNyb25Ib3RCYWNrdXAiLCJsaXN0S2luZCI6IkNyb25Ib3RCYWNrdXBMaXN0IiwicGx1cmFsIjoiY3JvbmhvdGJhY2t1cHMiLCJzaG9ydE5hbWVzIjpbImNoYiJdLCJzaW5ndWxhciI6ImNyb25ob3RiYWNrdXAifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3siZGVzY3JpcHRpb24iOiJTdXNwZW50aW9uIHN0YXR1cyBvZiB0aGUgQ3JvbkhvdEJhY2t1cCIsImpzb25QYXRoIjoiLnNwZWMuc3VzcGVuZCIsIm5hbWUiOiJTVVNQRU5ERUQiLCJ0eXBlIjoiYm9vbGVhbiJ9LHsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBIYXplbGNhc3QgcmVzb3VyY2UgdGhhdCB0aGlzIHJlc291cmNlIGlzIGNyZWF0ZWQgZm9yIiwianNvblBhdGgiOiIuc3BlYy5ob3RCYWNrdXBUZW1wbGF0ZS5zcGVjLmhhemVsY2FzdFJlc291cmNlTmFtZSIsIm5hbWUiOiJIYXplbGNhc3QtUmVzb3VyY2UiLCJwcmlvcml0eSI6MSwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkNyb25Ib3RCYWNrdXAgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIGNyb25ob3RiYWNrdXBzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiQ3JvbkhvdEJhY2t1cFNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBDcm9uSG90QmFja3VwIiwicHJvcGVydGllcyI6eyJmYWlsZWRIb3RCYWNrdXBzSGlzdG9yeUxpbWl0Ijp7ImRlZmF1bHQiOjMsImRlc2NyaXB0aW9uIjoiVGhlIG51bWJlciBvZiBmYWlsZWQgZmluaXNoZWQgaG90IGJhY2t1cHMgdG8gcmV0YWluLiIsImZvcm1hdCI6ImludDMyIiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifSwiaG90QmFja3VwVGVtcGxhdGUiOnsiZGVzY3JpcHRpb24iOiJTcGVjaWZpZXMgdGhlIGhvdCBiYWNrdXAgdGhhdCB3aWxsIGJlIGNyZWF0ZWQgd2hlbiBleGVjdXRpbmcgYSBDcm9uSG90QmFja3VwLiIsInByb3BlcnRpZXMiOnsibWV0YWRhdGEiOnsiZGVzY3JpcHRpb24iOiJTdGFuZGFyZCBvYmplY3QncyBtZXRhZGF0YSBvZiB0aGUgaG90IGJhY2t1cHMgY3JlYXRlZCBmcm9tIHRoaXMgdGVtcGxhdGUuIiwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJTcGVjaWZpY2F0aW9uIG9mIHRoZSBkZXNpcmVkIGJlaGF2aW9yIG9mIHRoZSBob3QgYmFja3VwLiIsInByb3BlcnRpZXMiOnsiYnVja2V0VVJJIjp7ImRlc2NyaXB0aW9uIjoiVVJMIG9mIHRoZSBidWNrZXQgdG8gZG93bmxvYWQgSG90QmFja3VwIGZvbGRlcnMuIEFXUyBTMywgR0NQIEJ1Y2tldCBhbmQgQXp1cmUgQmxvYiBzdG9yYWdlIGJ1Y2tldHMgYXJlIHN1cHBvcnRlZC4gRXhhbXBsZSBidWNrZXQgVVJJczogLSBBV1MgUzMgICAgIC1cdTAwM2UgczM6Ly9idWNrZXQtbmFtZS9wYXRoL3RvL2ZvbGRlciAtIEdDUCBCdWNrZXQgLVx1MDAzZSBnczovL2J1Y2tldC1uYW1lL3BhdGgvdG8vZm9sZGVyIC0gQXp1cmUgQmxvYiAtXHUwMDNlIGF6YmxvYjovL2J1Y2tldC1uYW1lL3BhdGgvdG8vZm9sZGVyIiwidHlwZSI6InN0cmluZyJ9LCJoYXplbGNhc3RSZXNvdXJjZU5hbWUiOnsiZGVzY3JpcHRpb24iOiJIYXplbGNhc3RSZXNvdXJjZU5hbWUgZGVmaW5lcyB0aGUgbmFtZSBvZiB0aGUgSGF6ZWxjYXN0IHJlc291cmNlIiwidHlwZSI6InN0cmluZyJ9LCJzZWNyZXQiOnsiZGVzY3JpcHRpb24iOiJzZWNyZXQgaXMgYSBkZXByZWNhdGVkIGFsaWFzIGZvciBzZWNyZXROYW1lLiIsInR5cGUiOiJzdHJpbmcifSwic2VjcmV0TmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIHNlY3JldCB3aXRoIGNyZWRlbnRpYWxzIGZvciBjbG91ZCBwcm92aWRlcnMuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIl0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInNwZWMiXSwidHlwZSI6Im9iamVjdCJ9LCJzY2hlZHVsZSI6eyJkZXNjcmlwdGlvbiI6IlNjaGVkdWxlIGNvbnRhaW5zIGEgY3JvbnRhYi1saWtlIGV4cHJlc3Npb24gdGhhdCBkZWZpbmVzIHRoZSBzY2hlZHVsZSBpbiB3aGljaCBIb3RCYWNrdXAgd2lsbCBiZSBzdGFydGVkLiBJZiB0aGUgU2NoZWR1bGUgaXMgZW1wdHkgdGhlIEhvdEJhY2t1cCB3aWxsIHN0YXJ0IG9ubHkgb25jZSB3aGVuIGFwcGxpZWQuIC0tLSBTZXZlcmFsIHByZS1kZWZpbmVkIHNjaGVkdWxlcyBpbiBwbGFjZSBvZiBhIGNyb24gZXhwcmVzc2lvbiBjYW4gYmUgdXNlZC4gRW50cnkgICAgICAgICAgICAgICAgICB8IERlc2NyaXB0aW9uICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IEVxdWl2YWxlbnQgVG8gLS0tLS0gICAgICAgICAgICAgICAgICB8IC0tLS0tLS0tLS0tICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IC0tLS0tLS0tLS0tLS0gQHllYXJseSAob3IgQGFubnVhbGx5KSB8IFJ1biBvbmNlIGEgeWVhciwgbWlkbmlnaHQsIEphbi4gMXN0ICAgICAgICB8IDAgMCAxIDEgKiBAbW9udGhseSAgICAgICAgICAgICAgIHwgUnVuIG9uY2UgYSBtb250aCwgbWlkbmlnaHQsIGZpcnN0IG9mIG1vbnRoIHwgMCAwIDEgKiAqIEB3ZWVrbHkgICAgICAgICAgICAgICAgfCBSdW4gb25jZSBhIHdlZWssIG1pZG5pZ2h0IGJldHdlZW4gU2F0L1N1biAgfCAwIDAgKiAqIDAgQGRhaWx5IChvciBAbWlkbmlnaHQpICB8IFJ1biBvbmNlIGEgZGF5LCBtaWRuaWdodCAgICAgICAgICAgICAgICAgICB8IDAgMCAqICogKiBAaG91cmx5ICAgICAgICAgICAgICAgIHwgUnVuIG9uY2UgYW4gaG91ciwgYmVnaW5uaW5nIG9mIGhvdXIgICAgICAgIHwgMCAqICogKiAqIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn0sInN1Y2Nlc3NmdWxIb3RCYWNrdXBzSGlzdG9yeUxpbWl0Ijp7ImRlZmF1bHQiOjUsImRlc2NyaXB0aW9uIjoiVGhlIG51bWJlciBvZiBzdWNjZXNzZnVsIGZpbmlzaGVkIGhvdCBiYWNrdXBzIHRvIHJldGFpbi4iLCJmb3JtYXQiOiJpbnQzMiIsIm1pbmltdW0iOjAsInR5cGUiOiJpbnRlZ2VyIn0sInN1c3BlbmQiOnsiZGVmYXVsdCI6ZmFsc2UsImRlc2NyaXB0aW9uIjoiV2hlbiB0cnVlLCBDcm9uSG90QmFja3VwIHdpbGwgc3RvcCBjcmVhdGluZyBIb3RCYWNrdXAgQ1JzIHVudGlsIGl0IGlzIGRpc2FibGVkIiwidHlwZSI6ImJvb2xlYW4ifX0sInJlcXVpcmVkIjpbImhvdEJhY2t1cFRlbXBsYXRlIiwic2NoZWR1bGUiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJDcm9uSG90QmFja3VwU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIENyb25Ib3RCYWNrdXAiLCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJzcGVjIl0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOm51bGwsInN0b3JlZFZlcnNpb25zIjpudWxsfX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEzLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJoYXplbGNhc3RlbmRwb2ludHMuaGF6ZWxjYXN0LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiaGF6ZWxjYXN0LmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJIYXplbGNhc3RFbmRwb2ludCIsImxpc3RLaW5kIjoiSGF6ZWxjYXN0RW5kcG9pbnRMaXN0IiwicGx1cmFsIjoiaGF6ZWxjYXN0ZW5kcG9pbnRzIiwic2hvcnROYW1lcyI6WyJoemVwIl0sInNpbmd1bGFyIjoiaGF6ZWxjYXN0ZW5kcG9pbnQifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3siZGVzY3JpcHRpb24iOiJUeXBlIG9mIHRoZSBIYXplbGNhc3RFbmRwb2ludCIsImpzb25QYXRoIjoiLnNwZWMudHlwZSIsIm5hbWUiOiJUeXBlIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJBZGRyZXNzIG9mIHRoZSBIYXplbGNhc3RFbmRwb2ludCIsImpzb25QYXRoIjoiLnN0YXR1cy5hZGRyZXNzIiwibmFtZSI6IkFkZHJlc3MiLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIEhhemVsY2FzdCByZXNvdXJjZSB0aGF0IHRoaXMgcmVzb3VyY2UgaXMgY3JlYXRlZCBmb3IiLCJqc29uUGF0aCI6Ii5zcGVjLmhhemVsY2FzdFJlc291cmNlTmFtZSIsIm5hbWUiOiJIYXplbGNhc3QtUmVzb3VyY2UiLCJwcmlvcml0eSI6MSwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJNZXNzYWdlIGZvciB0aGUgY3VycmVudCBIYXplbGNhc3RFbmRwb2ludCIsImpzb25QYXRoIjoiLnN0YXR1cy5tZXNzYWdlIiwibmFtZSI6Ik1lc3NhZ2UiLCJwcmlvcml0eSI6MSwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkhhemVsY2FzdEVuZHBvaW50IGlzIHRoZSBTY2hlbWEgZm9yIHRoZSBoYXplbGNhc3RlbmRwb2ludHMgQVBJIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJIYXplbGNhc3RFbmRwb2ludFNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBIYXplbGNhc3RFbmRwb2ludCIsInByb3BlcnRpZXMiOnsiaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIjp7ImRlc2NyaXB0aW9uIjoiSGF6ZWxjYXN0UmVzb3VyY2VOYW1lIGRlZmluZXMgdGhlIG5hbWUgb2YgdGhlIEhhemVsY2FzdCByZXNvdXJjZSB0aGF0IHRoaXMgcmVzb3VyY2UgaXMgY3JlYXRlZCBmb3IuIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn0sInBvcnQiOnsiZGVzY3JpcHRpb24iOiJQb3J0IG9mIHRoZSBlbmRwb2ludC4iLCJmb3JtYXQiOiJpbnQzMiIsInR5cGUiOiJpbnRlZ2VyIn0sInR5cGUiOnsiZGVzY3JpcHRpb24iOiJUeXBlIGRlZmluZXMgdGhlIGVuZHBvaW50IGNvbm5lY3Rpb24uIEl0IGlzIHVzZWQgdG8gaWRlbnRpZnkgdGhlIHRhcmdldCBvZiB0aGUgZW5kcG9pbnQuIiwiZW51bSI6WyJEaXNjb3ZlcnkiLCJNZW1iZXIiLCJXQU4iXSwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIiwicG9ydCIsInR5cGUiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJIYXplbGNhc3RFbmRwb2ludFN0YXR1cyBkZWZpbmVzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBIYXplbGNhc3RFbmRwb2ludCIsInByb3BlcnRpZXMiOnsiYWRkcmVzcyI6eyJkZXNjcmlwdGlvbiI6IkFkZHJlc3MgaXMgdGhlIGV4dGVybmFsIGFkZHJlc3Mgb2YgdGhlIGVuZHBvaW50LiBJdCBpcyB0YWtlbiBmcm9tIHRoZSBjb3JyZXNwb25kaW5nIHNlcnZpY2UuIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6bnVsbCwic3RvcmVkVmVyc2lvbnMiOm51bGx9fQ==
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEzLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJob3RiYWNrdXBzLmhhemVsY2FzdC5jb20ifSwic3BlYyI6eyJncm91cCI6ImhhemVsY2FzdC5jb20iLCJuYW1lcyI6eyJraW5kIjoiSG90QmFja3VwIiwibGlzdEtpbmQiOiJIb3RCYWNrdXBMaXN0IiwicGx1cmFsIjoiaG90YmFja3VwcyIsInNob3J0TmFtZXMiOlsiaGIiXSwic2luZ3VsYXIiOiJob3RiYWNrdXAifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3siZGVzY3JpcHRpb24iOiJDdXJyZW50IHN0YXRlIG9mIHRoZSBIb3RCYWNrdXAgcHJvY2VzcyIsImpzb25QYXRoIjoiLnN0YXR1cy5zdGF0ZSIsIm5hbWUiOiJTdGF0dXMiLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIEhhemVsY2FzdCByZXNvdXJjZSB0aGF0IHRoaXMgcmVzb3VyY2UgaXMgY3JlYXRlZCBmb3IiLCJqc29uUGF0aCI6Ii5zcGVjLmhhemVsY2FzdFJlc291cmNlTmFtZSIsIm5hbWUiOiJIYXplbGNhc3QtUmVzb3VyY2UiLCJwcmlvcml0eSI6MSwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJNZXNzYWdlIGZvciB0aGUgY3VycmVudCBIb3RCYWNrdXAgQ29uZmlnIiwianNvblBhdGgiOiIuc3RhdHVzLm1lc3NhZ2UiLCJuYW1lIjoiTWVzc2FnZSIsInByaW9yaXR5IjoxLCJ0eXBlIjoic3RyaW5nIn1dLCJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiSG90QmFja3VwIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSBob3QgYmFja3VwIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiSG90QmFja3VwU3BlYyBkZWZpbmVzIHRoZSBTcGVjIG9mIEhvdEJhY2t1cCIsInByb3BlcnRpZXMiOnsiYnVja2V0VVJJIjp7ImRlc2NyaXB0aW9uIjoiVVJMIG9mIHRoZSBidWNrZXQgdG8gZG93bmxvYWQgSG90QmFja3VwIGZvbGRlcnMuIEFXUyBTMywgR0NQIEJ1Y2tldCBhbmQgQXp1cmUgQmxvYiBzdG9yYWdlIGJ1Y2tldHMgYXJlIHN1cHBvcnRlZC4gRXhhbXBsZSBidWNrZXQgVVJJczogLSBBV1MgUzMgICAgIC1cdTAwM2UgczM6Ly9idWNrZXQtbmFtZS9wYXRoL3RvL2ZvbGRlciAtIEdDUCBCdWNrZXQgLVx1MDAzZSBnczovL2J1Y2tldC1uYW1lL3BhdGgvdG8vZm9sZGVyIC0gQXp1cmUgQmxvYiAtXHUwMDNlIGF6YmxvYjovL2J1Y2tldC1uYW1lL3BhdGgvdG8vZm9sZGVyIiwidHlwZSI6InN0cmluZyJ9LCJoYXplbGNhc3RSZXNvdXJjZU5hbWUiOnsiZGVzY3JpcHRpb24iOiJIYXplbGNhc3RSZXNvdXJjZU5hbWUgZGVmaW5lcyB0aGUgbmFtZSBvZiB0aGUgSGF6ZWxjYXN0IHJlc291cmNlIiwidHlwZSI6InN0cmluZyJ9LCJzZWNyZXQiOnsiZGVzY3JpcHRpb24iOiJzZWNyZXQgaXMgYSBkZXByZWNhdGVkIGFsaWFzIGZvciBzZWNyZXROYW1lLiIsInR5cGUiOiJzdHJpbmcifSwic2VjcmV0TmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIHNlY3JldCB3aXRoIGNyZWRlbnRpYWxzIGZvciBjbG91ZCBwcm92aWRlcnMuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIl0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiSG90QmFja3VwU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIEhvdEJhY2t1cCIsInByb3BlcnRpZXMiOnsiYmFja3VwVVVJRHMiOnsiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifSwibWVzc2FnZSI6eyJ0eXBlIjoic3RyaW5nIn0sInN0YXRlIjp7ImVudW0iOlsiVW5rbm93biIsIlBlbmRpbmciLCJOb3RTdGFydGVkIiwiSW5Qcm9ncmVzcyIsIkZhaWx1cmUiLCJTdWNjZXNzIl0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInNwZWMiXSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6bnVsbCwic3RvcmVkVmVyc2lvbnMiOm51bGx9fQ==
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEzLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJqZXRqb2JzLmhhemVsY2FzdC5jb20ifSwic3BlYyI6eyJncm91cCI6ImhhemVsY2FzdC5jb20iLCJuYW1lcyI6eyJraW5kIjoiSmV0Sm9iIiwibGlzdEtpbmQiOiJKZXRKb2JMaXN0IiwicGx1cmFsIjoiamV0am9icyIsInNob3J0TmFtZXMiOlsiamoiXSwic2luZ3VsYXIiOiJqZXRqb2IifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3siZGVzY3JpcHRpb24iOiJDdXJyZW50IHN0YXRlIG9mIHRoZSBKZXRKb2IiLCJqc29uUGF0aCI6Ii5zdGF0dXMucGhhc2UiLCJuYW1lIjoiU3RhdHVzIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJJRCBvZiB0aGUgSmV0Sm9iIiwianNvblBhdGgiOiIuc3RhdHVzLmlkIiwibmFtZSI6IklkIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBIYXplbGNhc3QgcmVzb3VyY2UgdGhhdCB0aGlzIHJlc291cmNlIGlzIGNyZWF0ZWQgZm9yIiwianNvblBhdGgiOiIuc3BlYy5oYXplbGNhc3RSZXNvdXJjZU5hbWUiLCJuYW1lIjoiSGF6ZWxjYXN0LVJlc291cmNlIiwicHJpb3JpdHkiOjEsInR5cGUiOiJzdHJpbmcifSx7ImRlc2NyaXB0aW9uIjoiVGltZSB3aGVuIHRoZSBKZXRKb2Igd2FzIHN1Ym1pdHRlZCIsImpzb25QYXRoIjoiLnN0YXR1cy5zdWJtaXNzaW9uVGltZSIsIm5hbWUiOiJTdWJtaXNzaW9uVGltZSIsInR5cGUiOiJzdHJpbmcifSx7ImRlc2NyaXB0aW9uIjoiVGltZSB3aGVuIHRoZSBKZXRKb2Igd2FzIGNvbXBsZXRlZCIsImpzb25QYXRoIjoiLnN0YXR1cy5jb21wbGV0aW9uVGltZSIsIm5hbWUiOiJDb21wbGV0aW9uVGltZSIsInR5cGUiOiJzdHJpbmcifV0sIm5hbWUiOiJ2MWFscGhhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJKZXRKb2IgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIGpldGpvYnMgQVBJIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJKZXRKb2JTcGVjIGRlZmluZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgSmV0Sm9iIiwicHJvcGVydGllcyI6eyJidWNrZXRDb25maWciOnsiZGVzY3JpcHRpb24iOiJCdWNrZXQgY29uZmlnIGZyb20gd2hlcmUgdGhlIEpBUiBmaWxlcyB3aWxsIGJlIGRvd25sb2FkZWQuIiwicHJvcGVydGllcyI6eyJidWNrZXRVUkkiOnsiZGVzY3JpcHRpb24iOiJVUkwgb2YgdGhlIGJ1Y2tldCB0byBkb3dubG9hZCBIb3RCYWNrdXAgZm9sZGVycy4gQVdTIFMzLCBHQ1AgQnVja2V0IGFuZCBBenVyZSBCbG9iIHN0b3JhZ2UgYnVja2V0cyBhcmUgc3VwcG9ydGVkLiBFeGFtcGxlIGJ1Y2tldCBVUklzOiAtIEFXUyBTMyAgICAgLVx1MDAzZSBzMzovL2J1Y2tldC1uYW1lL3BhdGgvdG8vZm9sZGVyIC0gR0NQIEJ1Y2tldCAtXHUwMDNlIGdzOi8vYnVja2V0LW5hbWUvcGF0aC90by9mb2xkZXIgLSBBenVyZSBCbG9iIC1cdTAwM2UgYXpibG9iOi8vYnVja2V0LW5hbWUvcGF0aC90by9mb2xkZXIiLCJtaW5MZW5ndGgiOjYsInR5cGUiOiJzdHJpbmcifSwic2VjcmV0Ijp7ImRlc2NyaXB0aW9uIjoic2VjcmV0IGlzIGEgZGVwcmVjYXRlZCBhbGlhcyBmb3Igc2VjcmV0TmFtZS4iLCJ0eXBlIjoic3RyaW5nIn0sInNlY3JldE5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBzZWNyZXQgd2l0aCBjcmVkZW50aWFscyBmb3IgY2xvdWQgcHJvdmlkZXJzLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImJ1Y2tldFVSSSJdLCJ0eXBlIjoib2JqZWN0In0sImhhemVsY2FzdFJlc291cmNlTmFtZSI6eyJkZXNjcmlwdGlvbiI6IkhhemVsY2FzdFJlc291cmNlTmFtZSBkZWZpbmVzIHRoZSBuYW1lIG9mIHRoZSBIYXplbGNhc3QgcmVzb3VyY2UgdGhhdCB0aGlzIHJlc291cmNlIGlzIGNyZWF0ZWQgZm9yLiIsIm1pbkxlbmd0aCI6MSwidHlwZSI6InN0cmluZyJ9LCJpbml0aWFsU25hcHNob3RSZXNvdXJjZU5hbWUiOnsiZGVzY3JpcHRpb24iOiJJbml0aWFsU25hcHNob3RSZXNvdXJjZU5hbWUgc3BlY2lmeSB0aGUgbmFtZSBvZiB0aGUgSmV0Sm9iU25hcHNob3Qgb2JqZWN0IGZyb20gd2hpY2ggdGhlIEpldEpvYiBpcyBpbml0aWFsaXplZC4iLCJ0eXBlIjoic3RyaW5nIn0sImphck5hbWUiOnsiZGVzY3JpcHRpb24iOiJKYXJOYW1lIHNwZWNpZnkgdGhlIG5hbWUgb2YgdGhlIEphciB0byBydW4gdGhhdCBpcyBwcmVzZW50IG9uIHRoZSBtZW1iZXIuIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn0sIm1haW5DbGFzcyI6eyJkZXNjcmlwdGlvbiI6Ik1haW5DbGFzcyBpcyB0aGUgbmFtZSBvZiB0aGUgbWFpbiBjbGFzcyB0aGF0IHdpbGwgYmUgcnVuIG9uIHRoZSBzdWJtaXR0ZWQgam9iLiIsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIEpldEpvYiB0byBiZSBjcmVhdGVkLiBJZiBlbXB0eSwgQ1IgbmFtZSB3aWxsIGJlIHVzZWQuIEl0IGNhbm5vdCBiZSB1cGRhdGVkIGFmdGVyIHRoZSBjb25maWcgaXMgY3JlYXRlZCBzdWNjZXNzZnVsbHkuIiwidHlwZSI6InN0cmluZyJ9LCJyZW1vdGVVUkwiOnsiZGVzY3JpcHRpb24iOiJVUkwgZnJvbSB3aGVyZSB0aGUgZmlsZSB3aWxsIGJlIGRvd25sb2FkZWQuIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0ZSI6eyJkZWZhdWx0IjoiUnVubmluZyIsImRlc2NyaXB0aW9uIjoiU3RhdGUgaXMgdXNlZCB0byBtYW5hZ2UgdGhlIGpvYiBzdGF0ZS4iLCJlbnVtIjpbIlJ1bm5pbmciLCJTdXNwZW5kZWQiLCJDYW5jZWxlZCIsIlJlc3RhcnRlZCJdLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJoYXplbGNhc3RSZXNvdXJjZU5hbWUiLCJqYXJOYW1lIiwic3RhdGUiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJKZXRKb2JTdGF0dXMgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgSmV0Sm9iIiwicHJvcGVydGllcyI6eyJjb21wbGV0aW9uVGltZSI6eyJmb3JtYXQiOiJkYXRlLXRpbWUiLCJ0eXBlIjoic3RyaW5nIn0sImZhaWx1cmVUZXh0Ijp7InR5cGUiOiJzdHJpbmcifSwiaWQiOnsiZm9ybWF0IjoiaW50NjQiLCJ0eXBlIjoiaW50ZWdlciJ9LCJwaGFzZSI6eyJlbnVtIjpbIkZhaWxlZCIsIk5vdFJ1bm5pbmciLCJTdGFydGluZyIsIlJ1bm5pbmciLCJTdXNwZW5kZWQiLCJTdXNwZW5kZWRFeHBvcnRpbmdTbmFwc2hvdCIsIkNvbXBsZXRpbmciLCJFeGVjdXRpb25GYWlsZWQiLCJDb21wbGV0ZWQiXSwidHlwZSI6InN0cmluZyJ9LCJzdWJtaXNzaW9uVGltZSI6eyJmb3JtYXQiOiJkYXRlLXRpbWUiLCJ0eXBlIjoic3RyaW5nIn0sInN1c3BlbnNpb25DYXVzZSI6eyJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJpZCIsInBoYXNlIl0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOm51bGwsInN0b3JlZFZlcnNpb25zIjpudWxsfX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEzLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJqZXRqb2JzbmFwc2hvdHMuaGF6ZWxjYXN0LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiaGF6ZWxjYXN0LmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJKZXRKb2JTbmFwc2hvdCIsImxpc3RLaW5kIjoiSmV0Sm9iU25hcHNob3RMaXN0IiwicGx1cmFsIjoiamV0am9ic25hcHNob3RzIiwic2hvcnROYW1lcyI6WyJqanMiXSwic2luZ3VsYXIiOiJqZXRqb2JzbmFwc2hvdCJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJkZXNjcmlwdGlvbiI6IkN1cnJlbnQgc3RhdGUgb2YgdGhlIEpldEpvYlNuYXBzaG90IiwianNvblBhdGgiOiIuc3RhdHVzLnN0YXRlIiwibmFtZSI6IlN0YXRlIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJUaW1lIHdoZW4gdGhlIEpldEpvYlNuYXBzaG90IHdhcyBjcmVhdGVkLCBpZiBjcmVhdGVkIiwianNvblBhdGgiOiIuc3RhdHVzLmNyZWF0aW9uVGltZSIsIm5hbWUiOiJDcmVhdGlvblRpbWUiLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6Ik1lc3NhZ2UgZm9yIHRoZSBKZXRKb2JTbmFwc2hvdCIsImpzb25QYXRoIjoiLnN0YXR1cy5tZXNzYWdlIiwibmFtZSI6Ik1lc3NhZ2UiLCJwcmlvcml0eSI6MSwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkpldEpvYlNuYXBzaG90IGlzIHRoZSBTY2hlbWEgZm9yIHRoZSBqZXRqb2JzbmFwc2hvdHMgQVBJIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJKZXRKb2JTbmFwc2hvdFNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBKZXRKb2JTbmFwc2hvdCIsInByb3BlcnRpZXMiOnsiY2FuY2VsSm9iIjp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6IkNhbmNlbEpvYiBkZXRlcm1pbmVzIHdoZXRoZXIgdGhlIGpvYiBpcyBjYW5jZWxlZCBhZnRlciBleHBvcnRpbmcgc25hcHNob3QiLCJ0eXBlIjoiYm9vbGVhbiJ9LCJqZXRKb2JSZXNvdXJjZU5hbWUiOnsiZGVzY3JpcHRpb24iOiJKZXRKb2JSZXNvdXJjZU5hbWUgaXMgdGhlIG5hbWUgb2YgdGhlIEpldEpvYiBDUiB3aGVyZSB0aGUgU25hcHNob3QgaXMgZXhwb3J0ZWQgZnJvbSIsIm1pbkxlbmd0aCI6MSwidHlwZSI6InN0cmluZyJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgZXhwb3J0ZWQgc25hcHNob3QiLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJqZXRKb2JSZXNvdXJjZU5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVmYXVsdCI6eyJzdGF0ZSI6IldhaXRpbmcifSwiZGVzY3JpcHRpb24iOiJKZXRKb2JTbmFwc2hvdFN0YXR1cyBkZWZpbmVzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBKZXRKb2JTbmFwc2hvdCIsInByb3BlcnRpZXMiOnsiY3JlYXRpb25UaW1lIjp7ImZvcm1hdCI6ImRhdGUtdGltZSIsInR5cGUiOiJzdHJpbmcifSwibWVzc2FnZSI6eyJ0eXBlIjoic3RyaW5nIn0sInN0YXRlIjp7ImVudW0iOlsiV2FpdGluZyIsIkV4cG9ydGluZyIsIkV4cG9ydGVkIiwiRmFpbGVkIl0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInNwZWMiXSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6bnVsbCwic3RvcmVkVmVyc2lvbnMiOm51bGx9fQ==
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEzLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJtYW5hZ2VtZW50Y2VudGVycy5oYXplbGNhc3QuY29tIn0sInNwZWMiOnsiZ3JvdXAiOiJoYXplbGNhc3QuY29tIiwibmFtZXMiOnsia2luZCI6Ik1hbmFnZW1lbnRDZW50ZXIiLCJsaXN0S2luZCI6Ik1hbmFnZW1lbnRDZW50ZXJMaXN0IiwicGx1cmFsIjoibWFuYWdlbWVudGNlbnRlcnMiLCJzaG9ydE5hbWVzIjpbIm1jIl0sInNpbmd1bGFyIjoibWFuYWdlbWVudGNlbnRlciJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJkZXNjcmlwdGlvbiI6IkN1cnJlbnQgc3RhdGUgb2YgdGhlIE1hbmFnZW1lbnQgQ2VudGVyIGRlcGxveW1lbnQiLCJqc29uUGF0aCI6Ii5zdGF0dXMucGhhc2UiLCJuYW1lIjoiU3RhdHVzIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJFeHRlcm5hbCBhZGRyZXNzZXMgb2YgdGhlIE1hbmFnZW1lbnQgQ2VudGVyIGRlcGxveW1lbnQiLCJqc29uUGF0aCI6Ii5zdGF0dXMuZXh0ZXJuYWxBZGRyZXNzZXMiLCJuYW1lIjoiRXh0ZXJuYWwtQWRkcmVzc2VzIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJNZXNzYWdlIGZvciB0aGUgY3VycmVudCBNYW5hZ2VtZW50Q2VudGVyIENvbmZpZyIsImpzb25QYXRoIjoiLnN0YXR1cy5tZXNzYWdlIiwibmFtZSI6Ik1lc3NhZ2UiLCJwcmlvcml0eSI6MSwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6Ik1hbmFnZW1lbnRDZW50ZXIgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIG1hbmFnZW1lbnRjZW50ZXJzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlZmF1bHQiOnsicmVwb3NpdG9yeSI6ImRvY2tlci5pby9oYXplbGNhc3QvbWFuYWdlbWVudC1jZW50ZXIifSwiZGVzY3JpcHRpb24iOiJJbml0aWFsIHZhbHVlcyB3aWxsIGJlIGZpbGxlZCB3aXRoIGl0cyBmaWVsZHMnIGRlZmF1bHQgdmFsdWVzLiIsInByb3BlcnRpZXMiOnsiYW5ub3RhdGlvbnMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6Ik1hbmFnZW1lbnRDZW50ZXIgS3ViZXJuZXRlcyByZXNvdXJjZSBhbm5vdGF0aW9ucyIsInR5cGUiOiJvYmplY3QifSwiZXh0ZXJuYWxDb25uZWN0aXZpdHkiOnsiZGVmYXVsdCI6eyJ0eXBlIjoiTG9hZEJhbGFuY2VyIn0sImRlc2NyaXB0aW9uIjoiQ29uZmlndXJhdGlvbiB0byBleHBvc2UgTWFuYWdlbWVudCBDZW50ZXIgdG8gb3V0c2lkZS4iLCJwcm9wZXJ0aWVzIjp7ImluZ3Jlc3MiOnsiZGVzY3JpcHRpb24iOiJJbmdyZXNzIGNvbmZpZ3VyYXRpb24gb2YgTWFuYWdlbWVudCBDZW50ZXIiLCJwcm9wZXJ0aWVzIjp7ImFubm90YXRpb25zIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InR5cGUiOiJzdHJpbmcifSwiZGVzY3JpcHRpb24iOiJBbm5vdGF0aW9ucyBhZGRlZCB0byB0aGUgaW5ncmVzcyBvYmplY3QuIiwidHlwZSI6Im9iamVjdCJ9LCJob3N0bmFtZSI6eyJkZXNjcmlwdGlvbiI6Ikhvc3RuYW1lIG9mIE1hbmFnZW1lbnQgQ2VudGVyIGV4cG9zZWQgYnkgSW5ncmVzcy4gSW5ncmVzcyBjb250cm9sbGVyIHdpbGwgdXNlIHRoaXMgaG9zdG5hbWUgdG8gcm91dGUgaW5ib3VuZCB0cmFmZmljLiIsInR5cGUiOiJzdHJpbmcifSwiaW5ncmVzc0NsYXNzTmFtZSI6eyJkZXNjcmlwdGlvbiI6IkluZ3Jlc3NDbGFzc05hbWUgb2YgdGhlIGluZ3Jlc3Mgb2JqZWN0LiIsInR5cGUiOiJzdHJpbmcifSwicGF0aCI6eyJkZWZhdWx0IjoiLyIsImRlc2NyaXB0aW9uIjoiUGF0aCBvZiB0aGUgaW5ncmVzcyBydWxlLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImhvc3RuYW1lIl0sInR5cGUiOiJvYmplY3QifSwicm91dGUiOnsiZGVzY3JpcHRpb24iOiJPcGVuU2hpZnQgUm91dGUgY29uZmlndXJhdGlvbiBvZiBNYW5hZ2VtZW50IENlbnRlciIsInByb3BlcnRpZXMiOnsiaG9zdG5hbWUiOnsiZGVzY3JpcHRpb24iOiJIb3N0bmFtZSBvZiBNYW5hZ2VtZW50IENlbnRlciBleHBvc2VkIGJ5IHJvdXRlLiBPcGVuc2hpZnQgcm91dGVycyB3aWxsIHVzZSB0aGlzIGhvc3RuYW1lIHRvIHJvdXRlIGluYm91bmQgdHJhZmZpYy4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJob3N0bmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOnsiZGVmYXVsdCI6IkxvYWRCYWxhbmNlciIsImRlc2NyaXB0aW9uIjoiSG93IE1hbmFnZW1lbnQgQ2VudGVyIGlzIGV4cG9zZWQuIFZhbGlkIHZhbHVlcyBhcmU6IC0gXCJDbHVzdGVySVBcIiAtIFwiTm9kZVBvcnRcIiAtIFwiTG9hZEJhbGFuY2VyXCIgKGRlZmF1bHQpIiwiZW51bSI6WyJDbHVzdGVySVAiLCJOb2RlUG9ydCIsIkxvYWRCYWxhbmNlciJdLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sImhhemVsY2FzdENsdXN0ZXJzIjp7ImRlc2NyaXB0aW9uIjoiQ29ubmVjdGlvbiBjb25maWd1cmF0aW9uIGZvciB0aGUgSGF6ZWxjYXN0IGNsdXN0ZXJzIHRoYXQgTWFuYWdlbWVudCBDZW50ZXIgd2lsbCBtb25pdG9yLiIsIml0ZW1zIjp7InByb3BlcnRpZXMiOnsiYWRkcmVzcyI6eyJkZXNjcmlwdGlvbiI6IklQIGFkZHJlc3Mgb3IgRE5TIG5hbWUgb2YgdGhlIEhhemVsY2FzdCBjbHVzdGVyLiBJZiB0aGUgY2x1c3RlciBpcyBleHBvc2VkIHdpdGggYSBzZXJ2aWNlIG5hbWUgaW4gYSBkaWZmZXJlbnQgbmFtZXNwYWNlLCB1c2UgdGhlIGZvbGxvd2luZyBzeW50YXggXCJcdTAwM2NzZXJ2aWNlLW5hbWVcdTAwM2UuXHUwMDNjc2VydmljZS1uYW1lc3BhY2VcdTAwM2VcIi4iLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVmYXVsdCI6ImRldiIsImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgSGF6ZWxjYXN0IGNsdXN0ZXIgdGhhdCBNYW5hZ2VtZW50IENlbnRlciB3aWxsIGNvbm5lY3QgdG8sIGRlZmF1bHQgaXMgZGV2LiIsInR5cGUiOiJzdHJpbmcifSwidGxzIjp7ImRlc2NyaXB0aW9uIjoiVExTIGNsaWVudCBjb25maWd1cmF0aW9uLiIsInByb3BlcnRpZXMiOnsibXV0dWFsQXV0aGVudGljYXRpb24iOnsiZGVmYXVsdCI6Ik5vbmUiLCJkZXNjcmlwdGlvbiI6Ik11dHVhbCBhdXRoZW50aWNhdGlvbiBjb25maWd1cmF0aW9uLiBJdOKAmXMgTm9uZSBieSBkZWZhdWx0IHdoaWNoIG1lYW5zIHRoZSBjbGllbnQgc2lkZSBvZiBjb25uZWN0aW9uIGlzIG5vdCBhdXRoZW50aWNhdGVkLiIsImVudW0iOlsiTm9uZSIsIlJlcXVpcmVkIiwiT3B0aW9uYWwiXSwidHlwZSI6InN0cmluZyJ9LCJzZWNyZXROYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgc2VjcmV0IHdpdGggVExTIGNlcnRpZmljYXRlIGFuZCBrZXkuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsic2VjcmV0TmFtZSJdLCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJhZGRyZXNzIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sImltYWdlUHVsbFBvbGljeSI6eyJkZWZhdWx0IjoiSWZOb3RQcmVzZW50IiwiZGVzY3JpcHRpb24iOiJQdWxsIHBvbGljeSBmb3IgdGhlIE1hbmFnZW1lbnQgQ2VudGVyIGltYWdlIiwidHlwZSI6InN0cmluZyJ9LCJpbWFnZVB1bGxTZWNyZXRzIjp7ImRlc2NyaXB0aW9uIjoiSW1hZ2UgcHVsbCBzZWNyZXRzIGZvciB0aGUgTWFuYWdlbWVudCBDZW50ZXIgaW1hZ2UiLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkxvY2FsT2JqZWN0UmVmZXJlbmNlIGNvbnRhaW5zIGVub3VnaCBpbmZvcm1hdGlvbiB0byBsZXQgeW91IGxvY2F0ZSB0aGUgcmVmZXJlbmNlZCBvYmplY3QgaW5zaWRlIHRoZSBzYW1lIG5hbWVzcGFjZS4iLCJwcm9wZXJ0aWVzIjp7Im5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSByZWZlcmVudC4gTW9yZSBpbmZvOiBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9vdmVydmlldy93b3JraW5nLXdpdGgtb2JqZWN0cy9uYW1lcy8jbmFtZXMgVE9ETzogQWRkIG90aGVyIHVzZWZ1bCBmaWVsZHMuIGFwaVZlcnNpb24sIGtpbmQsIHVpZD8iLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0IiwieC1rdWJlcm5ldGVzLW1hcC10eXBlIjoiYXRvbWljIn0sInR5cGUiOiJhcnJheSJ9LCJqdm0iOnsiZGVzY3JpcHRpb24iOiJNYW5hZ2VtZW50Q2VudGVyIEpWTSBjb25maWd1cmF0aW9uIiwicHJvcGVydGllcyI6eyJhcmdzIjp7ImRlc2NyaXB0aW9uIjoiQXJncyBpcyBmb3IgYXJiaXRyYXJ5IEpWTSBhcmd1bWVudHMiLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9fSwidHlwZSI6Im9iamVjdCJ9LCJsYWJlbHMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6Ik1hbmFnZW1lbnRDZW50ZXIgS3ViZXJuZXRlcyByZXNvdXJjZSBsYWJlbHMiLCJ0eXBlIjoib2JqZWN0In0sImxpY2Vuc2VLZXlTZWNyZXQiOnsiZGVzY3JpcHRpb24iOiJsaWNlbnNlS2V5U2VjcmV0IGlzIGEgZGVwcmVjYXRlZCBhbGlhcyBmb3IgbGljZW5zZUtleVNlY3JldE5hbWUuIiwidHlwZSI6InN0cmluZyJ9LCJsaWNlbnNlS2V5U2VjcmV0TmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIHNlY3JldCB3aXRoIEhhemVsY2FzdCBFbnRlcnByaXNlIExpY2Vuc2UgS2V5LiIsInR5cGUiOiJzdHJpbmcifSwicGVyc2lzdGVuY2UiOnsiZGVmYXVsdCI6eyJlbmFibGVkIjp0cnVlLCJzaXplIjoiMTBHaSJ9LCJkZXNjcmlwdGlvbiI6IkNvbmZpZ3VyYXRpb24gZm9yIE1hbmFnZW1lbnQgQ2VudGVyIHBlcnNpc3RlbmNlLiIsInByb3BlcnRpZXMiOnsiZW5hYmxlZCI6eyJkZWZhdWx0Ijp0cnVlLCJkZXNjcmlwdGlvbiI6IldoZW4gdHJ1ZSwgTUMgd2lsbCB1c2UgYSBQZXJzaXN0ZW50Vm9sdW1lQ2xhaW0gdG8gc3RvcmUgZGF0YS4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJleGlzdGluZ1ZvbHVtZUNsYWltTmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIFBlcnNpc3RlbnRWb2x1bWVDbGFpbSBNQyB3aWxsIHVzZSBmb3IgcGVyc2lzdGVuY2UuIElmIG5vdCBlbXB0eSwgTUMgd2lsbCB1c2UgdGhlIGV4aXN0aW5nIGNsYWltIGluc3RlYWQgb2YgY3JlYXRpbmcgYSBuZXcgb25lLiIsInR5cGUiOiJzdHJpbmcifSwic2l6ZSI6eyJhbnlPZiI6W3sidHlwZSI6ImludGVnZXIifSx7InR5cGUiOiJzdHJpbmcifV0sImRlZmF1bHQiOiIxMEdpIiwiZGVzY3JpcHRpb24iOiJTaXplIG9mIHRoZSBjcmVhdGVkIFBlcnNpc3RlbnRWb2x1bWVDbGFpbS4iLCJwYXR0ZXJuIjoiXihcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSgoW0tNR1RQRV1pKXxbbnVta01HVFBFXXwoW2VFXShcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSkpPyQiLCJ4LWt1YmVybmV0ZXMtaW50LW9yLXN0cmluZyI6dHJ1ZX0sInN0b3JhZ2VDbGFzcyI6eyJkZXNjcmlwdGlvbiI6IlN0b3JhZ2VDbGFzcyBmcm9tIHdoaWNoIFBlcnNpc3RlbnRWb2x1bWVDbGFpbSB3aWxsIGJlIGNyZWF0ZWQuIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJyZXBvc2l0b3J5Ijp7ImRlZmF1bHQiOiJkb2NrZXIuaW8vaGF6ZWxjYXN0L21hbmFnZW1lbnQtY2VudGVyIiwiZGVzY3JpcHRpb24iOiJSZXBvc2l0b3J5IHRvIHB1bGwgdGhlIE1hbmFnZW1lbnQgQ2VudGVyIGltYWdlIGZyb20uIiwidHlwZSI6InN0cmluZyJ9LCJyZXNvdXJjZXMiOnsiZGVzY3JpcHRpb24iOiJDb21wdXRlIFJlc291cmNlcyByZXF1aXJlZCBieSB0aGUgTUMgY29udGFpbmVyLiIsInByb3BlcnRpZXMiOnsiY2xhaW1zIjp7ImRlc2NyaXB0aW9uIjoiQ2xhaW1zIGxpc3RzIHRoZSBuYW1lcyBvZiByZXNvdXJjZXMsIGRlZmluZWQgaW4gc3BlYy5yZXNvdXJjZUNsYWltcywgdGhhdCBhcmUgdXNlZCBieSB0aGlzIGNvbnRhaW5lci4gXG4gVGhpcyBpcyBhbiBhbHBoYSBmaWVsZCBhbmQgcmVxdWlyZXMgZW5hYmxpbmcgdGhlIER5bmFtaWNSZXNvdXJjZUFsbG9jYXRpb24gZmVhdHVyZSBnYXRlLiBcbiBUaGlzIGZpZWxkIGlzIGltbXV0YWJsZS4gSXQgY2FuIG9ubHkgYmUgc2V0IGZvciBjb250YWluZXJzLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiUmVzb3VyY2VDbGFpbSByZWZlcmVuY2VzIG9uZSBlbnRyeSBpbiBQb2RTcGVjLlJlc291cmNlQ2xhaW1zLiIsInByb3BlcnRpZXMiOnsibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgbXVzdCBtYXRjaCB0aGUgbmFtZSBvZiBvbmUgZW50cnkgaW4gcG9kLnNwZWMucmVzb3VyY2VDbGFpbXMgb2YgdGhlIFBvZCB3aGVyZSB0aGlzIGZpZWxkIGlzIHVzZWQuIEl0IG1ha2VzIHRoYXQgcmVzb3VyY2UgYXZhaWxhYmxlIGluc2lkZSBhIGNvbnRhaW5lci4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJuYW1lIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtbWFwLWtleXMiOlsibmFtZSJdLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoibWFwIn0sImxpbWl0cyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJhbnlPZiI6W3sidHlwZSI6ImludGVnZXIifSx7InR5cGUiOiJzdHJpbmcifV0sInBhdHRlcm4iOiJeKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKChbS01HVFBFXWkpfFtudW1rTUdUUEVdfChbZUVdKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKSk/JCIsIngta3ViZXJuZXRlcy1pbnQtb3Itc3RyaW5nIjp0cnVlfSwiZGVzY3JpcHRpb24iOiJMaW1pdHMgZGVzY3JpYmVzIHRoZSBtYXhpbXVtIGFtb3VudCBvZiBjb21wdXRlIHJlc291cmNlcyBhbGxvd2VkLiBNb3JlIGluZm86IGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL2NvbmZpZ3VyYXRpb24vbWFuYWdlLXJlc291cmNlcy1jb250YWluZXJzLyIsInR5cGUiOiJvYmplY3QifSwicmVxdWVzdHMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsiYW55T2YiOlt7InR5cGUiOiJpbnRlZ2VyIn0seyJ0eXBlIjoic3RyaW5nIn1dLCJwYXR0ZXJuIjoiXihcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSgoW0tNR1RQRV1pKXxbbnVta01HVFBFXXwoW2VFXShcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSkpPyQiLCJ4LWt1YmVybmV0ZXMtaW50LW9yLXN0cmluZyI6dHJ1ZX0sImRlc2NyaXB0aW9uIjoiUmVxdWVzdHMgZGVzY3JpYmVzIHRoZSBtaW5pbXVtIGFtb3VudCBvZiBjb21wdXRlIHJlc291cmNlcyByZXF1aXJlZC4gSWYgUmVxdWVzdHMgaXMgb21pdHRlZCBmb3IgYSBjb250YWluZXIsIGl0IGRlZmF1bHRzIHRvIExpbWl0cyBpZiB0aGF0IGlzIGV4cGxpY2l0bHkgc3BlY2lmaWVkLCBvdGhlcndpc2UgdG8gYW4gaW1wbGVtZW50YXRpb24tZGVmaW5lZCB2YWx1ZS4gUmVxdWVzdHMgY2Fubm90IGV4Y2VlZCBMaW1pdHMuIE1vcmUgaW5mbzogaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvY29uZmlndXJhdGlvbi9tYW5hZ2UtcmVzb3VyY2VzLWNvbnRhaW5lcnMvIiwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9LCJzY2hlZHVsaW5nIjp7ImRlc2NyaXB0aW9uIjoiU2NoZWR1bGluZyBkZXRhaWxzIiwicHJvcGVydGllcyI6eyJhZmZpbml0eSI6eyJkZXNjcmlwdGlvbiI6IkFmZmluaXR5IiwicHJvcGVydGllcyI6eyJub2RlQWZmaW5pdHkiOnsiZGVzY3JpcHRpb24iOiJEZXNjcmliZXMgbm9kZSBhZmZpbml0eSBzY2hlZHVsaW5nIHJ1bGVzIGZvciB0aGUgcG9kLiIsInByb3BlcnRpZXMiOnsicHJlZmVycmVkRHVyaW5nU2NoZWR1bGluZ0lnbm9yZWREdXJpbmdFeGVjdXRpb24iOnsiZGVzY3JpcHRpb24iOiJUaGUgc2NoZWR1bGVyIHdpbGwgcHJlZmVyIHRvIHNjaGVkdWxlIHBvZHMgdG8gbm9kZXMgdGhhdCBzYXRpc2Z5IHRoZSBhZmZpbml0eSBleHByZXNzaW9ucyBzcGVjaWZpZWQgYnkgdGhpcyBmaWVsZCwgYnV0IGl0IG1heSBjaG9vc2UgYSBub2RlIHRoYXQgdmlvbGF0ZXMgb25lIG9yIG1vcmUgb2YgdGhlIGV4cHJlc3Npb25zLiBUaGUgbm9kZSB0aGF0IGlzIG1vc3QgcHJlZmVycmVkIGlzIHRoZSBvbmUgd2l0aCB0aGUgZ3JlYXRlc3Qgc3VtIG9mIHdlaWdodHMsIGkuZS4gZm9yIGVhY2ggbm9kZSB0aGF0IG1lZXRzIGFsbCBvZiB0aGUgc2NoZWR1bGluZyByZXF1aXJlbWVudHMgKHJlc291cmNlIHJlcXVlc3QsIHJlcXVpcmVkRHVyaW5nU2NoZWR1bGluZyBhZmZpbml0eSBleHByZXNzaW9ucywgZXRjLiksIGNvbXB1dGUgYSBzdW0gYnkgaXRlcmF0aW5nIHRocm91Z2ggdGhlIGVsZW1lbnRzIG9mIHRoaXMgZmllbGQgYW5kIGFkZGluZyBcIndlaWdodFwiIHRvIHRoZSBzdW0gaWYgdGhlIG5vZGUgbWF0Y2hlcyB0aGUgY29ycmVzcG9uZGluZyBtYXRjaEV4cHJlc3Npb25zOyB0aGUgbm9kZShzKSB3aXRoIHRoZSBoaWdoZXN0IHN1bSBhcmUgdGhlIG1vc3QgcHJlZmVycmVkLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQW4gZW1wdHkgcHJlZmVycmVkIHNjaGVkdWxpbmcgdGVybSBtYXRjaGVzIGFsbCBvYmplY3RzIHdpdGggaW1wbGljaXQgd2VpZ2h0IDAgKGkuZS4gaXQncyBhIG5vLW9wKS4gQSBudWxsIHByZWZlcnJlZCBzY2hlZHVsaW5nIHRlcm0gbWF0Y2hlcyBubyBvYmplY3RzIChpLmUuIGlzIGFsc28gYSBuby1vcCkuIiwicHJvcGVydGllcyI6eyJwcmVmZXJlbmNlIjp7ImRlc2NyaXB0aW9uIjoiQSBub2RlIHNlbGVjdG9yIHRlcm0sIGFzc29jaWF0ZWQgd2l0aCB0aGUgY29ycmVzcG9uZGluZyB3ZWlnaHQuIiwicHJvcGVydGllcyI6eyJtYXRjaEV4cHJlc3Npb25zIjp7ImRlc2NyaXB0aW9uIjoiQSBsaXN0IG9mIG5vZGUgc2VsZWN0b3IgcmVxdWlyZW1lbnRzIGJ5IG5vZGUncyBsYWJlbHMuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJBIG5vZGUgc2VsZWN0b3IgcmVxdWlyZW1lbnQgaXMgYSBzZWxlY3RvciB0aGF0IGNvbnRhaW5zIHZhbHVlcywgYSBrZXksIGFuZCBhbiBvcGVyYXRvciB0aGF0IHJlbGF0ZXMgdGhlIGtleSBhbmQgdmFsdWVzLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoiVGhlIGxhYmVsIGtleSB0aGF0IHRoZSBzZWxlY3RvciBhcHBsaWVzIHRvLiIsInR5cGUiOiJzdHJpbmcifSwib3BlcmF0b3IiOnsiZGVzY3JpcHRpb24iOiJSZXByZXNlbnRzIGEga2V5J3MgcmVsYXRpb25zaGlwIHRvIGEgc2V0IG9mIHZhbHVlcy4gVmFsaWQgb3BlcmF0b3JzIGFyZSBJbiwgTm90SW4sIEV4aXN0cywgRG9lc05vdEV4aXN0LiBHdCwgYW5kIEx0LiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWVzIjp7ImRlc2NyaXB0aW9uIjoiQW4gYXJyYXkgb2Ygc3RyaW5nIHZhbHVlcy4gSWYgdGhlIG9wZXJhdG9yIGlzIEluIG9yIE5vdEluLCB0aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgbm9uLWVtcHR5LiBJZiB0aGUgb3BlcmF0b3IgaXMgRXhpc3RzIG9yIERvZXNOb3RFeGlzdCwgdGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIGVtcHR5LiBJZiB0aGUgb3BlcmF0b3IgaXMgR3Qgb3IgTHQsIHRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBoYXZlIGEgc2luZ2xlIGVsZW1lbnQsIHdoaWNoIHdpbGwgYmUgaW50ZXJwcmV0ZWQgYXMgYW4gaW50ZWdlci4gVGhpcyBhcnJheSBpcyByZXBsYWNlZCBkdXJpbmcgYSBzdHJhdGVnaWMgbWVyZ2UgcGF0Y2guIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifX0sInJlcXVpcmVkIjpbImtleSIsIm9wZXJhdG9yIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sIm1hdGNoRmllbGRzIjp7ImRlc2NyaXB0aW9uIjoiQSBsaXN0IG9mIG5vZGUgc2VsZWN0b3IgcmVxdWlyZW1lbnRzIGJ5IG5vZGUncyBmaWVsZHMuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJBIG5vZGUgc2VsZWN0b3IgcmVxdWlyZW1lbnQgaXMgYSBzZWxlY3RvciB0aGF0IGNvbnRhaW5zIHZhbHVlcywgYSBrZXksIGFuZCBhbiBvcGVyYXRvciB0aGF0IHJlbGF0ZXMgdGhlIGtleSBhbmQgdmFsdWVzLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoiVGhlIGxhYmVsIGtleSB0aGF0IHRoZSBzZWxlY3RvciBhcHBsaWVzIHRvLiIsInR5cGUiOiJzdHJpbmcifSwib3BlcmF0b3IiOnsiZGVzY3JpcHRpb24iOiJSZXByZXNlbnRzIGEga2V5J3MgcmVsYXRpb25zaGlwIHRvIGEgc2V0IG9mIHZhbHVlcy4gVmFsaWQgb3BlcmF0b3JzIGFyZSBJbiwgTm90SW4sIEV4aXN0cywgRG9lc05vdEV4aXN0LiBHdCwgYW5kIEx0LiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWVzIjp7ImRlc2NyaXB0aW9uIjoiQW4gYXJyYXkgb2Ygc3RyaW5nIHZhbHVlcy4gSWYgdGhlIG9wZXJhdG9yIGlzIEluIG9yIE5vdEluLCB0aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgbm9uLWVtcHR5LiBJZiB0aGUgb3BlcmF0b3IgaXMgRXhpc3RzIG9yIERvZXNOb3RFeGlzdCwgdGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIGVtcHR5LiBJZiB0aGUgb3BlcmF0b3IgaXMgR3Qgb3IgTHQsIHRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBoYXZlIGEgc2luZ2xlIGVsZW1lbnQsIHdoaWNoIHdpbGwgYmUgaW50ZXJwcmV0ZWQgYXMgYW4gaW50ZWdlci4gVGhpcyBhcnJheSBpcyByZXBsYWNlZCBkdXJpbmcgYSBzdHJhdGVnaWMgbWVyZ2UgcGF0Y2guIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifX0sInJlcXVpcmVkIjpbImtleSIsIm9wZXJhdG9yIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In19LCJ0eXBlIjoib2JqZWN0IiwieC1rdWJlcm5ldGVzLW1hcC10eXBlIjoiYXRvbWljIn0sIndlaWdodCI6eyJkZXNjcmlwdGlvbiI6IldlaWdodCBhc3NvY2lhdGVkIHdpdGggbWF0Y2hpbmcgdGhlIGNvcnJlc3BvbmRpbmcgbm9kZVNlbGVjdG9yVGVybSwgaW4gdGhlIHJhbmdlIDEtMTAwLiIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifX0sInJlcXVpcmVkIjpbInByZWZlcmVuY2UiLCJ3ZWlnaHQiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwicmVxdWlyZWREdXJpbmdTY2hlZHVsaW5nSWdub3JlZER1cmluZ0V4ZWN1dGlvbiI6eyJkZXNjcmlwdGlvbiI6IklmIHRoZSBhZmZpbml0eSByZXF1aXJlbWVudHMgc3BlY2lmaWVkIGJ5IHRoaXMgZmllbGQgYXJlIG5vdCBtZXQgYXQgc2NoZWR1bGluZyB0aW1lLCB0aGUgcG9kIHdpbGwgbm90IGJlIHNjaGVkdWxlZCBvbnRvIHRoZSBub2RlLiBJZiB0aGUgYWZmaW5pdHkgcmVxdWlyZW1lbnRzIHNwZWNpZmllZCBieSB0aGlzIGZpZWxkIGNlYXNlIHRvIGJlIG1ldCBhdCBzb21lIHBvaW50IGR1cmluZyBwb2QgZXhlY3V0aW9uIChlLmcuIGR1ZSB0byBhbiB1cGRhdGUpLCB0aGUgc3lzdGVtIG1heSBvciBtYXkgbm90IHRyeSB0byBldmVudHVhbGx5IGV2aWN0IHRoZSBwb2QgZnJvbSBpdHMgbm9kZS4iLCJwcm9wZXJ0aWVzIjp7Im5vZGVTZWxlY3RvclRlcm1zIjp7ImRlc2NyaXB0aW9uIjoiUmVxdWlyZWQuIEEgbGlzdCBvZiBub2RlIHNlbGVjdG9yIHRlcm1zLiBUaGUgdGVybXMgYXJlIE9SZWQuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJBIG51bGwgb3IgZW1wdHkgbm9kZSBzZWxlY3RvciB0ZXJtIG1hdGNoZXMgbm8gb2JqZWN0cy4gVGhlIHJlcXVpcmVtZW50cyBvZiB0aGVtIGFyZSBBTkRlZC4gVGhlIFRvcG9sb2d5U2VsZWN0b3JUZXJtIHR5cGUgaW1wbGVtZW50cyBhIHN1YnNldCBvZiB0aGUgTm9kZVNlbGVjdG9yVGVybS4iLCJwcm9wZXJ0aWVzIjp7Im1hdGNoRXhwcmVzc2lvbnMiOnsiZGVzY3JpcHRpb24iOiJBIGxpc3Qgb2Ygbm9kZSBzZWxlY3RvciByZXF1aXJlbWVudHMgYnkgbm9kZSdzIGxhYmVscy4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkEgbm9kZSBzZWxlY3RvciByZXF1aXJlbWVudCBpcyBhIHNlbGVjdG9yIHRoYXQgY29udGFpbnMgdmFsdWVzLCBhIGtleSwgYW5kIGFuIG9wZXJhdG9yIHRoYXQgcmVsYXRlcyB0aGUga2V5IGFuZCB2YWx1ZXMuIiwicHJvcGVydGllcyI6eyJrZXkiOnsiZGVzY3JpcHRpb24iOiJUaGUgbGFiZWwga2V5IHRoYXQgdGhlIHNlbGVjdG9yIGFwcGxpZXMgdG8uIiwidHlwZSI6InN0cmluZyJ9LCJvcGVyYXRvciI6eyJkZXNjcmlwdGlvbiI6IlJlcHJlc2VudHMgYSBrZXkncyByZWxhdGlvbnNoaXAgdG8gYSBzZXQgb2YgdmFsdWVzLiBWYWxpZCBvcGVyYXRvcnMgYXJlIEluLCBOb3RJbiwgRXhpc3RzLCBEb2VzTm90RXhpc3QuIEd0LCBhbmQgTHQuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZXMiOnsiZGVzY3JpcHRpb24iOiJBbiBhcnJheSBvZiBzdHJpbmcgdmFsdWVzLiBJZiB0aGUgb3BlcmF0b3IgaXMgSW4gb3IgTm90SW4sIHRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBub24tZW1wdHkuIElmIHRoZSBvcGVyYXRvciBpcyBFeGlzdHMgb3IgRG9lc05vdEV4aXN0LCB0aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgZW1wdHkuIElmIHRoZSBvcGVyYXRvciBpcyBHdCBvciBMdCwgdGhlIHZhbHVlcyBhcnJheSBtdXN0IGhhdmUgYSBzaW5nbGUgZWxlbWVudCwgd2hpY2ggd2lsbCBiZSBpbnRlcnByZXRlZCBhcyBhbiBpbnRlZ2VyLiBUaGlzIGFycmF5IGlzIHJlcGxhY2VkIGR1cmluZyBhIHN0cmF0ZWdpYyBtZXJnZSBwYXRjaC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9fSwicmVxdWlyZWQiOlsia2V5Iiwib3BlcmF0b3IiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwibWF0Y2hGaWVsZHMiOnsiZGVzY3JpcHRpb24iOiJBIGxpc3Qgb2Ygbm9kZSBzZWxlY3RvciByZXF1aXJlbWVudHMgYnkgbm9kZSdzIGZpZWxkcy4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkEgbm9kZSBzZWxlY3RvciByZXF1aXJlbWVudCBpcyBhIHNlbGVjdG9yIHRoYXQgY29udGFpbnMgdmFsdWVzLCBhIGtleSwgYW5kIGFuIG9wZXJhdG9yIHRoYXQgcmVsYXRlcyB0aGUga2V5IGFuZCB2YWx1ZXMuIiwicHJvcGVydGllcyI6eyJrZXkiOnsiZGVzY3JpcHRpb24iOiJUaGUgbGFiZWwga2V5IHRoYXQgdGhlIHNlbGVjdG9yIGFwcGxpZXMgdG8uIiwidHlwZSI6InN0cmluZyJ9LCJvcGVyYXRvciI6eyJkZXNjcmlwdGlvbiI6IlJlcHJlc2VudHMgYSBrZXkncyByZWxhdGlvbnNoaXAgdG8gYSBzZXQgb2YgdmFsdWVzLiBWYWxpZCBvcGVyYXRvcnMgYXJlIEluLCBOb3RJbiwgRXhpc3RzLCBEb2VzTm90RXhpc3QuIEd0LCBhbmQgTHQuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZXMiOnsiZGVzY3JpcHRpb24iOiJBbiBhcnJheSBvZiBzdHJpbmcgdmFsdWVzLiBJZiB0aGUgb3BlcmF0b3IgaXMgSW4gb3IgTm90SW4sIHRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBub24tZW1wdHkuIElmIHRoZSBvcGVyYXRvciBpcyBFeGlzdHMgb3IgRG9lc05vdEV4aXN0LCB0aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgZW1wdHkuIElmIHRoZSBvcGVyYXRvciBpcyBHdCBvciBMdCwgdGhlIHZhbHVlcyBhcnJheSBtdXN0IGhhdmUgYSBzaW5nbGUgZWxlbWVudCwgd2hpY2ggd2lsbCBiZSBpbnRlcnByZXRlZCBhcyBhbiBpbnRlZ2VyLiBUaGlzIGFycmF5IGlzIHJlcGxhY2VkIGR1cmluZyBhIHN0cmF0ZWdpYyBtZXJnZSBwYXRjaC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9fSwicmVxdWlyZWQiOlsia2V5Iiwib3BlcmF0b3IiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifX0sInR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtbWFwLXR5cGUiOiJhdG9taWMifSwidHlwZSI6ImFycmF5In19LCJyZXF1aXJlZCI6WyJub2RlU2VsZWN0b3JUZXJtcyJdLCJ0eXBlIjoib2JqZWN0IiwieC1rdWJlcm5ldGVzLW1hcC10eXBlIjoiYXRvbWljIn19LCJ0eXBlIjoib2JqZWN0In0sInBvZEFmZmluaXR5Ijp7ImRlc2NyaXB0aW9uIjoiRGVzY3JpYmVzIHBvZCBhZmZpbml0eSBzY2hlZHVsaW5nIHJ1bGVzIChlLmcuIGNvLWxvY2F0ZSB0aGlzIHBvZCBpbiB0aGUgc2FtZSBub2RlLCB6b25lLCBldGMuIGFzIHNvbWUgb3RoZXIgcG9kKHMpKS4iLCJwcm9wZXJ0aWVzIjp7InByZWZlcnJlZER1cmluZ1NjaGVkdWxpbmdJZ25vcmVkRHVyaW5nRXhlY3V0aW9uIjp7ImRlc2NyaXB0aW9uIjoiVGhlIHNjaGVkdWxlciB3aWxsIHByZWZlciB0byBzY2hlZHVsZSBwb2RzIHRvIG5vZGVzIHRoYXQgc2F0aXNmeSB0aGUgYWZmaW5pdHkgZXhwcmVzc2lvbnMgc3BlY2lmaWVkIGJ5IHRoaXMgZmllbGQsIGJ1dCBpdCBtYXkgY2hvb3NlIGEgbm9kZSB0aGF0IHZpb2xhdGVzIG9uZSBvciBtb3JlIG9mIHRoZSBleHByZXNzaW9ucy4gVGhlIG5vZGUgdGhhdCBpcyBtb3N0IHByZWZlcnJlZCBpcyB0aGUgb25lIHdpdGggdGhlIGdyZWF0ZXN0IHN1bSBvZiB3ZWlnaHRzLCBpLmUuIGZvciBlYWNoIG5vZGUgdGhhdCBtZWV0cyBhbGwgb2YgdGhlIHNjaGVkdWxpbmcgcmVxdWlyZW1lbnRzIChyZXNvdXJjZSByZXF1ZXN0LCByZXF1aXJlZER1cmluZ1NjaGVkdWxpbmcgYWZmaW5pdHkgZXhwcmVzc2lvbnMsIGV0Yy4pLCBjb21wdXRlIGEgc3VtIGJ5IGl0ZXJhdGluZyB0aHJvdWdoIHRoZSBlbGVtZW50cyBvZiB0aGlzIGZpZWxkIGFuZCBhZGRpbmcgXCJ3ZWlnaHRcIiB0byB0aGUgc3VtIGlmIHRoZSBub2RlIGhhcyBwb2RzIHdoaWNoIG1hdGNoZXMgdGhlIGNvcnJlc3BvbmRpbmcgcG9kQWZmaW5pdHlUZXJtOyB0aGUgbm9kZShzKSB3aXRoIHRoZSBoaWdoZXN0IHN1bSBhcmUgdGhlIG1vc3QgcHJlZmVycmVkLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiVGhlIHdlaWdodHMgb2YgYWxsIG9mIHRoZSBtYXRjaGVkIFdlaWdodGVkUG9kQWZmaW5pdHlUZXJtIGZpZWxkcyBhcmUgYWRkZWQgcGVyLW5vZGUgdG8gZmluZCB0aGUgbW9zdCBwcmVmZXJyZWQgbm9kZShzKSIsInByb3BlcnRpZXMiOnsicG9kQWZmaW5pdHlUZXJtIjp7ImRlc2NyaXB0aW9uIjoiUmVxdWlyZWQuIEEgcG9kIGFmZmluaXR5IHRlcm0sIGFzc29jaWF0ZWQgd2l0aCB0aGUgY29ycmVzcG9uZGluZyB3ZWlnaHQuIiwicHJvcGVydGllcyI6eyJsYWJlbFNlbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoiQSBsYWJlbCBxdWVyeSBvdmVyIGEgc2V0IG9mIHJlc291cmNlcywgaW4gdGhpcyBjYXNlIHBvZHMuIiwicHJvcGVydGllcyI6eyJtYXRjaEV4cHJlc3Npb25zIjp7ImRlc2NyaXB0aW9uIjoibWF0Y2hFeHByZXNzaW9ucyBpcyBhIGxpc3Qgb2YgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnRzLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkEgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnQgaXMgYSBzZWxlY3RvciB0aGF0IGNvbnRhaW5zIHZhbHVlcywgYSBrZXksIGFuZCBhbiBvcGVyYXRvciB0aGF0IHJlbGF0ZXMgdGhlIGtleSBhbmQgdmFsdWVzLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoia2V5IGlzIHRoZSBsYWJlbCBrZXkgdGhhdCB0aGUgc2VsZWN0b3IgYXBwbGllcyB0by4iLCJ0eXBlIjoic3RyaW5nIn0sIm9wZXJhdG9yIjp7ImRlc2NyaXB0aW9uIjoib3BlcmF0b3IgcmVwcmVzZW50cyBhIGtleSdzIHJlbGF0aW9uc2hpcCB0byBhIHNldCBvZiB2YWx1ZXMuIFZhbGlkIG9wZXJhdG9ycyBhcmUgSW4sIE5vdEluLCBFeGlzdHMgYW5kIERvZXNOb3RFeGlzdC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlcyI6eyJkZXNjcmlwdGlvbiI6InZhbHVlcyBpcyBhbiBhcnJheSBvZiBzdHJpbmcgdmFsdWVzLiBJZiB0aGUgb3BlcmF0b3IgaXMgSW4gb3IgTm90SW4sIHRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBub24tZW1wdHkuIElmIHRoZSBvcGVyYXRvciBpcyBFeGlzdHMgb3IgRG9lc05vdEV4aXN0LCB0aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgZW1wdHkuIFRoaXMgYXJyYXkgaXMgcmVwbGFjZWQgZHVyaW5nIGEgc3RyYXRlZ2ljIG1lcmdlIHBhdGNoLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In19LCJyZXF1aXJlZCI6WyJrZXkiLCJvcGVyYXRvciJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJtYXRjaExhYmVscyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJ0eXBlIjoic3RyaW5nIn0sImRlc2NyaXB0aW9uIjoibWF0Y2hMYWJlbHMgaXMgYSBtYXAgb2Yge2tleSx2YWx1ZX0gcGFpcnMuIEEgc2luZ2xlIHtrZXksdmFsdWV9IGluIHRoZSBtYXRjaExhYmVscyBtYXAgaXMgZXF1aXZhbGVudCB0byBhbiBlbGVtZW50IG9mIG1hdGNoRXhwcmVzc2lvbnMsIHdob3NlIGtleSBmaWVsZCBpcyBcImtleVwiLCB0aGUgb3BlcmF0b3IgaXMgXCJJblwiLCBhbmQgdGhlIHZhbHVlcyBhcnJheSBjb250YWlucyBvbmx5IFwidmFsdWVcIi4gVGhlIHJlcXVpcmVtZW50cyBhcmUgQU5EZWQuIiwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1tYXAtdHlwZSI6ImF0b21pYyJ9LCJuYW1lc3BhY2VTZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6IkEgbGFiZWwgcXVlcnkgb3ZlciB0aGUgc2V0IG9mIG5hbWVzcGFjZXMgdGhhdCB0aGUgdGVybSBhcHBsaWVzIHRvLiBUaGUgdGVybSBpcyBhcHBsaWVkIHRvIHRoZSB1bmlvbiBvZiB0aGUgbmFtZXNwYWNlcyBzZWxlY3RlZCBieSB0aGlzIGZpZWxkIGFuZCB0aGUgb25lcyBsaXN0ZWQgaW4gdGhlIG5hbWVzcGFjZXMgZmllbGQuIG51bGwgc2VsZWN0b3IgYW5kIG51bGwgb3IgZW1wdHkgbmFtZXNwYWNlcyBsaXN0IG1lYW5zIFwidGhpcyBwb2QncyBuYW1lc3BhY2VcIi4gQW4gZW1wdHkgc2VsZWN0b3IgKHt9KSBtYXRjaGVzIGFsbCBuYW1lc3BhY2VzLiIsInByb3BlcnRpZXMiOnsibWF0Y2hFeHByZXNzaW9ucyI6eyJkZXNjcmlwdGlvbiI6Im1hdGNoRXhwcmVzc2lvbnMgaXMgYSBsaXN0IG9mIGxhYmVsIHNlbGVjdG9yIHJlcXVpcmVtZW50cy4gVGhlIHJlcXVpcmVtZW50cyBhcmUgQU5EZWQuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJBIGxhYmVsIHNlbGVjdG9yIHJlcXVpcmVtZW50IGlzIGEgc2VsZWN0b3IgdGhhdCBjb250YWlucyB2YWx1ZXMsIGEga2V5LCBhbmQgYW4gb3BlcmF0b3IgdGhhdCByZWxhdGVzIHRoZSBrZXkgYW5kIHZhbHVlcy4iLCJwcm9wZXJ0aWVzIjp7ImtleSI6eyJkZXNjcmlwdGlvbiI6ImtleSBpcyB0aGUgbGFiZWwga2V5IHRoYXQgdGhlIHNlbGVjdG9yIGFwcGxpZXMgdG8uIiwidHlwZSI6InN0cmluZyJ9LCJvcGVyYXRvciI6eyJkZXNjcmlwdGlvbiI6Im9wZXJhdG9yIHJlcHJlc2VudHMgYSBrZXkncyByZWxhdGlvbnNoaXAgdG8gYSBzZXQgb2YgdmFsdWVzLiBWYWxpZCBvcGVyYXRvcnMgYXJlIEluLCBOb3RJbiwgRXhpc3RzIGFuZCBEb2VzTm90RXhpc3QuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZXMiOnsiZGVzY3JpcHRpb24iOiJ2YWx1ZXMgaXMgYW4gYXJyYXkgb2Ygc3RyaW5nIHZhbHVlcy4gSWYgdGhlIG9wZXJhdG9yIGlzIEluIG9yIE5vdEluLCB0aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgbm9uLWVtcHR5LiBJZiB0aGUgb3BlcmF0b3IgaXMgRXhpc3RzIG9yIERvZXNOb3RFeGlzdCwgdGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIGVtcHR5LiBUaGlzIGFycmF5IGlzIHJlcGxhY2VkIGR1cmluZyBhIHN0cmF0ZWdpYyBtZXJnZSBwYXRjaC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9fSwicmVxdWlyZWQiOlsia2V5Iiwib3BlcmF0b3IiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwibWF0Y2hMYWJlbHMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6Im1hdGNoTGFiZWxzIGlzIGEgbWFwIG9mIHtrZXksdmFsdWV9IHBhaXJzLiBBIHNpbmdsZSB7a2V5LHZhbHVlfSBpbiB0aGUgbWF0Y2hMYWJlbHMgbWFwIGlzIGVxdWl2YWxlbnQgdG8gYW4gZWxlbWVudCBvZiBtYXRjaEV4cHJlc3Npb25zLCB3aG9zZSBrZXkgZmllbGQgaXMgXCJrZXlcIiwgdGhlIG9wZXJhdG9yIGlzIFwiSW5cIiwgYW5kIHRoZSB2YWx1ZXMgYXJyYXkgY29udGFpbnMgb25seSBcInZhbHVlXCIuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtbWFwLXR5cGUiOiJhdG9taWMifSwibmFtZXNwYWNlcyI6eyJkZXNjcmlwdGlvbiI6Im5hbWVzcGFjZXMgc3BlY2lmaWVzIGEgc3RhdGljIGxpc3Qgb2YgbmFtZXNwYWNlIG5hbWVzIHRoYXQgdGhlIHRlcm0gYXBwbGllcyB0by4gVGhlIHRlcm0gaXMgYXBwbGllZCB0byB0aGUgdW5pb24gb2YgdGhlIG5hbWVzcGFjZXMgbGlzdGVkIGluIHRoaXMgZmllbGQgYW5kIHRoZSBvbmVzIHNlbGVjdGVkIGJ5IG5hbWVzcGFjZVNlbGVjdG9yLiBudWxsIG9yIGVtcHR5IG5hbWVzcGFjZXMgbGlzdCBhbmQgbnVsbCBuYW1lc3BhY2VTZWxlY3RvciBtZWFucyBcInRoaXMgcG9kJ3MgbmFtZXNwYWNlXCIuIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifSwidG9wb2xvZ3lLZXkiOnsiZGVzY3JpcHRpb24iOiJUaGlzIHBvZCBzaG91bGQgYmUgY28tbG9jYXRlZCAoYWZmaW5pdHkpIG9yIG5vdCBjby1sb2NhdGVkIChhbnRpLWFmZmluaXR5KSB3aXRoIHRoZSBwb2RzIG1hdGNoaW5nIHRoZSBsYWJlbFNlbGVjdG9yIGluIHRoZSBzcGVjaWZpZWQgbmFtZXNwYWNlcywgd2hlcmUgY28tbG9jYXRlZCBpcyBkZWZpbmVkIGFzIHJ1bm5pbmcgb24gYSBub2RlIHdob3NlIHZhbHVlIG9mIHRoZSBsYWJlbCB3aXRoIGtleSB0b3BvbG9neUtleSBtYXRjaGVzIHRoYXQgb2YgYW55IG5vZGUgb24gd2hpY2ggYW55IG9mIHRoZSBzZWxlY3RlZCBwb2RzIGlzIHJ1bm5pbmcuIEVtcHR5IHRvcG9sb2d5S2V5IGlzIG5vdCBhbGxvd2VkLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbInRvcG9sb2d5S2V5Il0sInR5cGUiOiJvYmplY3QifSwid2VpZ2h0Ijp7ImRlc2NyaXB0aW9uIjoid2VpZ2h0IGFzc29jaWF0ZWQgd2l0aCBtYXRjaGluZyB0aGUgY29ycmVzcG9uZGluZyBwb2RBZmZpbml0eVRlcm0sIGluIHRoZSByYW5nZSAxLTEwMC4iLCJmb3JtYXQiOiJpbnQzMiIsInR5cGUiOiJpbnRlZ2VyIn19LCJyZXF1aXJlZCI6WyJwb2RBZmZpbml0eVRlcm0iLCJ3ZWlnaHQiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwicmVxdWlyZWREdXJpbmdTY2hlZHVsaW5nSWdub3JlZER1cmluZ0V4ZWN1dGlvbiI6eyJkZXNjcmlwdGlvbiI6IklmIHRoZSBhZmZpbml0eSByZXF1aXJlbWVudHMgc3BlY2lmaWVkIGJ5IHRoaXMgZmllbGQgYXJlIG5vdCBtZXQgYXQgc2NoZWR1bGluZyB0aW1lLCB0aGUgcG9kIHdpbGwgbm90IGJlIHNjaGVkdWxlZCBvbnRvIHRoZSBub2RlLiBJZiB0aGUgYWZmaW5pdHkgcmVxdWlyZW1lbnRzIHNwZWNpZmllZCBieSB0aGlzIGZpZWxkIGNlYXNlIHRvIGJlIG1ldCBhdCBzb21lIHBvaW50IGR1cmluZyBwb2QgZXhlY3V0aW9uIChlLmcuIGR1ZSB0byBhIHBvZCBsYWJlbCB1cGRhdGUpLCB0aGUgc3lzdGVtIG1heSBvciBtYXkgbm90IHRyeSB0byBldmVudHVhbGx5IGV2aWN0IHRoZSBwb2QgZnJvbSBpdHMgbm9kZS4gV2hlbiB0aGVyZSBhcmUgbXVsdGlwbGUgZWxlbWVudHMsIHRoZSBsaXN0cyBvZiBub2RlcyBjb3JyZXNwb25kaW5nIHRvIGVhY2ggcG9kQWZmaW5pdHlUZXJtIGFyZSBpbnRlcnNlY3RlZCwgaS5lLiBhbGwgdGVybXMgbXVzdCBiZSBzYXRpc2ZpZWQuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJEZWZpbmVzIGEgc2V0IG9mIHBvZHMgKG5hbWVseSB0aG9zZSBtYXRjaGluZyB0aGUgbGFiZWxTZWxlY3RvciByZWxhdGl2ZSB0byB0aGUgZ2l2ZW4gbmFtZXNwYWNlKHMpKSB0aGF0IHRoaXMgcG9kIHNob3VsZCBiZSBjby1sb2NhdGVkIChhZmZpbml0eSkgb3Igbm90IGNvLWxvY2F0ZWQgKGFudGktYWZmaW5pdHkpIHdpdGgsIHdoZXJlIGNvLWxvY2F0ZWQgaXMgZGVmaW5lZCBhcyBydW5uaW5nIG9uIGEgbm9kZSB3aG9zZSB2YWx1ZSBvZiB0aGUgbGFiZWwgd2l0aCBrZXkgXHUwMDNjdG9wb2xvZ3lLZXlcdTAwM2UgbWF0Y2hlcyB0aGF0IG9mIGFueSBub2RlIG9uIHdoaWNoIGEgcG9kIG9mIHRoZSBzZXQgb2YgcG9kcyBpcyBydW5uaW5nIiwicHJvcGVydGllcyI6eyJsYWJlbFNlbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoiQSBsYWJlbCBxdWVyeSBvdmVyIGEgc2V0IG9mIHJlc291cmNlcywgaW4gdGhpcyBjYXNlIHBvZHMuIiwicHJvcGVydGllcyI6eyJtYXRjaEV4cHJlc3Npb25zIjp7ImRlc2NyaXB0aW9uIjoibWF0Y2hFeHByZXNzaW9ucyBpcyBhIGxpc3Qgb2YgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnRzLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkEgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnQgaXMgYSBzZWxlY3RvciB0aGF0IGNvbnRhaW5zIHZhbHVlcywgYSBrZXksIGFuZCBhbiBvcGVyYXRvciB0aGF0IHJlbGF0ZXMgdGhlIGtleSBhbmQgdmFsdWVzLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoia2V5IGlzIHRoZSBsYWJlbCBrZXkgdGhhdCB0aGUgc2VsZWN0b3IgYXBwbGllcyB0by4iLCJ0eXBlIjoic3RyaW5nIn0sIm9wZXJhdG9yIjp7ImRlc2NyaXB0aW9uIjoib3BlcmF0b3IgcmVwcmVzZW50cyBhIGtleSdzIHJlbGF0aW9uc2hpcCB0byBhIHNldCBvZiB2YWx1ZXMuIFZhbGlkIG9wZXJhdG9ycyBhcmUgSW4sIE5vdEluLCBFeGlzdHMgYW5kIERvZXNOb3RFeGlzdC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlcyI6eyJkZXNjcmlwdGlvbiI6InZhbHVlcyBpcyBhbiBhcnJheSBvZiBzdHJpbmcgdmFsdWVzLiBJZiB0aGUgb3BlcmF0b3IgaXMgSW4gb3IgTm90SW4sIHRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBub24tZW1wdHkuIElmIHRoZSBvcGVyYXRvciBpcyBFeGlzdHMgb3IgRG9lc05vdEV4aXN0LCB0aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgZW1wdHkuIFRoaXMgYXJyYXkgaXMgcmVwbGFjZWQgZHVyaW5nIGEgc3RyYXRlZ2ljIG1lcmdlIHBhdGNoLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In19LCJyZXF1aXJlZCI6WyJrZXkiLCJvcGVyYXRvciJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJtYXRjaExhYmVscyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJ0eXBlIjoic3RyaW5nIn0sImRlc2NyaXB0aW9uIjoibWF0Y2hMYWJlbHMgaXMgYSBtYXAgb2Yge2tleSx2YWx1ZX0gcGFpcnMuIEEgc2luZ2xlIHtrZXksdmFsdWV9IGluIHRoZSBtYXRjaExhYmVscyBtYXAgaXMgZXF1aXZhbGVudCB0byBhbiBlbGVtZW50IG9mIG1hdGNoRXhwcmVzc2lvbnMsIHdob3NlIGtleSBmaWVsZCBpcyBcImtleVwiLCB0aGUgb3BlcmF0b3IgaXMgXCJJblwiLCBhbmQgdGhlIHZhbHVlcyBhcnJheSBjb250YWlucyBvbmx5IFwidmFsdWVcIi4gVGhlIHJlcXVpcmVtZW50cyBhcmUgQU5EZWQuIiwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1tYXAtdHlwZSI6ImF0b21pYyJ9LCJuYW1lc3BhY2VTZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6IkEgbGFiZWwgcXVlcnkgb3ZlciB0aGUgc2V0IG9mIG5hbWVzcGFjZXMgdGhhdCB0aGUgdGVybSBhcHBsaWVzIHRvLiBUaGUgdGVybSBpcyBhcHBsaWVkIHRvIHRoZSB1bmlvbiBvZiB0aGUgbmFtZXNwYWNlcyBzZWxlY3RlZCBieSB0aGlzIGZpZWxkIGFuZCB0aGUgb25lcyBsaXN0ZWQgaW4gdGhlIG5hbWVzcGFjZXMgZmllbGQuIG51bGwgc2VsZWN0b3IgYW5kIG51bGwgb3IgZW1wdHkgbmFtZXNwYWNlcyBsaXN0IG1lYW5zIFwidGhpcyBwb2QncyBuYW1lc3BhY2VcIi4gQW4gZW1wdHkgc2VsZWN0b3IgKHt9KSBtYXRjaGVzIGFsbCBuYW1lc3BhY2VzLiIsInByb3BlcnRpZXMiOnsibWF0Y2hFeHByZXNzaW9ucyI6eyJkZXNjcmlwdGlvbiI6Im1hdGNoRXhwcmVzc2lvbnMgaXMgYSBsaXN0IG9mIGxhYmVsIHNlbGVjdG9yIHJlcXVpcmVtZW50cy4gVGhlIHJlcXVpcmVtZW50cyBhcmUgQU5EZWQuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJBIGxhYmVsIHNlbGVjdG9yIHJlcXVpcmVtZW50IGlzIGEgc2VsZWN0b3IgdGhhdCBjb250YWlucyB2YWx1ZXMsIGEga2V5LCBhbmQgYW4gb3BlcmF0b3IgdGhhdCByZWxhdGVzIHRoZSBrZXkgYW5kIHZhbHVlcy4iLCJwcm9wZXJ0aWVzIjp7ImtleSI6eyJkZXNjcmlwdGlvbiI6ImtleSBpcyB0aGUgbGFiZWwga2V5IHRoYXQgdGhlIHNlbGVjdG9yIGFwcGxpZXMgdG8uIiwidHlwZSI6InN0cmluZyJ9LCJvcGVyYXRvciI6eyJkZXNjcmlwdGlvbiI6Im9wZXJhdG9yIHJlcHJlc2VudHMgYSBrZXkncyByZWxhdGlvbnNoaXAgdG8gYSBzZXQgb2YgdmFsdWVzLiBWYWxpZCBvcGVyYXRvcnMgYXJlIEluLCBOb3RJbiwgRXhpc3RzIGFuZCBEb2VzTm90RXhpc3QuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZXMiOnsiZGVzY3JpcHRpb24iOiJ2YWx1ZXMgaXMgYW4gYXJyYXkgb2Ygc3RyaW5nIHZhbHVlcy4gSWYgdGhlIG9wZXJhdG9yIGlzIEluIG9yIE5vdEluLCB0aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgbm9uLWVtcHR5LiBJZiB0aGUgb3BlcmF0b3IgaXMgRXhpc3RzIG9yIERvZXNOb3RFeGlzdCwgdGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIGVtcHR5LiBUaGlzIGFycmF5IGlzIHJlcGxhY2VkIGR1cmluZyBhIHN0cmF0ZWdpYyBtZXJnZSBwYXRjaC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9fSwicmVxdWlyZWQiOlsia2V5Iiwib3BlcmF0b3IiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwibWF0Y2hMYWJlbHMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6Im1hdGNoTGFiZWxzIGlzIGEgbWFwIG9mIHtrZXksdmFsdWV9IHBhaXJzLiBBIHNpbmdsZSB7a2V5LHZhbHVlfSBpbiB0aGUgbWF0Y2hMYWJlbHMgbWFwIGlzIGVxdWl2YWxlbnQgdG8gYW4gZWxlbWVudCBvZiBtYXRjaEV4cHJlc3Npb25zLCB3aG9zZSBrZXkgZmllbGQgaXMgXCJrZXlcIiwgdGhlIG9wZXJhdG9yIGlzIFwiSW5cIiwgYW5kIHRoZSB2YWx1ZXMgYXJyYXkgY29udGFpbnMgb25seSBcInZhbHVlXCIuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtbWFwLXR5cGUiOiJhdG9taWMifSwibmFtZXNwYWNlcyI6eyJkZXNjcmlwdGlvbiI6Im5hbWVzcGFjZXMgc3BlY2lmaWVzIGEgc3RhdGljIGxpc3Qgb2YgbmFtZXNwYWNlIG5hbWVzIHRoYXQgdGhlIHRlcm0gYXBwbGllcyB0by4gVGhlIHRlcm0gaXMgYXBwbGllZCB0byB0aGUgdW5pb24gb2YgdGhlIG5hbWVzcGFjZXMgbGlzdGVkIGluIHRoaXMgZmllbGQgYW5kIHRoZSBvbmVzIHNlbGVjdGVkIGJ5IG5hbWVzcGFjZVNlbGVjdG9yLiBudWxsIG9yIGVtcHR5IG5hbWVzcGFjZXMgbGlzdCBhbmQgbnVsbCBuYW1lc3BhY2VTZWxlY3RvciBtZWFucyBcInRoaXMgcG9kJ3MgbmFtZXNwYWNlXCIuIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifSwidG9wb2xvZ3lLZXkiOnsiZGVzY3JpcHRpb24iOiJUaGlzIHBvZCBzaG91bGQgYmUgY28tbG9jYXRlZCAoYWZmaW5pdHkpIG9yIG5vdCBjby1sb2NhdGVkIChhbnRpLWFmZmluaXR5KSB3aXRoIHRoZSBwb2RzIG1hdGNoaW5nIHRoZSBsYWJlbFNlbGVjdG9yIGluIHRoZSBzcGVjaWZpZWQgbmFtZXNwYWNlcywgd2hlcmUgY28tbG9jYXRlZCBpcyBkZWZpbmVkIGFzIHJ1bm5pbmcgb24gYSBub2RlIHdob3NlIHZhbHVlIG9mIHRoZSBsYWJlbCB3aXRoIGtleSB0b3BvbG9neUtleSBtYXRjaGVzIHRoYXQgb2YgYW55IG5vZGUgb24gd2hpY2ggYW55IG9mIHRoZSBzZWxlY3RlZCBwb2RzIGlzIHJ1bm5pbmcuIEVtcHR5IHRvcG9sb2d5S2V5IGlzIG5vdCBhbGxvd2VkLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbInRvcG9sb2d5S2V5Il0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In19LCJ0eXBlIjoib2JqZWN0In0sInBvZEFudGlBZmZpbml0eSI6eyJkZXNjcmlwdGlvbiI6IkRlc2NyaWJlcyBwb2QgYW50aS1hZmZpbml0eSBzY2hlZHVsaW5nIHJ1bGVzIChlLmcuIGF2b2lkIHB1dHRpbmcgdGhpcyBwb2QgaW4gdGhlIHNhbWUgbm9kZSwgem9uZSwgZXRjLiBhcyBzb21lIG90aGVyIHBvZChzKSkuIiwicHJvcGVydGllcyI6eyJwcmVmZXJyZWREdXJpbmdTY2hlZHVsaW5nSWdub3JlZER1cmluZ0V4ZWN1dGlvbiI6eyJkZXNjcmlwdGlvbiI6IlRoZSBzY2hlZHVsZXIgd2lsbCBwcmVmZXIgdG8gc2NoZWR1bGUgcG9kcyB0byBub2RlcyB0aGF0IHNhdGlzZnkgdGhlIGFudGktYWZmaW5pdHkgZXhwcmVzc2lvbnMgc3BlY2lmaWVkIGJ5IHRoaXMgZmllbGQsIGJ1dCBpdCBtYXkgY2hvb3NlIGEgbm9kZSB0aGF0IHZpb2xhdGVzIG9uZSBvciBtb3JlIG9mIHRoZSBleHByZXNzaW9ucy4gVGhlIG5vZGUgdGhhdCBpcyBtb3N0IHByZWZlcnJlZCBpcyB0aGUgb25lIHdpdGggdGhlIGdyZWF0ZXN0IHN1bSBvZiB3ZWlnaHRzLCBpLmUuIGZvciBlYWNoIG5vZGUgdGhhdCBtZWV0cyBhbGwgb2YgdGhlIHNjaGVkdWxpbmcgcmVxdWlyZW1lbnRzIChyZXNvdXJjZSByZXF1ZXN0LCByZXF1aXJlZER1cmluZ1NjaGVkdWxpbmcgYW50aS1hZmZpbml0eSBleHByZXNzaW9ucywgZXRjLiksIGNvbXB1dGUgYSBzdW0gYnkgaXRlcmF0aW5nIHRocm91Z2ggdGhlIGVsZW1lbnRzIG9mIHRoaXMgZmllbGQgYW5kIGFkZGluZyBcIndlaWdodFwiIHRvIHRoZSBzdW0gaWYgdGhlIG5vZGUgaGFzIHBvZHMgd2hpY2ggbWF0Y2hlcyB0aGUgY29ycmVzcG9uZGluZyBwb2RBZmZpbml0eVRlcm07IHRoZSBub2RlKHMpIHdpdGggdGhlIGhpZ2hlc3Qgc3VtIGFyZSB0aGUgbW9zdCBwcmVmZXJyZWQuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJUaGUgd2VpZ2h0cyBvZiBhbGwgb2YgdGhlIG1hdGNoZWQgV2VpZ2h0ZWRQb2RBZmZpbml0eVRlcm0gZmllbGRzIGFyZSBhZGRlZCBwZXItbm9kZSB0byBmaW5kIHRoZSBtb3N0IHByZWZlcnJlZCBub2RlKHMpIiwicHJvcGVydGllcyI6eyJwb2RBZmZpbml0eVRlcm0iOnsiZGVzY3JpcHRpb24iOiJSZXF1aXJlZC4gQSBwb2QgYWZmaW5pdHkgdGVybSwgYXNzb2NpYXRlZCB3aXRoIHRoZSBjb3JyZXNwb25kaW5nIHdlaWdodC4iLCJwcm9wZXJ0aWVzIjp7ImxhYmVsU2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJBIGxhYmVsIHF1ZXJ5IG92ZXIgYSBzZXQgb2YgcmVzb3VyY2VzLCBpbiB0aGlzIGNhc2UgcG9kcy4iLCJwcm9wZXJ0aWVzIjp7Im1hdGNoRXhwcmVzc2lvbnMiOnsiZGVzY3JpcHRpb24iOiJtYXRjaEV4cHJlc3Npb25zIGlzIGEgbGlzdCBvZiBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudHMuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQSBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudCBpcyBhIHNlbGVjdG9yIHRoYXQgY29udGFpbnMgdmFsdWVzLCBhIGtleSwgYW5kIGFuIG9wZXJhdG9yIHRoYXQgcmVsYXRlcyB0aGUga2V5IGFuZCB2YWx1ZXMuIiwicHJvcGVydGllcyI6eyJrZXkiOnsiZGVzY3JpcHRpb24iOiJrZXkgaXMgdGhlIGxhYmVsIGtleSB0aGF0IHRoZSBzZWxlY3RvciBhcHBsaWVzIHRvLiIsInR5cGUiOiJzdHJpbmcifSwib3BlcmF0b3IiOnsiZGVzY3JpcHRpb24iOiJvcGVyYXRvciByZXByZXNlbnRzIGEga2V5J3MgcmVsYXRpb25zaGlwIHRvIGEgc2V0IG9mIHZhbHVlcy4gVmFsaWQgb3BlcmF0b3JzIGFyZSBJbiwgTm90SW4sIEV4aXN0cyBhbmQgRG9lc05vdEV4aXN0LiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWVzIjp7ImRlc2NyaXB0aW9uIjoidmFsdWVzIGlzIGFuIGFycmF5IG9mIHN0cmluZyB2YWx1ZXMuIElmIHRoZSBvcGVyYXRvciBpcyBJbiBvciBOb3RJbiwgdGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIG5vbi1lbXB0eS4gSWYgdGhlIG9wZXJhdG9yIGlzIEV4aXN0cyBvciBEb2VzTm90RXhpc3QsIHRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBlbXB0eS4gVGhpcyBhcnJheSBpcyByZXBsYWNlZCBkdXJpbmcgYSBzdHJhdGVnaWMgbWVyZ2UgcGF0Y2guIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifX0sInJlcXVpcmVkIjpbImtleSIsIm9wZXJhdG9yIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sIm1hdGNoTGFiZWxzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InR5cGUiOiJzdHJpbmcifSwiZGVzY3JpcHRpb24iOiJtYXRjaExhYmVscyBpcyBhIG1hcCBvZiB7a2V5LHZhbHVlfSBwYWlycy4gQSBzaW5nbGUge2tleSx2YWx1ZX0gaW4gdGhlIG1hdGNoTGFiZWxzIG1hcCBpcyBlcXVpdmFsZW50IHRvIGFuIGVsZW1lbnQgb2YgbWF0Y2hFeHByZXNzaW9ucywgd2hvc2Uga2V5IGZpZWxkIGlzIFwia2V5XCIsIHRoZSBvcGVyYXRvciBpcyBcIkluXCIsIGFuZCB0aGUgdmFsdWVzIGFycmF5IGNvbnRhaW5zIG9ubHkgXCJ2YWx1ZVwiLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4iLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0IiwieC1rdWJlcm5ldGVzLW1hcC10eXBlIjoiYXRvbWljIn0sIm5hbWVzcGFjZVNlbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoiQSBsYWJlbCBxdWVyeSBvdmVyIHRoZSBzZXQgb2YgbmFtZXNwYWNlcyB0aGF0IHRoZSB0ZXJtIGFwcGxpZXMgdG8uIFRoZSB0ZXJtIGlzIGFwcGxpZWQgdG8gdGhlIHVuaW9uIG9mIHRoZSBuYW1lc3BhY2VzIHNlbGVjdGVkIGJ5IHRoaXMgZmllbGQgYW5kIHRoZSBvbmVzIGxpc3RlZCBpbiB0aGUgbmFtZXNwYWNlcyBmaWVsZC4gbnVsbCBzZWxlY3RvciBhbmQgbnVsbCBvciBlbXB0eSBuYW1lc3BhY2VzIGxpc3QgbWVhbnMgXCJ0aGlzIHBvZCdzIG5hbWVzcGFjZVwiLiBBbiBlbXB0eSBzZWxlY3RvciAoe30pIG1hdGNoZXMgYWxsIG5hbWVzcGFjZXMuIiwicHJvcGVydGllcyI6eyJtYXRjaEV4cHJlc3Npb25zIjp7ImRlc2NyaXB0aW9uIjoibWF0Y2hFeHByZXNzaW9ucyBpcyBhIGxpc3Qgb2YgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnRzLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkEgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnQgaXMgYSBzZWxlY3RvciB0aGF0IGNvbnRhaW5zIHZhbHVlcywgYSBrZXksIGFuZCBhbiBvcGVyYXRvciB0aGF0IHJlbGF0ZXMgdGhlIGtleSBhbmQgdmFsdWVzLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoia2V5IGlzIHRoZSBsYWJlbCBrZXkgdGhhdCB0aGUgc2VsZWN0b3IgYXBwbGllcyB0by4iLCJ0eXBlIjoic3RyaW5nIn0sIm9wZXJhdG9yIjp7ImRlc2NyaXB0aW9uIjoib3BlcmF0b3IgcmVwcmVzZW50cyBhIGtleSdzIHJlbGF0aW9uc2hpcCB0byBhIHNldCBvZiB2YWx1ZXMuIFZhbGlkIG9wZXJhdG9ycyBhcmUgSW4sIE5vdEluLCBFeGlzdHMgYW5kIERvZXNOb3RFeGlzdC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlcyI6eyJkZXNjcmlwdGlvbiI6InZhbHVlcyBpcyBhbiBhcnJheSBvZiBzdHJpbmcgdmFsdWVzLiBJZiB0aGUgb3BlcmF0b3IgaXMgSW4gb3IgTm90SW4sIHRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBub24tZW1wdHkuIElmIHRoZSBvcGVyYXRvciBpcyBFeGlzdHMgb3IgRG9lc05vdEV4aXN0LCB0aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgZW1wdHkuIFRoaXMgYXJyYXkgaXMgcmVwbGFjZWQgZHVyaW5nIGEgc3RyYXRlZ2ljIG1lcmdlIHBhdGNoLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In19LCJyZXF1aXJlZCI6WyJrZXkiLCJvcGVyYXRvciJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJtYXRjaExhYmVscyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJ0eXBlIjoic3RyaW5nIn0sImRlc2NyaXB0aW9uIjoibWF0Y2hMYWJlbHMgaXMgYSBtYXAgb2Yge2tleSx2YWx1ZX0gcGFpcnMuIEEgc2luZ2xlIHtrZXksdmFsdWV9IGluIHRoZSBtYXRjaExhYmVscyBtYXAgaXMgZXF1aXZhbGVudCB0byBhbiBlbGVtZW50IG9mIG1hdGNoRXhwcmVzc2lvbnMsIHdob3NlIGtleSBmaWVsZCBpcyBcImtleVwiLCB0aGUgb3BlcmF0b3IgaXMgXCJJblwiLCBhbmQgdGhlIHZhbHVlcyBhcnJheSBjb250YWlucyBvbmx5IFwidmFsdWVcIi4gVGhlIHJlcXVpcmVtZW50cyBhcmUgQU5EZWQuIiwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1tYXAtdHlwZSI6ImF0b21pYyJ9LCJuYW1lc3BhY2VzIjp7ImRlc2NyaXB0aW9uIjoibmFtZXNwYWNlcyBzcGVjaWZpZXMgYSBzdGF0aWMgbGlzdCBvZiBuYW1lc3BhY2UgbmFtZXMgdGhhdCB0aGUgdGVybSBhcHBsaWVzIHRvLiBUaGUgdGVybSBpcyBhcHBsaWVkIHRvIHRoZSB1bmlvbiBvZiB0aGUgbmFtZXNwYWNlcyBsaXN0ZWQgaW4gdGhpcyBmaWVsZCBhbmQgdGhlIG9uZXMgc2VsZWN0ZWQgYnkgbmFtZXNwYWNlU2VsZWN0b3IuIG51bGwgb3IgZW1wdHkgbmFtZXNwYWNlcyBsaXN0IGFuZCBudWxsIG5hbWVzcGFjZVNlbGVjdG9yIG1lYW5zIFwidGhpcyBwb2QncyBuYW1lc3BhY2VcIi4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJ0b3BvbG9neUtleSI6eyJkZXNjcmlwdGlvbiI6IlRoaXMgcG9kIHNob3VsZCBiZSBjby1sb2NhdGVkIChhZmZpbml0eSkgb3Igbm90IGNvLWxvY2F0ZWQgKGFudGktYWZmaW5pdHkpIHdpdGggdGhlIHBvZHMgbWF0Y2hpbmcgdGhlIGxhYmVsU2VsZWN0b3IgaW4gdGhlIHNwZWNpZmllZCBuYW1lc3BhY2VzLCB3aGVyZSBjby1sb2NhdGVkIGlzIGRlZmluZWQgYXMgcnVubmluZyBvbiBhIG5vZGUgd2hvc2UgdmFsdWUgb2YgdGhlIGxhYmVsIHdpdGgga2V5IHRvcG9sb2d5S2V5IG1hdGNoZXMgdGhhdCBvZiBhbnkgbm9kZSBvbiB3aGljaCBhbnkgb2YgdGhlIHNlbGVjdGVkIHBvZHMgaXMgcnVubmluZy4gRW1wdHkgdG9wb2xvZ3lLZXkgaXMgbm90IGFsbG93ZWQuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsidG9wb2xvZ3lLZXkiXSwidHlwZSI6Im9iamVjdCJ9LCJ3ZWlnaHQiOnsiZGVzY3JpcHRpb24iOiJ3ZWlnaHQgYXNzb2NpYXRlZCB3aXRoIG1hdGNoaW5nIHRoZSBjb3JyZXNwb25kaW5nIHBvZEFmZmluaXR5VGVybSwgaW4gdGhlIHJhbmdlIDEtMTAwLiIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifX0sInJlcXVpcmVkIjpbInBvZEFmZmluaXR5VGVybSIsIndlaWdodCJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJyZXF1aXJlZER1cmluZ1NjaGVkdWxpbmdJZ25vcmVkRHVyaW5nRXhlY3V0aW9uIjp7ImRlc2NyaXB0aW9uIjoiSWYgdGhlIGFudGktYWZmaW5pdHkgcmVxdWlyZW1lbnRzIHNwZWNpZmllZCBieSB0aGlzIGZpZWxkIGFyZSBub3QgbWV0IGF0IHNjaGVkdWxpbmcgdGltZSwgdGhlIHBvZCB3aWxsIG5vdCBiZSBzY2hlZHVsZWQgb250byB0aGUgbm9kZS4gSWYgdGhlIGFudGktYWZmaW5pdHkgcmVxdWlyZW1lbnRzIHNwZWNpZmllZCBieSB0aGlzIGZpZWxkIGNlYXNlIHRvIGJlIG1ldCBhdCBzb21lIHBvaW50IGR1cmluZyBwb2QgZXhlY3V0aW9uIChlLmcuIGR1ZSB0byBhIHBvZCBsYWJlbCB1cGRhdGUpLCB0aGUgc3lzdGVtIG1heSBvciBtYXkgbm90IHRyeSB0byBldmVudHVhbGx5IGV2aWN0IHRoZSBwb2QgZnJvbSBpdHMgbm9kZS4gV2hlbiB0aGVyZSBhcmUgbXVsdGlwbGUgZWxlbWVudHMsIHRoZSBsaXN0cyBvZiBub2RlcyBjb3JyZXNwb25kaW5nIHRvIGVhY2ggcG9kQWZmaW5pdHlUZXJtIGFyZSBpbnRlcnNlY3RlZCwgaS5lLiBhbGwgdGVybXMgbXVzdCBiZSBzYXRpc2ZpZWQuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJEZWZpbmVzIGEgc2V0IG9mIHBvZHMgKG5hbWVseSB0aG9zZSBtYXRjaGluZyB0aGUgbGFiZWxTZWxlY3RvciByZWxhdGl2ZSB0byB0aGUgZ2l2ZW4gbmFtZXNwYWNlKHMpKSB0aGF0IHRoaXMgcG9kIHNob3VsZCBiZSBjby1sb2NhdGVkIChhZmZpbml0eSkgb3Igbm90IGNvLWxvY2F0ZWQgKGFudGktYWZmaW5pdHkpIHdpdGgsIHdoZXJlIGNvLWxvY2F0ZWQgaXMgZGVmaW5lZCBhcyBydW5uaW5nIG9uIGEgbm9kZSB3aG9zZSB2YWx1ZSBvZiB0aGUgbGFiZWwgd2l0aCBrZXkgXHUwMDNjdG9wb2xvZ3lLZXlcdTAwM2UgbWF0Y2hlcyB0aGF0IG9mIGFueSBub2RlIG9uIHdoaWNoIGEgcG9kIG9mIHRoZSBzZXQgb2YgcG9kcyBpcyBydW5uaW5nIiwicHJvcGVydGllcyI6eyJsYWJlbFNlbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoiQSBsYWJlbCBxdWVyeSBvdmVyIGEgc2V0IG9mIHJlc291cmNlcywgaW4gdGhpcyBjYXNlIHBvZHMuIiwicHJvcGVydGllcyI6eyJtYXRjaEV4cHJlc3Npb25zIjp7ImRlc2NyaXB0aW9uIjoibWF0Y2hFeHByZXNzaW9ucyBpcyBhIGxpc3Qgb2YgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnRzLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkEgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnQgaXMgYSBzZWxlY3RvciB0aGF0IGNvbnRhaW5zIHZhbHVlcywgYSBrZXksIGFuZCBhbiBvcGVyYXRvciB0aGF0IHJlbGF0ZXMgdGhlIGtleSBhbmQgdmFsdWVzLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoia2V5IGlzIHRoZSBsYWJlbCBrZXkgdGhhdCB0aGUgc2VsZWN0b3IgYXBwbGllcyB0by4iLCJ0eXBlIjoic3RyaW5nIn0sIm9wZXJhdG9yIjp7ImRlc2NyaXB0aW9uIjoib3BlcmF0b3IgcmVwcmVzZW50cyBhIGtleSdzIHJlbGF0aW9uc2hpcCB0byBhIHNldCBvZiB2YWx1ZXMuIFZhbGlkIG9wZXJhdG9ycyBhcmUgSW4sIE5vdEluLCBFeGlzdHMgYW5kIERvZXNOb3RFeGlzdC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlcyI6eyJkZXNjcmlwdGlvbiI6InZhbHVlcyBpcyBhbiBhcnJheSBvZiBzdHJpbmcgdmFsdWVzLiBJZiB0aGUgb3BlcmF0b3IgaXMgSW4gb3IgTm90SW4sIHRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBub24tZW1wdHkuIElmIHRoZSBvcGVyYXRvciBpcyBFeGlzdHMgb3IgRG9lc05vdEV4aXN0LCB0aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgZW1wdHkuIFRoaXMgYXJyYXkgaXMgcmVwbGFjZWQgZHVyaW5nIGEgc3RyYXRlZ2ljIG1lcmdlIHBhdGNoLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In19LCJyZXF1aXJlZCI6WyJrZXkiLCJvcGVyYXRvciJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJtYXRjaExhYmVscyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJ0eXBlIjoic3RyaW5nIn0sImRlc2NyaXB0aW9uIjoibWF0Y2hMYWJlbHMgaXMgYSBtYXAgb2Yge2tleSx2YWx1ZX0gcGFpcnMuIEEgc2luZ2xlIHtrZXksdmFsdWV9IGluIHRoZSBtYXRjaExhYmVscyBtYXAgaXMgZXF1aXZhbGVudCB0byBhbiBlbGVtZW50IG9mIG1hdGNoRXhwcmVzc2lvbnMsIHdob3NlIGtleSBmaWVsZCBpcyBcImtleVwiLCB0aGUgb3BlcmF0b3IgaXMgXCJJblwiLCBhbmQgdGhlIHZhbHVlcyBhcnJheSBjb250YWlucyBvbmx5IFwidmFsdWVcIi4gVGhlIHJlcXVpcmVtZW50cyBhcmUgQU5EZWQuIiwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1tYXAtdHlwZSI6ImF0b21pYyJ9LCJuYW1lc3BhY2VTZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6IkEgbGFiZWwgcXVlcnkgb3ZlciB0aGUgc2V0IG9mIG5hbWVzcGFjZXMgdGhhdCB0aGUgdGVybSBhcHBsaWVzIHRvLiBUaGUgdGVybSBpcyBhcHBsaWVkIHRvIHRoZSB1bmlvbiBvZiB0aGUgbmFtZXNwYWNlcyBzZWxlY3RlZCBieSB0aGlzIGZpZWxkIGFuZCB0aGUgb25lcyBsaXN0ZWQgaW4gdGhlIG5hbWVzcGFjZXMgZmllbGQuIG51bGwgc2VsZWN0b3IgYW5kIG51bGwgb3IgZW1wdHkgbmFtZXNwYWNlcyBsaXN0IG1lYW5zIFwidGhpcyBwb2QncyBuYW1lc3BhY2VcIi4gQW4gZW1wdHkgc2VsZWN0b3IgKHt9KSBtYXRjaGVzIGFsbCBuYW1lc3BhY2VzLiIsInByb3BlcnRpZXMiOnsibWF0Y2hFeHByZXNzaW9ucyI6eyJkZXNjcmlwdGlvbiI6Im1hdGNoRXhwcmVzc2lvbnMgaXMgYSBsaXN0IG9mIGxhYmVsIHNlbGVjdG9yIHJlcXVpcmVtZW50cy4gVGhlIHJlcXVpcmVtZW50cyBhcmUgQU5EZWQuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJBIGxhYmVsIHNlbGVjdG9yIHJlcXVpcmVtZW50IGlzIGEgc2VsZWN0b3IgdGhhdCBjb250YWlucyB2YWx1ZXMsIGEga2V5LCBhbmQgYW4gb3BlcmF0b3IgdGhhdCByZWxhdGVzIHRoZSBrZXkgYW5kIHZhbHVlcy4iLCJwcm9wZXJ0aWVzIjp7ImtleSI6eyJkZXNjcmlwdGlvbiI6ImtleSBpcyB0aGUgbGFiZWwga2V5IHRoYXQgdGhlIHNlbGVjdG9yIGFwcGxpZXMgdG8uIiwidHlwZSI6InN0cmluZyJ9LCJvcGVyYXRvciI6eyJkZXNjcmlwdGlvbiI6Im9wZXJhdG9yIHJlcHJlc2VudHMgYSBrZXkncyByZWxhdGlvbnNoaXAgdG8gYSBzZXQgb2YgdmFsdWVzLiBWYWxpZCBvcGVyYXRvcnMgYXJlIEluLCBOb3RJbiwgRXhpc3RzIGFuZCBEb2VzTm90RXhpc3QuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZXMiOnsiZGVzY3JpcHRpb24iOiJ2YWx1ZXMgaXMgYW4gYXJyYXkgb2Ygc3RyaW5nIHZhbHVlcy4gSWYgdGhlIG9wZXJhdG9yIGlzIEluIG9yIE5vdEluLCB0aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgbm9uLWVtcHR5LiBJZiB0aGUgb3BlcmF0b3IgaXMgRXhpc3RzIG9yIERvZXNOb3RFeGlzdCwgdGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIGVtcHR5LiBUaGlzIGFycmF5IGlzIHJlcGxhY2VkIGR1cmluZyBhIHN0cmF0ZWdpYyBtZXJnZSBwYXRjaC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9fSwicmVxdWlyZWQiOlsia2V5Iiwib3BlcmF0b3IiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwibWF0Y2hMYWJlbHMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6Im1hdGNoTGFiZWxzIGlzIGEgbWFwIG9mIHtrZXksdmFsdWV9IHBhaXJzLiBBIHNpbmdsZSB7a2V5LHZhbHVlfSBpbiB0aGUgbWF0Y2hMYWJlbHMgbWFwIGlzIGVxdWl2YWxlbnQgdG8gYW4gZWxlbWVudCBvZiBtYXRjaEV4cHJlc3Npb25zLCB3aG9zZSBrZXkgZmllbGQgaXMgXCJrZXlcIiwgdGhlIG9wZXJhdG9yIGlzIFwiSW5cIiwgYW5kIHRoZSB2YWx1ZXMgYXJyYXkgY29udGFpbnMgb25seSBcInZhbHVlXCIuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtbWFwLXR5cGUiOiJhdG9taWMifSwibmFtZXNwYWNlcyI6eyJkZXNjcmlwdGlvbiI6Im5hbWVzcGFjZXMgc3BlY2lmaWVzIGEgc3RhdGljIGxpc3Qgb2YgbmFtZXNwYWNlIG5hbWVzIHRoYXQgdGhlIHRlcm0gYXBwbGllcyB0by4gVGhlIHRlcm0gaXMgYXBwbGllZCB0byB0aGUgdW5pb24gb2YgdGhlIG5hbWVzcGFjZXMgbGlzdGVkIGluIHRoaXMgZmllbGQgYW5kIHRoZSBvbmVzIHNlbGVjdGVkIGJ5IG5hbWVzcGFjZVNlbGVjdG9yLiBudWxsIG9yIGVtcHR5IG5hbWVzcGFjZXMgbGlzdCBhbmQgbnVsbCBuYW1lc3BhY2VTZWxlY3RvciBtZWFucyBcInRoaXMgcG9kJ3MgbmFtZXNwYWNlXCIuIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifSwidG9wb2xvZ3lLZXkiOnsiZGVzY3JpcHRpb24iOiJUaGlzIHBvZCBzaG91bGQgYmUgY28tbG9jYXRlZCAoYWZmaW5pdHkpIG9yIG5vdCBjby1sb2NhdGVkIChhbnRpLWFmZmluaXR5KSB3aXRoIHRoZSBwb2RzIG1hdGNoaW5nIHRoZSBsYWJlbFNlbGVjdG9yIGluIHRoZSBzcGVjaWZpZWQgbmFtZXNwYWNlcywgd2hlcmUgY28tbG9jYXRlZCBpcyBkZWZpbmVkIGFzIHJ1bm5pbmcgb24gYSBub2RlIHdob3NlIHZhbHVlIG9mIHRoZSBsYWJlbCB3aXRoIGtleSB0b3BvbG9neUtleSBtYXRjaGVzIHRoYXQgb2YgYW55IG5vZGUgb24gd2hpY2ggYW55IG9mIHRoZSBzZWxlY3RlZCBwb2RzIGlzIHJ1bm5pbmcuIEVtcHR5IHRvcG9sb2d5S2V5IGlzIG5vdCBhbGxvd2VkLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbInRvcG9sb2d5S2V5Il0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In0sIm5vZGVTZWxlY3RvciI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJ0eXBlIjoic3RyaW5nIn0sImRlc2NyaXB0aW9uIjoiTm9kZVNlbGVjdG9yIiwidHlwZSI6Im9iamVjdCJ9LCJ0b2xlcmF0aW9ucyI6eyJkZXNjcmlwdGlvbiI6IlRvbGVyYXRpb25zIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJUaGUgcG9kIHRoaXMgVG9sZXJhdGlvbiBpcyBhdHRhY2hlZCB0byB0b2xlcmF0ZXMgYW55IHRhaW50IHRoYXQgbWF0Y2hlcyB0aGUgdHJpcGxlIFx1MDAzY2tleSx2YWx1ZSxlZmZlY3RcdTAwM2UgdXNpbmcgdGhlIG1hdGNoaW5nIG9wZXJhdG9yIFx1MDAzY29wZXJhdG9yXHUwMDNlLiIsInByb3BlcnRpZXMiOnsiZWZmZWN0Ijp7ImRlc2NyaXB0aW9uIjoiRWZmZWN0IGluZGljYXRlcyB0aGUgdGFpbnQgZWZmZWN0IHRvIG1hdGNoLiBFbXB0eSBtZWFucyBtYXRjaCBhbGwgdGFpbnQgZWZmZWN0cy4gV2hlbiBzcGVjaWZpZWQsIGFsbG93ZWQgdmFsdWVzIGFyZSBOb1NjaGVkdWxlLCBQcmVmZXJOb1NjaGVkdWxlIGFuZCBOb0V4ZWN1dGUuIiwidHlwZSI6InN0cmluZyJ9LCJrZXkiOnsiZGVzY3JpcHRpb24iOiJLZXkgaXMgdGhlIHRhaW50IGtleSB0aGF0IHRoZSB0b2xlcmF0aW9uIGFwcGxpZXMgdG8uIEVtcHR5IG1lYW5zIG1hdGNoIGFsbCB0YWludCBrZXlzLiBJZiB0aGUga2V5IGlzIGVtcHR5LCBvcGVyYXRvciBtdXN0IGJlIEV4aXN0czsgdGhpcyBjb21iaW5hdGlvbiBtZWFucyB0byBtYXRjaCBhbGwgdmFsdWVzIGFuZCBhbGwga2V5cy4iLCJ0eXBlIjoic3RyaW5nIn0sIm9wZXJhdG9yIjp7ImRlc2NyaXB0aW9uIjoiT3BlcmF0b3IgcmVwcmVzZW50cyBhIGtleSdzIHJlbGF0aW9uc2hpcCB0byB0aGUgdmFsdWUuIFZhbGlkIG9wZXJhdG9ycyBhcmUgRXhpc3RzIGFuZCBFcXVhbC4gRGVmYXVsdHMgdG8gRXF1YWwuIEV4aXN0cyBpcyBlcXVpdmFsZW50IHRvIHdpbGRjYXJkIGZvciB2YWx1ZSwgc28gdGhhdCBhIHBvZCBjYW4gdG9sZXJhdGUgYWxsIHRhaW50cyBvZiBhIHBhcnRpY3VsYXIgY2F0ZWdvcnkuIiwidHlwZSI6InN0cmluZyJ9LCJ0b2xlcmF0aW9uU2Vjb25kcyI6eyJkZXNjcmlwdGlvbiI6IlRvbGVyYXRpb25TZWNvbmRzIHJlcHJlc2VudHMgdGhlIHBlcmlvZCBvZiB0aW1lIHRoZSB0b2xlcmF0aW9uICh3aGljaCBtdXN0IGJlIG9mIGVmZmVjdCBOb0V4ZWN1dGUsIG90aGVyd2lzZSB0aGlzIGZpZWxkIGlzIGlnbm9yZWQpIHRvbGVyYXRlcyB0aGUgdGFpbnQuIEJ5IGRlZmF1bHQsIGl0IGlzIG5vdCBzZXQsIHdoaWNoIG1lYW5zIHRvbGVyYXRlIHRoZSB0YWludCBmb3JldmVyIChkbyBub3QgZXZpY3QpLiBaZXJvIGFuZCBuZWdhdGl2ZSB2YWx1ZXMgd2lsbCBiZSB0cmVhdGVkIGFzIDAgKGV2aWN0IGltbWVkaWF0ZWx5KSBieSB0aGUgc3lzdGVtLiIsImZvcm1hdCI6ImludDY0IiwidHlwZSI6ImludGVnZXIifSwidmFsdWUiOnsiZGVzY3JpcHRpb24iOiJWYWx1ZSBpcyB0aGUgdGFpbnQgdmFsdWUgdGhlIHRvbGVyYXRpb24gbWF0Y2hlcyB0by4gSWYgdGhlIG9wZXJhdG9yIGlzIEV4aXN0cywgdGhlIHZhbHVlIHNob3VsZCBiZSBlbXB0eSwgb3RoZXJ3aXNlIGp1c3QgYSByZWd1bGFyIHN0cmluZy4iLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJ0b3BvbG9neVNwcmVhZENvbnN0cmFpbnRzIjp7ImRlc2NyaXB0aW9uIjoiVG9wb2xvZ3lTcHJlYWRDb25zdHJhaW50cyIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiVG9wb2xvZ3lTcHJlYWRDb25zdHJhaW50IHNwZWNpZmllcyBob3cgdG8gc3ByZWFkIG1hdGNoaW5nIHBvZHMgYW1vbmcgdGhlIGdpdmVuIHRvcG9sb2d5LiIsInByb3BlcnRpZXMiOnsibGFiZWxTZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6IkxhYmVsU2VsZWN0b3IgaXMgdXNlZCB0byBmaW5kIG1hdGNoaW5nIHBvZHMuIFBvZHMgdGhhdCBtYXRjaCB0aGlzIGxhYmVsIHNlbGVjdG9yIGFyZSBjb3VudGVkIHRvIGRldGVybWluZSB0aGUgbnVtYmVyIG9mIHBvZHMgaW4gdGhlaXIgY29ycmVzcG9uZGluZyB0b3BvbG9neSBkb21haW4uIiwicHJvcGVydGllcyI6eyJtYXRjaEV4cHJlc3Npb25zIjp7ImRlc2NyaXB0aW9uIjoibWF0Y2hFeHByZXNzaW9ucyBpcyBhIGxpc3Qgb2YgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnRzLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkEgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnQgaXMgYSBzZWxlY3RvciB0aGF0IGNvbnRhaW5zIHZhbHVlcywgYSBrZXksIGFuZCBhbiBvcGVyYXRvciB0aGF0IHJlbGF0ZXMgdGhlIGtleSBhbmQgdmFsdWVzLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoia2V5IGlzIHRoZSBsYWJlbCBrZXkgdGhhdCB0aGUgc2VsZWN0b3IgYXBwbGllcyB0by4iLCJ0eXBlIjoic3RyaW5nIn0sIm9wZXJhdG9yIjp7ImRlc2NyaXB0aW9uIjoib3BlcmF0b3IgcmVwcmVzZW50cyBhIGtleSdzIHJlbGF0aW9uc2hpcCB0byBhIHNldCBvZiB2YWx1ZXMuIFZhbGlkIG9wZXJhdG9ycyBhcmUgSW4sIE5vdEluLCBFeGlzdHMgYW5kIERvZXNOb3RFeGlzdC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlcyI6eyJkZXNjcmlwdGlvbiI6InZhbHVlcyBpcyBhbiBhcnJheSBvZiBzdHJpbmcgdmFsdWVzLiBJZiB0aGUgb3BlcmF0b3IgaXMgSW4gb3IgTm90SW4sIHRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBub24tZW1wdHkuIElmIHRoZSBvcGVyYXRvciBpcyBFeGlzdHMgb3IgRG9lc05vdEV4aXN0LCB0aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgZW1wdHkuIFRoaXMgYXJyYXkgaXMgcmVwbGFjZWQgZHVyaW5nIGEgc3RyYXRlZ2ljIG1lcmdlIHBhdGNoLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In19LCJyZXF1aXJlZCI6WyJrZXkiLCJvcGVyYXRvciJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJtYXRjaExhYmVscyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJ0eXBlIjoic3RyaW5nIn0sImRlc2NyaXB0aW9uIjoibWF0Y2hMYWJlbHMgaXMgYSBtYXAgb2Yge2tleSx2YWx1ZX0gcGFpcnMuIEEgc2luZ2xlIHtrZXksdmFsdWV9IGluIHRoZSBtYXRjaExhYmVscyBtYXAgaXMgZXF1aXZhbGVudCB0byBhbiBlbGVtZW50IG9mIG1hdGNoRXhwcmVzc2lvbnMsIHdob3NlIGtleSBmaWVsZCBpcyBcImtleVwiLCB0aGUgb3BlcmF0b3IgaXMgXCJJblwiLCBhbmQgdGhlIHZhbHVlcyBhcnJheSBjb250YWlucyBvbmx5IFwidmFsdWVcIi4gVGhlIHJlcXVpcmVtZW50cyBhcmUgQU5EZWQuIiwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1tYXAtdHlwZSI6ImF0b21pYyJ9LCJtYXRjaExhYmVsS2V5cyI6eyJkZXNjcmlwdGlvbiI6Ik1hdGNoTGFiZWxLZXlzIGlzIGEgc2V0IG9mIHBvZCBsYWJlbCBrZXlzIHRvIHNlbGVjdCB0aGUgcG9kcyBvdmVyIHdoaWNoIHNwcmVhZGluZyB3aWxsIGJlIGNhbGN1bGF0ZWQuIFRoZSBrZXlzIGFyZSB1c2VkIHRvIGxvb2t1cCB2YWx1ZXMgZnJvbSB0aGUgaW5jb21pbmcgcG9kIGxhYmVscywgdGhvc2Uga2V5LXZhbHVlIGxhYmVscyBhcmUgQU5EZWQgd2l0aCBsYWJlbFNlbGVjdG9yIHRvIHNlbGVjdCB0aGUgZ3JvdXAgb2YgZXhpc3RpbmcgcG9kcyBvdmVyIHdoaWNoIHNwcmVhZGluZyB3aWxsIGJlIGNhbGN1bGF0ZWQgZm9yIHRoZSBpbmNvbWluZyBwb2QuIFRoZSBzYW1lIGtleSBpcyBmb3JiaWRkZW4gdG8gZXhpc3QgaW4gYm90aCBNYXRjaExhYmVsS2V5cyBhbmQgTGFiZWxTZWxlY3Rvci4gTWF0Y2hMYWJlbEtleXMgY2Fubm90IGJlIHNldCB3aGVuIExhYmVsU2VsZWN0b3IgaXNuJ3Qgc2V0LiBLZXlzIHRoYXQgZG9uJ3QgZXhpc3QgaW4gdGhlIGluY29taW5nIHBvZCBsYWJlbHMgd2lsbCBiZSBpZ25vcmVkLiBBIG51bGwgb3IgZW1wdHkgbGlzdCBtZWFucyBvbmx5IG1hdGNoIGFnYWluc3QgbGFiZWxTZWxlY3Rvci4gXG4gVGhpcyBpcyBhIGJldGEgZmllbGQgYW5kIHJlcXVpcmVzIHRoZSBNYXRjaExhYmVsS2V5c0luUG9kVG9wb2xvZ3lTcHJlYWQgZmVhdHVyZSBnYXRlIHRvIGJlIGVuYWJsZWQgKGVuYWJsZWQgYnkgZGVmYXVsdCkuIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn0sIm1heFNrZXciOnsiZGVzY3JpcHRpb24iOiJNYXhTa2V3IGRlc2NyaWJlcyB0aGUgZGVncmVlIHRvIHdoaWNoIHBvZHMgbWF5IGJlIHVuZXZlbmx5IGRpc3RyaWJ1dGVkLiBXaGVuIGB3aGVuVW5zYXRpc2ZpYWJsZT1Eb05vdFNjaGVkdWxlYCwgaXQgaXMgdGhlIG1heGltdW0gcGVybWl0dGVkIGRpZmZlcmVuY2UgYmV0d2VlbiB0aGUgbnVtYmVyIG9mIG1hdGNoaW5nIHBvZHMgaW4gdGhlIHRhcmdldCB0b3BvbG9neSBhbmQgdGhlIGdsb2JhbCBtaW5pbXVtLiBUaGUgZ2xvYmFsIG1pbmltdW0gaXMgdGhlIG1pbmltdW0gbnVtYmVyIG9mIG1hdGNoaW5nIHBvZHMgaW4gYW4gZWxpZ2libGUgZG9tYWluIG9yIHplcm8gaWYgdGhlIG51bWJlciBvZiBlbGlnaWJsZSBkb21haW5zIGlzIGxlc3MgdGhhbiBNaW5Eb21haW5zLiBGb3IgZXhhbXBsZSwgaW4gYSAzLXpvbmUgY2x1c3RlciwgTWF4U2tldyBpcyBzZXQgdG8gMSwgYW5kIHBvZHMgd2l0aCB0aGUgc2FtZSBsYWJlbFNlbGVjdG9yIHNwcmVhZCBhcyAyLzIvMTogSW4gdGhpcyBjYXNlLCB0aGUgZ2xvYmFsIG1pbmltdW0gaXMgMS4gfCB6b25lMSB8IHpvbmUyIHwgem9uZTMgfCB8ICBQIFAgIHwgIFAgUCAgfCAgIFAgICB8IC0gaWYgTWF4U2tldyBpcyAxLCBpbmNvbWluZyBwb2QgY2FuIG9ubHkgYmUgc2NoZWR1bGVkIHRvIHpvbmUzIHRvIGJlY29tZSAyLzIvMjsgc2NoZWR1bGluZyBpdCBvbnRvIHpvbmUxKHpvbmUyKSB3b3VsZCBtYWtlIHRoZSBBY3R1YWxTa2V3KDMtMSkgb24gem9uZTEoem9uZTIpIHZpb2xhdGUgTWF4U2tldygxKS4gLSBpZiBNYXhTa2V3IGlzIDIsIGluY29taW5nIHBvZCBjYW4gYmUgc2NoZWR1bGVkIG9udG8gYW55IHpvbmUuIFdoZW4gYHdoZW5VbnNhdGlzZmlhYmxlPVNjaGVkdWxlQW55d2F5YCwgaXQgaXMgdXNlZCB0byBnaXZlIGhpZ2hlciBwcmVjZWRlbmNlIHRvIHRvcG9sb2dpZXMgdGhhdCBzYXRpc2Z5IGl0LiBJdCdzIGEgcmVxdWlyZWQgZmllbGQuIERlZmF1bHQgdmFsdWUgaXMgMSBhbmQgMCBpcyBub3QgYWxsb3dlZC4iLCJmb3JtYXQiOiJpbnQzMiIsInR5cGUiOiJpbnRlZ2VyIn0sIm1pbkRvbWFpbnMiOnsiZGVzY3JpcHRpb24iOiJNaW5Eb21haW5zIGluZGljYXRlcyBhIG1pbmltdW0gbnVtYmVyIG9mIGVsaWdpYmxlIGRvbWFpbnMuIFdoZW4gdGhlIG51bWJlciBvZiBlbGlnaWJsZSBkb21haW5zIHdpdGggbWF0Y2hpbmcgdG9wb2xvZ3kga2V5cyBpcyBsZXNzIHRoYW4gbWluRG9tYWlucywgUG9kIFRvcG9sb2d5IFNwcmVhZCB0cmVhdHMgXCJnbG9iYWwgbWluaW11bVwiIGFzIDAsIGFuZCB0aGVuIHRoZSBjYWxjdWxhdGlvbiBvZiBTa2V3IGlzIHBlcmZvcm1lZC4gQW5kIHdoZW4gdGhlIG51bWJlciBvZiBlbGlnaWJsZSBkb21haW5zIHdpdGggbWF0Y2hpbmcgdG9wb2xvZ3kga2V5cyBlcXVhbHMgb3IgZ3JlYXRlciB0aGFuIG1pbkRvbWFpbnMsIHRoaXMgdmFsdWUgaGFzIG5vIGVmZmVjdCBvbiBzY2hlZHVsaW5nLiBBcyBhIHJlc3VsdCwgd2hlbiB0aGUgbnVtYmVyIG9mIGVsaWdpYmxlIGRvbWFpbnMgaXMgbGVzcyB0aGFuIG1pbkRvbWFpbnMsIHNjaGVkdWxlciB3b24ndCBzY2hlZHVsZSBtb3JlIHRoYW4gbWF4U2tldyBQb2RzIHRvIHRob3NlIGRvbWFpbnMuIElmIHZhbHVlIGlzIG5pbCwgdGhlIGNvbnN0cmFpbnQgYmVoYXZlcyBhcyBpZiBNaW5Eb21haW5zIGlzIGVxdWFsIHRvIDEuIFZhbGlkIHZhbHVlcyBhcmUgaW50ZWdlcnMgZ3JlYXRlciB0aGFuIDAuIFdoZW4gdmFsdWUgaXMgbm90IG5pbCwgV2hlblVuc2F0aXNmaWFibGUgbXVzdCBiZSBEb05vdFNjaGVkdWxlLiBcbiBGb3IgZXhhbXBsZSwgaW4gYSAzLXpvbmUgY2x1c3RlciwgTWF4U2tldyBpcyBzZXQgdG8gMiwgTWluRG9tYWlucyBpcyBzZXQgdG8gNSBhbmQgcG9kcyB3aXRoIHRoZSBzYW1lIGxhYmVsU2VsZWN0b3Igc3ByZWFkIGFzIDIvMi8yOiB8IHpvbmUxIHwgem9uZTIgfCB6b25lMyB8IHwgIFAgUCAgfCAgUCBQICB8ICBQIFAgIHwgVGhlIG51bWJlciBvZiBkb21haW5zIGlzIGxlc3MgdGhhbiA1KE1pbkRvbWFpbnMpLCBzbyBcImdsb2JhbCBtaW5pbXVtXCIgaXMgdHJlYXRlZCBhcyAwLiBJbiB0aGlzIHNpdHVhdGlvbiwgbmV3IHBvZCB3aXRoIHRoZSBzYW1lIGxhYmVsU2VsZWN0b3IgY2Fubm90IGJlIHNjaGVkdWxlZCwgYmVjYXVzZSBjb21wdXRlZCBza2V3IHdpbGwgYmUgMygzIC0gMCkgaWYgbmV3IFBvZCBpcyBzY2hlZHVsZWQgdG8gYW55IG9mIHRoZSB0aHJlZSB6b25lcywgaXQgd2lsbCB2aW9sYXRlIE1heFNrZXcuIFxuIFRoaXMgaXMgYSBiZXRhIGZpZWxkIGFuZCByZXF1aXJlcyB0aGUgTWluRG9tYWluc0luUG9kVG9wb2xvZ3lTcHJlYWQgZmVhdHVyZSBnYXRlIHRvIGJlIGVuYWJsZWQgKGVuYWJsZWQgYnkgZGVmYXVsdCkuIiwiZm9ybWF0IjoiaW50MzIiLCJ0eXBlIjoiaW50ZWdlciJ9LCJub2RlQWZmaW5pdHlQb2xpY3kiOnsiZGVzY3JpcHRpb24iOiJOb2RlQWZmaW5pdHlQb2xpY3kgaW5kaWNhdGVzIGhvdyB3ZSB3aWxsIHRyZWF0IFBvZCdzIG5vZGVBZmZpbml0eS9ub2RlU2VsZWN0b3Igd2hlbiBjYWxjdWxhdGluZyBwb2QgdG9wb2xvZ3kgc3ByZWFkIHNrZXcuIE9wdGlvbnMgYXJlOiAtIEhvbm9yOiBvbmx5IG5vZGVzIG1hdGNoaW5nIG5vZGVBZmZpbml0eS9ub2RlU2VsZWN0b3IgYXJlIGluY2x1ZGVkIGluIHRoZSBjYWxjdWxhdGlvbnMuIC0gSWdub3JlOiBub2RlQWZmaW5pdHkvbm9kZVNlbGVjdG9yIGFyZSBpZ25vcmVkLiBBbGwgbm9kZXMgYXJlIGluY2x1ZGVkIGluIHRoZSBjYWxjdWxhdGlvbnMuIFxuIElmIHRoaXMgdmFsdWUgaXMgbmlsLCB0aGUgYmVoYXZpb3IgaXMgZXF1aXZhbGVudCB0byB0aGUgSG9ub3IgcG9saWN5LiBUaGlzIGlzIGEgYmV0YS1sZXZlbCBmZWF0dXJlIGRlZmF1bHQgZW5hYmxlZCBieSB0aGUgTm9kZUluY2x1c2lvblBvbGljeUluUG9kVG9wb2xvZ3lTcHJlYWQgZmVhdHVyZSBmbGFnLiIsInR5cGUiOiJzdHJpbmcifSwibm9kZVRhaW50c1BvbGljeSI6eyJkZXNjcmlwdGlvbiI6Ik5vZGVUYWludHNQb2xpY3kgaW5kaWNhdGVzIGhvdyB3ZSB3aWxsIHRyZWF0IG5vZGUgdGFpbnRzIHdoZW4gY2FsY3VsYXRpbmcgcG9kIHRvcG9sb2d5IHNwcmVhZCBza2V3LiBPcHRpb25zIGFyZTogLSBIb25vcjogbm9kZXMgd2l0aG91dCB0YWludHMsIGFsb25nIHdpdGggdGFpbnRlZCBub2RlcyBmb3Igd2hpY2ggdGhlIGluY29taW5nIHBvZCBoYXMgYSB0b2xlcmF0aW9uLCBhcmUgaW5jbHVkZWQuIC0gSWdub3JlOiBub2RlIHRhaW50cyBhcmUgaWdub3JlZC4gQWxsIG5vZGVzIGFyZSBpbmNsdWRlZC4gXG4gSWYgdGhpcyB2YWx1ZSBpcyBuaWwsIHRoZSBiZWhhdmlvciBpcyBlcXVpdmFsZW50IHRvIHRoZSBJZ25vcmUgcG9saWN5LiBUaGlzIGlzIGEgYmV0YS1sZXZlbCBmZWF0dXJlIGRlZmF1bHQgZW5hYmxlZCBieSB0aGUgTm9kZUluY2x1c2lvblBvbGljeUluUG9kVG9wb2xvZ3lTcHJlYWQgZmVhdHVyZSBmbGFnLiIsInR5cGUiOiJzdHJpbmcifSwidG9wb2xvZ3lLZXkiOnsiZGVzY3JpcHRpb24iOiJUb3BvbG9neUtleSBpcyB0aGUga2V5IG9mIG5vZGUgbGFiZWxzLiBOb2RlcyB0aGF0IGhhdmUgYSBsYWJlbCB3aXRoIHRoaXMga2V5IGFuZCBpZGVudGljYWwgdmFsdWVzIGFyZSBjb25zaWRlcmVkIHRvIGJlIGluIHRoZSBzYW1lIHRvcG9sb2d5LiBXZSBjb25zaWRlciBlYWNoIFx1MDAzY2tleSwgdmFsdWVcdTAwM2UgYXMgYSBcImJ1Y2tldFwiLCBhbmQgdHJ5IHRvIHB1dCBiYWxhbmNlZCBudW1iZXIgb2YgcG9kcyBpbnRvIGVhY2ggYnVja2V0LiBXZSBkZWZpbmUgYSBkb21haW4gYXMgYSBwYXJ0aWN1bGFyIGluc3RhbmNlIG9mIGEgdG9wb2xvZ3kuIEFsc28sIHdlIGRlZmluZSBhbiBlbGlnaWJsZSBkb21haW4gYXMgYSBkb21haW4gd2hvc2Ugbm9kZXMgbWVldCB0aGUgcmVxdWlyZW1lbnRzIG9mIG5vZGVBZmZpbml0eVBvbGljeSBhbmQgbm9kZVRhaW50c1BvbGljeS4gZS5nLiBJZiBUb3BvbG9neUtleSBpcyBcImt1YmVybmV0ZXMuaW8vaG9zdG5hbWVcIiwgZWFjaCBOb2RlIGlzIGEgZG9tYWluIG9mIHRoYXQgdG9wb2xvZ3kuIEFuZCwgaWYgVG9wb2xvZ3lLZXkgaXMgXCJ0b3BvbG9neS5rdWJlcm5ldGVzLmlvL3pvbmVcIiwgZWFjaCB6b25lIGlzIGEgZG9tYWluIG9mIHRoYXQgdG9wb2xvZ3kuIEl0J3MgYSByZXF1aXJlZCBmaWVsZC4iLCJ0eXBlIjoic3RyaW5nIn0sIndoZW5VbnNhdGlzZmlhYmxlIjp7ImRlc2NyaXB0aW9uIjoiV2hlblVuc2F0aXNmaWFibGUgaW5kaWNhdGVzIGhvdyB0byBkZWFsIHdpdGggYSBwb2QgaWYgaXQgZG9lc24ndCBzYXRpc2Z5IHRoZSBzcHJlYWQgY29uc3RyYWludC4gLSBEb05vdFNjaGVkdWxlIChkZWZhdWx0KSB0ZWxscyB0aGUgc2NoZWR1bGVyIG5vdCB0byBzY2hlZHVsZSBpdC4gLSBTY2hlZHVsZUFueXdheSB0ZWxscyB0aGUgc2NoZWR1bGVyIHRvIHNjaGVkdWxlIHRoZSBwb2QgaW4gYW55IGxvY2F0aW9uLCBidXQgZ2l2aW5nIGhpZ2hlciBwcmVjZWRlbmNlIHRvIHRvcG9sb2dpZXMgdGhhdCB3b3VsZCBoZWxwIHJlZHVjZSB0aGUgc2tldy4gQSBjb25zdHJhaW50IGlzIGNvbnNpZGVyZWQgXCJVbnNhdGlzZmlhYmxlXCIgZm9yIGFuIGluY29taW5nIHBvZCBpZiBhbmQgb25seSBpZiBldmVyeSBwb3NzaWJsZSBub2RlIGFzc2lnbm1lbnQgZm9yIHRoYXQgcG9kIHdvdWxkIHZpb2xhdGUgXCJNYXhTa2V3XCIgb24gc29tZSB0b3BvbG9neS4gRm9yIGV4YW1wbGUsIGluIGEgMy16b25lIGNsdXN0ZXIsIE1heFNrZXcgaXMgc2V0IHRvIDEsIGFuZCBwb2RzIHdpdGggdGhlIHNhbWUgbGFiZWxTZWxlY3RvciBzcHJlYWQgYXMgMy8xLzE6IHwgem9uZTEgfCB6b25lMiB8IHpvbmUzIHwgfCBQIFAgUCB8ICAgUCAgIHwgICBQICAgfCBJZiBXaGVuVW5zYXRpc2ZpYWJsZSBpcyBzZXQgdG8gRG9Ob3RTY2hlZHVsZSwgaW5jb21pbmcgcG9kIGNhbiBvbmx5IGJlIHNjaGVkdWxlZCB0byB6b25lMih6b25lMykgdG8gYmVjb21lIDMvMi8xKDMvMS8yKSBhcyBBY3R1YWxTa2V3KDItMSkgb24gem9uZTIoem9uZTMpIHNhdGlzZmllcyBNYXhTa2V3KDEpLiBJbiBvdGhlciB3b3JkcywgdGhlIGNsdXN0ZXIgY2FuIHN0aWxsIGJlIGltYmFsYW5jZWQsIGJ1dCBzY2hlZHVsZXIgd29uJ3QgbWFrZSBpdCAqbW9yZSogaW1iYWxhbmNlZC4gSXQncyBhIHJlcXVpcmVkIGZpZWxkLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbIm1heFNrZXciLCJ0b3BvbG9neUtleSIsIndoZW5VbnNhdGlzZmlhYmxlIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In19LCJ0eXBlIjoib2JqZWN0In0sInNlY3VyaXR5UHJvdmlkZXIiOnsiZGVzY3JpcHRpb24iOiJTZWN1cml0eVByb3ZpZGVycyB0byBhdXRoZW50aWNhdGUgdXNlcnMgaW4gTWFuYWdlbWVudCBDZW50ZXIiLCJwcm9wZXJ0aWVzIjp7ImxkYXAiOnsiZGVzY3JpcHRpb24iOiJMREFQIHNlY3VyaXR5IHByb3ZpZGVyIiwicHJvcGVydGllcyI6eyJhZG1pbkdyb3VwcyI6eyJkZXNjcmlwdGlvbiI6Ik1lbWJlcnMgb2YgdGhlc2UgZ3JvdXBzIGFuZCBpdHMgbmVzdGVkIGdyb3VwcyBoYXZlIGFkbWluIHByaXZpbGVnZXMgb24gdGhlIE1hbmFnZW1lbnQgQ2VudGVyLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwibWluSXRlbXMiOjEsInR5cGUiOiJhcnJheSJ9LCJjcmVkZW50aWFsc1NlY3JldE5hbWUiOnsiZGVzY3JpcHRpb24iOiJDcmVkZW50aWFsc1NlY3JldE5hbWUgaXMgdGhlIG5hbWUgb2YgdGhlIHNlY3JldCB0aGF0IGNvbnRhaW5zIHVzZXJuYW1lIGFuZCBwYXNzd29yZCBvZiBhIHVzZXIgdGhhdCBoYXMgYWRtaW4gcHJpdmlsZWdlcyBvbiB0aGUgTERBUCBzZXJ2ZXIuIFRoZSB1c2VybmFtZSBtdXN0IGJlIHRoZSBETiBvZiB0aGUgdXNlci4gSXQgaXMgdXNlZCB0byBjb25uZWN0IHRvIHRoZSBzZXJ2ZXIgd2hlbiBhdXRoZW50aWNhdGluZyB1c2Vycy4iLCJ0eXBlIjoic3RyaW5nIn0sImdyb3VwRE4iOnsiZGVzY3JpcHRpb24iOiJETiB0byBiZSB1c2VkIGZvciBzZWFyY2hpbmcgZ3JvdXBzLiIsInR5cGUiOiJzdHJpbmcifSwiZ3JvdXBTZWFyY2hGaWx0ZXIiOnsiZGVzY3JpcHRpb24iOiJMREFQIHNlYXJjaCBmaWx0ZXIgZXhwcmVzc2lvbiB0byBzZWFyY2ggZm9yIHRoZSBncm91cHMuIEZvciBleGFtcGxlLCB1bmlxdWVtZW1iZXI9ezB9IHNlYXJjaGVzIGZvciBhIGdyb3VwIHRoYXQgbWF0Y2hlcyB3aXRoIHRoZSB1bmlxdWVtZW1iZXIgYXR0cmlidXRlLiIsInR5cGUiOiJzdHJpbmcifSwibWV0cmljc09ubHlHcm91cHMiOnsiZGVzY3JpcHRpb24iOiJNZW1iZXJzIG9mIHRoZXNlIGdyb3VwcyBhbmQgaXRzIG5lc3RlZCBncm91cHMgaGF2ZSB0aGUgcHJpdmlsZWdlIHRvIHNlZSBvbmx5IHRoZSBtZXRyaWNzIG9uIHRoZSBNYW5hZ2VtZW50IENlbnRlci4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sIm1pbkl0ZW1zIjoxLCJ0eXBlIjoiYXJyYXkifSwibmVzdGVkR3JvdXBTZWFyY2giOnsiZGVmYXVsdCI6ZmFsc2UsImRlc2NyaXB0aW9uIjoiTmVzdGVkR3JvdXBTZWFyY2ggZW5hYmxlcyBzZWFyY2hpbmcgZm9yIG5lc3RlZCBMREFQIGdyb3Vwcy4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJyZWFkb25seVVzZXJHcm91cHMiOnsiZGVzY3JpcHRpb24iOiJNZW1iZXJzIG9mIHRoZXNlIGdyb3VwcyBhbmQgaXRzIG5lc3RlZCBncm91cHMgaGF2ZSBvbmx5IHJlYWQgcHJpdmlsZWdlIG9uIHRoZSBNYW5hZ2VtZW50IENlbnRlci4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sIm1pbkl0ZW1zIjoxLCJ0eXBlIjoiYXJyYXkifSwidXJsIjp7ImRlc2NyaXB0aW9uIjoiVVJMIG9mIHlvdXIgTERBUCBzZXJ2ZXIsIGluY2x1ZGluZyBzY2hlbWEgKGxkYXA6Ly8pIGFuZCBwb3J0LiIsInR5cGUiOiJzdHJpbmcifSwidXNlckROIjp7ImRlc2NyaXB0aW9uIjoiRE4gdG8gYmUgdXNlZCBmb3Igc2VhcmNoaW5nIHVzZXJzLiIsInR5cGUiOiJzdHJpbmcifSwidXNlckdyb3VwcyI6eyJkZXNjcmlwdGlvbiI6Ik1lbWJlcnMgb2YgdGhlc2UgZ3JvdXBzIGFuZCBpdHMgbmVzdGVkIGdyb3VwcyBoYXZlIHJlYWQgYW5kIHdyaXRlIHByaXZpbGVnZXMgb24gdGhlIE1hbmFnZW1lbnQgQ2VudGVyLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwibWluSXRlbXMiOjEsInR5cGUiOiJhcnJheSJ9LCJ1c2VyU2VhcmNoRmlsdGVyIjp7ImRlc2NyaXB0aW9uIjoiTERBUCBzZWFyY2ggZmlsdGVyIGV4cHJlc3Npb24gdG8gc2VhcmNoIGZvciB0aGUgdXNlcnMuIEZvciBleGFtcGxlLCB1aWQ9ezB9IHNlYXJjaGVzIGZvciBhIHVzZXJuYW1lIHRoYXQgbWF0Y2hlcyB3aXRoIHRoZSB1aWQgYXR0cmlidXRlLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImFkbWluR3JvdXBzIiwiY3JlZGVudGlhbHNTZWNyZXROYW1lIiwiZ3JvdXBETiIsImdyb3VwU2VhcmNoRmlsdGVyIiwibWV0cmljc09ubHlHcm91cHMiLCJuZXN0ZWRHcm91cFNlYXJjaCIsInJlYWRvbmx5VXNlckdyb3VwcyIsInVybCIsInVzZXJETiIsInVzZXJHcm91cHMiLCJ1c2VyU2VhcmNoRmlsdGVyIl0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifSwidmVyc2lvbiI6eyJkZWZhdWx0IjoiNS40LjAiLCJkZXNjcmlwdGlvbiI6IlZlcnNpb24gb2YgTWFuYWdlbWVudCBDZW50ZXIuIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJNYW5hZ2VtZW50Q2VudGVyU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIE1hbmFnZW1lbnRDZW50ZXIuIiwicHJvcGVydGllcyI6eyJjb25maWd1cmVkIjp7ImRlc2NyaXB0aW9uIjoiQ29uZmlndXJlZCBpcyBhIGZsYWcgdGhhdCBpbmRpY2F0ZXMgaWYgdGhlIGNvbmZpZ3VyYXRpb24gc3RlcCBoYXMgc3VjY2Vzc2Z1bGx5IHBhc3NlZCIsInR5cGUiOiJib29sZWFuIn0sImV4dGVybmFsQWRkcmVzc2VzIjp7ImRlc2NyaXB0aW9uIjoiRXh0ZXJuYWwgYWRkcmVzc2VzIG9mIHRoZSBNYW5hZ2VtZW50IENlbnRlciBpbnN0YW5jZSIsInR5cGUiOiJzdHJpbmcifSwibWVzc2FnZSI6eyJkZXNjcmlwdGlvbiI6Ik1lc3NhZ2UgYWJvdXQgdGhlIE1hbmFnZW1lbnQgQ2VudGVyIHN0YXRlIiwidHlwZSI6InN0cmluZyJ9LCJwaGFzZSI6eyJkZXNjcmlwdGlvbiI6IlBoYXNlIG9mIHRoZSBNYW5hZ2VtZW50IENlbnRlciIsImVudW0iOlsiUnVubmluZyIsIkZhaWxlZCIsIlBlbmRpbmciLCJDb25maWd1cmluZyIsIlRlcm1pbmF0aW5nIl0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOm51bGwsInN0b3JlZFZlcnNpb25zIjpudWxsfX0=
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEzLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJtdWx0aW1hcHMuaGF6ZWxjYXN0LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiaGF6ZWxjYXN0LmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJNdWx0aU1hcCIsImxpc3RLaW5kIjoiTXVsdGlNYXBMaXN0IiwicGx1cmFsIjoibXVsdGltYXBzIiwic2hvcnROYW1lcyI6WyJtbWFwIl0sInNpbmd1bGFyIjoibXVsdGltYXAifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3siZGVzY3JpcHRpb24iOiJDdXJyZW50IHN0YXRlIG9mIHRoZSBNdWx0aU1hcCBDb25maWciLCJqc29uUGF0aCI6Ii5zdGF0dXMuc3RhdGUiLCJuYW1lIjoiU3RhdHVzIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBIYXplbGNhc3QgcmVzb3VyY2UgdGhhdCB0aGlzIHJlc291cmNlIGlzIGNyZWF0ZWQgZm9yIiwianNvblBhdGgiOiIuc3BlYy5oYXplbGNhc3RSZXNvdXJjZU5hbWUiLCJuYW1lIjoiSGF6ZWxjYXN0LVJlc291cmNlIiwicHJpb3JpdHkiOjEsInR5cGUiOiJzdHJpbmcifSx7ImRlc2NyaXB0aW9uIjoiTWVzc2FnZSBmb3IgdGhlIGN1cnJlbnQgTXVsdGlNYXAgQ29uZmlnIiwianNvblBhdGgiOiIuc3RhdHVzLm1lc3NhZ2UiLCJuYW1lIjoiTWVzc2FnZSIsInByaW9yaXR5IjoxLCJ0eXBlIjoic3RyaW5nIn1dLCJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiTXVsdGlNYXAgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIG11bHRpbWFwcyBBUEkiLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuIFNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZCBtYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy4gU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uIENhbm5vdCBiZSB1cGRhdGVkLiBJbiBDYW1lbENhc2UuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6Ik11bHRpTWFwU3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIE11bHRpTWFwIiwicHJvcGVydGllcyI6eyJhc3luY0JhY2t1cENvdW50Ijp7ImRlZmF1bHQiOjAsImRlc2NyaXB0aW9uIjoiTnVtYmVyIG9mIGFzeW5jaHJvbm91cyBiYWNrdXBzLiIsImZvcm1hdCI6ImludDMyIiwibWF4aW11bSI6NiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifSwiYmFja3VwQ291bnQiOnsiZGVmYXVsdCI6MSwiZGVzY3JpcHRpb24iOiJOdW1iZXIgb2Ygc3luY2hyb25vdXMgYmFja3Vwcy4iLCJmb3JtYXQiOiJpbnQzMiIsIm1heGltdW0iOjYsIm1pbmltdW0iOjAsInR5cGUiOiJpbnRlZ2VyIn0sImJpbmFyeSI6eyJkZWZhdWx0IjpmYWxzZSwiZGVzY3JpcHRpb24iOiJTcGVjaWZpZXMgaW4gd2hpY2ggZm9ybWF0IGRhdGEgd2lsbCBiZSBzdG9yZWQgaW4geW91ciBNdWx0aU1hcC4gZmFsc2U6IE9CSkVDVCB0cnVlOiBCSU5BUlkiLCJ0eXBlIjoiYm9vbGVhbiJ9LCJjb2xsZWN0aW9uVHlwZSI6eyJkZWZhdWx0IjoiU0VUIiwiZGVzY3JpcHRpb24iOiJUeXBlIG9mIHRoZSB2YWx1ZSBjb2xsZWN0aW9uIiwiZW51bSI6WyJTRVQiLCJMSVNUIl0sInR5cGUiOiJzdHJpbmcifSwiaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIjp7ImRlc2NyaXB0aW9uIjoiSGF6ZWxjYXN0UmVzb3VyY2VOYW1lIGRlZmluZXMgdGhlIG5hbWUgb2YgdGhlIEhhemVsY2FzdCByZXNvdXJjZSB0aGF0IHRoaXMgcmVzb3VyY2UgaXMgY3JlYXRlZCBmb3IuIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBkYXRhIHN0cnVjdHVyZSBjb25maWcgdG8gYmUgY3JlYXRlZC4gSWYgZW1wdHksIENSIG5hbWUgd2lsbCBiZSB1c2VkLiBJdCBjYW5ub3QgYmUgdXBkYXRlZCBhZnRlciB0aGUgY29uZmlnIGlzIGNyZWF0ZWQgc3VjY2Vzc2Z1bGx5LiIsInR5cGUiOiJzdHJpbmcifSwidXNlckNvZGVOYW1lc3BhY2UiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBVc2VyIENvZGUgTmFtZXNwYWNlIGFwcGxpZWQgdG8gdGhpcyBpbnN0YW5jZSIsIm1pbkxlbmd0aCI6MSwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIl0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiTXVsdGlNYXBTdGF0dXMgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgTXVsdGlNYXAiLCJwcm9wZXJ0aWVzIjp7Im1lbWJlclN0YXR1c2VzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7ImVudW0iOlsiU3VjY2VzcyIsIkZhaWxlZCIsIlBlbmRpbmciLCJQZXJzaXN0aW5nIiwiVGVybWluYXRpbmciXSwidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6IkhvbGRzIHN0YXR1cyBvZiBkYXRhIHN0cnVjdHVyZSBmb3IgZWFjaCBIYXplbGNhc3QgbWVtYmVyIiwidHlwZSI6Im9iamVjdCJ9LCJtZXNzYWdlIjp7ImRlc2NyaXB0aW9uIjoiTWVzc2FnZSBleHBsYWluaW5nIHRoZSBjdXJyZW50IHN0YXRlIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0ZSI6eyJkZXNjcmlwdGlvbiI6IlN0YXRlIG9mIHRoZSBkYXRhIHN0cnVjdHVyZSIsImVudW0iOlsiU3VjY2VzcyIsIkZhaWxlZCIsIlBlbmRpbmciLCJQZXJzaXN0aW5nIiwiVGVybWluYXRpbmciXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsic3BlYyJdLCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfSwic3RhdHVzIjp7ImFjY2VwdGVkTmFtZXMiOnsia2luZCI6IiIsInBsdXJhbCI6IiJ9LCJjb25kaXRpb25zIjpudWxsLCJzdG9yZWRWZXJzaW9ucyI6bnVsbH19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEzLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJxdWV1ZXMuaGF6ZWxjYXN0LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiaGF6ZWxjYXN0LmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJRdWV1ZSIsImxpc3RLaW5kIjoiUXVldWVMaXN0IiwicGx1cmFsIjoicXVldWVzIiwic2hvcnROYW1lcyI6WyJxIl0sInNpbmd1bGFyIjoicXVldWUifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3siZGVzY3JpcHRpb24iOiJDdXJyZW50IHN0YXRlIG9mIHRoZSBRdWV1ZSBDb25maWciLCJqc29uUGF0aCI6Ii5zdGF0dXMuc3RhdGUiLCJuYW1lIjoiU3RhdHVzIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBIYXplbGNhc3QgcmVzb3VyY2UgdGhhdCB0aGlzIHJlc291cmNlIGlzIGNyZWF0ZWQgZm9yIiwianNvblBhdGgiOiIuc3BlYy5oYXplbGNhc3RSZXNvdXJjZU5hbWUiLCJuYW1lIjoiSGF6ZWxjYXN0LVJlc291cmNlIiwicHJpb3JpdHkiOjEsInR5cGUiOiJzdHJpbmcifSx7ImRlc2NyaXB0aW9uIjoiTWVzc2FnZSBmb3IgdGhlIGN1cnJlbnQgUXVldWUgQ29uZmlnIiwianNvblBhdGgiOiIuc3RhdHVzLm1lc3NhZ2UiLCJuYW1lIjoiTWVzc2FnZSIsInByaW9yaXR5IjoxLCJ0eXBlIjoic3RyaW5nIn1dLCJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiUXVldWUgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIHF1ZXVlcyBBUEkiLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuIFNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZCBtYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy4gU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uIENhbm5vdCBiZSB1cGRhdGVkLiBJbiBDYW1lbENhc2UuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IlF1ZXVlU3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIFF1ZXVlIEl0IGNhbm5vdCBiZSB1cGRhdGVkIGFmdGVyIHRoZSBRdWV1ZSBpcyBjcmVhdGVkIiwicHJvcGVydGllcyI6eyJhc3luY0JhY2t1cENvdW50Ijp7ImRlZmF1bHQiOjAsImRlc2NyaXB0aW9uIjoiTnVtYmVyIG9mIGFzeW5jaHJvbm91cyBiYWNrdXBzLiIsImZvcm1hdCI6ImludDMyIiwibWF4aW11bSI6NiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifSwiYmFja3VwQ291bnQiOnsiZGVmYXVsdCI6MSwiZGVzY3JpcHRpb24iOiJOdW1iZXIgb2Ygc3luY2hyb25vdXMgYmFja3Vwcy4iLCJmb3JtYXQiOiJpbnQzMiIsIm1heGltdW0iOjYsIm1pbmltdW0iOjAsInR5cGUiOiJpbnRlZ2VyIn0sImVtcHR5UXVldWVUVExTZWNvbmRzIjp7ImRlZmF1bHQiOi0xLCJkZXNjcmlwdGlvbiI6IlRpbWUgaW4gc2Vjb25kcyBhZnRlciB3aGljaCB0aGUgUXVldWUgd2lsbCBiZSBkZXN0cm95ZWQgaWYgaXQgc3RheXMgZW1wdHkgb3IgdW51c2VkLiBJZiB0aGUgdmFsdWVzIGlzIG5vdCBwcm92aWRlZCB0aGUgUXVldWUgd2lsbCBuZXZlciBiZSBkZXN0cm95ZWQuIiwiZm9ybWF0IjoiaW50MzIiLCJ0eXBlIjoiaW50ZWdlciJ9LCJoYXplbGNhc3RSZXNvdXJjZU5hbWUiOnsiZGVzY3JpcHRpb24iOiJIYXplbGNhc3RSZXNvdXJjZU5hbWUgZGVmaW5lcyB0aGUgbmFtZSBvZiB0aGUgSGF6ZWxjYXN0IHJlc291cmNlIHRoYXQgdGhpcyByZXNvdXJjZSBpcyBjcmVhdGVkIGZvci4iLCJtaW5MZW5ndGgiOjEsInR5cGUiOiJzdHJpbmcifSwibWF4U2l6ZSI6eyJkZWZhdWx0IjowLCJkZXNjcmlwdGlvbiI6Ik1heCBzaXplIG9mIHRoZSBxdWV1ZS4iLCJmb3JtYXQiOiJpbnQzMiIsIm1pbmltdW0iOjAsInR5cGUiOiJpbnRlZ2VyIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBkYXRhIHN0cnVjdHVyZSBjb25maWcgdG8gYmUgY3JlYXRlZC4gSWYgZW1wdHksIENSIG5hbWUgd2lsbCBiZSB1c2VkLiBJdCBjYW5ub3QgYmUgdXBkYXRlZCBhZnRlciB0aGUgY29uZmlnIGlzIGNyZWF0ZWQgc3VjY2Vzc2Z1bGx5LiIsInR5cGUiOiJzdHJpbmcifSwicHJpb3JpdHlDb21wYXJhdG9yQ2xhc3NOYW1lIjp7ImRlc2NyaXB0aW9uIjoiVGhlIG5hbWUgb2YgdGhlIGNvbXBhcmF0b3IgY2xhc3MuIElmIHRoZSBjbGFzcyBuYW1lIGlzIHByb3ZpZGVkLCB0aGUgUXVldWUgYmVjb21lcyBQcmlvcml0eSBRdWV1ZS4gWW91IGNhbiBsZWFybiBtb3JlIGF0IGh0dHBzOi8vZG9jcy5oYXplbGNhc3QuY29tL2hhemVsY2FzdC9sYXRlc3QvZGF0YS1zdHJ1Y3R1cmVzL3ByaW9yaXR5LXF1ZXVlLiIsInR5cGUiOiJzdHJpbmcifSwidXNlckNvZGVOYW1lc3BhY2UiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBVc2VyIENvZGUgTmFtZXNwYWNlIGFwcGxpZWQgdG8gdGhpcyBpbnN0YW5jZSIsIm1pbkxlbmd0aCI6MSwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIl0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiUXVldWVTdGF0dXMgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgUXVldWUiLCJwcm9wZXJ0aWVzIjp7Im1lbWJlclN0YXR1c2VzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7ImVudW0iOlsiU3VjY2VzcyIsIkZhaWxlZCIsIlBlbmRpbmciLCJQZXJzaXN0aW5nIiwiVGVybWluYXRpbmciXSwidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6IkhvbGRzIHN0YXR1cyBvZiBkYXRhIHN0cnVjdHVyZSBmb3IgZWFjaCBIYXplbGNhc3QgbWVtYmVyIiwidHlwZSI6Im9iamVjdCJ9LCJtZXNzYWdlIjp7ImRlc2NyaXB0aW9uIjoiTWVzc2FnZSBleHBsYWluaW5nIHRoZSBjdXJyZW50IHN0YXRlIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0ZSI6eyJkZXNjcmlwdGlvbiI6IlN0YXRlIG9mIHRoZSBkYXRhIHN0cnVjdHVyZSIsImVudW0iOlsiU3VjY2VzcyIsIkZhaWxlZCIsIlBlbmRpbmciLCJQZXJzaXN0aW5nIiwiVGVybWluYXRpbmciXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsic3BlYyJdLCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfSwic3RhdHVzIjp7ImFjY2VwdGVkTmFtZXMiOnsia2luZCI6IiIsInBsdXJhbCI6IiJ9LCJjb25kaXRpb25zIjpudWxsLCJzdG9yZWRWZXJzaW9ucyI6bnVsbH19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEzLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJyZXBsaWNhdGVkbWFwcy5oYXplbGNhc3QuY29tIn0sInNwZWMiOnsiZ3JvdXAiOiJoYXplbGNhc3QuY29tIiwibmFtZXMiOnsia2luZCI6IlJlcGxpY2F0ZWRNYXAiLCJsaXN0S2luZCI6IlJlcGxpY2F0ZWRNYXBMaXN0IiwicGx1cmFsIjoicmVwbGljYXRlZG1hcHMiLCJzaG9ydE5hbWVzIjpbInJtYXAiXSwic2luZ3VsYXIiOiJyZXBsaWNhdGVkbWFwIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJhZGRpdGlvbmFsUHJpbnRlckNvbHVtbnMiOlt7ImRlc2NyaXB0aW9uIjoiQ3VycmVudCBzdGF0ZSBvZiB0aGUgUmVwbGljYXRlZE1hcCBDb25maWciLCJqc29uUGF0aCI6Ii5zdGF0dXMuc3RhdGUiLCJuYW1lIjoiU3RhdHVzIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBIYXplbGNhc3QgcmVzb3VyY2UgdGhhdCB0aGlzIHJlc291cmNlIGlzIGNyZWF0ZWQgZm9yIiwianNvblBhdGgiOiIuc3BlYy5oYXplbGNhc3RSZXNvdXJjZU5hbWUiLCJuYW1lIjoiSGF6ZWxjYXN0LVJlc291cmNlIiwicHJpb3JpdHkiOjEsInR5cGUiOiJzdHJpbmcifSx7ImRlc2NyaXB0aW9uIjoiTWVzc2FnZSBmb3IgdGhlIGN1cnJlbnQgUmVwbGljYXRlZE1hcCBDb25maWciLCJqc29uUGF0aCI6Ii5zdGF0dXMubWVzc2FnZSIsIm5hbWUiOiJNZXNzYWdlIiwicHJpb3JpdHkiOjEsInR5cGUiOiJzdHJpbmcifV0sIm5hbWUiOiJ2MWFscGhhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJSZXBsaWNhdGVkTWFwIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSByZXBsaWNhdGVkbWFwcyBBUEkiLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuIFNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZCBtYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy4gU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uIENhbm5vdCBiZSB1cGRhdGVkLiBJbiBDYW1lbENhc2UuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IlJlcGxpY2F0ZWRNYXBTcGVjIGRlZmluZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgUmVwbGljYXRlZE1hcCIsInByb3BlcnRpZXMiOnsiYXN5bmNGaWxsdXAiOnsiZGVmYXVsdCI6dHJ1ZSwiZGVzY3JpcHRpb24iOiJBc3luY0ZpbGx1cCBzcGVjaWZpZXMgd2hldGhlciB0aGUgUmVwbGljYXRlZE1hcCBpcyBhdmFpbGFibGUgZm9yIHJlYWRzIGJlZm9yZSB0aGUgaW5pdGlhbCByZXBsaWNhdGlvbiBpcyBjb21wbGV0ZWQiLCJ0eXBlIjoiYm9vbGVhbiJ9LCJoYXplbGNhc3RSZXNvdXJjZU5hbWUiOnsiZGVzY3JpcHRpb24iOiJIYXplbGNhc3RSZXNvdXJjZU5hbWUgZGVmaW5lcyB0aGUgbmFtZSBvZiB0aGUgSGF6ZWxjYXN0IHJlc291cmNlLiIsIm1pbkxlbmd0aCI6MSwidHlwZSI6InN0cmluZyJ9LCJpbk1lbW9yeUZvcm1hdCI6eyJkZWZhdWx0IjoiT0JKRUNUIiwiZGVzY3JpcHRpb24iOiJJbk1lbW9yeUZvcm1hdCBzcGVjaWZpZXMgaW4gd2hpY2ggZm9ybWF0IGRhdGEgd2lsbCBiZSBzdG9yZWQgaW4gdGhlIFJlcGxpY2F0ZWRNYXAiLCJlbnVtIjpbIkJJTkFSWSIsIk9CSkVDVCJdLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBSZXBsaWNhdGVkTWFwIGNvbmZpZyB0byBiZSBjcmVhdGVkLiBJZiBlbXB0eSwgQ1IgbmFtZSB3aWxsIGJlIHVzZWQuIiwidHlwZSI6InN0cmluZyJ9LCJ1c2VyQ29kZU5hbWVzcGFjZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIFVzZXIgQ29kZSBOYW1lc3BhY2UgYXBwbGllZCB0byB0aGlzIGluc3RhbmNlIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJoYXplbGNhc3RSZXNvdXJjZU5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJSZXBsaWNhdGVkTWFwU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIFJlcGxpY2F0ZWRNYXAiLCJwcm9wZXJ0aWVzIjp7Im1lbWJlclN0YXR1c2VzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7ImVudW0iOlsiU3VjY2VzcyIsIkZhaWxlZCIsIlBlbmRpbmciLCJQZXJzaXN0aW5nIiwiVGVybWluYXRpbmciXSwidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6IkhvbGRzIHN0YXR1cyBvZiBkYXRhIHN0cnVjdHVyZSBmb3IgZWFjaCBIYXplbGNhc3QgbWVtYmVyIiwidHlwZSI6Im9iamVjdCJ9LCJtZXNzYWdlIjp7ImRlc2NyaXB0aW9uIjoiTWVzc2FnZSBleHBsYWluaW5nIHRoZSBjdXJyZW50IHN0YXRlIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0ZSI6eyJkZXNjcmlwdGlvbiI6IlN0YXRlIG9mIHRoZSBkYXRhIHN0cnVjdHVyZSIsImVudW0iOlsiU3VjY2VzcyIsIkZhaWxlZCIsIlBlbmRpbmciLCJQZXJzaXN0aW5nIiwiVGVybWluYXRpbmciXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsic3BlYyJdLCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfSwic3RhdHVzIjp7ImFjY2VwdGVkTmFtZXMiOnsia2luZCI6IiIsInBsdXJhbCI6IiJ9LCJjb25kaXRpb25zIjpudWxsLCJzdG9yZWRWZXJzaW9ucyI6bnVsbH19
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwLmt1YmVybmV0ZXMuaW8vY29tcG9uZW50Ijoid2ViaG9vayIsImFwcC5rdWJlcm5ldGVzLmlvL2NyZWF0ZWQtYnkiOiJoYXplbGNhc3QtcGxhdGZvcm0tb3BlcmF0b3IiLCJhcHAua3ViZXJuZXRlcy5pby9pbnN0YW5jZSI6IndlYmhvb2stc2VydmljZSIsImFwcC5rdWJlcm5ldGVzLmlvL21hbmFnZWQtYnkiOiJrdXN0b21pemUiLCJhcHAua3ViZXJuZXRlcy5pby9uYW1lIjoic2VydmljZSIsImFwcC5rdWJlcm5ldGVzLmlvL3BhcnQtb2YiOiJoYXplbGNhc3QtcGxhdGZvcm0tb3BlcmF0b3IifSwibmFtZSI6ImhhemVsY2FzdC1wbGF0Zm9ybS13ZWJob29rLXNlcnZpY2UifSwic3BlYyI6eyJwb3J0cyI6W3sicG9ydCI6NDQzLCJwcm90b2NvbCI6IlRDUCIsInRhcmdldFBvcnQiOjk0NDN9XSwic2VsZWN0b3IiOnsiY29udHJvbC1wbGFuZSI6ImNvbnRyb2xsZXItbWFuYWdlciJ9fSwic3RhdHVzIjp7ImxvYWRCYWxhbmNlciI6e319fQ==
relatedImages:
- image: docker.io/hazelcast/hazelcast-platform-operator@sha256:70b2d863369d9bf990174b08a75fe6cfc358439f29ff0c3cebb0c75b0fbe7f09
  name: manager
- image: quay.io/community-operator-pipeline-prod/hazelcast-platform-operator@sha256:32873c188f7503687d73ee2d17f4addfd043d4f73a4e1e34511ee89bca5779dc
  name: ""
schema: olm.bundle
---
image: quay.io/community-operator-pipeline-prod/hazelcast-platform-operator@sha256:1209876fc9103eb2d69c34e97e4e2e0b384a9a778ae7e6a53222b8552fbf2f26
name: hazelcast-platform-operator.v5.13.0
package: hazelcast-platform-operator
properties:
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: Cache
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: CronHotBackup
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: Hazelcast
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: HazelcastEndpoint
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: HotBackup
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: JetJob
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: JetJobSnapshot
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: ManagementCenter
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: Map
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: MultiMap
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: Queue
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: ReplicatedMap
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: Topic
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: UserCodeNamespace
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: WanReplication
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: WanSync
    version: v1alpha1
- type: olm.package
  value:
    packageName: hazelcast-platform-operator
    version: 5.13.0
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEzLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJ0b3BpY3MuaGF6ZWxjYXN0LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiaGF6ZWxjYXN0LmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJUb3BpYyIsImxpc3RLaW5kIjoiVG9waWNMaXN0IiwicGx1cmFsIjoidG9waWNzIiwic2luZ3VsYXIiOiJ0b3BpYyJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJkZXNjcmlwdGlvbiI6IkN1cnJlbnQgc3RhdGUgb2YgdGhlIFRvcGljIENvbmZpZyIsImpzb25QYXRoIjoiLnN0YXR1cy5zdGF0ZSIsIm5hbWUiOiJTdGF0dXMiLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIEhhemVsY2FzdCByZXNvdXJjZSB0aGF0IHRoaXMgcmVzb3VyY2UgaXMgY3JlYXRlZCBmb3IiLCJqc29uUGF0aCI6Ii5zcGVjLmhhemVsY2FzdFJlc291cmNlTmFtZSIsIm5hbWUiOiJIYXplbGNhc3QtUmVzb3VyY2UiLCJwcmlvcml0eSI6MSwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJNZXNzYWdlIGZvciB0aGUgY3VycmVudCBUb3BpYyBDb25maWciLCJqc29uUGF0aCI6Ii5zdGF0dXMubWVzc2FnZSIsIm5hbWUiOiJNZXNzYWdlIiwicHJpb3JpdHkiOjEsInR5cGUiOiJzdHJpbmcifV0sIm5hbWUiOiJ2MWFscGhhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJUb3BpYyBpcyB0aGUgU2NoZW1hIGZvciB0aGUgdG9waWNzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiVG9waWNTcGVjIGRlZmluZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgVG9waWMiLCJwcm9wZXJ0aWVzIjp7Imdsb2JhbE9yZGVyaW5nRW5hYmxlZCI6eyJkZWZhdWx0IjpmYWxzZSwiZGVzY3JpcHRpb24iOiJnbG9iYWxPcmRlcmluZ0VuYWJsZWQgYWxsb3dzIGFsbCBub2RlcyBsaXN0ZW5pbmcgdG8gdGhlIHNhbWUgdG9waWMgZ2V0IHRoZWlyIG1lc3NhZ2VzIGluIHRoZSBzYW1lIG9yZGVyIHRoZSBzYW1lIG9yZGVyIiwidHlwZSI6ImJvb2xlYW4ifSwiaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIjp7ImRlc2NyaXB0aW9uIjoiSGF6ZWxjYXN0UmVzb3VyY2VOYW1lIGRlZmluZXMgdGhlIG5hbWUgb2YgdGhlIEhhemVsY2FzdCByZXNvdXJjZSBmb3Igd2hpY2ggdG9waWMgY29uZmlnIHdpbGwgYmUgY3JlYXRlZCIsIm1pbkxlbmd0aCI6MSwidHlwZSI6InN0cmluZyJ9LCJtdWx0aVRocmVhZGluZ0VuYWJsZWQiOnsiZGVmYXVsdCI6ZmFsc2UsImRlc2NyaXB0aW9uIjoibXVsdGlUaHJlYWRpbmdFbmFibGVkIGVuYWJsZXMgbXVsdGktdGhyZWFkZWQgcHJvY2Vzc2luZyBvZiBpbmNvbWluZyBtZXNzYWdlcyBhIHNpbmdsZSB0aHJlYWQgd2lsbCBoYW5kbGUgYWxsIHRvcGljIG1lc3NhZ2VzIiwidHlwZSI6ImJvb2xlYW4ifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIHRvcGljIGNvbmZpZyB0byBiZSBjcmVhdGVkLiBJZiBlbXB0eSwgQ1IgbmFtZSB3aWxsIGJlIHVzZWQuIiwidHlwZSI6InN0cmluZyJ9LCJ1c2VyQ29kZU5hbWVzcGFjZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIFVzZXIgQ29kZSBOYW1lc3BhY2UgYXBwbGllZCB0byB0aGlzIGluc3RhbmNlIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJoYXplbGNhc3RSZXNvdXJjZU5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJUb3BpY1N0YXR1cyBkZWZpbmVzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBUb3BpYyIsInByb3BlcnRpZXMiOnsibWVtYmVyU3RhdHVzZXMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsiZW51bSI6WyJTdWNjZXNzIiwiRmFpbGVkIiwiUGVuZGluZyIsIlBlcnNpc3RpbmciLCJUZXJtaW5hdGluZyJdLCJ0eXBlIjoic3RyaW5nIn0sImRlc2NyaXB0aW9uIjoiSG9sZHMgc3RhdHVzIG9mIGRhdGEgc3RydWN0dXJlIGZvciBlYWNoIEhhemVsY2FzdCBtZW1iZXIiLCJ0eXBlIjoib2JqZWN0In0sIm1lc3NhZ2UiOnsiZGVzY3JpcHRpb24iOiJNZXNzYWdlIGV4cGxhaW5pbmcgdGhlIGN1cnJlbnQgc3RhdGUiLCJ0eXBlIjoic3RyaW5nIn0sInN0YXRlIjp7ImRlc2NyaXB0aW9uIjoiU3RhdGUgb2YgdGhlIGRhdGEgc3RydWN0dXJlIiwiZW51bSI6WyJTdWNjZXNzIiwiRmFpbGVkIiwiUGVuZGluZyIsIlBlcnNpc3RpbmciLCJUZXJtaW5hdGluZyJdLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJzcGVjIl0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOm51bGwsInN0b3JlZFZlcnNpb25zIjpudWxsfX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEzLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJ1c2VyY29kZW5hbWVzcGFjZXMuaGF6ZWxjYXN0LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiaGF6ZWxjYXN0LmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJVc2VyQ29kZU5hbWVzcGFjZSIsImxpc3RLaW5kIjoiVXNlckNvZGVOYW1lc3BhY2VMaXN0IiwicGx1cmFsIjoidXNlcmNvZGVuYW1lc3BhY2VzIiwic2hvcnROYW1lcyI6WyJ1Y24iXSwic2luZ3VsYXIiOiJ1c2VyY29kZW5hbWVzcGFjZSJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJkZXNjcmlwdGlvbiI6IlN0YXR1cyBvZiB0aGUgVXNlciBDb2RlIE5hbWVzcGFjZSIsImpzb25QYXRoIjoiLnN0YXR1cy5zdGF0ZSIsIm5hbWUiOiJTdGF0dXMiLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6Ik1lc3NhZ2UgZm9yIHRoZSBjdXJyZW50IFVzZXJDb2RlTmFtZXNwYWNlIiwianNvblBhdGgiOiIuc3RhdHVzLm1lc3NhZ2UiLCJuYW1lIjoiTWVzc2FnZSIsInByaW9yaXR5IjoxLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIEhhemVsY2FzdCByZXNvdXJjZSB0aGF0IHRoaXMgcmVzb3VyY2UgaXMgY3JlYXRlZCBmb3IiLCJqc29uUGF0aCI6Ii5zcGVjLmhhemVsY2FzdFJlc291cmNlTmFtZSIsIm5hbWUiOiJIYXplbGNhc3QtUmVzb3VyY2UiLCJwcmlvcml0eSI6MSwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IlVzZXJDb2RlTmFtZXNwYWNlIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSB1c2VyY29kZW5hbWVzcGFjZXMgQVBJIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJVc2VyQ29kZU5hbWVzcGFjZVNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBVc2VyQ29kZU5hbWVzcGFjZSIsInByb3BlcnRpZXMiOnsiYnVja2V0Q29uZmlnIjp7ImRlc2NyaXB0aW9uIjoiQnVja2V0IGNvbmZpZyBmcm9tIHdoZXJlIHRoZSBKQVIgZmlsZXMgd2lsbCBiZSBkb3dubG9hZGVkLiIsInByb3BlcnRpZXMiOnsiYnVja2V0VVJJIjp7ImRlc2NyaXB0aW9uIjoiVVJMIG9mIHRoZSBidWNrZXQgdG8gZG93bmxvYWQgSG90QmFja3VwIGZvbGRlcnMuIEFXUyBTMywgR0NQIEJ1Y2tldCBhbmQgQXp1cmUgQmxvYiBzdG9yYWdlIGJ1Y2tldHMgYXJlIHN1cHBvcnRlZC4gRXhhbXBsZSBidWNrZXQgVVJJczogLSBBV1MgUzMgICAgIC1cdTAwM2UgczM6Ly9idWNrZXQtbmFtZS9wYXRoL3RvL2ZvbGRlciAtIEdDUCBCdWNrZXQgLVx1MDAzZSBnczovL2J1Y2tldC1uYW1lL3BhdGgvdG8vZm9sZGVyIC0gQXp1cmUgQmxvYiAtXHUwMDNlIGF6YmxvYjovL2J1Y2tldC1uYW1lL3BhdGgvdG8vZm9sZGVyIiwibWluTGVuZ3RoIjo2LCJ0eXBlIjoic3RyaW5nIn0sInNlY3JldCI6eyJkZXNjcmlwdGlvbiI6InNlY3JldCBpcyBhIGRlcHJlY2F0ZWQgYWxpYXMgZm9yIHNlY3JldE5hbWUuIiwidHlwZSI6InN0cmluZyJ9LCJzZWNyZXROYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgc2VjcmV0IHdpdGggY3JlZGVudGlhbHMgZm9yIGNsb3VkIHByb3ZpZGVycy4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJidWNrZXRVUkkiXSwidHlwZSI6Im9iamVjdCJ9LCJoYXplbGNhc3RSZXNvdXJjZU5hbWUiOnsiZGVzY3JpcHRpb24iOiJIYXplbGNhc3RSZXNvdXJjZU5hbWUgZGVmaW5lcyB0aGUgbmFtZSBvZiB0aGUgSGF6ZWxjYXN0IHJlc291cmNlIHRoYXQgdGhpcyByZXNvdXJjZSBpcyBjcmVhdGVkIGZvci4iLCJtaW5MZW5ndGgiOjEsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImhhemVsY2FzdFJlc291cmNlTmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IlVzZXJDb2RlTmFtZXNwYWNlU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIFVzZXJDb2RlTmFtZXNwYWNlIiwicHJvcGVydGllcyI6eyJtZXNzYWdlIjp7InR5cGUiOiJzdHJpbmcifSwic3RhdGUiOnsiZW51bSI6WyJVbmtub3duIiwiUGVuZGluZyIsIk5vdFN0YXJ0ZWQiLCJJblByb2dyZXNzIiwiRmFpbHVyZSIsIlN1Y2Nlc3MiXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6bnVsbCwic3RvcmVkVmVyc2lvbnMiOm51bGx9fQ==
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEzLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJ3YW5yZXBsaWNhdGlvbnMuaGF6ZWxjYXN0LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiaGF6ZWxjYXN0LmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJXYW5SZXBsaWNhdGlvbiIsImxpc3RLaW5kIjoiV2FuUmVwbGljYXRpb25MaXN0IiwicGx1cmFsIjoid2FucmVwbGljYXRpb25zIiwic2hvcnROYW1lcyI6WyJ3ciJdLCJzaW5ndWxhciI6IndhbnJlcGxpY2F0aW9uIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJhZGRpdGlvbmFsUHJpbnRlckNvbHVtbnMiOlt7ImRlc2NyaXB0aW9uIjoiQ3VycmVudCBzdGF0ZSBvZiB0aGUgSGF6ZWxjYXN0IFdBTiBSZXBsaWNhdGlvbiIsImpzb25QYXRoIjoiLnN0YXR1cy5zdGF0dXMiLCJuYW1lIjoiU3RhdHVzIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJNZXNzYWdlIGZvciB0aGUgY3VycmVudCBXYW5SZXBsaWNhdGlvbiBDb25maWciLCJqc29uUGF0aCI6Ii5zdGF0dXMubWVzc2FnZSIsIm5hbWUiOiJNZXNzYWdlIiwicHJpb3JpdHkiOjEsInR5cGUiOiJzdHJpbmcifV0sIm5hbWUiOiJ2MWFscGhhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJXYW5SZXBsaWNhdGlvbiBpcyB0aGUgU2NoZW1hIGZvciB0aGUgd2FucmVwbGljYXRpb25zIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiV2FuUmVwbGljYXRpb25TcGVjIGRlZmluZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgV2FuUmVwbGljYXRpb24iLCJwcm9wZXJ0aWVzIjp7ImFja25vd2xlZGdlbWVudCI6eyJkZWZhdWx0Ijp7InRpbWVvdXQiOjYwMDAwLCJ0eXBlIjoiQUNLX09OX09QRVJBVElPTl9DT01QTEVURSJ9LCJkZXNjcmlwdGlvbiI6IkFja25vd2xlZGdlbWVudCBpcyB0aGUgY29uZmlndXJhdGlvbiBmb3IgdGhlIGNvbmRpdGlvbiB3aGVuIHRoZSBuZXh0IGJhdGNoIG9mIFdBTiBldmVudHMgYXJlIHNlbnQuIiwicHJvcGVydGllcyI6eyJ0aW1lb3V0Ijp7ImRlZmF1bHQiOjYwMDAwLCJkZXNjcmlwdGlvbiI6IlRpbWVvdXQgcmVwcmVzZW50cyB0aGUgdGltZSBpbiBtaWxsaXNlY29uZHMgdGhlIHNvdXJjZSBjbHVzdGVyIHdhaXRzIGZvciB0aGUgYWNrbm93bGVkZ2VtZW50LiBBZnRlciB0aW1lb3V0LCB0aGUgZXZlbnRzIHdpbGwgYmUgcmVzZW50LiIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifSwidHlwZSI6eyJkZWZhdWx0IjoiQUNLX09OX09QRVJBVElPTl9DT01QTEVURSIsImRlc2NyaXB0aW9uIjoiVHlwZSByZXByZXNlbnRzIGhvdyBhIGJhdGNoIG9mIHJlcGxpY2F0aW9uIGV2ZW50cyBpcyBjb25zaWRlcmVkIHN1Y2Nlc3NmdWxseSByZXBsaWNhdGVkLiIsImVudW0iOlsiQUNLX09OX09QRVJBVElPTl9DT01QTEVURSIsIkFDS19PTl9SRUNFSVBUIl0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwiYmF0Y2giOnsiZGVmYXVsdCI6eyJtYXhpbXVtRGVsYXkiOjEwMDAsInNpemUiOjUwMH0sImRlc2NyaXB0aW9uIjoiQmF0Y2ggaXMgdGhlIGNvbmZpZ3VyYXRpb24gZm9yIFdBTiBldmVudHMgYmF0Y2guIiwicHJvcGVydGllcyI6eyJtYXhpbXVtRGVsYXkiOnsiZGVmYXVsdCI6MTAwMCwiZGVzY3JpcHRpb24iOiJNYXhpbXVtRGVsYXkgcmVwcmVzZW50cyB0aGUgbWF4aW11bSBkZWxheSBpbiBtaWxsaXNlY29uZHMuIElmIHRoZSBiYXRjaCBzaXplIGlzIG5vdCByZWFjaGVkLCB0aGUgZXZlbnRzIHdpbGwgYmUgc2VudCBhZnRlciB0aGUgbWF4aW11bSBkZWxheS4iLCJmb3JtYXQiOiJpbnQzMiIsInR5cGUiOiJpbnRlZ2VyIn0sInNpemUiOnsiZGVmYXVsdCI6NTAwLCJkZXNjcmlwdGlvbiI6IlNpemUgcmVwcmVzZW50cyB0aGUgbWF4aW11bSBiYXRjaCBzaXplLiIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifX0sInR5cGUiOiJvYmplY3QifSwiZW5kcG9pbnRzIjp7ImRlc2NyaXB0aW9uIjoiRW5kcG9pbnRzIGlzIHRoZSB0YXJnZXQgY2x1c3RlciBjb21tYSBzZXBhcmF0ZWQgZW5kcG9pbnQgbGlzdCAuIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn0sInF1ZXVlIjp7ImRlZmF1bHQiOnsiY2FwYWNpdHkiOjEwMDAwLCJmdWxsQmVoYXZpb3IiOiJESVNDQVJEX0FGVEVSX01VVEFUSU9OIn0sImRlc2NyaXB0aW9uIjoiUXVldWUgaXMgdGhlIGNvbmZpZ3VyYXRpb24gZm9yIFdBTiBldmVudHMgcXVldWUuIiwicHJvcGVydGllcyI6eyJjYXBhY2l0eSI6eyJkZWZhdWx0IjoxMDAwMCwiZGVzY3JpcHRpb24iOiJDYXBhY2l0eSBpcyB0aGUgdG90YWwgY2FwYWNpdHkgb2YgV0FOIHF1ZXVlLiIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifSwiZnVsbEJlaGF2aW9yIjp7ImRlZmF1bHQiOiJESVNDQVJEX0FGVEVSX01VVEFUSU9OIiwiZGVzY3JpcHRpb24iOiJGdWxsQmVoYXZpb3IgcmVwcmVzZW50cyB0aGUgYmVoYXZpb3Igb2YgdGhlIG5ldyBhcnJpdmFsIHdoZW4gdGhlIHF1ZXVlIGlzIGZ1bGwuIiwiZW51bSI6WyJESVNDQVJEX0FGVEVSX01VVEFUSU9OIiwiVEhST1dfRVhDRVBUSU9OIiwiVEhST1dfRVhDRVBUSU9OX09OTFlfSUZfUkVQTElDQVRJT05fQUNUSVZFIl0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwicmVzb3VyY2VzIjp7ImRlc2NyaXB0aW9uIjoiUmVzb3VyY2VzIGlzIHRoZSBsaXN0IG9mIGN1c3RvbSByZXNvdXJjZXMgdG8gd2hpY2ggV0FOIHJlcGxpY2F0aW9uIGFwcGxpZXMuIiwiaXRlbXMiOnsicHJvcGVydGllcyI6eyJraW5kIjp7ImRlZmF1bHQiOiJNYXAiLCJkZXNjcmlwdGlvbiI6IktpbmQgaXMgdGhlIGtpbmQgb2YgY3VzdG9tIHJlc291cmNlIHRvIHdoaWNoIFdBTiByZXBsaWNhdGlvbiBhcHBsaWVzLiIsImVudW0iOlsiTWFwIiwiSGF6ZWxjYXN0Il0sInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgaXMgdGhlIG5hbWUgb2YgY3VzdG9tIHJlc291cmNlIHRvIHdoaWNoIFdBTiByZXBsaWNhdGlvbiBhcHBsaWVzLiIsIm1pbkxlbmd0aCI6MSwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sIm1pbkl0ZW1zIjoxLCJ0eXBlIjoiYXJyYXkifSwic3luY0NvbnNpc3RlbmN5Q2hlY2tTdHJhdGVneSI6eyJkZXNjcmlwdGlvbiI6IlN5bmNDb25zaXN0ZW5jeUNoZWNrU3RyYXRlZ3kgaXMgdGhlIHN0cmF0ZWd5IGZvciBjaGVja2luZyB0aGUgY29uc2lzdGVuY3kgb2YgZGF0YSBiZXR3ZWVuIHJlcGxpY2FzLiIsInR5cGUiOiJzdHJpbmcifSwidGFyZ2V0Q2x1c3Rlck5hbWUiOnsiZGVzY3JpcHRpb24iOiJDbHVzdGVyTmFtZSBpcyB0aGUgY2x1c3Rlck5hbWUgZmllbGQgb2YgdGhlIHRhcmdldCBIYXplbGNhc3QgcmVzb3VyY2UuIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJlbmRwb2ludHMiLCJyZXNvdXJjZXMiLCJ0YXJnZXRDbHVzdGVyTmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IldhblJlcGxpY2F0aW9uU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIFdhblJlcGxpY2F0aW9uIiwicHJvcGVydGllcyI6eyJtZXNzYWdlIjp7ImRlc2NyaXB0aW9uIjoiTWVzc2FnZSBpcyB0aGUgZmllbGQgdG8gc2hvdyBkZXRhaWwgaW5mb3JtYXRpb24gb3IgZXJyb3IiLCJ0eXBlIjoic3RyaW5nIn0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IlN0YXR1cyBpcyB0aGUgc3RhdHVzIG9mIFdBTiByZXBsaWNhdGlvbiIsInR5cGUiOiJzdHJpbmcifSwid2FuUmVwbGljYXRpb25NYXBzU3RhdHVzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InByb3BlcnRpZXMiOnsibWVtYmVyc1N0YXR1cyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJwcm9wZXJ0aWVzIjp7ImlzQ29ubmVjdGVkIjp7ImRlc2NyaXB0aW9uIjoiSXNDb25uZWN0ZWQgZGVmaW5lcyB3aGV0aGVyIHRoZSBtZW1iZXIgaXMgY29ubmVjdGVkIiwidHlwZSI6ImJvb2xlYW4ifSwic3RhdGUiOnsiZGVzY3JpcHRpb24iOiJTdGF0ZSBpcyB0aGUgV0FOIHN0YXRlIG9mIHRoZSBtZW1iZXIiLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sImRlc2NyaXB0aW9uIjoiTWVtYmVyc1N0YXR1cyBpcyB0aGUgd2FuIHN0YXR1cyBvZiBlYWNoIG1lbWJlciIsInR5cGUiOiJvYmplY3QifSwibWVzc2FnZSI6eyJkZXNjcmlwdGlvbiI6Ik1lc3NhZ2UgaXMgdGhlIGZpZWxkIHRvIHNob3cgZGV0YWlsIGluZm9ybWF0aW9uIG9yIGVycm9yIiwidHlwZSI6InN0cmluZyJ9LCJwdWJsaXNoZXJJZCI6eyJkZXNjcmlwdGlvbiI6IlB1Ymxpc2hlcklkIGlzIHRoZSBJRCB1c2VkIGZvciBXQU4gcHVibGlzaGVyIElEIiwidHlwZSI6InN0cmluZyJ9LCJyZXNvdXJjZU5hbWUiOnsiZGVzY3JpcHRpb24iOiJSZXNvdXJjZU5hbWUgaXMgdGhlIG5hbWUgb2YgdGhlIE1hcCBDdXN0b20gUmVzb3VyY2UuIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJTdGF0dXMgaXMgdGhlIHN0YXR1cyBvZiBXQU4gcmVwbGljYXRpb24iLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sImRlc2NyaXB0aW9uIjoiV2FuUmVwbGljYXRpb25NYXBzU3RhdHVzIGlzIHRoZSBXQU4gUmVwbGljYXRpb24gc3RhdHVzIG9mIHRoZSBNYXBzIGdpdmVuIGluIHRoZSBzcGVjIGRpcmVjdGx5IG9yIGluZGlyZWN0bHkgYnkgSGF6ZWxjYXN0IHJlc291cmNlLiIsInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInNwZWMiXSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6bnVsbCwic3RvcmVkVmVyc2lvbnMiOm51bGx9fQ==
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEzLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJ3YW5zeW5jcy5oYXplbGNhc3QuY29tIn0sInNwZWMiOnsiZ3JvdXAiOiJoYXplbGNhc3QuY29tIiwibmFtZXMiOnsia2luZCI6IldhblN5bmMiLCJsaXN0S2luZCI6IldhblN5bmNMaXN0IiwicGx1cmFsIjoid2Fuc3luY3MiLCJzaG9ydE5hbWVzIjpbIndzIl0sInNpbmd1bGFyIjoid2Fuc3luYyJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJkZXNjcmlwdGlvbiI6IkN1cnJlbnQgc3RhdGUgb2YgdGhlIEhhemVsY2FzdCBXQU4gU3luYyIsImpzb25QYXRoIjoiLnN0YXR1cy5zdGF0dXMiLCJuYW1lIjoiU3RhdHVzIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJNZXNzYWdlIGZvciB0aGUgY3VycmVudCBXYW5TeW5jIiwianNvblBhdGgiOiIuc3RhdHVzLm1lc3NhZ2UiLCJuYW1lIjoiTWVzc2FnZSIsInByaW9yaXR5IjoxLCJ0eXBlIjoic3RyaW5nIn1dLCJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiV2FuU3luYyBpcyB0aGUgU2NoZW1hIGZvciB0aGUgd2Fuc3luY3MgQVBJIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJXYW5TeW5jU3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIFdhblN5bmMiLCJwcm9wZXJ0aWVzIjp7IndhblJlcGxpY2F0aW9uUmVzb3VyY2VOYW1lIjp7ImRlc2NyaXB0aW9uIjoiV2FuUmVwbGljYXRpb25SZXNvdXJjZU5hbWUgaXMgdGhlIG5hbWUgb2YgV2FuUmVwbGljYXRpb24gQ1IgdGhhdCBjb250YWlucyB0aGUgV0FOIHB1Ymxpc2hlciBjb25maWd1cmF0aW9uLiBJZiBzcGVjaWZpZWQgdGhlIFN5bmMgb3BlcmF0aW9uIHdpbGwgdXNlIGV4aXN0aW5nIFdBTiBwdWJsaXNoZXIuIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJ3YW5SZXBsaWNhdGlvblJlc291cmNlTmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IldhblN5bmNTdGF0dXMgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgV2FuU3luYyIsInByb3BlcnRpZXMiOnsibWVzc2FnZSI6eyJkZXNjcmlwdGlvbiI6Ik1lc3NhZ2UgaXMgdGhlIGZpZWxkIHRvIHNob3cgZGV0YWlsIGluZm9ybWF0aW9uIG9yIGVycm9yIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJTdGF0dXMgaXMgdGhlIHN0YXR1cyBvZiBXQU4gU3luYyIsInR5cGUiOiJzdHJpbmcifSwid2FuU3luY01hcHNTdGF0dXMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsicHJvcGVydGllcyI6eyJtZXNzYWdlIjp7ImRlc2NyaXB0aW9uIjoiTWVzc2FnZSBpcyB0aGUgZmllbGQgdG8gc2hvdyBkZXRhaWwgaW5mb3JtYXRpb24gb3IgZXJyb3IiLCJ0eXBlIjoic3RyaW5nIn0sInBoYXNlIjp7ImRlc2NyaXB0aW9uIjoiU3RhdHVzIGlzIHRoZSBzdGF0dXMgb2YgdGhlIHJlc291cmNlIFdBTiBzeW5jIiwidHlwZSI6InN0cmluZyJ9LCJwdWJsaXNoZXJJZCI6eyJkZXNjcmlwdGlvbiI6IlB1Ymxpc2hlcklkIGlzIHRoZSBJRCB1c2VkIGZvciBXQU4gcHVibGlzaGVyIElEIiwidHlwZSI6InN0cmluZyJ9LCJyZXNvdXJjZU5hbWUiOnsiZGVzY3JpcHRpb24iOiJSZXNvdXJjZU5hbWUgaXMgdGhlIG5hbWUgb2YgdGhlIE1hcCBDdXN0b20gUmVzb3VyY2UuIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJkZXNjcmlwdGlvbiI6IldhblN5bmNNYXBTdGF0dXMgaXMgdGhlIFdBTiBTeW5jIHN0YXR1cyBvZiB0aGUgTWFwcyBnaXZlbiBpbiB0aGUgc3BlYyBkaXJlY3RseSBvciBpbmRpcmVjdGx5IGJ5IEhhemVsY2FzdCByZXNvdXJjZS4iLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJzcGVjIl0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOm51bGwsInN0b3JlZFZlcnNpb25zIjpudWxsfX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEzLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJjYWNoZXMuaGF6ZWxjYXN0LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiaGF6ZWxjYXN0LmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJDYWNoZSIsImxpc3RLaW5kIjoiQ2FjaGVMaXN0IiwicGx1cmFsIjoiY2FjaGVzIiwic2hvcnROYW1lcyI6WyJjaCJdLCJzaW5ndWxhciI6ImNhY2hlIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJhZGRpdGlvbmFsUHJpbnRlckNvbHVtbnMiOlt7ImRlc2NyaXB0aW9uIjoiQ3VycmVudCBzdGF0ZSBvZiB0aGUgQ2FjaGUgQ29uZmlnIiwianNvblBhdGgiOiIuc3RhdHVzLnN0YXRlIiwibmFtZSI6IlN0YXR1cyIsInR5cGUiOiJzdHJpbmcifSx7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgSGF6ZWxjYXN0IHJlc291cmNlIHRoYXQgdGhpcyByZXNvdXJjZSBpcyBjcmVhdGVkIGZvciIsImpzb25QYXRoIjoiLnNwZWMuaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIiwibmFtZSI6IkhhemVsY2FzdC1SZXNvdXJjZSIsInByaW9yaXR5IjoxLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6Ik1lc3NhZ2UgZm9yIHRoZSBjdXJyZW50IENhY2hlIENvbmZpZyIsImpzb25QYXRoIjoiLnN0YXR1cy5tZXNzYWdlIiwibmFtZSI6Ik1lc3NhZ2UiLCJwcmlvcml0eSI6MSwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkNhY2hlIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSBjYWNoZXMgQVBJIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJDYWNoZVNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBDYWNoZSBJdCBjYW5ub3QgYmUgdXBkYXRlZCBhZnRlciB0aGUgQ2FjaGUgaXMgY3JlYXRlZCIsInByb3BlcnRpZXMiOnsiYXN5bmNCYWNrdXBDb3VudCI6eyJkZWZhdWx0IjowLCJkZXNjcmlwdGlvbiI6Ik51bWJlciBvZiBhc3luY2hyb25vdXMgYmFja3Vwcy4iLCJmb3JtYXQiOiJpbnQzMiIsIm1heGltdW0iOjYsIm1pbmltdW0iOjAsInR5cGUiOiJpbnRlZ2VyIn0sImJhY2t1cENvdW50Ijp7ImRlZmF1bHQiOjEsImRlc2NyaXB0aW9uIjoiTnVtYmVyIG9mIHN5bmNocm9ub3VzIGJhY2t1cHMuIiwiZm9ybWF0IjoiaW50MzIiLCJtYXhpbXVtIjo2LCJtaW5pbXVtIjowLCJ0eXBlIjoiaW50ZWdlciJ9LCJldmVudEpvdXJuYWwiOnsiZGVzY3JpcHRpb24iOiJFdmVudEpvdXJuYWwgc3BlY2lmaWVzIGV2ZW50IGpvdXJuYWwgY29uZmlndXJhdGlvbiBvZiB0aGUgQ2FjaGUiLCJwcm9wZXJ0aWVzIjp7ImNhcGFjaXR5Ijp7ImRlZmF1bHQiOjEwMDAwLCJkZXNjcmlwdGlvbiI6IkNhcGFjaXR5IHNldHMgdGhlIGNhcGFjaXR5IG9mIHRoZSByaW5nYnVmZmVyIHVuZGVybHlpbmcgdGhlIGV2ZW50IGpvdXJuYWwuIiwiZm9ybWF0IjoiaW50MzIiLCJ0eXBlIjoiaW50ZWdlciJ9LCJ0aW1lVG9MaXZlU2Vjb25kcyI6eyJkZWZhdWx0IjowLCJkZXNjcmlwdGlvbiI6IlRpbWVUb0xpdmVTZWNvbmRzIGluZGljYXRlcyBob3cgbG9uZyB0aGUgaXRlbXMgcmVtYWluIGluIHRoZSBldmVudCBqb3VybmFsIGJlZm9yZSB0aGV5IGFyZSBleHBpcmVkLiIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifX0sInR5cGUiOiJvYmplY3QifSwiaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIjp7ImRlc2NyaXB0aW9uIjoiSGF6ZWxjYXN0UmVzb3VyY2VOYW1lIGRlZmluZXMgdGhlIG5hbWUgb2YgdGhlIEhhemVsY2FzdCByZXNvdXJjZSB0aGF0IHRoaXMgcmVzb3VyY2UgaXMgY3JlYXRlZCBmb3IuIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn0sImluTWVtb3J5Rm9ybWF0Ijp7ImRlZmF1bHQiOiJCSU5BUlkiLCJkZXNjcmlwdGlvbiI6IkluTWVtb3J5Rm9ybWF0IHNwZWNpZmllcyBpbiB3aGljaCBmb3JtYXQgZGF0YSB3aWxsIGJlIHN0b3JlZCBpbiB5b3VyIGNhY2hlIiwiZW51bSI6WyJCSU5BUlkiLCJPQkpFQ1QiLCJOQVRJVkUiXSwidHlwZSI6InN0cmluZyJ9LCJrZXlUeXBlIjp7ImRlc2NyaXB0aW9uIjoiQ2xhc3MgbmFtZSBvZiB0aGUga2V5IHR5cGUiLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBkYXRhIHN0cnVjdHVyZSBjb25maWcgdG8gYmUgY3JlYXRlZC4gSWYgZW1wdHksIENSIG5hbWUgd2lsbCBiZSB1c2VkLiBJdCBjYW5ub3QgYmUgdXBkYXRlZCBhZnRlciB0aGUgY29uZmlnIGlzIGNyZWF0ZWQgc3VjY2Vzc2Z1bGx5LiIsInR5cGUiOiJzdHJpbmcifSwicGVyc2lzdGVuY2VFbmFibGVkIjp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6IldoZW4gZW5hYmxlZCwgY2FjaGUgZGF0YSB3aWxsIGJlIHBlcnNpc3RlZC4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJ1c2VyQ29kZU5hbWVzcGFjZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIFVzZXIgQ29kZSBOYW1lc3BhY2UgYXBwbGllZCB0byB0aGlzIGluc3RhbmNlIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlVHlwZSI6eyJkZXNjcmlwdGlvbiI6IkNsYXNzIG5hbWUgb2YgdGhlIHZhbHVlIHR5cGUiLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJoYXplbGNhc3RSZXNvdXJjZU5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJDYWNoZVN0YXR1cyBkZWZpbmVzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBDYWNoZSIsInByb3BlcnRpZXMiOnsibWVtYmVyU3RhdHVzZXMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsiZW51bSI6WyJTdWNjZXNzIiwiRmFpbGVkIiwiUGVuZGluZyIsIlBlcnNpc3RpbmciLCJUZXJtaW5hdGluZyJdLCJ0eXBlIjoic3RyaW5nIn0sImRlc2NyaXB0aW9uIjoiSG9sZHMgc3RhdHVzIG9mIGRhdGEgc3RydWN0dXJlIGZvciBlYWNoIEhhemVsY2FzdCBtZW1iZXIiLCJ0eXBlIjoib2JqZWN0In0sIm1lc3NhZ2UiOnsiZGVzY3JpcHRpb24iOiJNZXNzYWdlIGV4cGxhaW5pbmcgdGhlIGN1cnJlbnQgc3RhdGUiLCJ0eXBlIjoic3RyaW5nIn0sInN0YXRlIjp7ImRlc2NyaXB0aW9uIjoiU3RhdGUgb2YgdGhlIGRhdGEgc3RydWN0dXJlIiwiZW51bSI6WyJTdWNjZXNzIiwiRmFpbGVkIiwiUGVuZGluZyIsIlBlcnNpc3RpbmciLCJUZXJtaW5hdGluZyJdLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJzcGVjIl0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOm51bGwsInN0b3JlZFZlcnNpb25zIjpudWxsfX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEzLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJjcm9uaG90YmFja3Vwcy5oYXplbGNhc3QuY29tIn0sInNwZWMiOnsiZ3JvdXAiOiJoYXplbGNhc3QuY29tIiwibmFtZXMiOnsia2luZCI6IkNyb25Ib3RCYWNrdXAiLCJsaXN0S2luZCI6IkNyb25Ib3RCYWNrdXBMaXN0IiwicGx1cmFsIjoiY3JvbmhvdGJhY2t1cHMiLCJzaG9ydE5hbWVzIjpbImNoYiJdLCJzaW5ndWxhciI6ImNyb25ob3RiYWNrdXAifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3siZGVzY3JpcHRpb24iOiJTdXNwZW50aW9uIHN0YXR1cyBvZiB0aGUgQ3JvbkhvdEJhY2t1cCIsImpzb25QYXRoIjoiLnNwZWMuc3VzcGVuZCIsIm5hbWUiOiJTVVNQRU5ERUQiLCJ0eXBlIjoiYm9vbGVhbiJ9LHsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBIYXplbGNhc3QgcmVzb3VyY2UgdGhhdCB0aGlzIHJlc291cmNlIGlzIGNyZWF0ZWQgZm9yIiwianNvblBhdGgiOiIuc3BlYy5ob3RCYWNrdXBUZW1wbGF0ZS5zcGVjLmhhemVsY2FzdFJlc291cmNlTmFtZSIsIm5hbWUiOiJIYXplbGNhc3QtUmVzb3VyY2UiLCJwcmlvcml0eSI6MSwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkNyb25Ib3RCYWNrdXAgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIGNyb25ob3RiYWNrdXBzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiQ3JvbkhvdEJhY2t1cFNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBDcm9uSG90QmFja3VwIiwicHJvcGVydGllcyI6eyJmYWlsZWRIb3RCYWNrdXBzSGlzdG9yeUxpbWl0Ijp7ImRlZmF1bHQiOjMsImRlc2NyaXB0aW9uIjoiVGhlIG51bWJlciBvZiBmYWlsZWQgZmluaXNoZWQgaG90IGJhY2t1cHMgdG8gcmV0YWluLiIsImZvcm1hdCI6ImludDMyIiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifSwiaG90QmFja3VwVGVtcGxhdGUiOnsiZGVzY3JpcHRpb24iOiJTcGVjaWZpZXMgdGhlIGhvdCBiYWNrdXAgdGhhdCB3aWxsIGJlIGNyZWF0ZWQgd2hlbiBleGVjdXRpbmcgYSBDcm9uSG90QmFja3VwLiIsInByb3BlcnRpZXMiOnsibWV0YWRhdGEiOnsiZGVzY3JpcHRpb24iOiJTdGFuZGFyZCBvYmplY3QncyBtZXRhZGF0YSBvZiB0aGUgaG90IGJhY2t1cHMgY3JlYXRlZCBmcm9tIHRoaXMgdGVtcGxhdGUuIiwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJTcGVjaWZpY2F0aW9uIG9mIHRoZSBkZXNpcmVkIGJlaGF2aW9yIG9mIHRoZSBob3QgYmFja3VwLiIsInByb3BlcnRpZXMiOnsiYnVja2V0VVJJIjp7ImRlc2NyaXB0aW9uIjoiVVJMIG9mIHRoZSBidWNrZXQgdG8gZG93bmxvYWQgSG90QmFja3VwIGZvbGRlcnMuIEFXUyBTMywgR0NQIEJ1Y2tldCBhbmQgQXp1cmUgQmxvYiBzdG9yYWdlIGJ1Y2tldHMgYXJlIHN1cHBvcnRlZC4gRXhhbXBsZSBidWNrZXQgVVJJczogLSBBV1MgUzMgICAgIC1cdTAwM2UgczM6Ly9idWNrZXQtbmFtZS9wYXRoL3RvL2ZvbGRlciAtIEdDUCBCdWNrZXQgLVx1MDAzZSBnczovL2J1Y2tldC1uYW1lL3BhdGgvdG8vZm9sZGVyIC0gQXp1cmUgQmxvYiAtXHUwMDNlIGF6YmxvYjovL2J1Y2tldC1uYW1lL3BhdGgvdG8vZm9sZGVyIiwidHlwZSI6InN0cmluZyJ9LCJoYXplbGNhc3RSZXNvdXJjZU5hbWUiOnsiZGVzY3JpcHRpb24iOiJIYXplbGNhc3RSZXNvdXJjZU5hbWUgZGVmaW5lcyB0aGUgbmFtZSBvZiB0aGUgSGF6ZWxjYXN0IHJlc291cmNlIiwidHlwZSI6InN0cmluZyJ9LCJzZWNyZXQiOnsiZGVzY3JpcHRpb24iOiJzZWNyZXQgaXMgYSBkZXByZWNhdGVkIGFsaWFzIGZvciBzZWNyZXROYW1lLiIsInR5cGUiOiJzdHJpbmcifSwic2VjcmV0TmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIHNlY3JldCB3aXRoIGNyZWRlbnRpYWxzIGZvciBjbG91ZCBwcm92aWRlcnMuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIl0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInNwZWMiXSwidHlwZSI6Im9iamVjdCJ9LCJzY2hlZHVsZSI6eyJkZXNjcmlwdGlvbiI6IlNjaGVkdWxlIGNvbnRhaW5zIGEgY3JvbnRhYi1saWtlIGV4cHJlc3Npb24gdGhhdCBkZWZpbmVzIHRoZSBzY2hlZHVsZSBpbiB3aGljaCBIb3RCYWNrdXAgd2lsbCBiZSBzdGFydGVkLiBJZiB0aGUgU2NoZWR1bGUgaXMgZW1wdHkgdGhlIEhvdEJhY2t1cCB3aWxsIHN0YXJ0IG9ubHkgb25jZSB3aGVuIGFwcGxpZWQuIC0tLSBTZXZlcmFsIHByZS1kZWZpbmVkIHNjaGVkdWxlcyBpbiBwbGFjZSBvZiBhIGNyb24gZXhwcmVzc2lvbiBjYW4gYmUgdXNlZC4gRW50cnkgICAgICAgICAgICAgICAgICB8IERlc2NyaXB0aW9uICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IEVxdWl2YWxlbnQgVG8gLS0tLS0gICAgICAgICAgICAgICAgICB8IC0tLS0tLS0tLS0tICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IC0tLS0tLS0tLS0tLS0gQHllYXJseSAob3IgQGFubnVhbGx5KSB8IFJ1biBvbmNlIGEgeWVhciwgbWlkbmlnaHQsIEphbi4gMXN0ICAgICAgICB8IDAgMCAxIDEgKiBAbW9udGhseSAgICAgICAgICAgICAgIHwgUnVuIG9uY2UgYSBtb250aCwgbWlkbmlnaHQsIGZpcnN0IG9mIG1vbnRoIHwgMCAwIDEgKiAqIEB3ZWVrbHkgICAgICAgICAgICAgICAgfCBSdW4gb25jZSBhIHdlZWssIG1pZG5pZ2h0IGJldHdlZW4gU2F0L1N1biAgfCAwIDAgKiAqIDAgQGRhaWx5IChvciBAbWlkbmlnaHQpICB8IFJ1biBvbmNlIGEgZGF5LCBtaWRuaWdodCAgICAgICAgICAgICAgICAgICB8IDAgMCAqICogKiBAaG91cmx5ICAgICAgICAgICAgICAgIHwgUnVuIG9uY2UgYW4gaG91ciwgYmVnaW5uaW5nIG9mIGhvdXIgICAgICAgIHwgMCAqICogKiAqIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn0sInN1Y2Nlc3NmdWxIb3RCYWNrdXBzSGlzdG9yeUxpbWl0Ijp7ImRlZmF1bHQiOjUsImRlc2NyaXB0aW9uIjoiVGhlIG51bWJlciBvZiBzdWNjZXNzZnVsIGZpbmlzaGVkIGhvdCBiYWNrdXBzIHRvIHJldGFpbi4iLCJmb3JtYXQiOiJpbnQzMiIsIm1pbmltdW0iOjAsInR5cGUiOiJpbnRlZ2VyIn0sInN1c3BlbmQiOnsiZGVmYXVsdCI6ZmFsc2UsImRlc2NyaXB0aW9uIjoiV2hlbiB0cnVlLCBDcm9uSG90QmFja3VwIHdpbGwgc3RvcCBjcmVhdGluZyBIb3RCYWNrdXAgQ1JzIHVudGlsIGl0IGlzIGRpc2FibGVkIiwidHlwZSI6ImJvb2xlYW4ifX0sInJlcXVpcmVkIjpbImhvdEJhY2t1cFRlbXBsYXRlIiwic2NoZWR1bGUiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJDcm9uSG90QmFja3VwU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIENyb25Ib3RCYWNrdXAiLCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJzcGVjIl0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOm51bGwsInN0b3JlZFZlcnNpb25zIjpudWxsfX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEzLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJoYXplbGNhc3RlbmRwb2ludHMuaGF6ZWxjYXN0LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiaGF6ZWxjYXN0LmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJIYXplbGNhc3RFbmRwb2ludCIsImxpc3RLaW5kIjoiSGF6ZWxjYXN0RW5kcG9pbnRMaXN0IiwicGx1cmFsIjoiaGF6ZWxjYXN0ZW5kcG9pbnRzIiwic2hvcnROYW1lcyI6WyJoemVwIl0sInNpbmd1bGFyIjoiaGF6ZWxjYXN0ZW5kcG9pbnQifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3siZGVzY3JpcHRpb24iOiJUeXBlIG9mIHRoZSBIYXplbGNhc3RFbmRwb2ludCIsImpzb25QYXRoIjoiLnNwZWMudHlwZSIsIm5hbWUiOiJUeXBlIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJBZGRyZXNzIG9mIHRoZSBIYXplbGNhc3RFbmRwb2ludCIsImpzb25QYXRoIjoiLnN0YXR1cy5hZGRyZXNzIiwibmFtZSI6IkFkZHJlc3MiLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIEhhemVsY2FzdCByZXNvdXJjZSB0aGF0IHRoaXMgcmVzb3VyY2UgaXMgY3JlYXRlZCBmb3IiLCJqc29uUGF0aCI6Ii5zcGVjLmhhemVsY2FzdFJlc291cmNlTmFtZSIsIm5hbWUiOiJIYXplbGNhc3QtUmVzb3VyY2UiLCJwcmlvcml0eSI6MSwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJNZXNzYWdlIGZvciB0aGUgY3VycmVudCBIYXplbGNhc3RFbmRwb2ludCIsImpzb25QYXRoIjoiLnN0YXR1cy5tZXNzYWdlIiwibmFtZSI6Ik1lc3NhZ2UiLCJwcmlvcml0eSI6MSwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkhhemVsY2FzdEVuZHBvaW50IGlzIHRoZSBTY2hlbWEgZm9yIHRoZSBoYXplbGNhc3RlbmRwb2ludHMgQVBJIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJIYXplbGNhc3RFbmRwb2ludFNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBIYXplbGNhc3RFbmRwb2ludCIsInByb3BlcnRpZXMiOnsiaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIjp7ImRlc2NyaXB0aW9uIjoiSGF6ZWxjYXN0UmVzb3VyY2VOYW1lIGRlZmluZXMgdGhlIG5hbWUgb2YgdGhlIEhhemVsY2FzdCByZXNvdXJjZSB0aGF0IHRoaXMgcmVzb3VyY2UgaXMgY3JlYXRlZCBmb3IuIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn0sInBvcnQiOnsiZGVzY3JpcHRpb24iOiJQb3J0IG9mIHRoZSBlbmRwb2ludC4iLCJmb3JtYXQiOiJpbnQzMiIsInR5cGUiOiJpbnRlZ2VyIn0sInR5cGUiOnsiZGVzY3JpcHRpb24iOiJUeXBlIGRlZmluZXMgdGhlIGVuZHBvaW50IGNvbm5lY3Rpb24uIEl0IGlzIHVzZWQgdG8gaWRlbnRpZnkgdGhlIHRhcmdldCBvZiB0aGUgZW5kcG9pbnQuIiwiZW51bSI6WyJEaXNjb3ZlcnkiLCJNZW1iZXIiLCJXQU4iXSwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIiwicG9ydCIsInR5cGUiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJIYXplbGNhc3RFbmRwb2ludFN0YXR1cyBkZWZpbmVzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBIYXplbGNhc3RFbmRwb2ludCIsInByb3BlcnRpZXMiOnsiYWRkcmVzcyI6eyJkZXNjcmlwdGlvbiI6IkFkZHJlc3MgaXMgdGhlIGV4dGVybmFsIGFkZHJlc3Mgb2YgdGhlIGVuZHBvaW50LiBJdCBpcyB0YWtlbiBmcm9tIHRoZSBjb3JyZXNwb25kaW5nIHNlcnZpY2UuIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6bnVsbCwic3RvcmVkVmVyc2lvbnMiOm51bGx9fQ==
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEzLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJob3RiYWNrdXBzLmhhemVsY2FzdC5jb20ifSwic3BlYyI6eyJncm91cCI6ImhhemVsY2FzdC5jb20iLCJuYW1lcyI6eyJraW5kIjoiSG90QmFja3VwIiwibGlzdEtpbmQiOiJIb3RCYWNrdXBMaXN0IiwicGx1cmFsIjoiaG90YmFja3VwcyIsInNob3J0TmFtZXMiOlsiaGIiXSwic2luZ3VsYXIiOiJob3RiYWNrdXAifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3siZGVzY3JpcHRpb24iOiJDdXJyZW50IHN0YXRlIG9mIHRoZSBIb3RCYWNrdXAgcHJvY2VzcyIsImpzb25QYXRoIjoiLnN0YXR1cy5zdGF0ZSIsIm5hbWUiOiJTdGF0dXMiLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIEhhemVsY2FzdCByZXNvdXJjZSB0aGF0IHRoaXMgcmVzb3VyY2UgaXMgY3JlYXRlZCBmb3IiLCJqc29uUGF0aCI6Ii5zcGVjLmhhemVsY2FzdFJlc291cmNlTmFtZSIsIm5hbWUiOiJIYXplbGNhc3QtUmVzb3VyY2UiLCJwcmlvcml0eSI6MSwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJNZXNzYWdlIGZvciB0aGUgY3VycmVudCBIb3RCYWNrdXAgQ29uZmlnIiwianNvblBhdGgiOiIuc3RhdHVzLm1lc3NhZ2UiLCJuYW1lIjoiTWVzc2FnZSIsInByaW9yaXR5IjoxLCJ0eXBlIjoic3RyaW5nIn1dLCJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiSG90QmFja3VwIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSBob3QgYmFja3VwIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiSG90QmFja3VwU3BlYyBkZWZpbmVzIHRoZSBTcGVjIG9mIEhvdEJhY2t1cCIsInByb3BlcnRpZXMiOnsiYnVja2V0VVJJIjp7ImRlc2NyaXB0aW9uIjoiVVJMIG9mIHRoZSBidWNrZXQgdG8gZG93bmxvYWQgSG90QmFja3VwIGZvbGRlcnMuIEFXUyBTMywgR0NQIEJ1Y2tldCBhbmQgQXp1cmUgQmxvYiBzdG9yYWdlIGJ1Y2tldHMgYXJlIHN1cHBvcnRlZC4gRXhhbXBsZSBidWNrZXQgVVJJczogLSBBV1MgUzMgICAgIC1cdTAwM2UgczM6Ly9idWNrZXQtbmFtZS9wYXRoL3RvL2ZvbGRlciAtIEdDUCBCdWNrZXQgLVx1MDAzZSBnczovL2J1Y2tldC1uYW1lL3BhdGgvdG8vZm9sZGVyIC0gQXp1cmUgQmxvYiAtXHUwMDNlIGF6YmxvYjovL2J1Y2tldC1uYW1lL3BhdGgvdG8vZm9sZGVyIiwidHlwZSI6InN0cmluZyJ9LCJoYXplbGNhc3RSZXNvdXJjZU5hbWUiOnsiZGVzY3JpcHRpb24iOiJIYXplbGNhc3RSZXNvdXJjZU5hbWUgZGVmaW5lcyB0aGUgbmFtZSBvZiB0aGUgSGF6ZWxjYXN0IHJlc291cmNlIiwidHlwZSI6InN0cmluZyJ9LCJzZWNyZXQiOnsiZGVzY3JpcHRpb24iOiJzZWNyZXQgaXMgYSBkZXByZWNhdGVkIGFsaWFzIGZvciBzZWNyZXROYW1lLiIsInR5cGUiOiJzdHJpbmcifSwic2VjcmV0TmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIHNlY3JldCB3aXRoIGNyZWRlbnRpYWxzIGZvciBjbG91ZCBwcm92aWRlcnMuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIl0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiSG90QmFja3VwU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIEhvdEJhY2t1cCIsInByb3BlcnRpZXMiOnsiYmFja3VwVVVJRHMiOnsiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifSwibWVzc2FnZSI6eyJ0eXBlIjoic3RyaW5nIn0sInN0YXRlIjp7ImVudW0iOlsiVW5rbm93biIsIlBlbmRpbmciLCJOb3RTdGFydGVkIiwiSW5Qcm9ncmVzcyIsIkZhaWx1cmUiLCJTdWNjZXNzIl0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInNwZWMiXSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6bnVsbCwic3RvcmVkVmVyc2lvbnMiOm51bGx9fQ==
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEzLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJqZXRqb2JzLmhhemVsY2FzdC5jb20ifSwic3BlYyI6eyJncm91cCI6ImhhemVsY2FzdC5jb20iLCJuYW1lcyI6eyJraW5kIjoiSmV0Sm9iIiwibGlzdEtpbmQiOiJKZXRKb2JMaXN0IiwicGx1cmFsIjoiamV0am9icyIsInNob3J0TmFtZXMiOlsiamoiXSwic2luZ3VsYXIiOiJqZXRqb2IifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3siZGVzY3JpcHRpb24iOiJDdXJyZW50IHN0YXRlIG9mIHRoZSBKZXRKb2IiLCJqc29uUGF0aCI6Ii5zdGF0dXMucGhhc2UiLCJuYW1lIjoiU3RhdHVzIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJJRCBvZiB0aGUgSmV0Sm9iIiwianNvblBhdGgiOiIuc3RhdHVzLmlkIiwibmFtZSI6IklkIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBIYXplbGNhc3QgcmVzb3VyY2UgdGhhdCB0aGlzIHJlc291cmNlIGlzIGNyZWF0ZWQgZm9yIiwianNvblBhdGgiOiIuc3BlYy5oYXplbGNhc3RSZXNvdXJjZU5hbWUiLCJuYW1lIjoiSGF6ZWxjYXN0LVJlc291cmNlIiwicHJpb3JpdHkiOjEsInR5cGUiOiJzdHJpbmcifSx7ImRlc2NyaXB0aW9uIjoiVGltZSB3aGVuIHRoZSBKZXRKb2Igd2FzIHN1Ym1pdHRlZCIsImpzb25QYXRoIjoiLnN0YXR1cy5zdWJtaXNzaW9uVGltZSIsIm5hbWUiOiJTdWJtaXNzaW9uVGltZSIsInR5cGUiOiJzdHJpbmcifSx7ImRlc2NyaXB0aW9uIjoiVGltZSB3aGVuIHRoZSBKZXRKb2Igd2FzIGNvbXBsZXRlZCIsImpzb25QYXRoIjoiLnN0YXR1cy5jb21wbGV0aW9uVGltZSIsIm5hbWUiOiJDb21wbGV0aW9uVGltZSIsInR5cGUiOiJzdHJpbmcifV0sIm5hbWUiOiJ2MWFscGhhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJKZXRKb2IgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIGpldGpvYnMgQVBJIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJKZXRKb2JTcGVjIGRlZmluZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgSmV0Sm9iIiwicHJvcGVydGllcyI6eyJidWNrZXRDb25maWciOnsiZGVzY3JpcHRpb24iOiJCdWNrZXQgY29uZmlnIGZyb20gd2hlcmUgdGhlIEpBUiBmaWxlcyB3aWxsIGJlIGRvd25sb2FkZWQuIiwicHJvcGVydGllcyI6eyJidWNrZXRVUkkiOnsiZGVzY3JpcHRpb24iOiJVUkwgb2YgdGhlIGJ1Y2tldCB0byBkb3dubG9hZCBIb3RCYWNrdXAgZm9sZGVycy4gQVdTIFMzLCBHQ1AgQnVja2V0IGFuZCBBenVyZSBCbG9iIHN0b3JhZ2UgYnVja2V0cyBhcmUgc3VwcG9ydGVkLiBFeGFtcGxlIGJ1Y2tldCBVUklzOiAtIEFXUyBTMyAgICAgLVx1MDAzZSBzMzovL2J1Y2tldC1uYW1lL3BhdGgvdG8vZm9sZGVyIC0gR0NQIEJ1Y2tldCAtXHUwMDNlIGdzOi8vYnVja2V0LW5hbWUvcGF0aC90by9mb2xkZXIgLSBBenVyZSBCbG9iIC1cdTAwM2UgYXpibG9iOi8vYnVja2V0LW5hbWUvcGF0aC90by9mb2xkZXIiLCJtaW5MZW5ndGgiOjYsInR5cGUiOiJzdHJpbmcifSwic2VjcmV0Ijp7ImRlc2NyaXB0aW9uIjoic2VjcmV0IGlzIGEgZGVwcmVjYXRlZCBhbGlhcyBmb3Igc2VjcmV0TmFtZS4iLCJ0eXBlIjoic3RyaW5nIn0sInNlY3JldE5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBzZWNyZXQgd2l0aCBjcmVkZW50aWFscyBmb3IgY2xvdWQgcHJvdmlkZXJzLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImJ1Y2tldFVSSSJdLCJ0eXBlIjoib2JqZWN0In0sImhhemVsY2FzdFJlc291cmNlTmFtZSI6eyJkZXNjcmlwdGlvbiI6IkhhemVsY2FzdFJlc291cmNlTmFtZSBkZWZpbmVzIHRoZSBuYW1lIG9mIHRoZSBIYXplbGNhc3QgcmVzb3VyY2UgdGhhdCB0aGlzIHJlc291cmNlIGlzIGNyZWF0ZWQgZm9yLiIsIm1pbkxlbmd0aCI6MSwidHlwZSI6InN0cmluZyJ9LCJpbml0aWFsU25hcHNob3RSZXNvdXJjZU5hbWUiOnsiZGVzY3JpcHRpb24iOiJJbml0aWFsU25hcHNob3RSZXNvdXJjZU5hbWUgc3BlY2lmeSB0aGUgbmFtZSBvZiB0aGUgSmV0Sm9iU25hcHNob3Qgb2JqZWN0IGZyb20gd2hpY2ggdGhlIEpldEpvYiBpcyBpbml0aWFsaXplZC4iLCJ0eXBlIjoic3RyaW5nIn0sImphck5hbWUiOnsiZGVzY3JpcHRpb24iOiJKYXJOYW1lIHNwZWNpZnkgdGhlIG5hbWUgb2YgdGhlIEphciB0byBydW4gdGhhdCBpcyBwcmVzZW50IG9uIHRoZSBtZW1iZXIuIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn0sIm1haW5DbGFzcyI6eyJkZXNjcmlwdGlvbiI6Ik1haW5DbGFzcyBpcyB0aGUgbmFtZSBvZiB0aGUgbWFpbiBjbGFzcyB0aGF0IHdpbGwgYmUgcnVuIG9uIHRoZSBzdWJtaXR0ZWQgam9iLiIsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIEpldEpvYiB0byBiZSBjcmVhdGVkLiBJZiBlbXB0eSwgQ1IgbmFtZSB3aWxsIGJlIHVzZWQuIEl0IGNhbm5vdCBiZSB1cGRhdGVkIGFmdGVyIHRoZSBjb25maWcgaXMgY3JlYXRlZCBzdWNjZXNzZnVsbHkuIiwidHlwZSI6InN0cmluZyJ9LCJwYXJhbWV0ZXJzIjp7ImRlc2NyaXB0aW9uIjoiUGFyYW1ldGVycyB0byBiZSBwYXNzZWQgdG8gSmV0IEpvYi4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJyZW1vdGVVUkwiOnsiZGVzY3JpcHRpb24iOiJVUkwgZnJvbSB3aGVyZSB0aGUgZmlsZSB3aWxsIGJlIGRvd25sb2FkZWQuIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0ZSI6eyJkZWZhdWx0IjoiUnVubmluZyIsImRlc2NyaXB0aW9uIjoiU3RhdGUgaXMgdXNlZCB0byBtYW5hZ2UgdGhlIGpvYiBzdGF0ZS4iLCJlbnVtIjpbIlJ1bm5pbmciLCJTdXNwZW5kZWQiLCJDYW5jZWxlZCIsIlJlc3RhcnRlZCJdLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJoYXplbGNhc3RSZXNvdXJjZU5hbWUiLCJqYXJOYW1lIiwic3RhdGUiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJKZXRKb2JTdGF0dXMgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgSmV0Sm9iIiwicHJvcGVydGllcyI6eyJjb21wbGV0aW9uVGltZSI6eyJmb3JtYXQiOiJkYXRlLXRpbWUiLCJ0eXBlIjoic3RyaW5nIn0sImZhaWx1cmVUZXh0Ijp7InR5cGUiOiJzdHJpbmcifSwiaWQiOnsiZm9ybWF0IjoiaW50NjQiLCJ0eXBlIjoiaW50ZWdlciJ9LCJwaGFzZSI6eyJlbnVtIjpbIkZhaWxlZCIsIk5vdFJ1bm5pbmciLCJTdGFydGluZyIsIlJ1bm5pbmciLCJTdXNwZW5kZWQiLCJTdXNwZW5kZWRFeHBvcnRpbmdTbmFwc2hvdCIsIkNvbXBsZXRpbmciLCJFeGVjdXRpb25GYWlsZWQiLCJDb21wbGV0ZWQiXSwidHlwZSI6InN0cmluZyJ9LCJzdWJtaXNzaW9uVGltZSI6eyJmb3JtYXQiOiJkYXRlLXRpbWUiLCJ0eXBlIjoic3RyaW5nIn0sInN1c3BlbnNpb25DYXVzZSI6eyJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJpZCIsInBoYXNlIl0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOm51bGwsInN0b3JlZFZlcnNpb25zIjpudWxsfX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEzLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJqZXRqb2JzbmFwc2hvdHMuaGF6ZWxjYXN0LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiaGF6ZWxjYXN0LmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJKZXRKb2JTbmFwc2hvdCIsImxpc3RLaW5kIjoiSmV0Sm9iU25hcHNob3RMaXN0IiwicGx1cmFsIjoiamV0am9ic25hcHNob3RzIiwic2hvcnROYW1lcyI6WyJqanMiXSwic2luZ3VsYXIiOiJqZXRqb2JzbmFwc2hvdCJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJkZXNjcmlwdGlvbiI6IkN1cnJlbnQgc3RhdGUgb2YgdGhlIEpldEpvYlNuYXBzaG90IiwianNvblBhdGgiOiIuc3RhdHVzLnN0YXRlIiwibmFtZSI6IlN0YXRlIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJUaW1lIHdoZW4gdGhlIEpldEpvYlNuYXBzaG90IHdhcyBjcmVhdGVkLCBpZiBjcmVhdGVkIiwianNvblBhdGgiOiIuc3RhdHVzLmNyZWF0aW9uVGltZSIsIm5hbWUiOiJDcmVhdGlvblRpbWUiLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6Ik1lc3NhZ2UgZm9yIHRoZSBKZXRKb2JTbmFwc2hvdCIsImpzb25QYXRoIjoiLnN0YXR1cy5tZXNzYWdlIiwibmFtZSI6Ik1lc3NhZ2UiLCJwcmlvcml0eSI6MSwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkpldEpvYlNuYXBzaG90IGlzIHRoZSBTY2hlbWEgZm9yIHRoZSBqZXRqb2JzbmFwc2hvdHMgQVBJIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJKZXRKb2JTbmFwc2hvdFNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBKZXRKb2JTbmFwc2hvdCIsInByb3BlcnRpZXMiOnsiY2FuY2VsSm9iIjp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6IkNhbmNlbEpvYiBkZXRlcm1pbmVzIHdoZXRoZXIgdGhlIGpvYiBpcyBjYW5jZWxlZCBhZnRlciBleHBvcnRpbmcgc25hcHNob3QiLCJ0eXBlIjoiYm9vbGVhbiJ9LCJqZXRKb2JSZXNvdXJjZU5hbWUiOnsiZGVzY3JpcHRpb24iOiJKZXRKb2JSZXNvdXJjZU5hbWUgaXMgdGhlIG5hbWUgb2YgdGhlIEpldEpvYiBDUiB3aGVyZSB0aGUgU25hcHNob3QgaXMgZXhwb3J0ZWQgZnJvbSIsIm1pbkxlbmd0aCI6MSwidHlwZSI6InN0cmluZyJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgZXhwb3J0ZWQgc25hcHNob3QiLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJqZXRKb2JSZXNvdXJjZU5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVmYXVsdCI6eyJzdGF0ZSI6IldhaXRpbmcifSwiZGVzY3JpcHRpb24iOiJKZXRKb2JTbmFwc2hvdFN0YXR1cyBkZWZpbmVzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBKZXRKb2JTbmFwc2hvdCIsInByb3BlcnRpZXMiOnsiY3JlYXRpb25UaW1lIjp7ImZvcm1hdCI6ImRhdGUtdGltZSIsInR5cGUiOiJzdHJpbmcifSwibWVzc2FnZSI6eyJ0eXBlIjoic3RyaW5nIn0sInN0YXRlIjp7ImVudW0iOlsiV2FpdGluZyIsIkV4cG9ydGluZyIsIkV4cG9ydGVkIiwiRmFpbGVkIl0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInNwZWMiXSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6bnVsbCwic3RvcmVkVmVyc2lvbnMiOm51bGx9fQ==
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEzLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJtdWx0aW1hcHMuaGF6ZWxjYXN0LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiaGF6ZWxjYXN0LmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJNdWx0aU1hcCIsImxpc3RLaW5kIjoiTXVsdGlNYXBMaXN0IiwicGx1cmFsIjoibXVsdGltYXBzIiwic2hvcnROYW1lcyI6WyJtbWFwIl0sInNpbmd1bGFyIjoibXVsdGltYXAifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3siZGVzY3JpcHRpb24iOiJDdXJyZW50IHN0YXRlIG9mIHRoZSBNdWx0aU1hcCBDb25maWciLCJqc29uUGF0aCI6Ii5zdGF0dXMuc3RhdGUiLCJuYW1lIjoiU3RhdHVzIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBIYXplbGNhc3QgcmVzb3VyY2UgdGhhdCB0aGlzIHJlc291cmNlIGlzIGNyZWF0ZWQgZm9yIiwianNvblBhdGgiOiIuc3BlYy5oYXplbGNhc3RSZXNvdXJjZU5hbWUiLCJuYW1lIjoiSGF6ZWxjYXN0LVJlc291cmNlIiwicHJpb3JpdHkiOjEsInR5cGUiOiJzdHJpbmcifSx7ImRlc2NyaXB0aW9uIjoiTWVzc2FnZSBmb3IgdGhlIGN1cnJlbnQgTXVsdGlNYXAgQ29uZmlnIiwianNvblBhdGgiOiIuc3RhdHVzLm1lc3NhZ2UiLCJuYW1lIjoiTWVzc2FnZSIsInByaW9yaXR5IjoxLCJ0eXBlIjoic3RyaW5nIn1dLCJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiTXVsdGlNYXAgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIG11bHRpbWFwcyBBUEkiLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuIFNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZCBtYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy4gU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uIENhbm5vdCBiZSB1cGRhdGVkLiBJbiBDYW1lbENhc2UuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6Ik11bHRpTWFwU3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIE11bHRpTWFwIiwicHJvcGVydGllcyI6eyJhc3luY0JhY2t1cENvdW50Ijp7ImRlZmF1bHQiOjAsImRlc2NyaXB0aW9uIjoiTnVtYmVyIG9mIGFzeW5jaHJvbm91cyBiYWNrdXBzLiIsImZvcm1hdCI6ImludDMyIiwibWF4aW11bSI6NiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifSwiYmFja3VwQ291bnQiOnsiZGVmYXVsdCI6MSwiZGVzY3JpcHRpb24iOiJOdW1iZXIgb2Ygc3luY2hyb25vdXMgYmFja3Vwcy4iLCJmb3JtYXQiOiJpbnQzMiIsIm1heGltdW0iOjYsIm1pbmltdW0iOjAsInR5cGUiOiJpbnRlZ2VyIn0sImJpbmFyeSI6eyJkZWZhdWx0IjpmYWxzZSwiZGVzY3JpcHRpb24iOiJTcGVjaWZpZXMgaW4gd2hpY2ggZm9ybWF0IGRhdGEgd2lsbCBiZSBzdG9yZWQgaW4geW91ciBNdWx0aU1hcC4gZmFsc2U6IE9CSkVDVCB0cnVlOiBCSU5BUlkiLCJ0eXBlIjoiYm9vbGVhbiJ9LCJjb2xsZWN0aW9uVHlwZSI6eyJkZWZhdWx0IjoiU0VUIiwiZGVzY3JpcHRpb24iOiJUeXBlIG9mIHRoZSB2YWx1ZSBjb2xsZWN0aW9uIiwiZW51bSI6WyJTRVQiLCJMSVNUIl0sInR5cGUiOiJzdHJpbmcifSwiaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIjp7ImRlc2NyaXB0aW9uIjoiSGF6ZWxjYXN0UmVzb3VyY2VOYW1lIGRlZmluZXMgdGhlIG5hbWUgb2YgdGhlIEhhemVsY2FzdCByZXNvdXJjZSB0aGF0IHRoaXMgcmVzb3VyY2UgaXMgY3JlYXRlZCBmb3IuIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBkYXRhIHN0cnVjdHVyZSBjb25maWcgdG8gYmUgY3JlYXRlZC4gSWYgZW1wdHksIENSIG5hbWUgd2lsbCBiZSB1c2VkLiBJdCBjYW5ub3QgYmUgdXBkYXRlZCBhZnRlciB0aGUgY29uZmlnIGlzIGNyZWF0ZWQgc3VjY2Vzc2Z1bGx5LiIsInR5cGUiOiJzdHJpbmcifSwidXNlckNvZGVOYW1lc3BhY2UiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBVc2VyIENvZGUgTmFtZXNwYWNlIGFwcGxpZWQgdG8gdGhpcyBpbnN0YW5jZSIsIm1pbkxlbmd0aCI6MSwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIl0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiTXVsdGlNYXBTdGF0dXMgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgTXVsdGlNYXAiLCJwcm9wZXJ0aWVzIjp7Im1lbWJlclN0YXR1c2VzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7ImVudW0iOlsiU3VjY2VzcyIsIkZhaWxlZCIsIlBlbmRpbmciLCJQZXJzaXN0aW5nIiwiVGVybWluYXRpbmciXSwidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6IkhvbGRzIHN0YXR1cyBvZiBkYXRhIHN0cnVjdHVyZSBmb3IgZWFjaCBIYXplbGNhc3QgbWVtYmVyIiwidHlwZSI6Im9iamVjdCJ9LCJtZXNzYWdlIjp7ImRlc2NyaXB0aW9uIjoiTWVzc2FnZSBleHBsYWluaW5nIHRoZSBjdXJyZW50IHN0YXRlIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0ZSI6eyJkZXNjcmlwdGlvbiI6IlN0YXRlIG9mIHRoZSBkYXRhIHN0cnVjdHVyZSIsImVudW0iOlsiU3VjY2VzcyIsIkZhaWxlZCIsIlBlbmRpbmciLCJQZXJzaXN0aW5nIiwiVGVybWluYXRpbmciXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsic3BlYyJdLCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfSwic3RhdHVzIjp7ImFjY2VwdGVkTmFtZXMiOnsia2luZCI6IiIsInBsdXJhbCI6IiJ9LCJjb25kaXRpb25zIjpudWxsLCJzdG9yZWRWZXJzaW9ucyI6bnVsbH19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEzLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJxdWV1ZXMuaGF6ZWxjYXN0LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiaGF6ZWxjYXN0LmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJRdWV1ZSIsImxpc3RLaW5kIjoiUXVldWVMaXN0IiwicGx1cmFsIjoicXVldWVzIiwic2hvcnROYW1lcyI6WyJxIl0sInNpbmd1bGFyIjoicXVldWUifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3siZGVzY3JpcHRpb24iOiJDdXJyZW50IHN0YXRlIG9mIHRoZSBRdWV1ZSBDb25maWciLCJqc29uUGF0aCI6Ii5zdGF0dXMuc3RhdGUiLCJuYW1lIjoiU3RhdHVzIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBIYXplbGNhc3QgcmVzb3VyY2UgdGhhdCB0aGlzIHJlc291cmNlIGlzIGNyZWF0ZWQgZm9yIiwianNvblBhdGgiOiIuc3BlYy5oYXplbGNhc3RSZXNvdXJjZU5hbWUiLCJuYW1lIjoiSGF6ZWxjYXN0LVJlc291cmNlIiwicHJpb3JpdHkiOjEsInR5cGUiOiJzdHJpbmcifSx7ImRlc2NyaXB0aW9uIjoiTWVzc2FnZSBmb3IgdGhlIGN1cnJlbnQgUXVldWUgQ29uZmlnIiwianNvblBhdGgiOiIuc3RhdHVzLm1lc3NhZ2UiLCJuYW1lIjoiTWVzc2FnZSIsInByaW9yaXR5IjoxLCJ0eXBlIjoic3RyaW5nIn1dLCJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiUXVldWUgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIHF1ZXVlcyBBUEkiLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuIFNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZCBtYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy4gU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uIENhbm5vdCBiZSB1cGRhdGVkLiBJbiBDYW1lbENhc2UuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IlF1ZXVlU3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIFF1ZXVlIEl0IGNhbm5vdCBiZSB1cGRhdGVkIGFmdGVyIHRoZSBRdWV1ZSBpcyBjcmVhdGVkIiwicHJvcGVydGllcyI6eyJhc3luY0JhY2t1cENvdW50Ijp7ImRlZmF1bHQiOjAsImRlc2NyaXB0aW9uIjoiTnVtYmVyIG9mIGFzeW5jaHJvbm91cyBiYWNrdXBzLiIsImZvcm1hdCI6ImludDMyIiwibWF4aW11bSI6NiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifSwiYmFja3VwQ291bnQiOnsiZGVmYXVsdCI6MSwiZGVzY3JpcHRpb24iOiJOdW1iZXIgb2Ygc3luY2hyb25vdXMgYmFja3Vwcy4iLCJmb3JtYXQiOiJpbnQzMiIsIm1heGltdW0iOjYsIm1pbmltdW0iOjAsInR5cGUiOiJpbnRlZ2VyIn0sImVtcHR5UXVldWVUVExTZWNvbmRzIjp7ImRlZmF1bHQiOi0xLCJkZXNjcmlwdGlvbiI6IlRpbWUgaW4gc2Vjb25kcyBhZnRlciB3aGljaCB0aGUgUXVldWUgd2lsbCBiZSBkZXN0cm95ZWQgaWYgaXQgc3RheXMgZW1wdHkgb3IgdW51c2VkLiBJZiB0aGUgdmFsdWVzIGlzIG5vdCBwcm92aWRlZCB0aGUgUXVldWUgd2lsbCBuZXZlciBiZSBkZXN0cm95ZWQuIiwiZm9ybWF0IjoiaW50MzIiLCJ0eXBlIjoiaW50ZWdlciJ9LCJoYXplbGNhc3RSZXNvdXJjZU5hbWUiOnsiZGVzY3JpcHRpb24iOiJIYXplbGNhc3RSZXNvdXJjZU5hbWUgZGVmaW5lcyB0aGUgbmFtZSBvZiB0aGUgSGF6ZWxjYXN0IHJlc291cmNlIHRoYXQgdGhpcyByZXNvdXJjZSBpcyBjcmVhdGVkIGZvci4iLCJtaW5MZW5ndGgiOjEsInR5cGUiOiJzdHJpbmcifSwibWF4U2l6ZSI6eyJkZWZhdWx0IjowLCJkZXNjcmlwdGlvbiI6Ik1heCBzaXplIG9mIHRoZSBxdWV1ZS4iLCJmb3JtYXQiOiJpbnQzMiIsIm1pbmltdW0iOjAsInR5cGUiOiJpbnRlZ2VyIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBkYXRhIHN0cnVjdHVyZSBjb25maWcgdG8gYmUgY3JlYXRlZC4gSWYgZW1wdHksIENSIG5hbWUgd2lsbCBiZSB1c2VkLiBJdCBjYW5ub3QgYmUgdXBkYXRlZCBhZnRlciB0aGUgY29uZmlnIGlzIGNyZWF0ZWQgc3VjY2Vzc2Z1bGx5LiIsInR5cGUiOiJzdHJpbmcifSwicHJpb3JpdHlDb21wYXJhdG9yQ2xhc3NOYW1lIjp7ImRlc2NyaXB0aW9uIjoiVGhlIG5hbWUgb2YgdGhlIGNvbXBhcmF0b3IgY2xhc3MuIElmIHRoZSBjbGFzcyBuYW1lIGlzIHByb3ZpZGVkLCB0aGUgUXVldWUgYmVjb21lcyBQcmlvcml0eSBRdWV1ZS4gWW91IGNhbiBsZWFybiBtb3JlIGF0IGh0dHBzOi8vZG9jcy5oYXplbGNhc3QuY29tL2hhemVsY2FzdC9sYXRlc3QvZGF0YS1zdHJ1Y3R1cmVzL3ByaW9yaXR5LXF1ZXVlLiIsInR5cGUiOiJzdHJpbmcifSwidXNlckNvZGVOYW1lc3BhY2UiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBVc2VyIENvZGUgTmFtZXNwYWNlIGFwcGxpZWQgdG8gdGhpcyBpbnN0YW5jZSIsIm1pbkxlbmd0aCI6MSwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIl0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiUXVldWVTdGF0dXMgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgUXVldWUiLCJwcm9wZXJ0aWVzIjp7Im1lbWJlclN0YXR1c2VzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7ImVudW0iOlsiU3VjY2VzcyIsIkZhaWxlZCIsIlBlbmRpbmciLCJQZXJzaXN0aW5nIiwiVGVybWluYXRpbmciXSwidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6IkhvbGRzIHN0YXR1cyBvZiBkYXRhIHN0cnVjdHVyZSBmb3IgZWFjaCBIYXplbGNhc3QgbWVtYmVyIiwidHlwZSI6Im9iamVjdCJ9LCJtZXNzYWdlIjp7ImRlc2NyaXB0aW9uIjoiTWVzc2FnZSBleHBsYWluaW5nIHRoZSBjdXJyZW50IHN0YXRlIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0ZSI6eyJkZXNjcmlwdGlvbiI6IlN0YXRlIG9mIHRoZSBkYXRhIHN0cnVjdHVyZSIsImVudW0iOlsiU3VjY2VzcyIsIkZhaWxlZCIsIlBlbmRpbmciLCJQZXJzaXN0aW5nIiwiVGVybWluYXRpbmciXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsic3BlYyJdLCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfSwic3RhdHVzIjp7ImFjY2VwdGVkTmFtZXMiOnsia2luZCI6IiIsInBsdXJhbCI6IiJ9LCJjb25kaXRpb25zIjpudWxsLCJzdG9yZWRWZXJzaW9ucyI6bnVsbH19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEzLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJyZXBsaWNhdGVkbWFwcy5oYXplbGNhc3QuY29tIn0sInNwZWMiOnsiZ3JvdXAiOiJoYXplbGNhc3QuY29tIiwibmFtZXMiOnsia2luZCI6IlJlcGxpY2F0ZWRNYXAiLCJsaXN0S2luZCI6IlJlcGxpY2F0ZWRNYXBMaXN0IiwicGx1cmFsIjoicmVwbGljYXRlZG1hcHMiLCJzaG9ydE5hbWVzIjpbInJtYXAiXSwic2luZ3VsYXIiOiJyZXBsaWNhdGVkbWFwIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJhZGRpdGlvbmFsUHJpbnRlckNvbHVtbnMiOlt7ImRlc2NyaXB0aW9uIjoiQ3VycmVudCBzdGF0ZSBvZiB0aGUgUmVwbGljYXRlZE1hcCBDb25maWciLCJqc29uUGF0aCI6Ii5zdGF0dXMuc3RhdGUiLCJuYW1lIjoiU3RhdHVzIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBIYXplbGNhc3QgcmVzb3VyY2UgdGhhdCB0aGlzIHJlc291cmNlIGlzIGNyZWF0ZWQgZm9yIiwianNvblBhdGgiOiIuc3BlYy5oYXplbGNhc3RSZXNvdXJjZU5hbWUiLCJuYW1lIjoiSGF6ZWxjYXN0LVJlc291cmNlIiwicHJpb3JpdHkiOjEsInR5cGUiOiJzdHJpbmcifSx7ImRlc2NyaXB0aW9uIjoiTWVzc2FnZSBmb3IgdGhlIGN1cnJlbnQgUmVwbGljYXRlZE1hcCBDb25maWciLCJqc29uUGF0aCI6Ii5zdGF0dXMubWVzc2FnZSIsIm5hbWUiOiJNZXNzYWdlIiwicHJpb3JpdHkiOjEsInR5cGUiOiJzdHJpbmcifV0sIm5hbWUiOiJ2MWFscGhhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJSZXBsaWNhdGVkTWFwIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSByZXBsaWNhdGVkbWFwcyBBUEkiLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuIFNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZCBtYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy4gU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uIENhbm5vdCBiZSB1cGRhdGVkLiBJbiBDYW1lbENhc2UuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IlJlcGxpY2F0ZWRNYXBTcGVjIGRlZmluZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgUmVwbGljYXRlZE1hcCIsInByb3BlcnRpZXMiOnsiYXN5bmNGaWxsdXAiOnsiZGVmYXVsdCI6dHJ1ZSwiZGVzY3JpcHRpb24iOiJBc3luY0ZpbGx1cCBzcGVjaWZpZXMgd2hldGhlciB0aGUgUmVwbGljYXRlZE1hcCBpcyBhdmFpbGFibGUgZm9yIHJlYWRzIGJlZm9yZSB0aGUgaW5pdGlhbCByZXBsaWNhdGlvbiBpcyBjb21wbGV0ZWQiLCJ0eXBlIjoiYm9vbGVhbiJ9LCJoYXplbGNhc3RSZXNvdXJjZU5hbWUiOnsiZGVzY3JpcHRpb24iOiJIYXplbGNhc3RSZXNvdXJjZU5hbWUgZGVmaW5lcyB0aGUgbmFtZSBvZiB0aGUgSGF6ZWxjYXN0IHJlc291cmNlLiIsIm1pbkxlbmd0aCI6MSwidHlwZSI6InN0cmluZyJ9LCJpbk1lbW9yeUZvcm1hdCI6eyJkZWZhdWx0IjoiT0JKRUNUIiwiZGVzY3JpcHRpb24iOiJJbk1lbW9yeUZvcm1hdCBzcGVjaWZpZXMgaW4gd2hpY2ggZm9ybWF0IGRhdGEgd2lsbCBiZSBzdG9yZWQgaW4gdGhlIFJlcGxpY2F0ZWRNYXAiLCJlbnVtIjpbIkJJTkFSWSIsIk9CSkVDVCJdLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBSZXBsaWNhdGVkTWFwIGNvbmZpZyB0byBiZSBjcmVhdGVkLiBJZiBlbXB0eSwgQ1IgbmFtZSB3aWxsIGJlIHVzZWQuIiwidHlwZSI6InN0cmluZyJ9LCJ1c2VyQ29kZU5hbWVzcGFjZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIFVzZXIgQ29kZSBOYW1lc3BhY2UgYXBwbGllZCB0byB0aGlzIGluc3RhbmNlIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJoYXplbGNhc3RSZXNvdXJjZU5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJSZXBsaWNhdGVkTWFwU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIFJlcGxpY2F0ZWRNYXAiLCJwcm9wZXJ0aWVzIjp7Im1lbWJlclN0YXR1c2VzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7ImVudW0iOlsiU3VjY2VzcyIsIkZhaWxlZCIsIlBlbmRpbmciLCJQZXJzaXN0aW5nIiwiVGVybWluYXRpbmciXSwidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6IkhvbGRzIHN0YXR1cyBvZiBkYXRhIHN0cnVjdHVyZSBmb3IgZWFjaCBIYXplbGNhc3QgbWVtYmVyIiwidHlwZSI6Im9iamVjdCJ9LCJtZXNzYWdlIjp7ImRlc2NyaXB0aW9uIjoiTWVzc2FnZSBleHBsYWluaW5nIHRoZSBjdXJyZW50IHN0YXRlIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0ZSI6eyJkZXNjcmlwdGlvbiI6IlN0YXRlIG9mIHRoZSBkYXRhIHN0cnVjdHVyZSIsImVudW0iOlsiU3VjY2VzcyIsIkZhaWxlZCIsIlBlbmRpbmciLCJQZXJzaXN0aW5nIiwiVGVybWluYXRpbmciXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsic3BlYyJdLCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfSwic3RhdHVzIjp7ImFjY2VwdGVkTmFtZXMiOnsia2luZCI6IiIsInBsdXJhbCI6IiJ9LCJjb25kaXRpb25zIjpudWxsLCJzdG9yZWRWZXJzaW9ucyI6bnVsbH19
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwLmt1YmVybmV0ZXMuaW8vY29tcG9uZW50Ijoid2ViaG9vayIsImFwcC5rdWJlcm5ldGVzLmlvL2NyZWF0ZWQtYnkiOiJoYXplbGNhc3QtcGxhdGZvcm0tb3BlcmF0b3IiLCJhcHAua3ViZXJuZXRlcy5pby9pbnN0YW5jZSI6IndlYmhvb2stc2VydmljZSIsImFwcC5rdWJlcm5ldGVzLmlvL21hbmFnZWQtYnkiOiJrdXN0b21pemUiLCJhcHAua3ViZXJuZXRlcy5pby9uYW1lIjoic2VydmljZSIsImFwcC5rdWJlcm5ldGVzLmlvL3BhcnQtb2YiOiJoYXplbGNhc3QtcGxhdGZvcm0tb3BlcmF0b3IifSwibmFtZSI6ImhhemVsY2FzdC1wbGF0Zm9ybS13ZWJob29rLXNlcnZpY2UifSwic3BlYyI6eyJwb3J0cyI6W3sicG9ydCI6NDQzLCJwcm90b2NvbCI6IlRDUCIsInRhcmdldFBvcnQiOjk0NDN9XSwic2VsZWN0b3IiOnsiY29udHJvbC1wbGFuZSI6ImNvbnRyb2xsZXItbWFuYWdlciJ9fSwic3RhdHVzIjp7ImxvYWRCYWxhbmNlciI6e319fQ==
relatedImages:
- image: docker.io/hazelcast/hazelcast-platform-operator@sha256:99005afda5c71ceeac200928dfed4ea35480f871053101e3aeaa44005e3fda14
  name: manager
- image: quay.io/community-operator-pipeline-prod/hazelcast-platform-operator@sha256:1209876fc9103eb2d69c34e97e4e2e0b384a9a778ae7e6a53222b8552fbf2f26
  name: ""
schema: olm.bundle
---
image: quay.io/community-operator-pipeline-prod/hazelcast-platform-operator@sha256:3b749b2ddf0e8b375ae15585c9cf78e6e6afd44c7e26dea041b2bc7216ea8878
name: hazelcast-platform-operator.v5.13.1
package: hazelcast-platform-operator
properties:
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: Cache
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: CronHotBackup
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: Hazelcast
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: HazelcastEndpoint
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: HotBackup
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: JetJob
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: JetJobSnapshot
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: ManagementCenter
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: Map
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: MultiMap
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: Queue
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: ReplicatedMap
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: Topic
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: UserCodeNamespace
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: WanReplication
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: WanSync
    version: v1alpha1
- type: olm.package
  value:
    packageName: hazelcast-platform-operator
    version: 5.13.1
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEzLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJ0b3BpY3MuaGF6ZWxjYXN0LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiaGF6ZWxjYXN0LmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJUb3BpYyIsImxpc3RLaW5kIjoiVG9waWNMaXN0IiwicGx1cmFsIjoidG9waWNzIiwic2luZ3VsYXIiOiJ0b3BpYyJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJkZXNjcmlwdGlvbiI6IkN1cnJlbnQgc3RhdGUgb2YgdGhlIFRvcGljIENvbmZpZyIsImpzb25QYXRoIjoiLnN0YXR1cy5zdGF0ZSIsIm5hbWUiOiJTdGF0dXMiLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIEhhemVsY2FzdCByZXNvdXJjZSB0aGF0IHRoaXMgcmVzb3VyY2UgaXMgY3JlYXRlZCBmb3IiLCJqc29uUGF0aCI6Ii5zcGVjLmhhemVsY2FzdFJlc291cmNlTmFtZSIsIm5hbWUiOiJIYXplbGNhc3QtUmVzb3VyY2UiLCJwcmlvcml0eSI6MSwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJNZXNzYWdlIGZvciB0aGUgY3VycmVudCBUb3BpYyBDb25maWciLCJqc29uUGF0aCI6Ii5zdGF0dXMubWVzc2FnZSIsIm5hbWUiOiJNZXNzYWdlIiwicHJpb3JpdHkiOjEsInR5cGUiOiJzdHJpbmcifV0sIm5hbWUiOiJ2MWFscGhhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJUb3BpYyBpcyB0aGUgU2NoZW1hIGZvciB0aGUgdG9waWNzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiVG9waWNTcGVjIGRlZmluZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgVG9waWMiLCJwcm9wZXJ0aWVzIjp7Imdsb2JhbE9yZGVyaW5nRW5hYmxlZCI6eyJkZWZhdWx0IjpmYWxzZSwiZGVzY3JpcHRpb24iOiJnbG9iYWxPcmRlcmluZ0VuYWJsZWQgYWxsb3dzIGFsbCBub2RlcyBsaXN0ZW5pbmcgdG8gdGhlIHNhbWUgdG9waWMgZ2V0IHRoZWlyIG1lc3NhZ2VzIGluIHRoZSBzYW1lIG9yZGVyIHRoZSBzYW1lIG9yZGVyIiwidHlwZSI6ImJvb2xlYW4ifSwiaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIjp7ImRlc2NyaXB0aW9uIjoiSGF6ZWxjYXN0UmVzb3VyY2VOYW1lIGRlZmluZXMgdGhlIG5hbWUgb2YgdGhlIEhhemVsY2FzdCByZXNvdXJjZSBmb3Igd2hpY2ggdG9waWMgY29uZmlnIHdpbGwgYmUgY3JlYXRlZCIsIm1pbkxlbmd0aCI6MSwidHlwZSI6InN0cmluZyJ9LCJtdWx0aVRocmVhZGluZ0VuYWJsZWQiOnsiZGVmYXVsdCI6ZmFsc2UsImRlc2NyaXB0aW9uIjoibXVsdGlUaHJlYWRpbmdFbmFibGVkIGVuYWJsZXMgbXVsdGktdGhyZWFkZWQgcHJvY2Vzc2luZyBvZiBpbmNvbWluZyBtZXNzYWdlcyBhIHNpbmdsZSB0aHJlYWQgd2lsbCBoYW5kbGUgYWxsIHRvcGljIG1lc3NhZ2VzIiwidHlwZSI6ImJvb2xlYW4ifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIHRvcGljIGNvbmZpZyB0byBiZSBjcmVhdGVkLiBJZiBlbXB0eSwgQ1IgbmFtZSB3aWxsIGJlIHVzZWQuIiwidHlwZSI6InN0cmluZyJ9LCJ1c2VyQ29kZU5hbWVzcGFjZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIFVzZXIgQ29kZSBOYW1lc3BhY2UgYXBwbGllZCB0byB0aGlzIGluc3RhbmNlIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJoYXplbGNhc3RSZXNvdXJjZU5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJUb3BpY1N0YXR1cyBkZWZpbmVzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBUb3BpYyIsInByb3BlcnRpZXMiOnsibWVtYmVyU3RhdHVzZXMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsiZW51bSI6WyJTdWNjZXNzIiwiRmFpbGVkIiwiUGVuZGluZyIsIlBlcnNpc3RpbmciLCJUZXJtaW5hdGluZyJdLCJ0eXBlIjoic3RyaW5nIn0sImRlc2NyaXB0aW9uIjoiSG9sZHMgc3RhdHVzIG9mIGRhdGEgc3RydWN0dXJlIGZvciBlYWNoIEhhemVsY2FzdCBtZW1iZXIiLCJ0eXBlIjoib2JqZWN0In0sIm1lc3NhZ2UiOnsiZGVzY3JpcHRpb24iOiJNZXNzYWdlIGV4cGxhaW5pbmcgdGhlIGN1cnJlbnQgc3RhdGUiLCJ0eXBlIjoic3RyaW5nIn0sInN0YXRlIjp7ImRlc2NyaXB0aW9uIjoiU3RhdGUgb2YgdGhlIGRhdGEgc3RydWN0dXJlIiwiZW51bSI6WyJTdWNjZXNzIiwiRmFpbGVkIiwiUGVuZGluZyIsIlBlcnNpc3RpbmciLCJUZXJtaW5hdGluZyJdLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJzcGVjIl0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOm51bGwsInN0b3JlZFZlcnNpb25zIjpudWxsfX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEzLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJ1c2VyY29kZW5hbWVzcGFjZXMuaGF6ZWxjYXN0LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiaGF6ZWxjYXN0LmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJVc2VyQ29kZU5hbWVzcGFjZSIsImxpc3RLaW5kIjoiVXNlckNvZGVOYW1lc3BhY2VMaXN0IiwicGx1cmFsIjoidXNlcmNvZGVuYW1lc3BhY2VzIiwic2hvcnROYW1lcyI6WyJ1Y24iXSwic2luZ3VsYXIiOiJ1c2VyY29kZW5hbWVzcGFjZSJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJkZXNjcmlwdGlvbiI6IlN0YXR1cyBvZiB0aGUgVXNlciBDb2RlIE5hbWVzcGFjZSIsImpzb25QYXRoIjoiLnN0YXR1cy5zdGF0ZSIsIm5hbWUiOiJTdGF0dXMiLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6Ik1lc3NhZ2UgZm9yIHRoZSBjdXJyZW50IFVzZXJDb2RlTmFtZXNwYWNlIiwianNvblBhdGgiOiIuc3RhdHVzLm1lc3NhZ2UiLCJuYW1lIjoiTWVzc2FnZSIsInByaW9yaXR5IjoxLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIEhhemVsY2FzdCByZXNvdXJjZSB0aGF0IHRoaXMgcmVzb3VyY2UgaXMgY3JlYXRlZCBmb3IiLCJqc29uUGF0aCI6Ii5zcGVjLmhhemVsY2FzdFJlc291cmNlTmFtZSIsIm5hbWUiOiJIYXplbGNhc3QtUmVzb3VyY2UiLCJwcmlvcml0eSI6MSwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IlVzZXJDb2RlTmFtZXNwYWNlIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSB1c2VyY29kZW5hbWVzcGFjZXMgQVBJIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJVc2VyQ29kZU5hbWVzcGFjZVNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBVc2VyQ29kZU5hbWVzcGFjZSIsInByb3BlcnRpZXMiOnsiYnVja2V0Q29uZmlnIjp7ImRlc2NyaXB0aW9uIjoiQnVja2V0IGNvbmZpZyBmcm9tIHdoZXJlIHRoZSBKQVIgZmlsZXMgd2lsbCBiZSBkb3dubG9hZGVkLiIsInByb3BlcnRpZXMiOnsiYnVja2V0VVJJIjp7ImRlc2NyaXB0aW9uIjoiVVJMIG9mIHRoZSBidWNrZXQgdG8gZG93bmxvYWQgSG90QmFja3VwIGZvbGRlcnMuIEFXUyBTMywgR0NQIEJ1Y2tldCBhbmQgQXp1cmUgQmxvYiBzdG9yYWdlIGJ1Y2tldHMgYXJlIHN1cHBvcnRlZC4gRXhhbXBsZSBidWNrZXQgVVJJczogLSBBV1MgUzMgICAgIC1cdTAwM2UgczM6Ly9idWNrZXQtbmFtZS9wYXRoL3RvL2ZvbGRlciAtIEdDUCBCdWNrZXQgLVx1MDAzZSBnczovL2J1Y2tldC1uYW1lL3BhdGgvdG8vZm9sZGVyIC0gQXp1cmUgQmxvYiAtXHUwMDNlIGF6YmxvYjovL2J1Y2tldC1uYW1lL3BhdGgvdG8vZm9sZGVyIiwibWluTGVuZ3RoIjo2LCJ0eXBlIjoic3RyaW5nIn0sInNlY3JldCI6eyJkZXNjcmlwdGlvbiI6InNlY3JldCBpcyBhIGRlcHJlY2F0ZWQgYWxpYXMgZm9yIHNlY3JldE5hbWUuIiwidHlwZSI6InN0cmluZyJ9LCJzZWNyZXROYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgc2VjcmV0IHdpdGggY3JlZGVudGlhbHMgZm9yIGNsb3VkIHByb3ZpZGVycy4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJidWNrZXRVUkkiXSwidHlwZSI6Im9iamVjdCJ9LCJoYXplbGNhc3RSZXNvdXJjZU5hbWUiOnsiZGVzY3JpcHRpb24iOiJIYXplbGNhc3RSZXNvdXJjZU5hbWUgZGVmaW5lcyB0aGUgbmFtZSBvZiB0aGUgSGF6ZWxjYXN0IHJlc291cmNlIHRoYXQgdGhpcyByZXNvdXJjZSBpcyBjcmVhdGVkIGZvci4iLCJtaW5MZW5ndGgiOjEsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImhhemVsY2FzdFJlc291cmNlTmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IlVzZXJDb2RlTmFtZXNwYWNlU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIFVzZXJDb2RlTmFtZXNwYWNlIiwicHJvcGVydGllcyI6eyJtZXNzYWdlIjp7InR5cGUiOiJzdHJpbmcifSwic3RhdGUiOnsiZW51bSI6WyJVbmtub3duIiwiUGVuZGluZyIsIk5vdFN0YXJ0ZWQiLCJJblByb2dyZXNzIiwiRmFpbHVyZSIsIlN1Y2Nlc3MiXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6bnVsbCwic3RvcmVkVmVyc2lvbnMiOm51bGx9fQ==
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEzLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJ3YW5yZXBsaWNhdGlvbnMuaGF6ZWxjYXN0LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiaGF6ZWxjYXN0LmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJXYW5SZXBsaWNhdGlvbiIsImxpc3RLaW5kIjoiV2FuUmVwbGljYXRpb25MaXN0IiwicGx1cmFsIjoid2FucmVwbGljYXRpb25zIiwic2hvcnROYW1lcyI6WyJ3ciJdLCJzaW5ndWxhciI6IndhbnJlcGxpY2F0aW9uIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJhZGRpdGlvbmFsUHJpbnRlckNvbHVtbnMiOlt7ImRlc2NyaXB0aW9uIjoiQ3VycmVudCBzdGF0ZSBvZiB0aGUgSGF6ZWxjYXN0IFdBTiBSZXBsaWNhdGlvbiIsImpzb25QYXRoIjoiLnN0YXR1cy5zdGF0dXMiLCJuYW1lIjoiU3RhdHVzIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJNZXNzYWdlIGZvciB0aGUgY3VycmVudCBXYW5SZXBsaWNhdGlvbiBDb25maWciLCJqc29uUGF0aCI6Ii5zdGF0dXMubWVzc2FnZSIsIm5hbWUiOiJNZXNzYWdlIiwicHJpb3JpdHkiOjEsInR5cGUiOiJzdHJpbmcifV0sIm5hbWUiOiJ2MWFscGhhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJXYW5SZXBsaWNhdGlvbiBpcyB0aGUgU2NoZW1hIGZvciB0aGUgd2FucmVwbGljYXRpb25zIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiV2FuUmVwbGljYXRpb25TcGVjIGRlZmluZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgV2FuUmVwbGljYXRpb24iLCJwcm9wZXJ0aWVzIjp7ImFja25vd2xlZGdlbWVudCI6eyJkZWZhdWx0Ijp7InRpbWVvdXQiOjYwMDAwLCJ0eXBlIjoiQUNLX09OX09QRVJBVElPTl9DT01QTEVURSJ9LCJkZXNjcmlwdGlvbiI6IkFja25vd2xlZGdlbWVudCBpcyB0aGUgY29uZmlndXJhdGlvbiBmb3IgdGhlIGNvbmRpdGlvbiB3aGVuIHRoZSBuZXh0IGJhdGNoIG9mIFdBTiBldmVudHMgYXJlIHNlbnQuIiwicHJvcGVydGllcyI6eyJ0aW1lb3V0Ijp7ImRlZmF1bHQiOjYwMDAwLCJkZXNjcmlwdGlvbiI6IlRpbWVvdXQgcmVwcmVzZW50cyB0aGUgdGltZSBpbiBtaWxsaXNlY29uZHMgdGhlIHNvdXJjZSBjbHVzdGVyIHdhaXRzIGZvciB0aGUgYWNrbm93bGVkZ2VtZW50LiBBZnRlciB0aW1lb3V0LCB0aGUgZXZlbnRzIHdpbGwgYmUgcmVzZW50LiIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifSwidHlwZSI6eyJkZWZhdWx0IjoiQUNLX09OX09QRVJBVElPTl9DT01QTEVURSIsImRlc2NyaXB0aW9uIjoiVHlwZSByZXByZXNlbnRzIGhvdyBhIGJhdGNoIG9mIHJlcGxpY2F0aW9uIGV2ZW50cyBpcyBjb25zaWRlcmVkIHN1Y2Nlc3NmdWxseSByZXBsaWNhdGVkLiIsImVudW0iOlsiQUNLX09OX09QRVJBVElPTl9DT01QTEVURSIsIkFDS19PTl9SRUNFSVBUIl0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwiYmF0Y2giOnsiZGVmYXVsdCI6eyJtYXhpbXVtRGVsYXkiOjEwMDAsInNpemUiOjUwMH0sImRlc2NyaXB0aW9uIjoiQmF0Y2ggaXMgdGhlIGNvbmZpZ3VyYXRpb24gZm9yIFdBTiBldmVudHMgYmF0Y2guIiwicHJvcGVydGllcyI6eyJtYXhpbXVtRGVsYXkiOnsiZGVmYXVsdCI6MTAwMCwiZGVzY3JpcHRpb24iOiJNYXhpbXVtRGVsYXkgcmVwcmVzZW50cyB0aGUgbWF4aW11bSBkZWxheSBpbiBtaWxsaXNlY29uZHMuIElmIHRoZSBiYXRjaCBzaXplIGlzIG5vdCByZWFjaGVkLCB0aGUgZXZlbnRzIHdpbGwgYmUgc2VudCBhZnRlciB0aGUgbWF4aW11bSBkZWxheS4iLCJmb3JtYXQiOiJpbnQzMiIsInR5cGUiOiJpbnRlZ2VyIn0sInNpemUiOnsiZGVmYXVsdCI6NTAwLCJkZXNjcmlwdGlvbiI6IlNpemUgcmVwcmVzZW50cyB0aGUgbWF4aW11bSBiYXRjaCBzaXplLiIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifX0sInR5cGUiOiJvYmplY3QifSwiZW5kcG9pbnRzIjp7ImRlc2NyaXB0aW9uIjoiRW5kcG9pbnRzIGlzIHRoZSB0YXJnZXQgY2x1c3RlciBjb21tYSBzZXBhcmF0ZWQgZW5kcG9pbnQgbGlzdCAuIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn0sInF1ZXVlIjp7ImRlZmF1bHQiOnsiY2FwYWNpdHkiOjEwMDAwLCJmdWxsQmVoYXZpb3IiOiJESVNDQVJEX0FGVEVSX01VVEFUSU9OIn0sImRlc2NyaXB0aW9uIjoiUXVldWUgaXMgdGhlIGNvbmZpZ3VyYXRpb24gZm9yIFdBTiBldmVudHMgcXVldWUuIiwicHJvcGVydGllcyI6eyJjYXBhY2l0eSI6eyJkZWZhdWx0IjoxMDAwMCwiZGVzY3JpcHRpb24iOiJDYXBhY2l0eSBpcyB0aGUgdG90YWwgY2FwYWNpdHkgb2YgV0FOIHF1ZXVlLiIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifSwiZnVsbEJlaGF2aW9yIjp7ImRlZmF1bHQiOiJESVNDQVJEX0FGVEVSX01VVEFUSU9OIiwiZGVzY3JpcHRpb24iOiJGdWxsQmVoYXZpb3IgcmVwcmVzZW50cyB0aGUgYmVoYXZpb3Igb2YgdGhlIG5ldyBhcnJpdmFsIHdoZW4gdGhlIHF1ZXVlIGlzIGZ1bGwuIiwiZW51bSI6WyJESVNDQVJEX0FGVEVSX01VVEFUSU9OIiwiVEhST1dfRVhDRVBUSU9OIiwiVEhST1dfRVhDRVBUSU9OX09OTFlfSUZfUkVQTElDQVRJT05fQUNUSVZFIl0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwicmVzb3VyY2VzIjp7ImRlc2NyaXB0aW9uIjoiUmVzb3VyY2VzIGlzIHRoZSBsaXN0IG9mIGN1c3RvbSByZXNvdXJjZXMgdG8gd2hpY2ggV0FOIHJlcGxpY2F0aW9uIGFwcGxpZXMuIiwiaXRlbXMiOnsicHJvcGVydGllcyI6eyJraW5kIjp7ImRlZmF1bHQiOiJNYXAiLCJkZXNjcmlwdGlvbiI6IktpbmQgaXMgdGhlIGtpbmQgb2YgY3VzdG9tIHJlc291cmNlIHRvIHdoaWNoIFdBTiByZXBsaWNhdGlvbiBhcHBsaWVzLiIsImVudW0iOlsiTWFwIiwiSGF6ZWxjYXN0Il0sInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgaXMgdGhlIG5hbWUgb2YgY3VzdG9tIHJlc291cmNlIHRvIHdoaWNoIFdBTiByZXBsaWNhdGlvbiBhcHBsaWVzLiIsIm1pbkxlbmd0aCI6MSwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sIm1pbkl0ZW1zIjoxLCJ0eXBlIjoiYXJyYXkifSwic3luY0NvbnNpc3RlbmN5Q2hlY2tTdHJhdGVneSI6eyJkZXNjcmlwdGlvbiI6IlN5bmNDb25zaXN0ZW5jeUNoZWNrU3RyYXRlZ3kgaXMgdGhlIHN0cmF0ZWd5IGZvciBjaGVja2luZyB0aGUgY29uc2lzdGVuY3kgb2YgZGF0YSBiZXR3ZWVuIHJlcGxpY2FzLiIsInR5cGUiOiJzdHJpbmcifSwidGFyZ2V0Q2x1c3Rlck5hbWUiOnsiZGVzY3JpcHRpb24iOiJDbHVzdGVyTmFtZSBpcyB0aGUgY2x1c3Rlck5hbWUgZmllbGQgb2YgdGhlIHRhcmdldCBIYXplbGNhc3QgcmVzb3VyY2UuIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJlbmRwb2ludHMiLCJyZXNvdXJjZXMiLCJ0YXJnZXRDbHVzdGVyTmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IldhblJlcGxpY2F0aW9uU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIFdhblJlcGxpY2F0aW9uIiwicHJvcGVydGllcyI6eyJtZXNzYWdlIjp7ImRlc2NyaXB0aW9uIjoiTWVzc2FnZSBpcyB0aGUgZmllbGQgdG8gc2hvdyBkZXRhaWwgaW5mb3JtYXRpb24gb3IgZXJyb3IiLCJ0eXBlIjoic3RyaW5nIn0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IlN0YXR1cyBpcyB0aGUgc3RhdHVzIG9mIFdBTiByZXBsaWNhdGlvbiIsInR5cGUiOiJzdHJpbmcifSwid2FuUmVwbGljYXRpb25NYXBzU3RhdHVzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InByb3BlcnRpZXMiOnsibWVtYmVyc1N0YXR1cyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJwcm9wZXJ0aWVzIjp7ImlzQ29ubmVjdGVkIjp7ImRlc2NyaXB0aW9uIjoiSXNDb25uZWN0ZWQgZGVmaW5lcyB3aGV0aGVyIHRoZSBtZW1iZXIgaXMgY29ubmVjdGVkIiwidHlwZSI6ImJvb2xlYW4ifSwic3RhdGUiOnsiZGVzY3JpcHRpb24iOiJTdGF0ZSBpcyB0aGUgV0FOIHN0YXRlIG9mIHRoZSBtZW1iZXIiLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sImRlc2NyaXB0aW9uIjoiTWVtYmVyc1N0YXR1cyBpcyB0aGUgd2FuIHN0YXR1cyBvZiBlYWNoIG1lbWJlciIsInR5cGUiOiJvYmplY3QifSwibWVzc2FnZSI6eyJkZXNjcmlwdGlvbiI6Ik1lc3NhZ2UgaXMgdGhlIGZpZWxkIHRvIHNob3cgZGV0YWlsIGluZm9ybWF0aW9uIG9yIGVycm9yIiwidHlwZSI6InN0cmluZyJ9LCJwdWJsaXNoZXJJZCI6eyJkZXNjcmlwdGlvbiI6IlB1Ymxpc2hlcklkIGlzIHRoZSBJRCB1c2VkIGZvciBXQU4gcHVibGlzaGVyIElEIiwidHlwZSI6InN0cmluZyJ9LCJyZXNvdXJjZU5hbWUiOnsiZGVzY3JpcHRpb24iOiJSZXNvdXJjZU5hbWUgaXMgdGhlIG5hbWUgb2YgdGhlIE1hcCBDdXN0b20gUmVzb3VyY2UuIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJTdGF0dXMgaXMgdGhlIHN0YXR1cyBvZiBXQU4gcmVwbGljYXRpb24iLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sImRlc2NyaXB0aW9uIjoiV2FuUmVwbGljYXRpb25NYXBzU3RhdHVzIGlzIHRoZSBXQU4gUmVwbGljYXRpb24gc3RhdHVzIG9mIHRoZSBNYXBzIGdpdmVuIGluIHRoZSBzcGVjIGRpcmVjdGx5IG9yIGluZGlyZWN0bHkgYnkgSGF6ZWxjYXN0IHJlc291cmNlLiIsInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInNwZWMiXSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6bnVsbCwic3RvcmVkVmVyc2lvbnMiOm51bGx9fQ==
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEzLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJ3YW5zeW5jcy5oYXplbGNhc3QuY29tIn0sInNwZWMiOnsiZ3JvdXAiOiJoYXplbGNhc3QuY29tIiwibmFtZXMiOnsia2luZCI6IldhblN5bmMiLCJsaXN0S2luZCI6IldhblN5bmNMaXN0IiwicGx1cmFsIjoid2Fuc3luY3MiLCJzaG9ydE5hbWVzIjpbIndzIl0sInNpbmd1bGFyIjoid2Fuc3luYyJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJkZXNjcmlwdGlvbiI6IkN1cnJlbnQgc3RhdGUgb2YgdGhlIEhhemVsY2FzdCBXQU4gU3luYyIsImpzb25QYXRoIjoiLnN0YXR1cy5zdGF0dXMiLCJuYW1lIjoiU3RhdHVzIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJNZXNzYWdlIGZvciB0aGUgY3VycmVudCBXYW5TeW5jIiwianNvblBhdGgiOiIuc3RhdHVzLm1lc3NhZ2UiLCJuYW1lIjoiTWVzc2FnZSIsInByaW9yaXR5IjoxLCJ0eXBlIjoic3RyaW5nIn1dLCJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiV2FuU3luYyBpcyB0aGUgU2NoZW1hIGZvciB0aGUgd2Fuc3luY3MgQVBJIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJXYW5TeW5jU3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIFdhblN5bmMiLCJwcm9wZXJ0aWVzIjp7IndhblJlcGxpY2F0aW9uUmVzb3VyY2VOYW1lIjp7ImRlc2NyaXB0aW9uIjoiV2FuUmVwbGljYXRpb25SZXNvdXJjZU5hbWUgaXMgdGhlIG5hbWUgb2YgV2FuUmVwbGljYXRpb24gQ1IgdGhhdCBjb250YWlucyB0aGUgV0FOIHB1Ymxpc2hlciBjb25maWd1cmF0aW9uLiBJZiBzcGVjaWZpZWQgdGhlIFN5bmMgb3BlcmF0aW9uIHdpbGwgdXNlIGV4aXN0aW5nIFdBTiBwdWJsaXNoZXIuIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJ3YW5SZXBsaWNhdGlvblJlc291cmNlTmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IldhblN5bmNTdGF0dXMgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgV2FuU3luYyIsInByb3BlcnRpZXMiOnsibWVzc2FnZSI6eyJkZXNjcmlwdGlvbiI6Ik1lc3NhZ2UgaXMgdGhlIGZpZWxkIHRvIHNob3cgZGV0YWlsIGluZm9ybWF0aW9uIG9yIGVycm9yIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJTdGF0dXMgaXMgdGhlIHN0YXR1cyBvZiBXQU4gU3luYyIsInR5cGUiOiJzdHJpbmcifSwid2FuU3luY01hcHNTdGF0dXMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsicHJvcGVydGllcyI6eyJtZXNzYWdlIjp7ImRlc2NyaXB0aW9uIjoiTWVzc2FnZSBpcyB0aGUgZmllbGQgdG8gc2hvdyBkZXRhaWwgaW5mb3JtYXRpb24gb3IgZXJyb3IiLCJ0eXBlIjoic3RyaW5nIn0sInBoYXNlIjp7ImRlc2NyaXB0aW9uIjoiU3RhdHVzIGlzIHRoZSBzdGF0dXMgb2YgdGhlIHJlc291cmNlIFdBTiBzeW5jIiwidHlwZSI6InN0cmluZyJ9LCJwdWJsaXNoZXJJZCI6eyJkZXNjcmlwdGlvbiI6IlB1Ymxpc2hlcklkIGlzIHRoZSBJRCB1c2VkIGZvciBXQU4gcHVibGlzaGVyIElEIiwidHlwZSI6InN0cmluZyJ9LCJyZXNvdXJjZU5hbWUiOnsiZGVzY3JpcHRpb24iOiJSZXNvdXJjZU5hbWUgaXMgdGhlIG5hbWUgb2YgdGhlIE1hcCBDdXN0b20gUmVzb3VyY2UuIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJkZXNjcmlwdGlvbiI6IldhblN5bmNNYXBTdGF0dXMgaXMgdGhlIFdBTiBTeW5jIHN0YXR1cyBvZiB0aGUgTWFwcyBnaXZlbiBpbiB0aGUgc3BlYyBkaXJlY3RseSBvciBpbmRpcmVjdGx5IGJ5IEhhemVsY2FzdCByZXNvdXJjZS4iLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJzcGVjIl0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOm51bGwsInN0b3JlZFZlcnNpb25zIjpudWxsfX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEzLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJjYWNoZXMuaGF6ZWxjYXN0LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiaGF6ZWxjYXN0LmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJDYWNoZSIsImxpc3RLaW5kIjoiQ2FjaGVMaXN0IiwicGx1cmFsIjoiY2FjaGVzIiwic2hvcnROYW1lcyI6WyJjaCJdLCJzaW5ndWxhciI6ImNhY2hlIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJhZGRpdGlvbmFsUHJpbnRlckNvbHVtbnMiOlt7ImRlc2NyaXB0aW9uIjoiQ3VycmVudCBzdGF0ZSBvZiB0aGUgQ2FjaGUgQ29uZmlnIiwianNvblBhdGgiOiIuc3RhdHVzLnN0YXRlIiwibmFtZSI6IlN0YXR1cyIsInR5cGUiOiJzdHJpbmcifSx7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgSGF6ZWxjYXN0IHJlc291cmNlIHRoYXQgdGhpcyByZXNvdXJjZSBpcyBjcmVhdGVkIGZvciIsImpzb25QYXRoIjoiLnNwZWMuaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIiwibmFtZSI6IkhhemVsY2FzdC1SZXNvdXJjZSIsInByaW9yaXR5IjoxLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6Ik1lc3NhZ2UgZm9yIHRoZSBjdXJyZW50IENhY2hlIENvbmZpZyIsImpzb25QYXRoIjoiLnN0YXR1cy5tZXNzYWdlIiwibmFtZSI6Ik1lc3NhZ2UiLCJwcmlvcml0eSI6MSwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkNhY2hlIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSBjYWNoZXMgQVBJIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJDYWNoZVNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBDYWNoZSBJdCBjYW5ub3QgYmUgdXBkYXRlZCBhZnRlciB0aGUgQ2FjaGUgaXMgY3JlYXRlZCIsInByb3BlcnRpZXMiOnsiYXN5bmNCYWNrdXBDb3VudCI6eyJkZWZhdWx0IjowLCJkZXNjcmlwdGlvbiI6Ik51bWJlciBvZiBhc3luY2hyb25vdXMgYmFja3Vwcy4iLCJmb3JtYXQiOiJpbnQzMiIsIm1heGltdW0iOjYsIm1pbmltdW0iOjAsInR5cGUiOiJpbnRlZ2VyIn0sImJhY2t1cENvdW50Ijp7ImRlZmF1bHQiOjEsImRlc2NyaXB0aW9uIjoiTnVtYmVyIG9mIHN5bmNocm9ub3VzIGJhY2t1cHMuIiwiZm9ybWF0IjoiaW50MzIiLCJtYXhpbXVtIjo2LCJtaW5pbXVtIjowLCJ0eXBlIjoiaW50ZWdlciJ9LCJldmVudEpvdXJuYWwiOnsiZGVzY3JpcHRpb24iOiJFdmVudEpvdXJuYWwgc3BlY2lmaWVzIGV2ZW50IGpvdXJuYWwgY29uZmlndXJhdGlvbiBvZiB0aGUgQ2FjaGUiLCJwcm9wZXJ0aWVzIjp7ImNhcGFjaXR5Ijp7ImRlZmF1bHQiOjEwMDAwLCJkZXNjcmlwdGlvbiI6IkNhcGFjaXR5IHNldHMgdGhlIGNhcGFjaXR5IG9mIHRoZSByaW5nYnVmZmVyIHVuZGVybHlpbmcgdGhlIGV2ZW50IGpvdXJuYWwuIiwiZm9ybWF0IjoiaW50MzIiLCJ0eXBlIjoiaW50ZWdlciJ9LCJ0aW1lVG9MaXZlU2Vjb25kcyI6eyJkZWZhdWx0IjowLCJkZXNjcmlwdGlvbiI6IlRpbWVUb0xpdmVTZWNvbmRzIGluZGljYXRlcyBob3cgbG9uZyB0aGUgaXRlbXMgcmVtYWluIGluIHRoZSBldmVudCBqb3VybmFsIGJlZm9yZSB0aGV5IGFyZSBleHBpcmVkLiIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifX0sInR5cGUiOiJvYmplY3QifSwiaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIjp7ImRlc2NyaXB0aW9uIjoiSGF6ZWxjYXN0UmVzb3VyY2VOYW1lIGRlZmluZXMgdGhlIG5hbWUgb2YgdGhlIEhhemVsY2FzdCByZXNvdXJjZSB0aGF0IHRoaXMgcmVzb3VyY2UgaXMgY3JlYXRlZCBmb3IuIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn0sImluTWVtb3J5Rm9ybWF0Ijp7ImRlZmF1bHQiOiJCSU5BUlkiLCJkZXNjcmlwdGlvbiI6IkluTWVtb3J5Rm9ybWF0IHNwZWNpZmllcyBpbiB3aGljaCBmb3JtYXQgZGF0YSB3aWxsIGJlIHN0b3JlZCBpbiB5b3VyIGNhY2hlIiwiZW51bSI6WyJCSU5BUlkiLCJPQkpFQ1QiLCJOQVRJVkUiXSwidHlwZSI6InN0cmluZyJ9LCJrZXlUeXBlIjp7ImRlc2NyaXB0aW9uIjoiQ2xhc3MgbmFtZSBvZiB0aGUga2V5IHR5cGUiLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBkYXRhIHN0cnVjdHVyZSBjb25maWcgdG8gYmUgY3JlYXRlZC4gSWYgZW1wdHksIENSIG5hbWUgd2lsbCBiZSB1c2VkLiBJdCBjYW5ub3QgYmUgdXBkYXRlZCBhZnRlciB0aGUgY29uZmlnIGlzIGNyZWF0ZWQgc3VjY2Vzc2Z1bGx5LiIsInR5cGUiOiJzdHJpbmcifSwicGVyc2lzdGVuY2VFbmFibGVkIjp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6IldoZW4gZW5hYmxlZCwgY2FjaGUgZGF0YSB3aWxsIGJlIHBlcnNpc3RlZC4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJ1c2VyQ29kZU5hbWVzcGFjZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIFVzZXIgQ29kZSBOYW1lc3BhY2UgYXBwbGllZCB0byB0aGlzIGluc3RhbmNlIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlVHlwZSI6eyJkZXNjcmlwdGlvbiI6IkNsYXNzIG5hbWUgb2YgdGhlIHZhbHVlIHR5cGUiLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJoYXplbGNhc3RSZXNvdXJjZU5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJDYWNoZVN0YXR1cyBkZWZpbmVzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBDYWNoZSIsInByb3BlcnRpZXMiOnsibWVtYmVyU3RhdHVzZXMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsiZW51bSI6WyJTdWNjZXNzIiwiRmFpbGVkIiwiUGVuZGluZyIsIlBlcnNpc3RpbmciLCJUZXJtaW5hdGluZyJdLCJ0eXBlIjoic3RyaW5nIn0sImRlc2NyaXB0aW9uIjoiSG9sZHMgc3RhdHVzIG9mIGRhdGEgc3RydWN0dXJlIGZvciBlYWNoIEhhemVsY2FzdCBtZW1iZXIiLCJ0eXBlIjoib2JqZWN0In0sIm1lc3NhZ2UiOnsiZGVzY3JpcHRpb24iOiJNZXNzYWdlIGV4cGxhaW5pbmcgdGhlIGN1cnJlbnQgc3RhdGUiLCJ0eXBlIjoic3RyaW5nIn0sInN0YXRlIjp7ImRlc2NyaXB0aW9uIjoiU3RhdGUgb2YgdGhlIGRhdGEgc3RydWN0dXJlIiwiZW51bSI6WyJTdWNjZXNzIiwiRmFpbGVkIiwiUGVuZGluZyIsIlBlcnNpc3RpbmciLCJUZXJtaW5hdGluZyJdLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJzcGVjIl0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOm51bGwsInN0b3JlZFZlcnNpb25zIjpudWxsfX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEzLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJjcm9uaG90YmFja3Vwcy5oYXplbGNhc3QuY29tIn0sInNwZWMiOnsiZ3JvdXAiOiJoYXplbGNhc3QuY29tIiwibmFtZXMiOnsia2luZCI6IkNyb25Ib3RCYWNrdXAiLCJsaXN0S2luZCI6IkNyb25Ib3RCYWNrdXBMaXN0IiwicGx1cmFsIjoiY3JvbmhvdGJhY2t1cHMiLCJzaG9ydE5hbWVzIjpbImNoYiJdLCJzaW5ndWxhciI6ImNyb25ob3RiYWNrdXAifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3siZGVzY3JpcHRpb24iOiJTdXNwZW50aW9uIHN0YXR1cyBvZiB0aGUgQ3JvbkhvdEJhY2t1cCIsImpzb25QYXRoIjoiLnNwZWMuc3VzcGVuZCIsIm5hbWUiOiJTVVNQRU5ERUQiLCJ0eXBlIjoiYm9vbGVhbiJ9LHsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBIYXplbGNhc3QgcmVzb3VyY2UgdGhhdCB0aGlzIHJlc291cmNlIGlzIGNyZWF0ZWQgZm9yIiwianNvblBhdGgiOiIuc3BlYy5ob3RCYWNrdXBUZW1wbGF0ZS5zcGVjLmhhemVsY2FzdFJlc291cmNlTmFtZSIsIm5hbWUiOiJIYXplbGNhc3QtUmVzb3VyY2UiLCJwcmlvcml0eSI6MSwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkNyb25Ib3RCYWNrdXAgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIGNyb25ob3RiYWNrdXBzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiQ3JvbkhvdEJhY2t1cFNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBDcm9uSG90QmFja3VwIiwicHJvcGVydGllcyI6eyJmYWlsZWRIb3RCYWNrdXBzSGlzdG9yeUxpbWl0Ijp7ImRlZmF1bHQiOjMsImRlc2NyaXB0aW9uIjoiVGhlIG51bWJlciBvZiBmYWlsZWQgZmluaXNoZWQgaG90IGJhY2t1cHMgdG8gcmV0YWluLiIsImZvcm1hdCI6ImludDMyIiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifSwiaG90QmFja3VwVGVtcGxhdGUiOnsiZGVzY3JpcHRpb24iOiJTcGVjaWZpZXMgdGhlIGhvdCBiYWNrdXAgdGhhdCB3aWxsIGJlIGNyZWF0ZWQgd2hlbiBleGVjdXRpbmcgYSBDcm9uSG90QmFja3VwLiIsInByb3BlcnRpZXMiOnsibWV0YWRhdGEiOnsiZGVzY3JpcHRpb24iOiJTdGFuZGFyZCBvYmplY3QncyBtZXRhZGF0YSBvZiB0aGUgaG90IGJhY2t1cHMgY3JlYXRlZCBmcm9tIHRoaXMgdGVtcGxhdGUuIiwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJTcGVjaWZpY2F0aW9uIG9mIHRoZSBkZXNpcmVkIGJlaGF2aW9yIG9mIHRoZSBob3QgYmFja3VwLiIsInByb3BlcnRpZXMiOnsiYnVja2V0VVJJIjp7ImRlc2NyaXB0aW9uIjoiVVJMIG9mIHRoZSBidWNrZXQgdG8gZG93bmxvYWQgSG90QmFja3VwIGZvbGRlcnMuIEFXUyBTMywgR0NQIEJ1Y2tldCBhbmQgQXp1cmUgQmxvYiBzdG9yYWdlIGJ1Y2tldHMgYXJlIHN1cHBvcnRlZC4gRXhhbXBsZSBidWNrZXQgVVJJczogLSBBV1MgUzMgICAgIC1cdTAwM2UgczM6Ly9idWNrZXQtbmFtZS9wYXRoL3RvL2ZvbGRlciAtIEdDUCBCdWNrZXQgLVx1MDAzZSBnczovL2J1Y2tldC1uYW1lL3BhdGgvdG8vZm9sZGVyIC0gQXp1cmUgQmxvYiAtXHUwMDNlIGF6YmxvYjovL2J1Y2tldC1uYW1lL3BhdGgvdG8vZm9sZGVyIiwidHlwZSI6InN0cmluZyJ9LCJoYXplbGNhc3RSZXNvdXJjZU5hbWUiOnsiZGVzY3JpcHRpb24iOiJIYXplbGNhc3RSZXNvdXJjZU5hbWUgZGVmaW5lcyB0aGUgbmFtZSBvZiB0aGUgSGF6ZWxjYXN0IHJlc291cmNlIiwidHlwZSI6InN0cmluZyJ9LCJzZWNyZXQiOnsiZGVzY3JpcHRpb24iOiJzZWNyZXQgaXMgYSBkZXByZWNhdGVkIGFsaWFzIGZvciBzZWNyZXROYW1lLiIsInR5cGUiOiJzdHJpbmcifSwic2VjcmV0TmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIHNlY3JldCB3aXRoIGNyZWRlbnRpYWxzIGZvciBjbG91ZCBwcm92aWRlcnMuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIl0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInNwZWMiXSwidHlwZSI6Im9iamVjdCJ9LCJzY2hlZHVsZSI6eyJkZXNjcmlwdGlvbiI6IlNjaGVkdWxlIGNvbnRhaW5zIGEgY3JvbnRhYi1saWtlIGV4cHJlc3Npb24gdGhhdCBkZWZpbmVzIHRoZSBzY2hlZHVsZSBpbiB3aGljaCBIb3RCYWNrdXAgd2lsbCBiZSBzdGFydGVkLiBJZiB0aGUgU2NoZWR1bGUgaXMgZW1wdHkgdGhlIEhvdEJhY2t1cCB3aWxsIHN0YXJ0IG9ubHkgb25jZSB3aGVuIGFwcGxpZWQuIC0tLSBTZXZlcmFsIHByZS1kZWZpbmVkIHNjaGVkdWxlcyBpbiBwbGFjZSBvZiBhIGNyb24gZXhwcmVzc2lvbiBjYW4gYmUgdXNlZC4gRW50cnkgICAgICAgICAgICAgICAgICB8IERlc2NyaXB0aW9uICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IEVxdWl2YWxlbnQgVG8gLS0tLS0gICAgICAgICAgICAgICAgICB8IC0tLS0tLS0tLS0tICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IC0tLS0tLS0tLS0tLS0gQHllYXJseSAob3IgQGFubnVhbGx5KSB8IFJ1biBvbmNlIGEgeWVhciwgbWlkbmlnaHQsIEphbi4gMXN0ICAgICAgICB8IDAgMCAxIDEgKiBAbW9udGhseSAgICAgICAgICAgICAgIHwgUnVuIG9uY2UgYSBtb250aCwgbWlkbmlnaHQsIGZpcnN0IG9mIG1vbnRoIHwgMCAwIDEgKiAqIEB3ZWVrbHkgICAgICAgICAgICAgICAgfCBSdW4gb25jZSBhIHdlZWssIG1pZG5pZ2h0IGJldHdlZW4gU2F0L1N1biAgfCAwIDAgKiAqIDAgQGRhaWx5IChvciBAbWlkbmlnaHQpICB8IFJ1biBvbmNlIGEgZGF5LCBtaWRuaWdodCAgICAgICAgICAgICAgICAgICB8IDAgMCAqICogKiBAaG91cmx5ICAgICAgICAgICAgICAgIHwgUnVuIG9uY2UgYW4gaG91ciwgYmVnaW5uaW5nIG9mIGhvdXIgICAgICAgIHwgMCAqICogKiAqIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn0sInN1Y2Nlc3NmdWxIb3RCYWNrdXBzSGlzdG9yeUxpbWl0Ijp7ImRlZmF1bHQiOjUsImRlc2NyaXB0aW9uIjoiVGhlIG51bWJlciBvZiBzdWNjZXNzZnVsIGZpbmlzaGVkIGhvdCBiYWNrdXBzIHRvIHJldGFpbi4iLCJmb3JtYXQiOiJpbnQzMiIsIm1pbmltdW0iOjAsInR5cGUiOiJpbnRlZ2VyIn0sInN1c3BlbmQiOnsiZGVmYXVsdCI6ZmFsc2UsImRlc2NyaXB0aW9uIjoiV2hlbiB0cnVlLCBDcm9uSG90QmFja3VwIHdpbGwgc3RvcCBjcmVhdGluZyBIb3RCYWNrdXAgQ1JzIHVudGlsIGl0IGlzIGRpc2FibGVkIiwidHlwZSI6ImJvb2xlYW4ifX0sInJlcXVpcmVkIjpbImhvdEJhY2t1cFRlbXBsYXRlIiwic2NoZWR1bGUiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJDcm9uSG90QmFja3VwU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIENyb25Ib3RCYWNrdXAiLCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJzcGVjIl0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOm51bGwsInN0b3JlZFZlcnNpb25zIjpudWxsfX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEzLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJoYXplbGNhc3RlbmRwb2ludHMuaGF6ZWxjYXN0LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiaGF6ZWxjYXN0LmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJIYXplbGNhc3RFbmRwb2ludCIsImxpc3RLaW5kIjoiSGF6ZWxjYXN0RW5kcG9pbnRMaXN0IiwicGx1cmFsIjoiaGF6ZWxjYXN0ZW5kcG9pbnRzIiwic2hvcnROYW1lcyI6WyJoemVwIl0sInNpbmd1bGFyIjoiaGF6ZWxjYXN0ZW5kcG9pbnQifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3siZGVzY3JpcHRpb24iOiJUeXBlIG9mIHRoZSBIYXplbGNhc3RFbmRwb2ludCIsImpzb25QYXRoIjoiLnNwZWMudHlwZSIsIm5hbWUiOiJUeXBlIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJBZGRyZXNzIG9mIHRoZSBIYXplbGNhc3RFbmRwb2ludCIsImpzb25QYXRoIjoiLnN0YXR1cy5hZGRyZXNzIiwibmFtZSI6IkFkZHJlc3MiLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIEhhemVsY2FzdCByZXNvdXJjZSB0aGF0IHRoaXMgcmVzb3VyY2UgaXMgY3JlYXRlZCBmb3IiLCJqc29uUGF0aCI6Ii5zcGVjLmhhemVsY2FzdFJlc291cmNlTmFtZSIsIm5hbWUiOiJIYXplbGNhc3QtUmVzb3VyY2UiLCJwcmlvcml0eSI6MSwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJNZXNzYWdlIGZvciB0aGUgY3VycmVudCBIYXplbGNhc3RFbmRwb2ludCIsImpzb25QYXRoIjoiLnN0YXR1cy5tZXNzYWdlIiwibmFtZSI6Ik1lc3NhZ2UiLCJwcmlvcml0eSI6MSwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkhhemVsY2FzdEVuZHBvaW50IGlzIHRoZSBTY2hlbWEgZm9yIHRoZSBoYXplbGNhc3RlbmRwb2ludHMgQVBJIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJIYXplbGNhc3RFbmRwb2ludFNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBIYXplbGNhc3RFbmRwb2ludCIsInByb3BlcnRpZXMiOnsiaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIjp7ImRlc2NyaXB0aW9uIjoiSGF6ZWxjYXN0UmVzb3VyY2VOYW1lIGRlZmluZXMgdGhlIG5hbWUgb2YgdGhlIEhhemVsY2FzdCByZXNvdXJjZSB0aGF0IHRoaXMgcmVzb3VyY2UgaXMgY3JlYXRlZCBmb3IuIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn0sInBvcnQiOnsiZGVzY3JpcHRpb24iOiJQb3J0IG9mIHRoZSBlbmRwb2ludC4iLCJmb3JtYXQiOiJpbnQzMiIsInR5cGUiOiJpbnRlZ2VyIn0sInR5cGUiOnsiZGVzY3JpcHRpb24iOiJUeXBlIGRlZmluZXMgdGhlIGVuZHBvaW50IGNvbm5lY3Rpb24uIEl0IGlzIHVzZWQgdG8gaWRlbnRpZnkgdGhlIHRhcmdldCBvZiB0aGUgZW5kcG9pbnQuIiwiZW51bSI6WyJEaXNjb3ZlcnkiLCJNZW1iZXIiLCJXQU4iXSwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIiwicG9ydCIsInR5cGUiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJIYXplbGNhc3RFbmRwb2ludFN0YXR1cyBkZWZpbmVzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBIYXplbGNhc3RFbmRwb2ludCIsInByb3BlcnRpZXMiOnsiYWRkcmVzcyI6eyJkZXNjcmlwdGlvbiI6IkFkZHJlc3MgaXMgdGhlIGV4dGVybmFsIGFkZHJlc3Mgb2YgdGhlIGVuZHBvaW50LiBJdCBpcyB0YWtlbiBmcm9tIHRoZSBjb3JyZXNwb25kaW5nIHNlcnZpY2UuIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6bnVsbCwic3RvcmVkVmVyc2lvbnMiOm51bGx9fQ==
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEzLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJob3RiYWNrdXBzLmhhemVsY2FzdC5jb20ifSwic3BlYyI6eyJncm91cCI6ImhhemVsY2FzdC5jb20iLCJuYW1lcyI6eyJraW5kIjoiSG90QmFja3VwIiwibGlzdEtpbmQiOiJIb3RCYWNrdXBMaXN0IiwicGx1cmFsIjoiaG90YmFja3VwcyIsInNob3J0TmFtZXMiOlsiaGIiXSwic2luZ3VsYXIiOiJob3RiYWNrdXAifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3siZGVzY3JpcHRpb24iOiJDdXJyZW50IHN0YXRlIG9mIHRoZSBIb3RCYWNrdXAgcHJvY2VzcyIsImpzb25QYXRoIjoiLnN0YXR1cy5zdGF0ZSIsIm5hbWUiOiJTdGF0dXMiLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIEhhemVsY2FzdCByZXNvdXJjZSB0aGF0IHRoaXMgcmVzb3VyY2UgaXMgY3JlYXRlZCBmb3IiLCJqc29uUGF0aCI6Ii5zcGVjLmhhemVsY2FzdFJlc291cmNlTmFtZSIsIm5hbWUiOiJIYXplbGNhc3QtUmVzb3VyY2UiLCJwcmlvcml0eSI6MSwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJNZXNzYWdlIGZvciB0aGUgY3VycmVudCBIb3RCYWNrdXAgQ29uZmlnIiwianNvblBhdGgiOiIuc3RhdHVzLm1lc3NhZ2UiLCJuYW1lIjoiTWVzc2FnZSIsInByaW9yaXR5IjoxLCJ0eXBlIjoic3RyaW5nIn1dLCJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiSG90QmFja3VwIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSBob3QgYmFja3VwIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiSG90QmFja3VwU3BlYyBkZWZpbmVzIHRoZSBTcGVjIG9mIEhvdEJhY2t1cCIsInByb3BlcnRpZXMiOnsiYnVja2V0VVJJIjp7ImRlc2NyaXB0aW9uIjoiVVJMIG9mIHRoZSBidWNrZXQgdG8gZG93bmxvYWQgSG90QmFja3VwIGZvbGRlcnMuIEFXUyBTMywgR0NQIEJ1Y2tldCBhbmQgQXp1cmUgQmxvYiBzdG9yYWdlIGJ1Y2tldHMgYXJlIHN1cHBvcnRlZC4gRXhhbXBsZSBidWNrZXQgVVJJczogLSBBV1MgUzMgICAgIC1cdTAwM2UgczM6Ly9idWNrZXQtbmFtZS9wYXRoL3RvL2ZvbGRlciAtIEdDUCBCdWNrZXQgLVx1MDAzZSBnczovL2J1Y2tldC1uYW1lL3BhdGgvdG8vZm9sZGVyIC0gQXp1cmUgQmxvYiAtXHUwMDNlIGF6YmxvYjovL2J1Y2tldC1uYW1lL3BhdGgvdG8vZm9sZGVyIiwidHlwZSI6InN0cmluZyJ9LCJoYXplbGNhc3RSZXNvdXJjZU5hbWUiOnsiZGVzY3JpcHRpb24iOiJIYXplbGNhc3RSZXNvdXJjZU5hbWUgZGVmaW5lcyB0aGUgbmFtZSBvZiB0aGUgSGF6ZWxjYXN0IHJlc291cmNlIiwidHlwZSI6InN0cmluZyJ9LCJzZWNyZXQiOnsiZGVzY3JpcHRpb24iOiJzZWNyZXQgaXMgYSBkZXByZWNhdGVkIGFsaWFzIGZvciBzZWNyZXROYW1lLiIsInR5cGUiOiJzdHJpbmcifSwic2VjcmV0TmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIHNlY3JldCB3aXRoIGNyZWRlbnRpYWxzIGZvciBjbG91ZCBwcm92aWRlcnMuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIl0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiSG90QmFja3VwU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIEhvdEJhY2t1cCIsInByb3BlcnRpZXMiOnsiYmFja3VwVVVJRHMiOnsiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifSwibWVzc2FnZSI6eyJ0eXBlIjoic3RyaW5nIn0sInN0YXRlIjp7ImVudW0iOlsiVW5rbm93biIsIlBlbmRpbmciLCJOb3RTdGFydGVkIiwiSW5Qcm9ncmVzcyIsIkZhaWx1cmUiLCJTdWNjZXNzIl0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInNwZWMiXSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6bnVsbCwic3RvcmVkVmVyc2lvbnMiOm51bGx9fQ==
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEzLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJqZXRqb2JzLmhhemVsY2FzdC5jb20ifSwic3BlYyI6eyJncm91cCI6ImhhemVsY2FzdC5jb20iLCJuYW1lcyI6eyJraW5kIjoiSmV0Sm9iIiwibGlzdEtpbmQiOiJKZXRKb2JMaXN0IiwicGx1cmFsIjoiamV0am9icyIsInNob3J0TmFtZXMiOlsiamoiXSwic2luZ3VsYXIiOiJqZXRqb2IifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3siZGVzY3JpcHRpb24iOiJDdXJyZW50IHN0YXRlIG9mIHRoZSBKZXRKb2IiLCJqc29uUGF0aCI6Ii5zdGF0dXMucGhhc2UiLCJuYW1lIjoiU3RhdHVzIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJJRCBvZiB0aGUgSmV0Sm9iIiwianNvblBhdGgiOiIuc3RhdHVzLmlkIiwibmFtZSI6IklkIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBIYXplbGNhc3QgcmVzb3VyY2UgdGhhdCB0aGlzIHJlc291cmNlIGlzIGNyZWF0ZWQgZm9yIiwianNvblBhdGgiOiIuc3BlYy5oYXplbGNhc3RSZXNvdXJjZU5hbWUiLCJuYW1lIjoiSGF6ZWxjYXN0LVJlc291cmNlIiwicHJpb3JpdHkiOjEsInR5cGUiOiJzdHJpbmcifSx7ImRlc2NyaXB0aW9uIjoiVGltZSB3aGVuIHRoZSBKZXRKb2Igd2FzIHN1Ym1pdHRlZCIsImpzb25QYXRoIjoiLnN0YXR1cy5zdWJtaXNzaW9uVGltZSIsIm5hbWUiOiJTdWJtaXNzaW9uVGltZSIsInR5cGUiOiJzdHJpbmcifSx7ImRlc2NyaXB0aW9uIjoiVGltZSB3aGVuIHRoZSBKZXRKb2Igd2FzIGNvbXBsZXRlZCIsImpzb25QYXRoIjoiLnN0YXR1cy5jb21wbGV0aW9uVGltZSIsIm5hbWUiOiJDb21wbGV0aW9uVGltZSIsInR5cGUiOiJzdHJpbmcifV0sIm5hbWUiOiJ2MWFscGhhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJKZXRKb2IgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIGpldGpvYnMgQVBJIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJKZXRKb2JTcGVjIGRlZmluZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgSmV0Sm9iIiwicHJvcGVydGllcyI6eyJidWNrZXRDb25maWciOnsiZGVzY3JpcHRpb24iOiJCdWNrZXQgY29uZmlnIGZyb20gd2hlcmUgdGhlIEpBUiBmaWxlcyB3aWxsIGJlIGRvd25sb2FkZWQuIiwicHJvcGVydGllcyI6eyJidWNrZXRVUkkiOnsiZGVzY3JpcHRpb24iOiJVUkwgb2YgdGhlIGJ1Y2tldCB0byBkb3dubG9hZCBIb3RCYWNrdXAgZm9sZGVycy4gQVdTIFMzLCBHQ1AgQnVja2V0IGFuZCBBenVyZSBCbG9iIHN0b3JhZ2UgYnVja2V0cyBhcmUgc3VwcG9ydGVkLiBFeGFtcGxlIGJ1Y2tldCBVUklzOiAtIEFXUyBTMyAgICAgLVx1MDAzZSBzMzovL2J1Y2tldC1uYW1lL3BhdGgvdG8vZm9sZGVyIC0gR0NQIEJ1Y2tldCAtXHUwMDNlIGdzOi8vYnVja2V0LW5hbWUvcGF0aC90by9mb2xkZXIgLSBBenVyZSBCbG9iIC1cdTAwM2UgYXpibG9iOi8vYnVja2V0LW5hbWUvcGF0aC90by9mb2xkZXIiLCJtaW5MZW5ndGgiOjYsInR5cGUiOiJzdHJpbmcifSwic2VjcmV0Ijp7ImRlc2NyaXB0aW9uIjoic2VjcmV0IGlzIGEgZGVwcmVjYXRlZCBhbGlhcyBmb3Igc2VjcmV0TmFtZS4iLCJ0eXBlIjoic3RyaW5nIn0sInNlY3JldE5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBzZWNyZXQgd2l0aCBjcmVkZW50aWFscyBmb3IgY2xvdWQgcHJvdmlkZXJzLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImJ1Y2tldFVSSSJdLCJ0eXBlIjoib2JqZWN0In0sImhhemVsY2FzdFJlc291cmNlTmFtZSI6eyJkZXNjcmlwdGlvbiI6IkhhemVsY2FzdFJlc291cmNlTmFtZSBkZWZpbmVzIHRoZSBuYW1lIG9mIHRoZSBIYXplbGNhc3QgcmVzb3VyY2UgdGhhdCB0aGlzIHJlc291cmNlIGlzIGNyZWF0ZWQgZm9yLiIsIm1pbkxlbmd0aCI6MSwidHlwZSI6InN0cmluZyJ9LCJpbml0aWFsU25hcHNob3RSZXNvdXJjZU5hbWUiOnsiZGVzY3JpcHRpb24iOiJJbml0aWFsU25hcHNob3RSZXNvdXJjZU5hbWUgc3BlY2lmeSB0aGUgbmFtZSBvZiB0aGUgSmV0Sm9iU25hcHNob3Qgb2JqZWN0IGZyb20gd2hpY2ggdGhlIEpldEpvYiBpcyBpbml0aWFsaXplZC4iLCJ0eXBlIjoic3RyaW5nIn0sImphck5hbWUiOnsiZGVzY3JpcHRpb24iOiJKYXJOYW1lIHNwZWNpZnkgdGhlIG5hbWUgb2YgdGhlIEphciB0byBydW4gdGhhdCBpcyBwcmVzZW50IG9uIHRoZSBtZW1iZXIuIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn0sIm1haW5DbGFzcyI6eyJkZXNjcmlwdGlvbiI6Ik1haW5DbGFzcyBpcyB0aGUgbmFtZSBvZiB0aGUgbWFpbiBjbGFzcyB0aGF0IHdpbGwgYmUgcnVuIG9uIHRoZSBzdWJtaXR0ZWQgam9iLiIsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIEpldEpvYiB0byBiZSBjcmVhdGVkLiBJZiBlbXB0eSwgQ1IgbmFtZSB3aWxsIGJlIHVzZWQuIEl0IGNhbm5vdCBiZSB1cGRhdGVkIGFmdGVyIHRoZSBjb25maWcgaXMgY3JlYXRlZCBzdWNjZXNzZnVsbHkuIiwidHlwZSI6InN0cmluZyJ9LCJwYXJhbWV0ZXJzIjp7ImRlc2NyaXB0aW9uIjoiUGFyYW1ldGVycyB0byBiZSBwYXNzZWQgdG8gSmV0IEpvYi4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJyZW1vdGVVUkwiOnsiZGVzY3JpcHRpb24iOiJVUkwgZnJvbSB3aGVyZSB0aGUgZmlsZSB3aWxsIGJlIGRvd25sb2FkZWQuIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0ZSI6eyJkZWZhdWx0IjoiUnVubmluZyIsImRlc2NyaXB0aW9uIjoiU3RhdGUgaXMgdXNlZCB0byBtYW5hZ2UgdGhlIGpvYiBzdGF0ZS4iLCJlbnVtIjpbIlJ1bm5pbmciLCJTdXNwZW5kZWQiLCJDYW5jZWxlZCIsIlJlc3RhcnRlZCJdLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJoYXplbGNhc3RSZXNvdXJjZU5hbWUiLCJqYXJOYW1lIiwic3RhdGUiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJKZXRKb2JTdGF0dXMgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgSmV0Sm9iIiwicHJvcGVydGllcyI6eyJjb21wbGV0aW9uVGltZSI6eyJmb3JtYXQiOiJkYXRlLXRpbWUiLCJ0eXBlIjoic3RyaW5nIn0sImZhaWx1cmVUZXh0Ijp7InR5cGUiOiJzdHJpbmcifSwiaWQiOnsiZm9ybWF0IjoiaW50NjQiLCJ0eXBlIjoiaW50ZWdlciJ9LCJwaGFzZSI6eyJlbnVtIjpbIkZhaWxlZCIsIk5vdFJ1bm5pbmciLCJTdGFydGluZyIsIlJ1bm5pbmciLCJTdXNwZW5kZWQiLCJTdXNwZW5kZWRFeHBvcnRpbmdTbmFwc2hvdCIsIkNvbXBsZXRpbmciLCJFeGVjdXRpb25GYWlsZWQiLCJDb21wbGV0ZWQiXSwidHlwZSI6InN0cmluZyJ9LCJzdWJtaXNzaW9uVGltZSI6eyJmb3JtYXQiOiJkYXRlLXRpbWUiLCJ0eXBlIjoic3RyaW5nIn0sInN1c3BlbnNpb25DYXVzZSI6eyJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJpZCIsInBoYXNlIl0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOm51bGwsInN0b3JlZFZlcnNpb25zIjpudWxsfX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEzLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJqZXRqb2JzbmFwc2hvdHMuaGF6ZWxjYXN0LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiaGF6ZWxjYXN0LmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJKZXRKb2JTbmFwc2hvdCIsImxpc3RLaW5kIjoiSmV0Sm9iU25hcHNob3RMaXN0IiwicGx1cmFsIjoiamV0am9ic25hcHNob3RzIiwic2hvcnROYW1lcyI6WyJqanMiXSwic2luZ3VsYXIiOiJqZXRqb2JzbmFwc2hvdCJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJkZXNjcmlwdGlvbiI6IkN1cnJlbnQgc3RhdGUgb2YgdGhlIEpldEpvYlNuYXBzaG90IiwianNvblBhdGgiOiIuc3RhdHVzLnN0YXRlIiwibmFtZSI6IlN0YXRlIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJUaW1lIHdoZW4gdGhlIEpldEpvYlNuYXBzaG90IHdhcyBjcmVhdGVkLCBpZiBjcmVhdGVkIiwianNvblBhdGgiOiIuc3RhdHVzLmNyZWF0aW9uVGltZSIsIm5hbWUiOiJDcmVhdGlvblRpbWUiLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6Ik1lc3NhZ2UgZm9yIHRoZSBKZXRKb2JTbmFwc2hvdCIsImpzb25QYXRoIjoiLnN0YXR1cy5tZXNzYWdlIiwibmFtZSI6Ik1lc3NhZ2UiLCJwcmlvcml0eSI6MSwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkpldEpvYlNuYXBzaG90IGlzIHRoZSBTY2hlbWEgZm9yIHRoZSBqZXRqb2JzbmFwc2hvdHMgQVBJIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJKZXRKb2JTbmFwc2hvdFNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBKZXRKb2JTbmFwc2hvdCIsInByb3BlcnRpZXMiOnsiY2FuY2VsSm9iIjp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6IkNhbmNlbEpvYiBkZXRlcm1pbmVzIHdoZXRoZXIgdGhlIGpvYiBpcyBjYW5jZWxlZCBhZnRlciBleHBvcnRpbmcgc25hcHNob3QiLCJ0eXBlIjoiYm9vbGVhbiJ9LCJqZXRKb2JSZXNvdXJjZU5hbWUiOnsiZGVzY3JpcHRpb24iOiJKZXRKb2JSZXNvdXJjZU5hbWUgaXMgdGhlIG5hbWUgb2YgdGhlIEpldEpvYiBDUiB3aGVyZSB0aGUgU25hcHNob3QgaXMgZXhwb3J0ZWQgZnJvbSIsIm1pbkxlbmd0aCI6MSwidHlwZSI6InN0cmluZyJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgZXhwb3J0ZWQgc25hcHNob3QiLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJqZXRKb2JSZXNvdXJjZU5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVmYXVsdCI6eyJzdGF0ZSI6IldhaXRpbmcifSwiZGVzY3JpcHRpb24iOiJKZXRKb2JTbmFwc2hvdFN0YXR1cyBkZWZpbmVzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBKZXRKb2JTbmFwc2hvdCIsInByb3BlcnRpZXMiOnsiY3JlYXRpb25UaW1lIjp7ImZvcm1hdCI6ImRhdGUtdGltZSIsInR5cGUiOiJzdHJpbmcifSwibWVzc2FnZSI6eyJ0eXBlIjoic3RyaW5nIn0sInN0YXRlIjp7ImVudW0iOlsiV2FpdGluZyIsIkV4cG9ydGluZyIsIkV4cG9ydGVkIiwiRmFpbGVkIl0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInNwZWMiXSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6bnVsbCwic3RvcmVkVmVyc2lvbnMiOm51bGx9fQ==
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEzLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJtdWx0aW1hcHMuaGF6ZWxjYXN0LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiaGF6ZWxjYXN0LmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJNdWx0aU1hcCIsImxpc3RLaW5kIjoiTXVsdGlNYXBMaXN0IiwicGx1cmFsIjoibXVsdGltYXBzIiwic2hvcnROYW1lcyI6WyJtbWFwIl0sInNpbmd1bGFyIjoibXVsdGltYXAifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3siZGVzY3JpcHRpb24iOiJDdXJyZW50IHN0YXRlIG9mIHRoZSBNdWx0aU1hcCBDb25maWciLCJqc29uUGF0aCI6Ii5zdGF0dXMuc3RhdGUiLCJuYW1lIjoiU3RhdHVzIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBIYXplbGNhc3QgcmVzb3VyY2UgdGhhdCB0aGlzIHJlc291cmNlIGlzIGNyZWF0ZWQgZm9yIiwianNvblBhdGgiOiIuc3BlYy5oYXplbGNhc3RSZXNvdXJjZU5hbWUiLCJuYW1lIjoiSGF6ZWxjYXN0LVJlc291cmNlIiwicHJpb3JpdHkiOjEsInR5cGUiOiJzdHJpbmcifSx7ImRlc2NyaXB0aW9uIjoiTWVzc2FnZSBmb3IgdGhlIGN1cnJlbnQgTXVsdGlNYXAgQ29uZmlnIiwianNvblBhdGgiOiIuc3RhdHVzLm1lc3NhZ2UiLCJuYW1lIjoiTWVzc2FnZSIsInByaW9yaXR5IjoxLCJ0eXBlIjoic3RyaW5nIn1dLCJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiTXVsdGlNYXAgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIG11bHRpbWFwcyBBUEkiLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuIFNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZCBtYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy4gU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uIENhbm5vdCBiZSB1cGRhdGVkLiBJbiBDYW1lbENhc2UuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6Ik11bHRpTWFwU3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIE11bHRpTWFwIiwicHJvcGVydGllcyI6eyJhc3luY0JhY2t1cENvdW50Ijp7ImRlZmF1bHQiOjAsImRlc2NyaXB0aW9uIjoiTnVtYmVyIG9mIGFzeW5jaHJvbm91cyBiYWNrdXBzLiIsImZvcm1hdCI6ImludDMyIiwibWF4aW11bSI6NiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifSwiYmFja3VwQ291bnQiOnsiZGVmYXVsdCI6MSwiZGVzY3JpcHRpb24iOiJOdW1iZXIgb2Ygc3luY2hyb25vdXMgYmFja3Vwcy4iLCJmb3JtYXQiOiJpbnQzMiIsIm1heGltdW0iOjYsIm1pbmltdW0iOjAsInR5cGUiOiJpbnRlZ2VyIn0sImJpbmFyeSI6eyJkZWZhdWx0IjpmYWxzZSwiZGVzY3JpcHRpb24iOiJTcGVjaWZpZXMgaW4gd2hpY2ggZm9ybWF0IGRhdGEgd2lsbCBiZSBzdG9yZWQgaW4geW91ciBNdWx0aU1hcC4gZmFsc2U6IE9CSkVDVCB0cnVlOiBCSU5BUlkiLCJ0eXBlIjoiYm9vbGVhbiJ9LCJjb2xsZWN0aW9uVHlwZSI6eyJkZWZhdWx0IjoiU0VUIiwiZGVzY3JpcHRpb24iOiJUeXBlIG9mIHRoZSB2YWx1ZSBjb2xsZWN0aW9uIiwiZW51bSI6WyJTRVQiLCJMSVNUIl0sInR5cGUiOiJzdHJpbmcifSwiaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIjp7ImRlc2NyaXB0aW9uIjoiSGF6ZWxjYXN0UmVzb3VyY2VOYW1lIGRlZmluZXMgdGhlIG5hbWUgb2YgdGhlIEhhemVsY2FzdCByZXNvdXJjZSB0aGF0IHRoaXMgcmVzb3VyY2UgaXMgY3JlYXRlZCBmb3IuIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBkYXRhIHN0cnVjdHVyZSBjb25maWcgdG8gYmUgY3JlYXRlZC4gSWYgZW1wdHksIENSIG5hbWUgd2lsbCBiZSB1c2VkLiBJdCBjYW5ub3QgYmUgdXBkYXRlZCBhZnRlciB0aGUgY29uZmlnIGlzIGNyZWF0ZWQgc3VjY2Vzc2Z1bGx5LiIsInR5cGUiOiJzdHJpbmcifSwidXNlckNvZGVOYW1lc3BhY2UiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBVc2VyIENvZGUgTmFtZXNwYWNlIGFwcGxpZWQgdG8gdGhpcyBpbnN0YW5jZSIsIm1pbkxlbmd0aCI6MSwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIl0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiTXVsdGlNYXBTdGF0dXMgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgTXVsdGlNYXAiLCJwcm9wZXJ0aWVzIjp7Im1lbWJlclN0YXR1c2VzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7ImVudW0iOlsiU3VjY2VzcyIsIkZhaWxlZCIsIlBlbmRpbmciLCJQZXJzaXN0aW5nIiwiVGVybWluYXRpbmciXSwidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6IkhvbGRzIHN0YXR1cyBvZiBkYXRhIHN0cnVjdHVyZSBmb3IgZWFjaCBIYXplbGNhc3QgbWVtYmVyIiwidHlwZSI6Im9iamVjdCJ9LCJtZXNzYWdlIjp7ImRlc2NyaXB0aW9uIjoiTWVzc2FnZSBleHBsYWluaW5nIHRoZSBjdXJyZW50IHN0YXRlIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0ZSI6eyJkZXNjcmlwdGlvbiI6IlN0YXRlIG9mIHRoZSBkYXRhIHN0cnVjdHVyZSIsImVudW0iOlsiU3VjY2VzcyIsIkZhaWxlZCIsIlBlbmRpbmciLCJQZXJzaXN0aW5nIiwiVGVybWluYXRpbmciXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsic3BlYyJdLCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfSwic3RhdHVzIjp7ImFjY2VwdGVkTmFtZXMiOnsia2luZCI6IiIsInBsdXJhbCI6IiJ9LCJjb25kaXRpb25zIjpudWxsLCJzdG9yZWRWZXJzaW9ucyI6bnVsbH19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEzLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJxdWV1ZXMuaGF6ZWxjYXN0LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiaGF6ZWxjYXN0LmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJRdWV1ZSIsImxpc3RLaW5kIjoiUXVldWVMaXN0IiwicGx1cmFsIjoicXVldWVzIiwic2hvcnROYW1lcyI6WyJxIl0sInNpbmd1bGFyIjoicXVldWUifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3siZGVzY3JpcHRpb24iOiJDdXJyZW50IHN0YXRlIG9mIHRoZSBRdWV1ZSBDb25maWciLCJqc29uUGF0aCI6Ii5zdGF0dXMuc3RhdGUiLCJuYW1lIjoiU3RhdHVzIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBIYXplbGNhc3QgcmVzb3VyY2UgdGhhdCB0aGlzIHJlc291cmNlIGlzIGNyZWF0ZWQgZm9yIiwianNvblBhdGgiOiIuc3BlYy5oYXplbGNhc3RSZXNvdXJjZU5hbWUiLCJuYW1lIjoiSGF6ZWxjYXN0LVJlc291cmNlIiwicHJpb3JpdHkiOjEsInR5cGUiOiJzdHJpbmcifSx7ImRlc2NyaXB0aW9uIjoiTWVzc2FnZSBmb3IgdGhlIGN1cnJlbnQgUXVldWUgQ29uZmlnIiwianNvblBhdGgiOiIuc3RhdHVzLm1lc3NhZ2UiLCJuYW1lIjoiTWVzc2FnZSIsInByaW9yaXR5IjoxLCJ0eXBlIjoic3RyaW5nIn1dLCJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiUXVldWUgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIHF1ZXVlcyBBUEkiLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuIFNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZCBtYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy4gU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uIENhbm5vdCBiZSB1cGRhdGVkLiBJbiBDYW1lbENhc2UuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IlF1ZXVlU3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIFF1ZXVlIEl0IGNhbm5vdCBiZSB1cGRhdGVkIGFmdGVyIHRoZSBRdWV1ZSBpcyBjcmVhdGVkIiwicHJvcGVydGllcyI6eyJhc3luY0JhY2t1cENvdW50Ijp7ImRlZmF1bHQiOjAsImRlc2NyaXB0aW9uIjoiTnVtYmVyIG9mIGFzeW5jaHJvbm91cyBiYWNrdXBzLiIsImZvcm1hdCI6ImludDMyIiwibWF4aW11bSI6NiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifSwiYmFja3VwQ291bnQiOnsiZGVmYXVsdCI6MSwiZGVzY3JpcHRpb24iOiJOdW1iZXIgb2Ygc3luY2hyb25vdXMgYmFja3Vwcy4iLCJmb3JtYXQiOiJpbnQzMiIsIm1heGltdW0iOjYsIm1pbmltdW0iOjAsInR5cGUiOiJpbnRlZ2VyIn0sImVtcHR5UXVldWVUVExTZWNvbmRzIjp7ImRlZmF1bHQiOi0xLCJkZXNjcmlwdGlvbiI6IlRpbWUgaW4gc2Vjb25kcyBhZnRlciB3aGljaCB0aGUgUXVldWUgd2lsbCBiZSBkZXN0cm95ZWQgaWYgaXQgc3RheXMgZW1wdHkgb3IgdW51c2VkLiBJZiB0aGUgdmFsdWVzIGlzIG5vdCBwcm92aWRlZCB0aGUgUXVldWUgd2lsbCBuZXZlciBiZSBkZXN0cm95ZWQuIiwiZm9ybWF0IjoiaW50MzIiLCJ0eXBlIjoiaW50ZWdlciJ9LCJoYXplbGNhc3RSZXNvdXJjZU5hbWUiOnsiZGVzY3JpcHRpb24iOiJIYXplbGNhc3RSZXNvdXJjZU5hbWUgZGVmaW5lcyB0aGUgbmFtZSBvZiB0aGUgSGF6ZWxjYXN0IHJlc291cmNlIHRoYXQgdGhpcyByZXNvdXJjZSBpcyBjcmVhdGVkIGZvci4iLCJtaW5MZW5ndGgiOjEsInR5cGUiOiJzdHJpbmcifSwibWF4U2l6ZSI6eyJkZWZhdWx0IjowLCJkZXNjcmlwdGlvbiI6Ik1heCBzaXplIG9mIHRoZSBxdWV1ZS4iLCJmb3JtYXQiOiJpbnQzMiIsIm1pbmltdW0iOjAsInR5cGUiOiJpbnRlZ2VyIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBkYXRhIHN0cnVjdHVyZSBjb25maWcgdG8gYmUgY3JlYXRlZC4gSWYgZW1wdHksIENSIG5hbWUgd2lsbCBiZSB1c2VkLiBJdCBjYW5ub3QgYmUgdXBkYXRlZCBhZnRlciB0aGUgY29uZmlnIGlzIGNyZWF0ZWQgc3VjY2Vzc2Z1bGx5LiIsInR5cGUiOiJzdHJpbmcifSwicHJpb3JpdHlDb21wYXJhdG9yQ2xhc3NOYW1lIjp7ImRlc2NyaXB0aW9uIjoiVGhlIG5hbWUgb2YgdGhlIGNvbXBhcmF0b3IgY2xhc3MuIElmIHRoZSBjbGFzcyBuYW1lIGlzIHByb3ZpZGVkLCB0aGUgUXVldWUgYmVjb21lcyBQcmlvcml0eSBRdWV1ZS4gWW91IGNhbiBsZWFybiBtb3JlIGF0IGh0dHBzOi8vZG9jcy5oYXplbGNhc3QuY29tL2hhemVsY2FzdC9sYXRlc3QvZGF0YS1zdHJ1Y3R1cmVzL3ByaW9yaXR5LXF1ZXVlLiIsInR5cGUiOiJzdHJpbmcifSwidXNlckNvZGVOYW1lc3BhY2UiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBVc2VyIENvZGUgTmFtZXNwYWNlIGFwcGxpZWQgdG8gdGhpcyBpbnN0YW5jZSIsIm1pbkxlbmd0aCI6MSwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIl0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiUXVldWVTdGF0dXMgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgUXVldWUiLCJwcm9wZXJ0aWVzIjp7Im1lbWJlclN0YXR1c2VzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7ImVudW0iOlsiU3VjY2VzcyIsIkZhaWxlZCIsIlBlbmRpbmciLCJQZXJzaXN0aW5nIiwiVGVybWluYXRpbmciXSwidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6IkhvbGRzIHN0YXR1cyBvZiBkYXRhIHN0cnVjdHVyZSBmb3IgZWFjaCBIYXplbGNhc3QgbWVtYmVyIiwidHlwZSI6Im9iamVjdCJ9LCJtZXNzYWdlIjp7ImRlc2NyaXB0aW9uIjoiTWVzc2FnZSBleHBsYWluaW5nIHRoZSBjdXJyZW50IHN0YXRlIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0ZSI6eyJkZXNjcmlwdGlvbiI6IlN0YXRlIG9mIHRoZSBkYXRhIHN0cnVjdHVyZSIsImVudW0iOlsiU3VjY2VzcyIsIkZhaWxlZCIsIlBlbmRpbmciLCJQZXJzaXN0aW5nIiwiVGVybWluYXRpbmciXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsic3BlYyJdLCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfSwic3RhdHVzIjp7ImFjY2VwdGVkTmFtZXMiOnsia2luZCI6IiIsInBsdXJhbCI6IiJ9LCJjb25kaXRpb25zIjpudWxsLCJzdG9yZWRWZXJzaW9ucyI6bnVsbH19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEzLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJyZXBsaWNhdGVkbWFwcy5oYXplbGNhc3QuY29tIn0sInNwZWMiOnsiZ3JvdXAiOiJoYXplbGNhc3QuY29tIiwibmFtZXMiOnsia2luZCI6IlJlcGxpY2F0ZWRNYXAiLCJsaXN0S2luZCI6IlJlcGxpY2F0ZWRNYXBMaXN0IiwicGx1cmFsIjoicmVwbGljYXRlZG1hcHMiLCJzaG9ydE5hbWVzIjpbInJtYXAiXSwic2luZ3VsYXIiOiJyZXBsaWNhdGVkbWFwIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJhZGRpdGlvbmFsUHJpbnRlckNvbHVtbnMiOlt7ImRlc2NyaXB0aW9uIjoiQ3VycmVudCBzdGF0ZSBvZiB0aGUgUmVwbGljYXRlZE1hcCBDb25maWciLCJqc29uUGF0aCI6Ii5zdGF0dXMuc3RhdGUiLCJuYW1lIjoiU3RhdHVzIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBIYXplbGNhc3QgcmVzb3VyY2UgdGhhdCB0aGlzIHJlc291cmNlIGlzIGNyZWF0ZWQgZm9yIiwianNvblBhdGgiOiIuc3BlYy5oYXplbGNhc3RSZXNvdXJjZU5hbWUiLCJuYW1lIjoiSGF6ZWxjYXN0LVJlc291cmNlIiwicHJpb3JpdHkiOjEsInR5cGUiOiJzdHJpbmcifSx7ImRlc2NyaXB0aW9uIjoiTWVzc2FnZSBmb3IgdGhlIGN1cnJlbnQgUmVwbGljYXRlZE1hcCBDb25maWciLCJqc29uUGF0aCI6Ii5zdGF0dXMubWVzc2FnZSIsIm5hbWUiOiJNZXNzYWdlIiwicHJpb3JpdHkiOjEsInR5cGUiOiJzdHJpbmcifV0sIm5hbWUiOiJ2MWFscGhhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJSZXBsaWNhdGVkTWFwIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSByZXBsaWNhdGVkbWFwcyBBUEkiLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuIFNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZCBtYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy4gU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uIENhbm5vdCBiZSB1cGRhdGVkLiBJbiBDYW1lbENhc2UuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IlJlcGxpY2F0ZWRNYXBTcGVjIGRlZmluZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgUmVwbGljYXRlZE1hcCIsInByb3BlcnRpZXMiOnsiYXN5bmNGaWxsdXAiOnsiZGVmYXVsdCI6dHJ1ZSwiZGVzY3JpcHRpb24iOiJBc3luY0ZpbGx1cCBzcGVjaWZpZXMgd2hldGhlciB0aGUgUmVwbGljYXRlZE1hcCBpcyBhdmFpbGFibGUgZm9yIHJlYWRzIGJlZm9yZSB0aGUgaW5pdGlhbCByZXBsaWNhdGlvbiBpcyBjb21wbGV0ZWQiLCJ0eXBlIjoiYm9vbGVhbiJ9LCJoYXplbGNhc3RSZXNvdXJjZU5hbWUiOnsiZGVzY3JpcHRpb24iOiJIYXplbGNhc3RSZXNvdXJjZU5hbWUgZGVmaW5lcyB0aGUgbmFtZSBvZiB0aGUgSGF6ZWxjYXN0IHJlc291cmNlLiIsIm1pbkxlbmd0aCI6MSwidHlwZSI6InN0cmluZyJ9LCJpbk1lbW9yeUZvcm1hdCI6eyJkZWZhdWx0IjoiT0JKRUNUIiwiZGVzY3JpcHRpb24iOiJJbk1lbW9yeUZvcm1hdCBzcGVjaWZpZXMgaW4gd2hpY2ggZm9ybWF0IGRhdGEgd2lsbCBiZSBzdG9yZWQgaW4gdGhlIFJlcGxpY2F0ZWRNYXAiLCJlbnVtIjpbIkJJTkFSWSIsIk9CSkVDVCJdLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBSZXBsaWNhdGVkTWFwIGNvbmZpZyB0byBiZSBjcmVhdGVkLiBJZiBlbXB0eSwgQ1IgbmFtZSB3aWxsIGJlIHVzZWQuIiwidHlwZSI6InN0cmluZyJ9LCJ1c2VyQ29kZU5hbWVzcGFjZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIFVzZXIgQ29kZSBOYW1lc3BhY2UgYXBwbGllZCB0byB0aGlzIGluc3RhbmNlIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJoYXplbGNhc3RSZXNvdXJjZU5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJSZXBsaWNhdGVkTWFwU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIFJlcGxpY2F0ZWRNYXAiLCJwcm9wZXJ0aWVzIjp7Im1lbWJlclN0YXR1c2VzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7ImVudW0iOlsiU3VjY2VzcyIsIkZhaWxlZCIsIlBlbmRpbmciLCJQZXJzaXN0aW5nIiwiVGVybWluYXRpbmciXSwidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6IkhvbGRzIHN0YXR1cyBvZiBkYXRhIHN0cnVjdHVyZSBmb3IgZWFjaCBIYXplbGNhc3QgbWVtYmVyIiwidHlwZSI6Im9iamVjdCJ9LCJtZXNzYWdlIjp7ImRlc2NyaXB0aW9uIjoiTWVzc2FnZSBleHBsYWluaW5nIHRoZSBjdXJyZW50IHN0YXRlIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0ZSI6eyJkZXNjcmlwdGlvbiI6IlN0YXRlIG9mIHRoZSBkYXRhIHN0cnVjdHVyZSIsImVudW0iOlsiU3VjY2VzcyIsIkZhaWxlZCIsIlBlbmRpbmciLCJQZXJzaXN0aW5nIiwiVGVybWluYXRpbmciXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsic3BlYyJdLCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfSwic3RhdHVzIjp7ImFjY2VwdGVkTmFtZXMiOnsia2luZCI6IiIsInBsdXJhbCI6IiJ9LCJjb25kaXRpb25zIjpudWxsLCJzdG9yZWRWZXJzaW9ucyI6bnVsbH19
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwLmt1YmVybmV0ZXMuaW8vY29tcG9uZW50Ijoid2ViaG9vayIsImFwcC5rdWJlcm5ldGVzLmlvL2NyZWF0ZWQtYnkiOiJoYXplbGNhc3QtcGxhdGZvcm0tb3BlcmF0b3IiLCJhcHAua3ViZXJuZXRlcy5pby9pbnN0YW5jZSI6IndlYmhvb2stc2VydmljZSIsImFwcC5rdWJlcm5ldGVzLmlvL21hbmFnZWQtYnkiOiJrdXN0b21pemUiLCJhcHAua3ViZXJuZXRlcy5pby9uYW1lIjoic2VydmljZSIsImFwcC5rdWJlcm5ldGVzLmlvL3BhcnQtb2YiOiJoYXplbGNhc3QtcGxhdGZvcm0tb3BlcmF0b3IifSwibmFtZSI6ImhhemVsY2FzdC1wbGF0Zm9ybS13ZWJob29rLXNlcnZpY2UifSwic3BlYyI6eyJwb3J0cyI6W3sicG9ydCI6NDQzLCJwcm90b2NvbCI6IlRDUCIsInRhcmdldFBvcnQiOjk0NDN9XSwic2VsZWN0b3IiOnsiY29udHJvbC1wbGFuZSI6ImNvbnRyb2xsZXItbWFuYWdlciJ9fSwic3RhdHVzIjp7ImxvYWRCYWxhbmNlciI6e319fQ==
relatedImages:
- image: docker.io/hazelcast/hazelcast-platform-operator@sha256:99005afda5c71ceeac200928dfed4ea35480f871053101e3aeaa44005e3fda14
  name: manager
- image: quay.io/community-operator-pipeline-prod/hazelcast-platform-operator@sha256:3b749b2ddf0e8b375ae15585c9cf78e6e6afd44c7e26dea041b2bc7216ea8878
  name: ""
schema: olm.bundle
---
image: quay.io/openshift-community-operators/hazelcast-platform-operator@sha256:0eea93b09ae2ee36fbfc71974af6deb62f786af68c093c7c0ac36d980f2a2b98
name: hazelcast-platform-operator.v5.2.0
package: hazelcast-platform-operator
properties:
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: Hazelcast
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: HotBackup
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: ManagementCenter
    version: v1alpha1
- type: olm.package
  value:
    packageName: hazelcast-platform-operator
    version: 5.2.0
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjQuMSJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibmFtZSI6ImhvdGJhY2t1cHMuaGF6ZWxjYXN0LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiaGF6ZWxjYXN0LmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJIb3RCYWNrdXAiLCJsaXN0S2luZCI6IkhvdEJhY2t1cExpc3QiLCJwbHVyYWwiOiJob3RiYWNrdXBzIiwic2luZ3VsYXIiOiJob3RiYWNrdXAifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7Im5hbWUiOiJ2MWFscGhhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJIb3RCYWNrdXAgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIGhvdCBiYWNrdXAgQVBJIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJIb3RCYWNrdXBTcGVjIGRlZmluZXMgdGhlIFNwZWMgb2YgSG90QmFja3VwIiwicHJvcGVydGllcyI6eyJoYXplbGNhc3RSZXNvdXJjZU5hbWUiOnsiZGVzY3JpcHRpb24iOiJIYXplbGNhc3RSZXNvdXJjZU5hbWUgZGVmaW5lcyB0aGUgbmFtZSBvZiB0aGUgSGF6ZWxjYXN0IHJlc291cmNlIiwidHlwZSI6InN0cmluZyJ9LCJzY2hlZHVsZSI6eyJkZXNjcmlwdGlvbiI6IlNjaGVkdWxlIGNvbnRhaW5zIGEgY3JvbnRhYi1saWtlIGV4cHJlc3Npb24gdGhhdCBkZWZpbmVzIHRoZSBzY2hlZHVsZSBpbiB3aGljaCBIb3RCYWNrdXAgd2lsbCBiZSBzdGFydGVkLiBJZiB0aGUgU2NoZWR1bGUgaXMgZW1wdHkgdGhlIEhvdEJhY2t1cCB3aWxsIHN0YXJ0IG9ubHkgb25jZSB3aGVuIGFwcGxpZWQuIC0tLSBTZXZlcmFsIHByZS1kZWZpbmVkIHNjaGVkdWxlcyBpbiBwbGFjZSBvZiBhIGNyb24gZXhwcmVzc2lvbiBjYW4gYmUgdXNlZC4gXHRFbnRyeSAgICAgICAgICAgICAgICAgIHwgRGVzY3JpcHRpb24gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgRXF1aXZhbGVudCBUbyBcdC0tLS0tICAgICAgICAgICAgICAgICAgfCAtLS0tLS0tLS0tLSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAtLS0tLS0tLS0tLS0tIFx0QHllYXJseSAob3IgQGFubnVhbGx5KSB8IFJ1biBvbmNlIGEgeWVhciwgbWlkbmlnaHQsIEphbi4gMXN0ICAgICAgICB8IDAgMCAxIDEgKiBcdEBtb250aGx5ICAgICAgICAgICAgICAgfCBSdW4gb25jZSBhIG1vbnRoLCBtaWRuaWdodCwgZmlyc3Qgb2YgbW9udGggfCAwIDAgMSAqICogXHRAd2Vla2x5ICAgICAgICAgICAgICAgIHwgUnVuIG9uY2UgYSB3ZWVrLCBtaWRuaWdodCBiZXR3ZWVuIFNhdC9TdW4gIHwgMCAwICogKiAwIFx0QGRhaWx5IChvciBAbWlkbmlnaHQpICB8IFJ1biBvbmNlIGEgZGF5LCBtaWRuaWdodCAgICAgICAgICAgICAgICAgICB8IDAgMCAqICogKiBcdEBob3VybHkgICAgICAgICAgICAgICAgfCBSdW4gb25jZSBhbiBob3VyLCBiZWdpbm5pbmcgb2YgaG91ciAgICAgICAgfCAwICogKiAqICoiLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJoYXplbGNhc3RSZXNvdXJjZU5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJIb3RCYWNrdXBTdGF0dXMgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgSG90QmFja3VwIiwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsic3BlYyJdLCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfSwic3RhdHVzIjp7ImFjY2VwdGVkTmFtZXMiOnsia2luZCI6IiIsInBsdXJhbCI6IiJ9LCJjb25kaXRpb25zIjpbXSwic3RvcmVkVmVyc2lvbnMiOltdfX0=
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: hazelcast/hazelcast-platform-operator:5.2
  name: ""
- image: quay.io/openshift-community-operators/hazelcast-platform-operator@sha256:0eea93b09ae2ee36fbfc71974af6deb62f786af68c093c7c0ac36d980f2a2b98
  name: ""
schema: olm.bundle
---
image: quay.io/openshift-community-operators/hazelcast-platform-operator@sha256:fc5348ce96fea63bb378ad5a072fe528826bf475ae3cd2a66341938afb587d7f
name: hazelcast-platform-operator.v5.3.0
package: hazelcast-platform-operator
properties:
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: Hazelcast
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: HotBackup
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: ManagementCenter
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: Map
    version: v1alpha1
- type: olm.package
  value:
    packageName: hazelcast-platform-operator
    version: 5.3.0
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjQuMSJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibmFtZSI6Im1hcHMuaGF6ZWxjYXN0LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiaGF6ZWxjYXN0LmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJNYXAiLCJsaXN0S2luZCI6Ik1hcExpc3QiLCJwbHVyYWwiOiJtYXBzIiwic2luZ3VsYXIiOiJtYXAifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3siZGVzY3JpcHRpb24iOiJDdXJyZW50IHN0YXRlIG9mIHRoZSBNYXAgQ29uZmlnIiwianNvblBhdGgiOiIuc3RhdHVzLnN0YXRlIiwibmFtZSI6IlN0YXR1cyIsInR5cGUiOiJzdHJpbmcifSx7ImRlc2NyaXB0aW9uIjoiTWVzc2FnZSBmb3IgdGhlIGN1cnJlbnQgTWFwIENvbmZpZyIsImpzb25QYXRoIjoiLnN0YXR1cy5tZXNzYWdlIiwibmFtZSI6Ik1lc3NhZ2UiLCJwcmlvcml0eSI6MSwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6Ik1hcCBpcyB0aGUgU2NoZW1hIGZvciB0aGUgbWFwcyBBUEkiLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuIFNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZCBtYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy4gU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uIENhbm5vdCBiZSB1cGRhdGVkLiBJbiBDYW1lbENhc2UuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6Ik1hcFNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBIYXplbGNhc3QgTWFwIENvbmZpZyIsInByb3BlcnRpZXMiOnsiYmFja3VwQ291bnQiOnsiZGVmYXVsdCI6MSwiZGVzY3JpcHRpb24iOiJDb3VudCBvZiBzeW5jaHJvbm91cyBiYWNrdXBzLiBJdCBjYW5ub3QgYmUgdXBkYXRlZCBhZnRlciBtYXAgY29uZmlnIGlzIGNyZWF0ZWQgc3VjY2Vzc2Z1bGx5LiIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifSwiZXZpY3Rpb24iOnsiZGVmYXVsdCI6eyJtYXhTaXplIjowfSwiZGVzY3JpcHRpb24iOiJDb25maWd1cmF0aW9uIGZvciByZW1vdmluZyBkYXRhIGZyb20gdGhlIG1hcCB3aGVuIGl0IHJlYWNoZXMgaXRzIG1heCBzaXplLiBJdCBjYW4gYmUgdXBkYXRlZC4iLCJwcm9wZXJ0aWVzIjp7ImV2aWN0aW9uUG9saWN5Ijp7ImRlZmF1bHQiOiJOT05FIiwiZGVzY3JpcHRpb24iOiJFdmljdGlvbiBwb2xpY3kgdG8gYmUgYXBwbGllZCB3aGVuIG1hcCByZWFjaGVzIGl0cyBtYXggc2l6ZSBhY2NvcmRpbmcgdG8gdGhlIG1heCBzaXplIHBvbGljeS4iLCJlbnVtIjpbIk5PTkUiLCJMUlUiLCJMRlUiLCJSQU5ET00iXSwidHlwZSI6InN0cmluZyJ9LCJtYXhTaXplIjp7ImRlZmF1bHQiOjAsImRlc2NyaXB0aW9uIjoiTWF4IHNpemUgb2YgdGhlIG1hcC4iLCJmb3JtYXQiOiJpbnQzMiIsInR5cGUiOiJpbnRlZ2VyIn0sIm1heFNpemVQb2xpY3kiOnsiZGVmYXVsdCI6IlBFUl9OT0RFIiwiZGVzY3JpcHRpb24iOiJQb2xpY3kgZm9yIGRlY2lkaW5nIGlmIHRoZSBtYXhTaXplIGlzIHJlYWNoZWQuIiwiZW51bSI6WyJQRVJfTk9ERSIsIlBFUl9QQVJUSVRJT04iLCJVU0VEX0hFQVBfU0laRSIsIlVTRURfSEVBUF9QRVJDRU5UQUdFIiwiRlJFRV9IRUFQX1NJWkUiLCJGUkVFX0hFQVBfUEVSQ0VOVEFHRSIsIlVTRURfTkFUSVZFX01FTU9SWV9TSVpFIiwiVVNFRF9OQVRJVkVfTUVNT1JZX1BFUkNFTlRBR0UiLCJGUkVFX05BVElWRV9NRU1PUllfU0laRSIsIkZSRUVfTkFUSVZFX01FTU9SWV9QRVJDRU5UQUdFIl0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwiaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIjp7ImRlc2NyaXB0aW9uIjoiSGF6ZWxjYXN0UmVzb3VyY2VOYW1lIGRlZmluZXMgdGhlIG5hbWUgb2YgdGhlIEhhemVsY2FzdCByZXNvdXJjZS4gSXQgY2Fubm90IGJlIHVwZGF0ZWQgYWZ0ZXIgbWFwIGNvbmZpZyBpcyBjcmVhdGVkIHN1Y2Nlc3NmdWxseS4iLCJtaW5MZW5ndGgiOjEsInR5cGUiOiJzdHJpbmcifSwiaW5kZXhlcyI6eyJkZXNjcmlwdGlvbiI6IkluZGV4ZXMgdG8gYmUgY3JlYXRlZCBmb3IgdGhlIG1hcCBkYXRhLiBZb3UgY2FuIGxlYXJuIG1vcmUgYXQgaHR0cHM6Ly9kb2NzLmhhemVsY2FzdC5jb20vaGF6ZWxjYXN0L2xhdGVzdC9xdWVyeS9pbmRleGluZy1tYXBzLiBJdCBjYW5ub3QgYmUgdXBkYXRlZCBhZnRlciBtYXAgY29uZmlnIGlzIGNyZWF0ZWQgc3VjY2Vzc2Z1bGx5LiIsIml0ZW1zIjp7InByb3BlcnRpZXMiOnsiYXR0cmlidXRlcyI6eyJkZXNjcmlwdGlvbiI6IkF0dHJpYnV0ZXMgb2YgdGhlIGluZGV4LiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In0sImJpdE1hcEluZGV4T3B0aW9ucyI6eyJkZXNjcmlwdGlvbiI6Ik9wdGlvbnMgZm9yIFwiQklUTUFQXCIgaW5kZXggdHlwZS4iLCJwcm9wZXJ0aWVzIjp7InVuaXF1ZUtleSI6eyJ0eXBlIjoic3RyaW5nIn0sInVuaXF1ZUtleVRyYW5zaXRpb24iOnsiZW51bSI6WyJPQkpFQ1QiLCJMT05HIiwiUkFXIl0sInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbInVuaXF1ZUtleSIsInVuaXF1ZUtleVRyYW5zaXRpb24iXSwidHlwZSI6Im9iamVjdCJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgaW5kZXggY29uZmlnLiIsInR5cGUiOiJzdHJpbmcifSwidHlwZSI6eyJkZXNjcmlwdGlvbiI6IlR5cGUgb2YgdGhlIGluZGV4LiIsImVudW0iOlsiU09SVEVEIiwiSEFTSCIsIkJJVE1BUCJdLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJhdHRyaWJ1dGVzIiwidHlwZSJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJtYXhJZGxlU2Vjb25kcyI6eyJkZWZhdWx0IjowLCJkZXNjcmlwdGlvbiI6Ik1heGltdW0gdGltZSBpbiBzZWNvbmRzIGZvciBlYWNoIGVudHJ5IHRvIHN0YXkgaWRsZSBpbiB0aGUgbWFwLiBFbnRyaWVzIHRoYXQgYXJlIGlkbGUgZm9yIG1vcmUgdGhhbiB0aGlzIHRpbWUgYXJlIGV2aWN0ZWQgYXV0b21hdGljYWxseS4gSXQgY2FuIGJlIHVwZGF0ZWQuIiwiZm9ybWF0IjoiaW50MzIiLCJ0eXBlIjoiaW50ZWdlciJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgbWFwIGNvbmZpZyB0byBiZSBjcmVhdGVkLiBJZiBlbXB0eSwgQ1IgbmFtZSB3aWxsIGJlIHVzZWQuIEl0IGNhbm5vdCBiZSB1cGRhdGVkIGFmdGVyIG1hcCBjb25maWcgaXMgY3JlYXRlZCBzdWNjZXNzZnVsbHkuIiwidHlwZSI6InN0cmluZyJ9LCJwZXJzaXN0ZW5jZUVuYWJsZWQiOnsiZGVmYXVsdCI6ZmFsc2UsImRlc2NyaXB0aW9uIjoiV2hlbiBlbmFibGVkLCBtYXAgZGF0YSB3aWxsIGJlIHBlcnNpc3RlZC4gSXQgY2Fubm90IGJlIHVwZGF0ZWQgYWZ0ZXIgbWFwIGNvbmZpZyBpcyBjcmVhdGVkIHN1Y2Nlc3NmdWxseS4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJ0aW1lVG9MaXZlU2Vjb25kcyI6eyJkZWZhdWx0IjowLCJkZXNjcmlwdGlvbiI6Ik1heGltdW0gdGltZSBpbiBzZWNvbmRzIGZvciBlYWNoIGVudHJ5IHRvIHN0YXkgaW4gdGhlIG1hcC4gSWYgaXQgaXMgbm90IDAsIGVudHJpZXMgdGhhdCBhcmUgb2xkZXIgdGhhbiB0aGlzIHRpbWUgYW5kIG5vdCB1cGRhdGVkIGZvciB0aGlzIHRpbWUgYXJlIGV2aWN0ZWQgYXV0b21hdGljYWxseS4gSXQgY2FuIGJlIHVwZGF0ZWQuIiwiZm9ybWF0IjoiaW50MzIiLCJ0eXBlIjoiaW50ZWdlciJ9fSwicmVxdWlyZWQiOlsiaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIl0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiTWFwU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIE1hcCIsInByb3BlcnRpZXMiOnsibWVtYmVyU3RhdHVzZXMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoib2JqZWN0In0sIm1lc3NhZ2UiOnsidHlwZSI6InN0cmluZyJ9LCJzdGF0ZSI6eyJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJzcGVjIl0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOltdLCJzdG9yZWRWZXJzaW9ucyI6W119fQ==
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjQuMSJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibmFtZSI6ImhhemVsY2FzdHMuaGF6ZWxjYXN0LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiaGF6ZWxjYXN0LmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJIYXplbGNhc3QiLCJsaXN0S2luZCI6IkhhemVsY2FzdExpc3QiLCJwbHVyYWwiOiJoYXplbGNhc3RzIiwic2luZ3VsYXIiOiJoYXplbGNhc3QifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3siZGVzY3JpcHRpb24iOiJDdXJyZW50IHN0YXRlIG9mIHRoZSBIYXplbGNhc3QgZGVwbG95bWVudCIsImpzb25QYXRoIjoiLnN0YXR1cy5waGFzZSIsIm5hbWUiOiJTdGF0dXMiLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6IkN1cnJlbnQgbnVtYmVycyBvZiByZWFkeSBIYXplbGNhc3QgbWVtYmVycyIsImpzb25QYXRoIjoiLnN0YXR1cy5oYXplbGNhc3RDbHVzdGVyU3RhdHVzLnJlYWR5TWVtYmVycyIsIm5hbWUiOiJNZW1iZXJzIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJFeHRlcm5hbCBhZGRyZXNzZXMgb2YgdGhlIEhhemVsY2FzdCBjbHVzdGVyIiwianNvblBhdGgiOiIuc3RhdHVzLmV4dGVybmFsQWRkcmVzc2VzIiwibmFtZSI6IkV4dGVybmFsLUFkZHJlc3NlcyIsInR5cGUiOiJzdHJpbmcifV0sIm5hbWUiOiJ2MWFscGhhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJIYXplbGNhc3QgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIGhhemVsY2FzdHMgQVBJIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVmYXVsdCI6eyJyZXBvc2l0b3J5IjoiZG9ja2VyLmlvL2hhemVsY2FzdC9oYXplbGNhc3QifSwiZGVzY3JpcHRpb24iOiJIYXplbGNhc3RTcGVjIGRlZmluZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgSGF6ZWxjYXN0IiwicHJvcGVydGllcyI6eyJhZ2VudCI6eyJkZWZhdWx0Ijp7InJlcG9zaXRvcnkiOiJkb2NrZXIuaW8vaGF6ZWxjYXN0L3BsYXRmb3JtLW9wZXJhdG9yLWFnZW50IiwidmVyc2lvbiI6IjAuMS4wIn0sImRlc2NyaXB0aW9uIjoiQlx1MDAyNlIgQWdlbnQgY29uZmlndXJhdGlvbnMiLCJwcm9wZXJ0aWVzIjp7InJlcG9zaXRvcnkiOnsiZGVmYXVsdCI6ImRvY2tlci5pby9oYXplbGNhc3QvcGxhdGZvcm0tb3BlcmF0b3ItYWdlbnQiLCJkZXNjcmlwdGlvbiI6IlJlcG9zaXRvcnkgdG8gcHVsbCBIYXplbGNhc3QgUGxhdGZvcm0gT3BlcmF0b3IgQWdlbnQoaHR0cHM6Ly9naXRodWIuY29tL2hhemVsY2FzdC9wbGF0Zm9ybS1vcGVyYXRvci1hZ2VudCkiLCJ0eXBlIjoic3RyaW5nIn0sInZlcnNpb24iOnsiZGVmYXVsdCI6IjAuMS4wIiwiZGVzY3JpcHRpb24iOiJWZXJzaW9uIG9mIEhhemVsY2FzdCBQbGF0Zm9ybSBPcGVyYXRvciBBZ2VudC4iLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sImNsdXN0ZXJOYW1lIjp7ImRlZmF1bHQiOiJkZXYiLCJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIEhhemVsY2FzdCBjbHVzdGVyLiIsInR5cGUiOiJzdHJpbmcifSwiY2x1c3RlclNpemUiOnsiZGVmYXVsdCI6MywiZGVzY3JpcHRpb24iOiJOdW1iZXIgb2YgSGF6ZWxjYXN0IG1lbWJlcnMgaW4gdGhlIGNsdXN0ZXIuIiwiZm9ybWF0IjoiaW50MzIiLCJtaW5pbXVtIjowLCJ0eXBlIjoiaW50ZWdlciJ9LCJleHBvc2VFeHRlcm5hbGx5Ijp7ImRlc2NyaXB0aW9uIjoiQ29uZmlndXJhdGlvbiB0byBleHBvc2UgSGF6ZWxjYXN0IGNsdXN0ZXIgdG8gZXh0ZXJuYWwgY2xpZW50cy4iLCJwcm9wZXJ0aWVzIjp7ImRpc2NvdmVyeVNlcnZpY2VUeXBlIjp7ImRlZmF1bHQiOiJMb2FkQmFsYW5jZXIiLCJkZXNjcmlwdGlvbiI6IlR5cGUgb2YgdGhlIHNlcnZpY2UgdXNlZCB0byBkaXNjb3ZlciBIYXplbGNhc3QgY2x1c3Rlci4iLCJ0eXBlIjoic3RyaW5nIn0sIm1lbWJlckFjY2VzcyI6eyJkZXNjcmlwdGlvbiI6IkhvdyBlYWNoIG1lbWJlciBpcyBhY2Nlc3NlZCBmcm9tIHRoZSBleHRlcm5hbCBjbGllbnQuIE9ubHkgYXZhaWxhYmxlIGZvciBcIlNtYXJ0XCIgY2xpZW50IGFuZCB2YWxpZCB2YWx1ZXMgYXJlOiAtIFwiTm9kZVBvcnRFeHRlcm5hbElQXCIgKGRlZmF1bHQpOiBlYWNoIG1lbWJlciBpcyBhY2Nlc3NlZCBieSB0aGUgTm9kZVBvcnQgc2VydmljZSBhbmQgdGhlIG5vZGUgZXh0ZXJuYWwgSVAvaG9zdG5hbWUgLSBcIk5vZGVQb3J0Tm9kZU5hbWVcIjogZWFjaCBtZW1iZXIgaXMgYWNjZXNzZWQgYnkgdGhlIE5vZGVQb3J0IHNlcnZpY2UgYW5kIHRoZSBub2RlIG5hbWUgLSBcIkxvYWRCYWxhbmNlclwiOiBlYWNoIG1lbWJlciBpcyBhY2Nlc3NlZCBieSB0aGUgTG9hZEJhbGFuY2VyIHNlcnZpY2UgZXh0ZXJuYWwgYWRkcmVzcyIsImVudW0iOlsiTm9kZVBvcnRFeHRlcm5hbElQIiwiTm9kZVBvcnROb2RlTmFtZSIsIkxvYWRCYWxhbmNlciJdLCJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOnsiZGVmYXVsdCI6IlNtYXJ0IiwiZGVzY3JpcHRpb24iOiJTcGVjaWZpZXMgaG93IG1lbWJlcnMgYXJlIGV4cG9zZWQuIFZhbGlkIHZhbHVlcyBhcmU6IC0gXCJTbWFydFwiIChkZWZhdWx0KTogZWFjaCBtZW1iZXIgcG9kIGlzIGV4cG9zZWQgd2l0aCBhIHNlcGFyYXRlIGV4dGVybmFsIGFkZHJlc3MgLSBcIlVuaXNvY2tldFwiOiBhbGwgbWVtYmVyIHBvZHMgYXJlIGV4cG9zZWQgd2l0aCBvbmUgZXh0ZXJuYWwgYWRkcmVzcyIsImVudW0iOlsiU21hcnQiLCJVbmlzb2NrZXQiXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJpbWFnZVB1bGxQb2xpY3kiOnsiZGVmYXVsdCI6IklmTm90UHJlc2VudCIsImRlc2NyaXB0aW9uIjoiUHVsbCBwb2xpY3kgZm9yIHRoZSBIYXplbGNhc3QgUGxhdGZvcm0gaW1hZ2UiLCJ0eXBlIjoic3RyaW5nIn0sImltYWdlUHVsbFNlY3JldHMiOnsiZGVzY3JpcHRpb24iOiJJbWFnZSBwdWxsIHNlY3JldHMgZm9yIHRoZSBIYXplbGNhc3QgUGxhdGZvcm0gaW1hZ2UiLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkxvY2FsT2JqZWN0UmVmZXJlbmNlIGNvbnRhaW5zIGVub3VnaCBpbmZvcm1hdGlvbiB0byBsZXQgeW91IGxvY2F0ZSB0aGUgcmVmZXJlbmNlZCBvYmplY3QgaW5zaWRlIHRoZSBzYW1lIG5hbWVzcGFjZS4iLCJwcm9wZXJ0aWVzIjp7Im5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSByZWZlcmVudC4gTW9yZSBpbmZvOiBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9vdmVydmlldy93b3JraW5nLXdpdGgtb2JqZWN0cy9uYW1lcy8jbmFtZXMgVE9ETzogQWRkIG90aGVyIHVzZWZ1bCBmaWVsZHMuIGFwaVZlcnNpb24sIGtpbmQsIHVpZD8iLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJsaWNlbnNlS2V5U2VjcmV0Ijp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgc2VjcmV0IHdpdGggSGF6ZWxjYXN0IEVudGVycHJpc2UgTGljZW5zZSBLZXkuIiwidHlwZSI6InN0cmluZyJ9LCJwZXJzaXN0ZW5jZSI6eyJkZXNjcmlwdGlvbiI6IlBlcnNpc3RlbmNlIGNvbmZpZ3VyYXRpb24iLCJwcm9wZXJ0aWVzIjp7ImF1dG9Gb3JjZVN0YXJ0Ijp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6IkF1dG9Gb3JjZVN0YXJ0IGVuYWJsZXMgdGhlIGRldGVjdGlvbiBvZiBjb25zdGFudGx5IGZhaWxpbmcgY2x1c3RlciBhbmQgdHJpZ2dlciB0aGUgRm9yY2UgU3RhcnQgYWN0aW9uLiIsInR5cGUiOiJib29sZWFuIn0sImJhY2t1cFR5cGUiOnsiZGVmYXVsdCI6IkxvY2FsIiwiZGVzY3JpcHRpb24iOiJCYWNrdXBUeXBlIHJlcHJlc2VudHMgdGhlIHN0b3JhZ2Ugb3B0aW9ucyBmb3IgdGhlIEhvdEJhY2t1cCIsImVudW0iOlsiRXh0ZXJuYWwiLCJMb2NhbCJdLCJ0eXBlIjoic3RyaW5nIn0sImJhc2VEaXIiOnsiZGVzY3JpcHRpb24iOiJQZXJzaXN0ZW5jZSBiYXNlIGRpcmVjdG9yeS4iLCJ0eXBlIjoic3RyaW5nIn0sImNsdXN0ZXJEYXRhUmVjb3ZlcnlQb2xpY3kiOnsiZGVmYXVsdCI6IkZ1bGxSZWNvdmVyeU9ubHkiLCJkZXNjcmlwdGlvbiI6IkNvbmZpZ3VyYXRpb24gb2YgdGhlIGNsdXN0ZXIgcmVjb3Zlcnkgc3RyYXRlZ3kuIiwiZW51bSI6WyJGdWxsUmVjb3ZlcnlPbmx5IiwiUGFydGlhbFJlY292ZXJ5TW9zdFJlY2VudCIsIlBhcnRpYWxSZWNvdmVyeU1vc3RDb21wbGV0ZSJdLCJ0eXBlIjoic3RyaW5nIn0sImRhdGFSZWNvdmVyeVRpbWVvdXQiOnsiZGVzY3JpcHRpb24iOiJEYXRhUmVjb3ZlcnlUaW1lb3V0IGlzIHRpbWVvdXQgZm9yIGVhY2ggc3RlcCBvZiBkYXRhIHJlY292ZXJ5IGluIHNlY29uZHMuIE1heGltdW0gdGltZW91dCBpcyBlcXVhbCB0byBEYXRhUmVjb3ZlcnlUaW1lb3V0KjIgKGZvciBlYWNoIHN0ZXA6IHZhbGlkYXRpb24gYW5kIGRhdGEtbG9hZCkuIiwiZm9ybWF0IjoiaW50MzIiLCJ0eXBlIjoiaW50ZWdlciJ9LCJob3N0UGF0aCI6eyJkZXNjcmlwdGlvbiI6Ikhvc3QgUGF0aCBkaXJlY3RvcnkuIiwidHlwZSI6InN0cmluZyJ9LCJwdmMiOnsiZGVzY3JpcHRpb24iOiJDb25maWd1cmF0aW9uIG9mIFBlcnNpc3RlbmNlVm9sdW1lQ2xhaW0uIiwicHJvcGVydGllcyI6eyJhY2Nlc3NNb2RlcyI6eyJkZXNjcmlwdGlvbiI6IkFjY2Vzc01vZGVzIGNvbnRhaW5zIHRoZSBhY3R1YWwgYWNjZXNzIG1vZGVzIG9mIHRoZSB2b2x1bWUgYmFja2luZyB0aGUgUFZDIGhhcy4gTW9yZSBpbmZvOiBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9zdG9yYWdlL3BlcnNpc3RlbnQtdm9sdW1lcyNhY2Nlc3MtbW9kZXMtMSIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In0sInJlcXVlc3RTdG9yYWdlIjp7ImFueU9mIjpbeyJ0eXBlIjoiaW50ZWdlciJ9LHsidHlwZSI6InN0cmluZyJ9XSwiZGVzY3JpcHRpb24iOiJBIGRlc2NyaXB0aW9uIG9mIHRoZSBQVkMgcmVxdWVzdCBjYXBhY2l0eS4iLCJwYXR0ZXJuIjoiXihcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSgoW0tNR1RQRV1pKXxbbnVta01HVFBFXXwoW2VFXShcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSkpPyQiLCJ4LWt1YmVybmV0ZXMtaW50LW9yLXN0cmluZyI6dHJ1ZX0sInN0b3JhZ2VDbGFzc05hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIFN0b3JhZ2VDbGFzcyB3aGljaCB0aGlzIHBlcnNpc3RlbnQgdm9sdW1lIGJlbG9uZ3MgdG8uIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJyZXN0b3JlIjp7ImRlc2NyaXB0aW9uIjoiUmVzdG9yZSBjb25maWd1cmF0aW9uIiwicHJvcGVydGllcyI6eyJidWNrZXRVUkkiOnsiZGVzY3JpcHRpb24iOiJGdWxsIHBhdGggdG8gYmxvYiBzdG9yYWdlIGJ1Y2tldC4iLCJ0eXBlIjoic3RyaW5nIn0sInNlY3JldCI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIHNlY3JldCB3aXRoIGNyZWRlbnRpYWxzIGZvciBjbG91ZCBwcm92aWRlcnMuIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsiYmFzZURpciJdLCJ0eXBlIjoib2JqZWN0In0sInJlcG9zaXRvcnkiOnsiZGVmYXVsdCI6ImRvY2tlci5pby9oYXplbGNhc3QvaGF6ZWxjYXN0IiwiZGVzY3JpcHRpb24iOiJSZXBvc2l0b3J5IHRvIHB1bGwgdGhlIEhhemVsY2FzdCBQbGF0Zm9ybSBpbWFnZSBmcm9tLiIsInR5cGUiOiJzdHJpbmcifSwicmVzb3VyY2VzIjp7ImRlc2NyaXB0aW9uIjoiQ29tcHV0ZSBSZXNvdXJjZXMgcmVxdWlyZWQgYnkgdGhlIEhhemVsY2FzdCBjb250YWluZXIuIiwicHJvcGVydGllcyI6eyJsaW1pdHMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsiYW55T2YiOlt7InR5cGUiOiJpbnRlZ2VyIn0seyJ0eXBlIjoic3RyaW5nIn1dLCJwYXR0ZXJuIjoiXihcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSgoW0tNR1RQRV1pKXxbbnVta01HVFBFXXwoW2VFXShcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSkpPyQiLCJ4LWt1YmVybmV0ZXMtaW50LW9yLXN0cmluZyI6dHJ1ZX0sImRlc2NyaXB0aW9uIjoiTGltaXRzIGRlc2NyaWJlcyB0aGUgbWF4aW11bSBhbW91bnQgb2YgY29tcHV0ZSByZXNvdXJjZXMgYWxsb3dlZC4gTW9yZSBpbmZvOiBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9jb25maWd1cmF0aW9uL21hbmFnZS1jb21wdXRlLXJlc291cmNlcy1jb250YWluZXIvIiwidHlwZSI6Im9iamVjdCJ9LCJyZXF1ZXN0cyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJhbnlPZiI6W3sidHlwZSI6ImludGVnZXIifSx7InR5cGUiOiJzdHJpbmcifV0sInBhdHRlcm4iOiJeKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKChbS01HVFBFXWkpfFtudW1rTUdUUEVdfChbZUVdKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKSk/JCIsIngta3ViZXJuZXRlcy1pbnQtb3Itc3RyaW5nIjp0cnVlfSwiZGVzY3JpcHRpb24iOiJSZXF1ZXN0cyBkZXNjcmliZXMgdGhlIG1pbmltdW0gYW1vdW50IG9mIGNvbXB1dGUgcmVzb3VyY2VzIHJlcXVpcmVkLiBJZiBSZXF1ZXN0cyBpcyBvbWl0dGVkIGZvciBhIGNvbnRhaW5lciwgaXQgZGVmYXVsdHMgdG8gTGltaXRzIGlmIHRoYXQgaXMgZXhwbGljaXRseSBzcGVjaWZpZWQsIG90aGVyd2lzZSB0byBhbiBpbXBsZW1lbnRhdGlvbi1kZWZpbmVkIHZhbHVlLiBNb3JlIGluZm86IGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL2NvbmZpZ3VyYXRpb24vbWFuYWdlLWNvbXB1dGUtcmVzb3VyY2VzLWNvbnRhaW5lci8iLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In0sInNjaGVkdWxpbmciOnsiZGVzY3JpcHRpb24iOiJTY2hlZHVsaW5nIGRldGFpbHMiLCJwcm9wZXJ0aWVzIjp7ImFmZmluaXR5Ijp7ImRlc2NyaXB0aW9uIjoiQWZmaW5pdHkiLCJwcm9wZXJ0aWVzIjp7Im5vZGVBZmZpbml0eSI6eyJkZXNjcmlwdGlvbiI6IkRlc2NyaWJlcyBub2RlIGFmZmluaXR5IHNjaGVkdWxpbmcgcnVsZXMgZm9yIHRoZSBwb2QuIiwicHJvcGVydGllcyI6eyJwcmVmZXJyZWREdXJpbmdTY2hlZHVsaW5nSWdub3JlZER1cmluZ0V4ZWN1dGlvbiI6eyJkZXNjcmlwdGlvbiI6IlRoZSBzY2hlZHVsZXIgd2lsbCBwcmVmZXIgdG8gc2NoZWR1bGUgcG9kcyB0byBub2RlcyB0aGF0IHNhdGlzZnkgdGhlIGFmZmluaXR5IGV4cHJlc3Npb25zIHNwZWNpZmllZCBieSB0aGlzIGZpZWxkLCBidXQgaXQgbWF5IGNob29zZSBhIG5vZGUgdGhhdCB2aW9sYXRlcyBvbmUgb3IgbW9yZSBvZiB0aGUgZXhwcmVzc2lvbnMuIFRoZSBub2RlIHRoYXQgaXMgbW9zdCBwcmVmZXJyZWQgaXMgdGhlIG9uZSB3aXRoIHRoZSBncmVhdGVzdCBzdW0gb2Ygd2VpZ2h0cywgaS5lLiBmb3IgZWFjaCBub2RlIHRoYXQgbWVldHMgYWxsIG9mIHRoZSBzY2hlZHVsaW5nIHJlcXVpcmVtZW50cyAocmVzb3VyY2UgcmVxdWVzdCwgcmVxdWlyZWREdXJpbmdTY2hlZHVsaW5nIGFmZmluaXR5IGV4cHJlc3Npb25zLCBldGMuKSwgY29tcHV0ZSBhIHN1bSBieSBpdGVyYXRpbmcgdGhyb3VnaCB0aGUgZWxlbWVudHMgb2YgdGhpcyBmaWVsZCBhbmQgYWRkaW5nIFwid2VpZ2h0XCIgdG8gdGhlIHN1bSBpZiB0aGUgbm9kZSBtYXRjaGVzIHRoZSBjb3JyZXNwb25kaW5nIG1hdGNoRXhwcmVzc2lvbnM7IHRoZSBub2RlKHMpIHdpdGggdGhlIGhpZ2hlc3Qgc3VtIGFyZSB0aGUgbW9zdCBwcmVmZXJyZWQuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJBbiBlbXB0eSBwcmVmZXJyZWQgc2NoZWR1bGluZyB0ZXJtIG1hdGNoZXMgYWxsIG9iamVjdHMgd2l0aCBpbXBsaWNpdCB3ZWlnaHQgMCAoaS5lLiBpdCdzIGEgbm8tb3ApLiBBIG51bGwgcHJlZmVycmVkIHNjaGVkdWxpbmcgdGVybSBtYXRjaGVzIG5vIG9iamVjdHMgKGkuZS4gaXMgYWxzbyBhIG5vLW9wKS4iLCJwcm9wZXJ0aWVzIjp7InByZWZlcmVuY2UiOnsiZGVzY3JpcHRpb24iOiJBIG5vZGUgc2VsZWN0b3IgdGVybSwgYXNzb2NpYXRlZCB3aXRoIHRoZSBjb3JyZXNwb25kaW5nIHdlaWdodC4iLCJwcm9wZXJ0aWVzIjp7Im1hdGNoRXhwcmVzc2lvbnMiOnsiZGVzY3JpcHRpb24iOiJBIGxpc3Qgb2Ygbm9kZSBzZWxlY3RvciByZXF1aXJlbWVudHMgYnkgbm9kZSdzIGxhYmVscy4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkEgbm9kZSBzZWxlY3RvciByZXF1aXJlbWVudCBpcyBhIHNlbGVjdG9yIHRoYXQgY29udGFpbnMgdmFsdWVzLCBhIGtleSwgYW5kIGFuIG9wZXJhdG9yIHRoYXQgcmVsYXRlcyB0aGUga2V5IGFuZCB2YWx1ZXMuIiwicHJvcGVydGllcyI6eyJrZXkiOnsiZGVzY3JpcHRpb24iOiJUaGUgbGFiZWwga2V5IHRoYXQgdGhlIHNlbGVjdG9yIGFwcGxpZXMgdG8uIiwidHlwZSI6InN0cmluZyJ9LCJvcGVyYXRvciI6eyJkZXNjcmlwdGlvbiI6IlJlcHJlc2VudHMgYSBrZXkncyByZWxhdGlvbnNoaXAgdG8gYSBzZXQgb2YgdmFsdWVzLiBWYWxpZCBvcGVyYXRvcnMgYXJlIEluLCBOb3RJbiwgRXhpc3RzLCBEb2VzTm90RXhpc3QuIEd0LCBhbmQgTHQuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZXMiOnsiZGVzY3JpcHRpb24iOiJBbiBhcnJheSBvZiBzdHJpbmcgdmFsdWVzLiBJZiB0aGUgb3BlcmF0b3IgaXMgSW4gb3IgTm90SW4sIHRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBub24tZW1wdHkuIElmIHRoZSBvcGVyYXRvciBpcyBFeGlzdHMgb3IgRG9lc05vdEV4aXN0LCB0aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgZW1wdHkuIElmIHRoZSBvcGVyYXRvciBpcyBHdCBvciBMdCwgdGhlIHZhbHVlcyBhcnJheSBtdXN0IGhhdmUgYSBzaW5nbGUgZWxlbWVudCwgd2hpY2ggd2lsbCBiZSBpbnRlcnByZXRlZCBhcyBhbiBpbnRlZ2VyLiBUaGlzIGFycmF5IGlzIHJlcGxhY2VkIGR1cmluZyBhIHN0cmF0ZWdpYyBtZXJnZSBwYXRjaC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9fSwicmVxdWlyZWQiOlsia2V5Iiwib3BlcmF0b3IiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwibWF0Y2hGaWVsZHMiOnsiZGVzY3JpcHRpb24iOiJBIGxpc3Qgb2Ygbm9kZSBzZWxlY3RvciByZXF1aXJlbWVudHMgYnkgbm9kZSdzIGZpZWxkcy4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkEgbm9kZSBzZWxlY3RvciByZXF1aXJlbWVudCBpcyBhIHNlbGVjdG9yIHRoYXQgY29udGFpbnMgdmFsdWVzLCBhIGtleSwgYW5kIGFuIG9wZXJhdG9yIHRoYXQgcmVsYXRlcyB0aGUga2V5IGFuZCB2YWx1ZXMuIiwicHJvcGVydGllcyI6eyJrZXkiOnsiZGVzY3JpcHRpb24iOiJUaGUgbGFiZWwga2V5IHRoYXQgdGhlIHNlbGVjdG9yIGFwcGxpZXMgdG8uIiwidHlwZSI6InN0cmluZyJ9LCJvcGVyYXRvciI6eyJkZXNjcmlwdGlvbiI6IlJlcHJlc2VudHMgYSBrZXkncyByZWxhdGlvbnNoaXAgdG8gYSBzZXQgb2YgdmFsdWVzLiBWYWxpZCBvcGVyYXRvcnMgYXJlIEluLCBOb3RJbiwgRXhpc3RzLCBEb2VzTm90RXhpc3QuIEd0LCBhbmQgTHQuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZXMiOnsiZGVzY3JpcHRpb24iOiJBbiBhcnJheSBvZiBzdHJpbmcgdmFsdWVzLiBJZiB0aGUgb3BlcmF0b3IgaXMgSW4gb3IgTm90SW4sIHRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBub24tZW1wdHkuIElmIHRoZSBvcGVyYXRvciBpcyBFeGlzdHMgb3IgRG9lc05vdEV4aXN0LCB0aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgZW1wdHkuIElmIHRoZSBvcGVyYXRvciBpcyBHdCBvciBMdCwgdGhlIHZhbHVlcyBhcnJheSBtdXN0IGhhdmUgYSBzaW5nbGUgZWxlbWVudCwgd2hpY2ggd2lsbCBiZSBpbnRlcnByZXRlZCBhcyBhbiBpbnRlZ2VyLiBUaGlzIGFycmF5IGlzIHJlcGxhY2VkIGR1cmluZyBhIHN0cmF0ZWdpYyBtZXJnZSBwYXRjaC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9fSwicmVxdWlyZWQiOlsia2V5Iiwib3BlcmF0b3IiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifX0sInR5cGUiOiJvYmplY3QifSwid2VpZ2h0Ijp7ImRlc2NyaXB0aW9uIjoiV2VpZ2h0IGFzc29jaWF0ZWQgd2l0aCBtYXRjaGluZyB0aGUgY29ycmVzcG9uZGluZyBub2RlU2VsZWN0b3JUZXJtLCBpbiB0aGUgcmFuZ2UgMS0xMDAuIiwiZm9ybWF0IjoiaW50MzIiLCJ0eXBlIjoiaW50ZWdlciJ9fSwicmVxdWlyZWQiOlsicHJlZmVyZW5jZSIsIndlaWdodCJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJyZXF1aXJlZER1cmluZ1NjaGVkdWxpbmdJZ25vcmVkRHVyaW5nRXhlY3V0aW9uIjp7ImRlc2NyaXB0aW9uIjoiSWYgdGhlIGFmZmluaXR5IHJlcXVpcmVtZW50cyBzcGVjaWZpZWQgYnkgdGhpcyBmaWVsZCBhcmUgbm90IG1ldCBhdCBzY2hlZHVsaW5nIHRpbWUsIHRoZSBwb2Qgd2lsbCBub3QgYmUgc2NoZWR1bGVkIG9udG8gdGhlIG5vZGUuIElmIHRoZSBhZmZpbml0eSByZXF1aXJlbWVudHMgc3BlY2lmaWVkIGJ5IHRoaXMgZmllbGQgY2Vhc2UgdG8gYmUgbWV0IGF0IHNvbWUgcG9pbnQgZHVyaW5nIHBvZCBleGVjdXRpb24gKGUuZy4gZHVlIHRvIGFuIHVwZGF0ZSksIHRoZSBzeXN0ZW0gbWF5IG9yIG1heSBub3QgdHJ5IHRvIGV2ZW50dWFsbHkgZXZpY3QgdGhlIHBvZCBmcm9tIGl0cyBub2RlLiIsInByb3BlcnRpZXMiOnsibm9kZVNlbGVjdG9yVGVybXMiOnsiZGVzY3JpcHRpb24iOiJSZXF1aXJlZC4gQSBsaXN0IG9mIG5vZGUgc2VsZWN0b3IgdGVybXMuIFRoZSB0ZXJtcyBhcmUgT1JlZC4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkEgbnVsbCBvciBlbXB0eSBub2RlIHNlbGVjdG9yIHRlcm0gbWF0Y2hlcyBubyBvYmplY3RzLiBUaGUgcmVxdWlyZW1lbnRzIG9mIHRoZW0gYXJlIEFORGVkLiBUaGUgVG9wb2xvZ3lTZWxlY3RvclRlcm0gdHlwZSBpbXBsZW1lbnRzIGEgc3Vic2V0IG9mIHRoZSBOb2RlU2VsZWN0b3JUZXJtLiIsInByb3BlcnRpZXMiOnsibWF0Y2hFeHByZXNzaW9ucyI6eyJkZXNjcmlwdGlvbiI6IkEgbGlzdCBvZiBub2RlIHNlbGVjdG9yIHJlcXVpcmVtZW50cyBieSBub2RlJ3MgbGFiZWxzLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQSBub2RlIHNlbGVjdG9yIHJlcXVpcmVtZW50IGlzIGEgc2VsZWN0b3IgdGhhdCBjb250YWlucyB2YWx1ZXMsIGEga2V5LCBhbmQgYW4gb3BlcmF0b3IgdGhhdCByZWxhdGVzIHRoZSBrZXkgYW5kIHZhbHVlcy4iLCJwcm9wZXJ0aWVzIjp7ImtleSI6eyJkZXNjcmlwdGlvbiI6IlRoZSBsYWJlbCBrZXkgdGhhdCB0aGUgc2VsZWN0b3IgYXBwbGllcyB0by4iLCJ0eXBlIjoic3RyaW5nIn0sIm9wZXJhdG9yIjp7ImRlc2NyaXB0aW9uIjoiUmVwcmVzZW50cyBhIGtleSdzIHJlbGF0aW9uc2hpcCB0byBhIHNldCBvZiB2YWx1ZXMuIFZhbGlkIG9wZXJhdG9ycyBhcmUgSW4sIE5vdEluLCBFeGlzdHMsIERvZXNOb3RFeGlzdC4gR3QsIGFuZCBMdC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlcyI6eyJkZXNjcmlwdGlvbiI6IkFuIGFycmF5IG9mIHN0cmluZyB2YWx1ZXMuIElmIHRoZSBvcGVyYXRvciBpcyBJbiBvciBOb3RJbiwgdGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIG5vbi1lbXB0eS4gSWYgdGhlIG9wZXJhdG9yIGlzIEV4aXN0cyBvciBEb2VzTm90RXhpc3QsIHRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBlbXB0eS4gSWYgdGhlIG9wZXJhdG9yIGlzIEd0IG9yIEx0LCB0aGUgdmFsdWVzIGFycmF5IG11c3QgaGF2ZSBhIHNpbmdsZSBlbGVtZW50LCB3aGljaCB3aWxsIGJlIGludGVycHJldGVkIGFzIGFuIGludGVnZXIuIFRoaXMgYXJyYXkgaXMgcmVwbGFjZWQgZHVyaW5nIGEgc3RyYXRlZ2ljIG1lcmdlIHBhdGNoLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In19LCJyZXF1aXJlZCI6WyJrZXkiLCJvcGVyYXRvciJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJtYXRjaEZpZWxkcyI6eyJkZXNjcmlwdGlvbiI6IkEgbGlzdCBvZiBub2RlIHNlbGVjdG9yIHJlcXVpcmVtZW50cyBieSBub2RlJ3MgZmllbGRzLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQSBub2RlIHNlbGVjdG9yIHJlcXVpcmVtZW50IGlzIGEgc2VsZWN0b3IgdGhhdCBjb250YWlucyB2YWx1ZXMsIGEga2V5LCBhbmQgYW4gb3BlcmF0b3IgdGhhdCByZWxhdGVzIHRoZSBrZXkgYW5kIHZhbHVlcy4iLCJwcm9wZXJ0aWVzIjp7ImtleSI6eyJkZXNjcmlwdGlvbiI6IlRoZSBsYWJlbCBrZXkgdGhhdCB0aGUgc2VsZWN0b3IgYXBwbGllcyB0by4iLCJ0eXBlIjoic3RyaW5nIn0sIm9wZXJhdG9yIjp7ImRlc2NyaXB0aW9uIjoiUmVwcmVzZW50cyBhIGtleSdzIHJlbGF0aW9uc2hpcCB0byBhIHNldCBvZiB2YWx1ZXMuIFZhbGlkIG9wZXJhdG9ycyBhcmUgSW4sIE5vdEluLCBFeGlzdHMsIERvZXNOb3RFeGlzdC4gR3QsIGFuZCBMdC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlcyI6eyJkZXNjcmlwdGlvbiI6IkFuIGFycmF5IG9mIHN0cmluZyB2YWx1ZXMuIElmIHRoZSBvcGVyYXRvciBpcyBJbiBvciBOb3RJbiwgdGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIG5vbi1lbXB0eS4gSWYgdGhlIG9wZXJhdG9yIGlzIEV4aXN0cyBvciBEb2VzTm90RXhpc3QsIHRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBlbXB0eS4gSWYgdGhlIG9wZXJhdG9yIGlzIEd0IG9yIEx0LCB0aGUgdmFsdWVzIGFycmF5IG11c3QgaGF2ZSBhIHNpbmdsZSBlbGVtZW50LCB3aGljaCB3aWxsIGJlIGludGVycHJldGVkIGFzIGFuIGludGVnZXIuIFRoaXMgYXJyYXkgaXMgcmVwbGFjZWQgZHVyaW5nIGEgc3RyYXRlZ2ljIG1lcmdlIHBhdGNoLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In19LCJyZXF1aXJlZCI6WyJrZXkiLCJvcGVyYXRvciJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9fSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifX0sInJlcXVpcmVkIjpbIm5vZGVTZWxlY3RvclRlcm1zIl0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifSwicG9kQWZmaW5pdHkiOnsiZGVzY3JpcHRpb24iOiJEZXNjcmliZXMgcG9kIGFmZmluaXR5IHNjaGVkdWxpbmcgcnVsZXMgKGUuZy4gY28tbG9jYXRlIHRoaXMgcG9kIGluIHRoZSBzYW1lIG5vZGUsIHpvbmUsIGV0Yy4gYXMgc29tZSBvdGhlciBwb2QocykpLiIsInByb3BlcnRpZXMiOnsicHJlZmVycmVkRHVyaW5nU2NoZWR1bGluZ0lnbm9yZWREdXJpbmdFeGVjdXRpb24iOnsiZGVzY3JpcHRpb24iOiJUaGUgc2NoZWR1bGVyIHdpbGwgcHJlZmVyIHRvIHNjaGVkdWxlIHBvZHMgdG8gbm9kZXMgdGhhdCBzYXRpc2Z5IHRoZSBhZmZpbml0eSBleHByZXNzaW9ucyBzcGVjaWZpZWQgYnkgdGhpcyBmaWVsZCwgYnV0IGl0IG1heSBjaG9vc2UgYSBub2RlIHRoYXQgdmlvbGF0ZXMgb25lIG9yIG1vcmUgb2YgdGhlIGV4cHJlc3Npb25zLiBUaGUgbm9kZSB0aGF0IGlzIG1vc3QgcHJlZmVycmVkIGlzIHRoZSBvbmUgd2l0aCB0aGUgZ3JlYXRlc3Qgc3VtIG9mIHdlaWdodHMsIGkuZS4gZm9yIGVhY2ggbm9kZSB0aGF0IG1lZXRzIGFsbCBvZiB0aGUgc2NoZWR1bGluZyByZXF1aXJlbWVudHMgKHJlc291cmNlIHJlcXVlc3QsIHJlcXVpcmVkRHVyaW5nU2NoZWR1bGluZyBhZmZpbml0eSBleHByZXNzaW9ucywgZXRjLiksIGNvbXB1dGUgYSBzdW0gYnkgaXRlcmF0aW5nIHRocm91Z2ggdGhlIGVsZW1lbnRzIG9mIHRoaXMgZmllbGQgYW5kIGFkZGluZyBcIndlaWdodFwiIHRvIHRoZSBzdW0gaWYgdGhlIG5vZGUgaGFzIHBvZHMgd2hpY2ggbWF0Y2hlcyB0aGUgY29ycmVzcG9uZGluZyBwb2RBZmZpbml0eVRlcm07IHRoZSBub2RlKHMpIHdpdGggdGhlIGhpZ2hlc3Qgc3VtIGFyZSB0aGUgbW9zdCBwcmVmZXJyZWQuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJUaGUgd2VpZ2h0cyBvZiBhbGwgb2YgdGhlIG1hdGNoZWQgV2VpZ2h0ZWRQb2RBZmZpbml0eVRlcm0gZmllbGRzIGFyZSBhZGRlZCBwZXItbm9kZSB0byBmaW5kIHRoZSBtb3N0IHByZWZlcnJlZCBub2RlKHMpIiwicHJvcGVydGllcyI6eyJwb2RBZmZpbml0eVRlcm0iOnsiZGVzY3JpcHRpb24iOiJSZXF1aXJlZC4gQSBwb2QgYWZmaW5pdHkgdGVybSwgYXNzb2NpYXRlZCB3aXRoIHRoZSBjb3JyZXNwb25kaW5nIHdlaWdodC4iLCJwcm9wZXJ0aWVzIjp7ImxhYmVsU2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJBIGxhYmVsIHF1ZXJ5IG92ZXIgYSBzZXQgb2YgcmVzb3VyY2VzLCBpbiB0aGlzIGNhc2UgcG9kcy4iLCJwcm9wZXJ0aWVzIjp7Im1hdGNoRXhwcmVzc2lvbnMiOnsiZGVzY3JpcHRpb24iOiJtYXRjaEV4cHJlc3Npb25zIGlzIGEgbGlzdCBvZiBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudHMuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQSBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudCBpcyBhIHNlbGVjdG9yIHRoYXQgY29udGFpbnMgdmFsdWVzLCBhIGtleSwgYW5kIGFuIG9wZXJhdG9yIHRoYXQgcmVsYXRlcyB0aGUga2V5IGFuZCB2YWx1ZXMuIiwicHJvcGVydGllcyI6eyJrZXkiOnsiZGVzY3JpcHRpb24iOiJrZXkgaXMgdGhlIGxhYmVsIGtleSB0aGF0IHRoZSBzZWxlY3RvciBhcHBsaWVzIHRvLiIsInR5cGUiOiJzdHJpbmcifSwib3BlcmF0b3IiOnsiZGVzY3JpcHRpb24iOiJvcGVyYXRvciByZXByZXNlbnRzIGEga2V5J3MgcmVsYXRpb25zaGlwIHRvIGEgc2V0IG9mIHZhbHVlcy4gVmFsaWQgb3BlcmF0b3JzIGFyZSBJbiwgTm90SW4sIEV4aXN0cyBhbmQgRG9lc05vdEV4aXN0LiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWVzIjp7ImRlc2NyaXB0aW9uIjoidmFsdWVzIGlzIGFuIGFycmF5IG9mIHN0cmluZyB2YWx1ZXMuIElmIHRoZSBvcGVyYXRvciBpcyBJbiBvciBOb3RJbiwgdGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIG5vbi1lbXB0eS4gSWYgdGhlIG9wZXJhdG9yIGlzIEV4aXN0cyBvciBEb2VzTm90RXhpc3QsIHRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBlbXB0eS4gVGhpcyBhcnJheSBpcyByZXBsYWNlZCBkdXJpbmcgYSBzdHJhdGVnaWMgbWVyZ2UgcGF0Y2guIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifX0sInJlcXVpcmVkIjpbImtleSIsIm9wZXJhdG9yIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sIm1hdGNoTGFiZWxzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InR5cGUiOiJzdHJpbmcifSwiZGVzY3JpcHRpb24iOiJtYXRjaExhYmVscyBpcyBhIG1hcCBvZiB7a2V5LHZhbHVlfSBwYWlycy4gQSBzaW5nbGUge2tleSx2YWx1ZX0gaW4gdGhlIG1hdGNoTGFiZWxzIG1hcCBpcyBlcXVpdmFsZW50IHRvIGFuIGVsZW1lbnQgb2YgbWF0Y2hFeHByZXNzaW9ucywgd2hvc2Uga2V5IGZpZWxkIGlzIFwia2V5XCIsIHRoZSBvcGVyYXRvciBpcyBcIkluXCIsIGFuZCB0aGUgdmFsdWVzIGFycmF5IGNvbnRhaW5zIG9ubHkgXCJ2YWx1ZVwiLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4iLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In0sIm5hbWVzcGFjZXMiOnsiZGVzY3JpcHRpb24iOiJuYW1lc3BhY2VzIHNwZWNpZmllcyB3aGljaCBuYW1lc3BhY2VzIHRoZSBsYWJlbFNlbGVjdG9yIGFwcGxpZXMgdG8gKG1hdGNoZXMgYWdhaW5zdCk7IG51bGwgb3IgZW1wdHkgbGlzdCBtZWFucyBcInRoaXMgcG9kJ3MgbmFtZXNwYWNlXCIiLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJ0b3BvbG9neUtleSI6eyJkZXNjcmlwdGlvbiI6IlRoaXMgcG9kIHNob3VsZCBiZSBjby1sb2NhdGVkIChhZmZpbml0eSkgb3Igbm90IGNvLWxvY2F0ZWQgKGFudGktYWZmaW5pdHkpIHdpdGggdGhlIHBvZHMgbWF0Y2hpbmcgdGhlIGxhYmVsU2VsZWN0b3IgaW4gdGhlIHNwZWNpZmllZCBuYW1lc3BhY2VzLCB3aGVyZSBjby1sb2NhdGVkIGlzIGRlZmluZWQgYXMgcnVubmluZyBvbiBhIG5vZGUgd2hvc2UgdmFsdWUgb2YgdGhlIGxhYmVsIHdpdGgga2V5IHRvcG9sb2d5S2V5IG1hdGNoZXMgdGhhdCBvZiBhbnkgbm9kZSBvbiB3aGljaCBhbnkgb2YgdGhlIHNlbGVjdGVkIHBvZHMgaXMgcnVubmluZy4gRW1wdHkgdG9wb2xvZ3lLZXkgaXMgbm90IGFsbG93ZWQuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsidG9wb2xvZ3lLZXkiXSwidHlwZSI6Im9iamVjdCJ9LCJ3ZWlnaHQiOnsiZGVzY3JpcHRpb24iOiJ3ZWlnaHQgYXNzb2NpYXRlZCB3aXRoIG1hdGNoaW5nIHRoZSBjb3JyZXNwb25kaW5nIHBvZEFmZmluaXR5VGVybSwgaW4gdGhlIHJhbmdlIDEtMTAwLiIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifX0sInJlcXVpcmVkIjpbInBvZEFmZmluaXR5VGVybSIsIndlaWdodCJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJyZXF1aXJlZER1cmluZ1NjaGVkdWxpbmdJZ25vcmVkRHVyaW5nRXhlY3V0aW9uIjp7ImRlc2NyaXB0aW9uIjoiSWYgdGhlIGFmZmluaXR5IHJlcXVpcmVtZW50cyBzcGVjaWZpZWQgYnkgdGhpcyBmaWVsZCBhcmUgbm90IG1ldCBhdCBzY2hlZHVsaW5nIHRpbWUsIHRoZSBwb2Qgd2lsbCBub3QgYmUgc2NoZWR1bGVkIG9udG8gdGhlIG5vZGUuIElmIHRoZSBhZmZpbml0eSByZXF1aXJlbWVudHMgc3BlY2lmaWVkIGJ5IHRoaXMgZmllbGQgY2Vhc2UgdG8gYmUgbWV0IGF0IHNvbWUgcG9pbnQgZHVyaW5nIHBvZCBleGVjdXRpb24gKGUuZy4gZHVlIHRvIGEgcG9kIGxhYmVsIHVwZGF0ZSksIHRoZSBzeXN0ZW0gbWF5IG9yIG1heSBub3QgdHJ5IHRvIGV2ZW50dWFsbHkgZXZpY3QgdGhlIHBvZCBmcm9tIGl0cyBub2RlLiBXaGVuIHRoZXJlIGFyZSBtdWx0aXBsZSBlbGVtZW50cywgdGhlIGxpc3RzIG9mIG5vZGVzIGNvcnJlc3BvbmRpbmcgdG8gZWFjaCBwb2RBZmZpbml0eVRlcm0gYXJlIGludGVyc2VjdGVkLCBpLmUuIGFsbCB0ZXJtcyBtdXN0IGJlIHNhdGlzZmllZC4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkRlZmluZXMgYSBzZXQgb2YgcG9kcyAobmFtZWx5IHRob3NlIG1hdGNoaW5nIHRoZSBsYWJlbFNlbGVjdG9yIHJlbGF0aXZlIHRvIHRoZSBnaXZlbiBuYW1lc3BhY2UocykpIHRoYXQgdGhpcyBwb2Qgc2hvdWxkIGJlIGNvLWxvY2F0ZWQgKGFmZmluaXR5KSBvciBub3QgY28tbG9jYXRlZCAoYW50aS1hZmZpbml0eSkgd2l0aCwgd2hlcmUgY28tbG9jYXRlZCBpcyBkZWZpbmVkIGFzIHJ1bm5pbmcgb24gYSBub2RlIHdob3NlIHZhbHVlIG9mIHRoZSBsYWJlbCB3aXRoIGtleSBcdTAwM2N0b3BvbG9neUtleVx1MDAzZSBtYXRjaGVzIHRoYXQgb2YgYW55IG5vZGUgb24gd2hpY2ggYSBwb2Qgb2YgdGhlIHNldCBvZiBwb2RzIGlzIHJ1bm5pbmciLCJwcm9wZXJ0aWVzIjp7ImxhYmVsU2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJBIGxhYmVsIHF1ZXJ5IG92ZXIgYSBzZXQgb2YgcmVzb3VyY2VzLCBpbiB0aGlzIGNhc2UgcG9kcy4iLCJwcm9wZXJ0aWVzIjp7Im1hdGNoRXhwcmVzc2lvbnMiOnsiZGVzY3JpcHRpb24iOiJtYXRjaEV4cHJlc3Npb25zIGlzIGEgbGlzdCBvZiBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudHMuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQSBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudCBpcyBhIHNlbGVjdG9yIHRoYXQgY29udGFpbnMgdmFsdWVzLCBhIGtleSwgYW5kIGFuIG9wZXJhdG9yIHRoYXQgcmVsYXRlcyB0aGUga2V5IGFuZCB2YWx1ZXMuIiwicHJvcGVydGllcyI6eyJrZXkiOnsiZGVzY3JpcHRpb24iOiJrZXkgaXMgdGhlIGxhYmVsIGtleSB0aGF0IHRoZSBzZWxlY3RvciBhcHBsaWVzIHRvLiIsInR5cGUiOiJzdHJpbmcifSwib3BlcmF0b3IiOnsiZGVzY3JpcHRpb24iOiJvcGVyYXRvciByZXByZXNlbnRzIGEga2V5J3MgcmVsYXRpb25zaGlwIHRvIGEgc2V0IG9mIHZhbHVlcy4gVmFsaWQgb3BlcmF0b3JzIGFyZSBJbiwgTm90SW4sIEV4aXN0cyBhbmQgRG9lc05vdEV4aXN0LiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWVzIjp7ImRlc2NyaXB0aW9uIjoidmFsdWVzIGlzIGFuIGFycmF5IG9mIHN0cmluZyB2YWx1ZXMuIElmIHRoZSBvcGVyYXRvciBpcyBJbiBvciBOb3RJbiwgdGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIG5vbi1lbXB0eS4gSWYgdGhlIG9wZXJhdG9yIGlzIEV4aXN0cyBvciBEb2VzTm90RXhpc3QsIHRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBlbXB0eS4gVGhpcyBhcnJheSBpcyByZXBsYWNlZCBkdXJpbmcgYSBzdHJhdGVnaWMgbWVyZ2UgcGF0Y2guIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifX0sInJlcXVpcmVkIjpbImtleSIsIm9wZXJhdG9yIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sIm1hdGNoTGFiZWxzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InR5cGUiOiJzdHJpbmcifSwiZGVzY3JpcHRpb24iOiJtYXRjaExhYmVscyBpcyBhIG1hcCBvZiB7a2V5LHZhbHVlfSBwYWlycy4gQSBzaW5nbGUge2tleSx2YWx1ZX0gaW4gdGhlIG1hdGNoTGFiZWxzIG1hcCBpcyBlcXVpdmFsZW50IHRvIGFuIGVsZW1lbnQgb2YgbWF0Y2hFeHByZXNzaW9ucywgd2hvc2Uga2V5IGZpZWxkIGlzIFwia2V5XCIsIHRoZSBvcGVyYXRvciBpcyBcIkluXCIsIGFuZCB0aGUgdmFsdWVzIGFycmF5IGNvbnRhaW5zIG9ubHkgXCJ2YWx1ZVwiLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4iLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In0sIm5hbWVzcGFjZXMiOnsiZGVzY3JpcHRpb24iOiJuYW1lc3BhY2VzIHNwZWNpZmllcyB3aGljaCBuYW1lc3BhY2VzIHRoZSBsYWJlbFNlbGVjdG9yIGFwcGxpZXMgdG8gKG1hdGNoZXMgYWdhaW5zdCk7IG51bGwgb3IgZW1wdHkgbGlzdCBtZWFucyBcInRoaXMgcG9kJ3MgbmFtZXNwYWNlXCIiLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJ0b3BvbG9neUtleSI6eyJkZXNjcmlwdGlvbiI6IlRoaXMgcG9kIHNob3VsZCBiZSBjby1sb2NhdGVkIChhZmZpbml0eSkgb3Igbm90IGNvLWxvY2F0ZWQgKGFudGktYWZmaW5pdHkpIHdpdGggdGhlIHBvZHMgbWF0Y2hpbmcgdGhlIGxhYmVsU2VsZWN0b3IgaW4gdGhlIHNwZWNpZmllZCBuYW1lc3BhY2VzLCB3aGVyZSBjby1sb2NhdGVkIGlzIGRlZmluZWQgYXMgcnVubmluZyBvbiBhIG5vZGUgd2hvc2UgdmFsdWUgb2YgdGhlIGxhYmVsIHdpdGgga2V5IHRvcG9sb2d5S2V5IG1hdGNoZXMgdGhhdCBvZiBhbnkgbm9kZSBvbiB3aGljaCBhbnkgb2YgdGhlIHNlbGVjdGVkIHBvZHMgaXMgcnVubmluZy4gRW1wdHkgdG9wb2xvZ3lLZXkgaXMgbm90IGFsbG93ZWQuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsidG9wb2xvZ3lLZXkiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifX0sInR5cGUiOiJvYmplY3QifSwicG9kQW50aUFmZmluaXR5Ijp7ImRlc2NyaXB0aW9uIjoiRGVzY3JpYmVzIHBvZCBhbnRpLWFmZmluaXR5IHNjaGVkdWxpbmcgcnVsZXMgKGUuZy4gYXZvaWQgcHV0dGluZyB0aGlzIHBvZCBpbiB0aGUgc2FtZSBub2RlLCB6b25lLCBldGMuIGFzIHNvbWUgb3RoZXIgcG9kKHMpKS4iLCJwcm9wZXJ0aWVzIjp7InByZWZlcnJlZER1cmluZ1NjaGVkdWxpbmdJZ25vcmVkRHVyaW5nRXhlY3V0aW9uIjp7ImRlc2NyaXB0aW9uIjoiVGhlIHNjaGVkdWxlciB3aWxsIHByZWZlciB0byBzY2hlZHVsZSBwb2RzIHRvIG5vZGVzIHRoYXQgc2F0aXNmeSB0aGUgYW50aS1hZmZpbml0eSBleHByZXNzaW9ucyBzcGVjaWZpZWQgYnkgdGhpcyBmaWVsZCwgYnV0IGl0IG1heSBjaG9vc2UgYSBub2RlIHRoYXQgdmlvbGF0ZXMgb25lIG9yIG1vcmUgb2YgdGhlIGV4cHJlc3Npb25zLiBUaGUgbm9kZSB0aGF0IGlzIG1vc3QgcHJlZmVycmVkIGlzIHRoZSBvbmUgd2l0aCB0aGUgZ3JlYXRlc3Qgc3VtIG9mIHdlaWdodHMsIGkuZS4gZm9yIGVhY2ggbm9kZSB0aGF0IG1lZXRzIGFsbCBvZiB0aGUgc2NoZWR1bGluZyByZXF1aXJlbWVudHMgKHJlc291cmNlIHJlcXVlc3QsIHJlcXVpcmVkRHVyaW5nU2NoZWR1bGluZyBhbnRpLWFmZmluaXR5IGV4cHJlc3Npb25zLCBldGMuKSwgY29tcHV0ZSBhIHN1bSBieSBpdGVyYXRpbmcgdGhyb3VnaCB0aGUgZWxlbWVudHMgb2YgdGhpcyBmaWVsZCBhbmQgYWRkaW5nIFwid2VpZ2h0XCIgdG8gdGhlIHN1bSBpZiB0aGUgbm9kZSBoYXMgcG9kcyB3aGljaCBtYXRjaGVzIHRoZSBjb3JyZXNwb25kaW5nIHBvZEFmZmluaXR5VGVybTsgdGhlIG5vZGUocykgd2l0aCB0aGUgaGlnaGVzdCBzdW0gYXJlIHRoZSBtb3N0IHByZWZlcnJlZC4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IlRoZSB3ZWlnaHRzIG9mIGFsbCBvZiB0aGUgbWF0Y2hlZCBXZWlnaHRlZFBvZEFmZmluaXR5VGVybSBmaWVsZHMgYXJlIGFkZGVkIHBlci1ub2RlIHRvIGZpbmQgdGhlIG1vc3QgcHJlZmVycmVkIG5vZGUocykiLCJwcm9wZXJ0aWVzIjp7InBvZEFmZmluaXR5VGVybSI6eyJkZXNjcmlwdGlvbiI6IlJlcXVpcmVkLiBBIHBvZCBhZmZpbml0eSB0ZXJtLCBhc3NvY2lhdGVkIHdpdGggdGhlIGNvcnJlc3BvbmRpbmcgd2VpZ2h0LiIsInByb3BlcnRpZXMiOnsibGFiZWxTZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6IkEgbGFiZWwgcXVlcnkgb3ZlciBhIHNldCBvZiByZXNvdXJjZXMsIGluIHRoaXMgY2FzZSBwb2RzLiIsInByb3BlcnRpZXMiOnsibWF0Y2hFeHByZXNzaW9ucyI6eyJkZXNjcmlwdGlvbiI6Im1hdGNoRXhwcmVzc2lvbnMgaXMgYSBsaXN0IG9mIGxhYmVsIHNlbGVjdG9yIHJlcXVpcmVtZW50cy4gVGhlIHJlcXVpcmVtZW50cyBhcmUgQU5EZWQuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJBIGxhYmVsIHNlbGVjdG9yIHJlcXVpcmVtZW50IGlzIGEgc2VsZWN0b3IgdGhhdCBjb250YWlucyB2YWx1ZXMsIGEga2V5LCBhbmQgYW4gb3BlcmF0b3IgdGhhdCByZWxhdGVzIHRoZSBrZXkgYW5kIHZhbHVlcy4iLCJwcm9wZXJ0aWVzIjp7ImtleSI6eyJkZXNjcmlwdGlvbiI6ImtleSBpcyB0aGUgbGFiZWwga2V5IHRoYXQgdGhlIHNlbGVjdG9yIGFwcGxpZXMgdG8uIiwidHlwZSI6InN0cmluZyJ9LCJvcGVyYXRvciI6eyJkZXNjcmlwdGlvbiI6Im9wZXJhdG9yIHJlcHJlc2VudHMgYSBrZXkncyByZWxhdGlvbnNoaXAgdG8gYSBzZXQgb2YgdmFsdWVzLiBWYWxpZCBvcGVyYXRvcnMgYXJlIEluLCBOb3RJbiwgRXhpc3RzIGFuZCBEb2VzTm90RXhpc3QuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZXMiOnsiZGVzY3JpcHRpb24iOiJ2YWx1ZXMgaXMgYW4gYXJyYXkgb2Ygc3RyaW5nIHZhbHVlcy4gSWYgdGhlIG9wZXJhdG9yIGlzIEluIG9yIE5vdEluLCB0aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgbm9uLWVtcHR5LiBJZiB0aGUgb3BlcmF0b3IgaXMgRXhpc3RzIG9yIERvZXNOb3RFeGlzdCwgdGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIGVtcHR5LiBUaGlzIGFycmF5IGlzIHJlcGxhY2VkIGR1cmluZyBhIHN0cmF0ZWdpYyBtZXJnZSBwYXRjaC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9fSwicmVxdWlyZWQiOlsia2V5Iiwib3BlcmF0b3IiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwibWF0Y2hMYWJlbHMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6Im1hdGNoTGFiZWxzIGlzIGEgbWFwIG9mIHtrZXksdmFsdWV9IHBhaXJzLiBBIHNpbmdsZSB7a2V5LHZhbHVlfSBpbiB0aGUgbWF0Y2hMYWJlbHMgbWFwIGlzIGVxdWl2YWxlbnQgdG8gYW4gZWxlbWVudCBvZiBtYXRjaEV4cHJlc3Npb25zLCB3aG9zZSBrZXkgZmllbGQgaXMgXCJrZXlcIiwgdGhlIG9wZXJhdG9yIGlzIFwiSW5cIiwgYW5kIHRoZSB2YWx1ZXMgYXJyYXkgY29udGFpbnMgb25seSBcInZhbHVlXCIuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifSwibmFtZXNwYWNlcyI6eyJkZXNjcmlwdGlvbiI6Im5hbWVzcGFjZXMgc3BlY2lmaWVzIHdoaWNoIG5hbWVzcGFjZXMgdGhlIGxhYmVsU2VsZWN0b3IgYXBwbGllcyB0byAobWF0Y2hlcyBhZ2FpbnN0KTsgbnVsbCBvciBlbXB0eSBsaXN0IG1lYW5zIFwidGhpcyBwb2QncyBuYW1lc3BhY2VcIiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In0sInRvcG9sb2d5S2V5Ijp7ImRlc2NyaXB0aW9uIjoiVGhpcyBwb2Qgc2hvdWxkIGJlIGNvLWxvY2F0ZWQgKGFmZmluaXR5KSBvciBub3QgY28tbG9jYXRlZCAoYW50aS1hZmZpbml0eSkgd2l0aCB0aGUgcG9kcyBtYXRjaGluZyB0aGUgbGFiZWxTZWxlY3RvciBpbiB0aGUgc3BlY2lmaWVkIG5hbWVzcGFjZXMsIHdoZXJlIGNvLWxvY2F0ZWQgaXMgZGVmaW5lZCBhcyBydW5uaW5nIG9uIGEgbm9kZSB3aG9zZSB2YWx1ZSBvZiB0aGUgbGFiZWwgd2l0aCBrZXkgdG9wb2xvZ3lLZXkgbWF0Y2hlcyB0aGF0IG9mIGFueSBub2RlIG9uIHdoaWNoIGFueSBvZiB0aGUgc2VsZWN0ZWQgcG9kcyBpcyBydW5uaW5nLiBFbXB0eSB0b3BvbG9neUtleSBpcyBub3QgYWxsb3dlZC4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJ0b3BvbG9neUtleSJdLCJ0eXBlIjoib2JqZWN0In0sIndlaWdodCI6eyJkZXNjcmlwdGlvbiI6IndlaWdodCBhc3NvY2lhdGVkIHdpdGggbWF0Y2hpbmcgdGhlIGNvcnJlc3BvbmRpbmcgcG9kQWZmaW5pdHlUZXJtLCBpbiB0aGUgcmFuZ2UgMS0xMDAuIiwiZm9ybWF0IjoiaW50MzIiLCJ0eXBlIjoiaW50ZWdlciJ9fSwicmVxdWlyZWQiOlsicG9kQWZmaW5pdHlUZXJtIiwid2VpZ2h0Il0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sInJlcXVpcmVkRHVyaW5nU2NoZWR1bGluZ0lnbm9yZWREdXJpbmdFeGVjdXRpb24iOnsiZGVzY3JpcHRpb24iOiJJZiB0aGUgYW50aS1hZmZpbml0eSByZXF1aXJlbWVudHMgc3BlY2lmaWVkIGJ5IHRoaXMgZmllbGQgYXJlIG5vdCBtZXQgYXQgc2NoZWR1bGluZyB0aW1lLCB0aGUgcG9kIHdpbGwgbm90IGJlIHNjaGVkdWxlZCBvbnRvIHRoZSBub2RlLiBJZiB0aGUgYW50aS1hZmZpbml0eSByZXF1aXJlbWVudHMgc3BlY2lmaWVkIGJ5IHRoaXMgZmllbGQgY2Vhc2UgdG8gYmUgbWV0IGF0IHNvbWUgcG9pbnQgZHVyaW5nIHBvZCBleGVjdXRpb24gKGUuZy4gZHVlIHRvIGEgcG9kIGxhYmVsIHVwZGF0ZSksIHRoZSBzeXN0ZW0gbWF5IG9yIG1heSBub3QgdHJ5IHRvIGV2ZW50dWFsbHkgZXZpY3QgdGhlIHBvZCBmcm9tIGl0cyBub2RlLiBXaGVuIHRoZXJlIGFyZSBtdWx0aXBsZSBlbGVtZW50cywgdGhlIGxpc3RzIG9mIG5vZGVzIGNvcnJlc3BvbmRpbmcgdG8gZWFjaCBwb2RBZmZpbml0eVRlcm0gYXJlIGludGVyc2VjdGVkLCBpLmUuIGFsbCB0ZXJtcyBtdXN0IGJlIHNhdGlzZmllZC4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkRlZmluZXMgYSBzZXQgb2YgcG9kcyAobmFtZWx5IHRob3NlIG1hdGNoaW5nIHRoZSBsYWJlbFNlbGVjdG9yIHJlbGF0aXZlIHRvIHRoZSBnaXZlbiBuYW1lc3BhY2UocykpIHRoYXQgdGhpcyBwb2Qgc2hvdWxkIGJlIGNvLWxvY2F0ZWQgKGFmZmluaXR5KSBvciBub3QgY28tbG9jYXRlZCAoYW50aS1hZmZpbml0eSkgd2l0aCwgd2hlcmUgY28tbG9jYXRlZCBpcyBkZWZpbmVkIGFzIHJ1bm5pbmcgb24gYSBub2RlIHdob3NlIHZhbHVlIG9mIHRoZSBsYWJlbCB3aXRoIGtleSBcdTAwM2N0b3BvbG9neUtleVx1MDAzZSBtYXRjaGVzIHRoYXQgb2YgYW55IG5vZGUgb24gd2hpY2ggYSBwb2Qgb2YgdGhlIHNldCBvZiBwb2RzIGlzIHJ1bm5pbmciLCJwcm9wZXJ0aWVzIjp7ImxhYmVsU2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJBIGxhYmVsIHF1ZXJ5IG92ZXIgYSBzZXQgb2YgcmVzb3VyY2VzLCBpbiB0aGlzIGNhc2UgcG9kcy4iLCJwcm9wZXJ0aWVzIjp7Im1hdGNoRXhwcmVzc2lvbnMiOnsiZGVzY3JpcHRpb24iOiJtYXRjaEV4cHJlc3Npb25zIGlzIGEgbGlzdCBvZiBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudHMuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQSBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudCBpcyBhIHNlbGVjdG9yIHRoYXQgY29udGFpbnMgdmFsdWVzLCBhIGtleSwgYW5kIGFuIG9wZXJhdG9yIHRoYXQgcmVsYXRlcyB0aGUga2V5IGFuZCB2YWx1ZXMuIiwicHJvcGVydGllcyI6eyJrZXkiOnsiZGVzY3JpcHRpb24iOiJrZXkgaXMgdGhlIGxhYmVsIGtleSB0aGF0IHRoZSBzZWxlY3RvciBhcHBsaWVzIHRvLiIsInR5cGUiOiJzdHJpbmcifSwib3BlcmF0b3IiOnsiZGVzY3JpcHRpb24iOiJvcGVyYXRvciByZXByZXNlbnRzIGEga2V5J3MgcmVsYXRpb25zaGlwIHRvIGEgc2V0IG9mIHZhbHVlcy4gVmFsaWQgb3BlcmF0b3JzIGFyZSBJbiwgTm90SW4sIEV4aXN0cyBhbmQgRG9lc05vdEV4aXN0LiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWVzIjp7ImRlc2NyaXB0aW9uIjoidmFsdWVzIGlzIGFuIGFycmF5IG9mIHN0cmluZyB2YWx1ZXMuIElmIHRoZSBvcGVyYXRvciBpcyBJbiBvciBOb3RJbiwgdGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIG5vbi1lbXB0eS4gSWYgdGhlIG9wZXJhdG9yIGlzIEV4aXN0cyBvciBEb2VzTm90RXhpc3QsIHRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBlbXB0eS4gVGhpcyBhcnJheSBpcyByZXBsYWNlZCBkdXJpbmcgYSBzdHJhdGVnaWMgbWVyZ2UgcGF0Y2guIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifX0sInJlcXVpcmVkIjpbImtleSIsIm9wZXJhdG9yIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sIm1hdGNoTGFiZWxzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InR5cGUiOiJzdHJpbmcifSwiZGVzY3JpcHRpb24iOiJtYXRjaExhYmVscyBpcyBhIG1hcCBvZiB7a2V5LHZhbHVlfSBwYWlycy4gQSBzaW5nbGUge2tleSx2YWx1ZX0gaW4gdGhlIG1hdGNoTGFiZWxzIG1hcCBpcyBlcXVpdmFsZW50IHRvIGFuIGVsZW1lbnQgb2YgbWF0Y2hFeHByZXNzaW9ucywgd2hvc2Uga2V5IGZpZWxkIGlzIFwia2V5XCIsIHRoZSBvcGVyYXRvciBpcyBcIkluXCIsIGFuZCB0aGUgdmFsdWVzIGFycmF5IGNvbnRhaW5zIG9ubHkgXCJ2YWx1ZVwiLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4iLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In0sIm5hbWVzcGFjZXMiOnsiZGVzY3JpcHRpb24iOiJuYW1lc3BhY2VzIHNwZWNpZmllcyB3aGljaCBuYW1lc3BhY2VzIHRoZSBsYWJlbFNlbGVjdG9yIGFwcGxpZXMgdG8gKG1hdGNoZXMgYWdhaW5zdCk7IG51bGwgb3IgZW1wdHkgbGlzdCBtZWFucyBcInRoaXMgcG9kJ3MgbmFtZXNwYWNlXCIiLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJ0b3BvbG9neUtleSI6eyJkZXNjcmlwdGlvbiI6IlRoaXMgcG9kIHNob3VsZCBiZSBjby1sb2NhdGVkIChhZmZpbml0eSkgb3Igbm90IGNvLWxvY2F0ZWQgKGFudGktYWZmaW5pdHkpIHdpdGggdGhlIHBvZHMgbWF0Y2hpbmcgdGhlIGxhYmVsU2VsZWN0b3IgaW4gdGhlIHNwZWNpZmllZCBuYW1lc3BhY2VzLCB3aGVyZSBjby1sb2NhdGVkIGlzIGRlZmluZWQgYXMgcnVubmluZyBvbiBhIG5vZGUgd2hvc2UgdmFsdWUgb2YgdGhlIGxhYmVsIHdpdGgga2V5IHRvcG9sb2d5S2V5IG1hdGNoZXMgdGhhdCBvZiBhbnkgbm9kZSBvbiB3aGljaCBhbnkgb2YgdGhlIHNlbGVjdGVkIHBvZHMgaXMgcnVubmluZy4gRW1wdHkgdG9wb2xvZ3lLZXkgaXMgbm90IGFsbG93ZWQuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsidG9wb2xvZ3lLZXkiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifX0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifSwibm9kZVNlbGVjdG9yIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InR5cGUiOiJzdHJpbmcifSwiZGVzY3JpcHRpb24iOiJOb2RlU2VsZWN0b3IiLCJ0eXBlIjoib2JqZWN0In0sInRvbGVyYXRpb25zIjp7ImRlc2NyaXB0aW9uIjoiVG9sZXJhdGlvbnMiLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IlRoZSBwb2QgdGhpcyBUb2xlcmF0aW9uIGlzIGF0dGFjaGVkIHRvIHRvbGVyYXRlcyBhbnkgdGFpbnQgdGhhdCBtYXRjaGVzIHRoZSB0cmlwbGUgXHUwMDNja2V5LHZhbHVlLGVmZmVjdFx1MDAzZSB1c2luZyB0aGUgbWF0Y2hpbmcgb3BlcmF0b3IgXHUwMDNjb3BlcmF0b3JcdTAwM2UuIiwicHJvcGVydGllcyI6eyJlZmZlY3QiOnsiZGVzY3JpcHRpb24iOiJFZmZlY3QgaW5kaWNhdGVzIHRoZSB0YWludCBlZmZlY3QgdG8gbWF0Y2guIEVtcHR5IG1lYW5zIG1hdGNoIGFsbCB0YWludCBlZmZlY3RzLiBXaGVuIHNwZWNpZmllZCwgYWxsb3dlZCB2YWx1ZXMgYXJlIE5vU2NoZWR1bGUsIFByZWZlck5vU2NoZWR1bGUgYW5kIE5vRXhlY3V0ZS4iLCJ0eXBlIjoic3RyaW5nIn0sImtleSI6eyJkZXNjcmlwdGlvbiI6IktleSBpcyB0aGUgdGFpbnQga2V5IHRoYXQgdGhlIHRvbGVyYXRpb24gYXBwbGllcyB0by4gRW1wdHkgbWVhbnMgbWF0Y2ggYWxsIHRhaW50IGtleXMuIElmIHRoZSBrZXkgaXMgZW1wdHksIG9wZXJhdG9yIG11c3QgYmUgRXhpc3RzOyB0aGlzIGNvbWJpbmF0aW9uIG1lYW5zIHRvIG1hdGNoIGFsbCB2YWx1ZXMgYW5kIGFsbCBrZXlzLiIsInR5cGUiOiJzdHJpbmcifSwib3BlcmF0b3IiOnsiZGVzY3JpcHRpb24iOiJPcGVyYXRvciByZXByZXNlbnRzIGEga2V5J3MgcmVsYXRpb25zaGlwIHRvIHRoZSB2YWx1ZS4gVmFsaWQgb3BlcmF0b3JzIGFyZSBFeGlzdHMgYW5kIEVxdWFsLiBEZWZhdWx0cyB0byBFcXVhbC4gRXhpc3RzIGlzIGVxdWl2YWxlbnQgdG8gd2lsZGNhcmQgZm9yIHZhbHVlLCBzbyB0aGF0IGEgcG9kIGNhbiB0b2xlcmF0ZSBhbGwgdGFpbnRzIG9mIGEgcGFydGljdWxhciBjYXRlZ29yeS4iLCJ0eXBlIjoic3RyaW5nIn0sInRvbGVyYXRpb25TZWNvbmRzIjp7ImRlc2NyaXB0aW9uIjoiVG9sZXJhdGlvblNlY29uZHMgcmVwcmVzZW50cyB0aGUgcGVyaW9kIG9mIHRpbWUgdGhlIHRvbGVyYXRpb24gKHdoaWNoIG11c3QgYmUgb2YgZWZmZWN0IE5vRXhlY3V0ZSwgb3RoZXJ3aXNlIHRoaXMgZmllbGQgaXMgaWdub3JlZCkgdG9sZXJhdGVzIHRoZSB0YWludC4gQnkgZGVmYXVsdCwgaXQgaXMgbm90IHNldCwgd2hpY2ggbWVhbnMgdG9sZXJhdGUgdGhlIHRhaW50IGZvcmV2ZXIgKGRvIG5vdCBldmljdCkuIFplcm8gYW5kIG5lZ2F0aXZlIHZhbHVlcyB3aWxsIGJlIHRyZWF0ZWQgYXMgMCAoZXZpY3QgaW1tZWRpYXRlbHkpIGJ5IHRoZSBzeXN0ZW0uIiwiZm9ybWF0IjoiaW50NjQiLCJ0eXBlIjoiaW50ZWdlciJ9LCJ2YWx1ZSI6eyJkZXNjcmlwdGlvbiI6IlZhbHVlIGlzIHRoZSB0YWludCB2YWx1ZSB0aGUgdG9sZXJhdGlvbiBtYXRjaGVzIHRvLiBJZiB0aGUgb3BlcmF0b3IgaXMgRXhpc3RzLCB0aGUgdmFsdWUgc2hvdWxkIGJlIGVtcHR5LCBvdGhlcndpc2UganVzdCBhIHJlZ3VsYXIgc3RyaW5nLiIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sInRvcG9sb2d5U3ByZWFkQ29uc3RyYWludHMiOnsiZGVzY3JpcHRpb24iOiJUb3BvbG9neVNwcmVhZENvbnN0cmFpbnRzIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJUb3BvbG9neVNwcmVhZENvbnN0cmFpbnQgc3BlY2lmaWVzIGhvdyB0byBzcHJlYWQgbWF0Y2hpbmcgcG9kcyBhbW9uZyB0aGUgZ2l2ZW4gdG9wb2xvZ3kuIiwicHJvcGVydGllcyI6eyJsYWJlbFNlbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoiTGFiZWxTZWxlY3RvciBpcyB1c2VkIHRvIGZpbmQgbWF0Y2hpbmcgcG9kcy4gUG9kcyB0aGF0IG1hdGNoIHRoaXMgbGFiZWwgc2VsZWN0b3IgYXJlIGNvdW50ZWQgdG8gZGV0ZXJtaW5lIHRoZSBudW1iZXIgb2YgcG9kcyBpbiB0aGVpciBjb3JyZXNwb25kaW5nIHRvcG9sb2d5IGRvbWFpbi4iLCJwcm9wZXJ0aWVzIjp7Im1hdGNoRXhwcmVzc2lvbnMiOnsiZGVzY3JpcHRpb24iOiJtYXRjaEV4cHJlc3Npb25zIGlzIGEgbGlzdCBvZiBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudHMuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQSBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudCBpcyBhIHNlbGVjdG9yIHRoYXQgY29udGFpbnMgdmFsdWVzLCBhIGtleSwgYW5kIGFuIG9wZXJhdG9yIHRoYXQgcmVsYXRlcyB0aGUga2V5IGFuZCB2YWx1ZXMuIiwicHJvcGVydGllcyI6eyJrZXkiOnsiZGVzY3JpcHRpb24iOiJrZXkgaXMgdGhlIGxhYmVsIGtleSB0aGF0IHRoZSBzZWxlY3RvciBhcHBsaWVzIHRvLiIsInR5cGUiOiJzdHJpbmcifSwib3BlcmF0b3IiOnsiZGVzY3JpcHRpb24iOiJvcGVyYXRvciByZXByZXNlbnRzIGEga2V5J3MgcmVsYXRpb25zaGlwIHRvIGEgc2V0IG9mIHZhbHVlcy4gVmFsaWQgb3BlcmF0b3JzIGFyZSBJbiwgTm90SW4sIEV4aXN0cyBhbmQgRG9lc05vdEV4aXN0LiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWVzIjp7ImRlc2NyaXB0aW9uIjoidmFsdWVzIGlzIGFuIGFycmF5IG9mIHN0cmluZyB2YWx1ZXMuIElmIHRoZSBvcGVyYXRvciBpcyBJbiBvciBOb3RJbiwgdGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIG5vbi1lbXB0eS4gSWYgdGhlIG9wZXJhdG9yIGlzIEV4aXN0cyBvciBEb2VzTm90RXhpc3QsIHRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBlbXB0eS4gVGhpcyBhcnJheSBpcyByZXBsYWNlZCBkdXJpbmcgYSBzdHJhdGVnaWMgbWVyZ2UgcGF0Y2guIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifX0sInJlcXVpcmVkIjpbImtleSIsIm9wZXJhdG9yIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sIm1hdGNoTGFiZWxzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InR5cGUiOiJzdHJpbmcifSwiZGVzY3JpcHRpb24iOiJtYXRjaExhYmVscyBpcyBhIG1hcCBvZiB7a2V5LHZhbHVlfSBwYWlycy4gQSBzaW5nbGUge2tleSx2YWx1ZX0gaW4gdGhlIG1hdGNoTGFiZWxzIG1hcCBpcyBlcXVpdmFsZW50IHRvIGFuIGVsZW1lbnQgb2YgbWF0Y2hFeHByZXNzaW9ucywgd2hvc2Uga2V5IGZpZWxkIGlzIFwia2V5XCIsIHRoZSBvcGVyYXRvciBpcyBcIkluXCIsIGFuZCB0aGUgdmFsdWVzIGFycmF5IGNvbnRhaW5zIG9ubHkgXCJ2YWx1ZVwiLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4iLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In0sIm1heFNrZXciOnsiZGVzY3JpcHRpb24iOiJNYXhTa2V3IGRlc2NyaWJlcyB0aGUgZGVncmVlIHRvIHdoaWNoIHBvZHMgbWF5IGJlIHVuZXZlbmx5IGRpc3RyaWJ1dGVkLiBXaGVuIGB3aGVuVW5zYXRpc2ZpYWJsZT1Eb05vdFNjaGVkdWxlYCwgaXQgaXMgdGhlIG1heGltdW0gcGVybWl0dGVkIGRpZmZlcmVuY2UgYmV0d2VlbiB0aGUgbnVtYmVyIG9mIG1hdGNoaW5nIHBvZHMgaW4gdGhlIHRhcmdldCB0b3BvbG9neSBhbmQgdGhlIGdsb2JhbCBtaW5pbXVtLiBGb3IgZXhhbXBsZSwgaW4gYSAzLXpvbmUgY2x1c3RlciwgTWF4U2tldyBpcyBzZXQgdG8gMSwgYW5kIHBvZHMgd2l0aCB0aGUgc2FtZSBsYWJlbFNlbGVjdG9yIHNwcmVhZCBhcyAxLzEvMDogfCB6b25lMSB8IHpvbmUyIHwgem9uZTMgfCB8ICAgUCAgIHwgICBQICAgfCAgICAgICB8IC0gaWYgTWF4U2tldyBpcyAxLCBpbmNvbWluZyBwb2QgY2FuIG9ubHkgYmUgc2NoZWR1bGVkIHRvIHpvbmUzIHRvIGJlY29tZSAxLzEvMTsgc2NoZWR1bGluZyBpdCBvbnRvIHpvbmUxKHpvbmUyKSB3b3VsZCBtYWtlIHRoZSBBY3R1YWxTa2V3KDItMCkgb24gem9uZTEoem9uZTIpIHZpb2xhdGUgTWF4U2tldygxKS4gLSBpZiBNYXhTa2V3IGlzIDIsIGluY29taW5nIHBvZCBjYW4gYmUgc2NoZWR1bGVkIG9udG8gYW55IHpvbmUuIFdoZW4gYHdoZW5VbnNhdGlzZmlhYmxlPVNjaGVkdWxlQW55d2F5YCwgaXQgaXMgdXNlZCB0byBnaXZlIGhpZ2hlciBwcmVjZWRlbmNlIHRvIHRvcG9sb2dpZXMgdGhhdCBzYXRpc2Z5IGl0LiBJdCdzIGEgcmVxdWlyZWQgZmllbGQuIERlZmF1bHQgdmFsdWUgaXMgMSBhbmQgMCBpcyBub3QgYWxsb3dlZC4iLCJmb3JtYXQiOiJpbnQzMiIsInR5cGUiOiJpbnRlZ2VyIn0sInRvcG9sb2d5S2V5Ijp7ImRlc2NyaXB0aW9uIjoiVG9wb2xvZ3lLZXkgaXMgdGhlIGtleSBvZiBub2RlIGxhYmVscy4gTm9kZXMgdGhhdCBoYXZlIGEgbGFiZWwgd2l0aCB0aGlzIGtleSBhbmQgaWRlbnRpY2FsIHZhbHVlcyBhcmUgY29uc2lkZXJlZCB0byBiZSBpbiB0aGUgc2FtZSB0b3BvbG9neS4gV2UgY29uc2lkZXIgZWFjaCBcdTAwM2NrZXksIHZhbHVlXHUwMDNlIGFzIGEgXCJidWNrZXRcIiwgYW5kIHRyeSB0byBwdXQgYmFsYW5jZWQgbnVtYmVyIG9mIHBvZHMgaW50byBlYWNoIGJ1Y2tldC4gSXQncyBhIHJlcXVpcmVkIGZpZWxkLiIsInR5cGUiOiJzdHJpbmcifSwid2hlblVuc2F0aXNmaWFibGUiOnsiZGVzY3JpcHRpb24iOiJXaGVuVW5zYXRpc2ZpYWJsZSBpbmRpY2F0ZXMgaG93IHRvIGRlYWwgd2l0aCBhIHBvZCBpZiBpdCBkb2Vzbid0IHNhdGlzZnkgdGhlIHNwcmVhZCBjb25zdHJhaW50LiAtIERvTm90U2NoZWR1bGUgKGRlZmF1bHQpIHRlbGxzIHRoZSBzY2hlZHVsZXIgbm90IHRvIHNjaGVkdWxlIGl0LiAtIFNjaGVkdWxlQW55d2F5IHRlbGxzIHRoZSBzY2hlZHVsZXIgdG8gc2NoZWR1bGUgdGhlIHBvZCBpbiBhbnkgbG9jYXRpb24sICAgYnV0IGdpdmluZyBoaWdoZXIgcHJlY2VkZW5jZSB0byB0b3BvbG9naWVzIHRoYXQgd291bGQgaGVscCByZWR1Y2UgdGhlICAgc2tldy4gQSBjb25zdHJhaW50IGlzIGNvbnNpZGVyZWQgXCJVbnNhdGlzZmlhYmxlXCIgZm9yIGFuIGluY29taW5nIHBvZCBpZiBhbmQgb25seSBpZiBldmVyeSBwb3NzaWJsZSBub2RlIGFzc2lnbWVudCBmb3IgdGhhdCBwb2Qgd291bGQgdmlvbGF0ZSBcIk1heFNrZXdcIiBvbiBzb21lIHRvcG9sb2d5LiBGb3IgZXhhbXBsZSwgaW4gYSAzLXpvbmUgY2x1c3RlciwgTWF4U2tldyBpcyBzZXQgdG8gMSwgYW5kIHBvZHMgd2l0aCB0aGUgc2FtZSBsYWJlbFNlbGVjdG9yIHNwcmVhZCBhcyAzLzEvMTogfCB6b25lMSB8IHpvbmUyIHwgem9uZTMgfCB8IFAgUCBQIHwgICBQICAgfCAgIFAgICB8IElmIFdoZW5VbnNhdGlzZmlhYmxlIGlzIHNldCB0byBEb05vdFNjaGVkdWxlLCBpbmNvbWluZyBwb2QgY2FuIG9ubHkgYmUgc2NoZWR1bGVkIHRvIHpvbmUyKHpvbmUzKSB0byBiZWNvbWUgMy8yLzEoMy8xLzIpIGFzIEFjdHVhbFNrZXcoMi0xKSBvbiB6b25lMih6b25lMykgc2F0aXNmaWVzIE1heFNrZXcoMSkuIEluIG90aGVyIHdvcmRzLCB0aGUgY2x1c3RlciBjYW4gc3RpbGwgYmUgaW1iYWxhbmNlZCwgYnV0IHNjaGVkdWxlciB3b24ndCBtYWtlIGl0ICptb3JlKiBpbWJhbGFuY2VkLiBJdCdzIGEgcmVxdWlyZWQgZmllbGQuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibWF4U2tldyIsInRvcG9sb2d5S2V5Iiwid2hlblVuc2F0aXNmaWFibGUiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifX0sInR5cGUiOiJvYmplY3QifSwidmVyc2lvbiI6eyJkZWZhdWx0IjoiNS4xLjIiLCJkZXNjcmlwdGlvbiI6IlZlcnNpb24gb2YgSGF6ZWxjYXN0IFBsYXRmb3JtLiIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiSGF6ZWxjYXN0U3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIEhhemVsY2FzdCIsInByb3BlcnRpZXMiOnsiZXh0ZXJuYWxBZGRyZXNzZXMiOnsiZGVzY3JpcHRpb24iOiJFeHRlcm5hbCBhZGRyZXNzZXMgb2YgdGhlIEhhemVsY2FzdCBjbHVzdGVyIG1lbWJlcnMiLCJ0eXBlIjoic3RyaW5nIn0sImhhemVsY2FzdENsdXN0ZXJTdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJTdGF0dXMgb2YgdGhlIEhhemVsY2FzdCBjbHVzdGVyIiwicHJvcGVydGllcyI6eyJyZWFkeU1lbWJlcnMiOnsiZGVzY3JpcHRpb24iOiJSZWFkeU1lbWJlcnMgcmVwcmVzZW50cyB0aGUgbnVtYmVyIG9mIG1lbWJlcnMgdGhhdCBhcmUgY29ubmVjdGVkIHRvIGNsdXN0ZXIgZnJvbSB0aGUgZGVzaXJlZCBudW1iZXIgb2YgbWVtYmVycyBpbiB0aGUgZm9ybWF0IFx1MDAzY3JlYWR5XHUwMDNlL1x1MDAzY2Rlc2lyZWRcdTAwM2UiLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJyZWFkeU1lbWJlcnMiXSwidHlwZSI6Im9iamVjdCJ9LCJtZW1iZXJzIjp7ImRlc2NyaXB0aW9uIjoiU3RhdHVzIG9mIEhhemVsY2FzdCBtZW1iZXJzIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJIYXplbGNhc3RNZW1iZXJTdGF0dXMgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgdGhlIGluZGl2aWR1YWwgSGF6ZWxjYXN0IG1lbWJlci4iLCJwcm9wZXJ0aWVzIjp7ImNvbm5lY3RlZCI6eyJkZXNjcmlwdGlvbiI6IlJlYWR5IGlzIHRoZSBmbGFnIHRoYXQgaXMgc2V0IHRvIHRydWUgd2hlbiB0aGUgbWVtYmVyIGlzIHN1Y2Nlc3NmdWxseSBzdGFydGVkLCBjb25uZWN0ZWQgdG8gY2x1c3RlciBhbmQgcmVhZHkgdG8gYWNjZXB0IGNvbm5lY3Rpb25zLiIsInR5cGUiOiJib29sZWFuIn0sImlwIjp7ImRlc2NyaXB0aW9uIjoiSXAgaXMgdGhlIElQIGFkZHJlc3Mgb2YgdGhlIG1lbWJlciB3aXRoaW4gdGhlIGNsdXN0ZXIuIiwidHlwZSI6InN0cmluZyJ9LCJsaXRlIjp7ImRlc2NyaXB0aW9uIjoiTGl0ZSBpcyB0aGUgZmxhZyB0aGF0IGlzIHRydWUgd2hlbiB0aGUgbWVtYmVyIGlzIGxpdGUtbWVtYmVyLiIsInR5cGUiOiJib29sZWFuIn0sIm1hc3RlciI6eyJkZXNjcmlwdGlvbiI6Ik1hc3RlciBmbGFnIGlzIHNldCB0byB0cnVlIGlmIHRoZSBtZW1iZXIgaXMgbWFzdGVyLiIsInR5cGUiOiJib29sZWFuIn0sIm1lc3NhZ2UiOnsiZGVzY3JpcHRpb24iOiJNZXNzYWdlIGNvbnRhaW5zIHRoZSBvcHRpb25hbCBtZXNzYWdlIHdpdGggdGhlIGRldGFpbHMgb2YgdGhlIGNsdXN0ZXIgc3RhdGUuIiwidHlwZSI6InN0cmluZyJ9LCJvd25lZFBhcnRpdGlvbnMiOnsiZGVzY3JpcHRpb24iOiJPd25lZFBhcnRpdGlvbnMgcmVwcmVzZW50cyB0aGUgcGFydGl0aW9ucyBjb3VudCBvbiB0aGUgbWVtYmVyLiIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifSwicG9kTmFtZSI6eyJkZXNjcmlwdGlvbiI6IlBvZE5hbWUgaXMgdGhlIG5hbWUgb2YgdGhlIEhhemVsY2FzdCBtZW1iZXIgcG9kLiIsInR5cGUiOiJzdHJpbmcifSwicmVhc29uIjp7ImRlc2NyaXB0aW9uIjoiUmVhc29uIGNvbnRhaW5zIHRoZSBvcHRpb25hbCByZWFzb24gb2YgbWVtYmVyIGNyYXNoIG9yIHJlc3RhcnQuIiwidHlwZSI6InN0cmluZyJ9LCJyZXN0YXJ0Q291bnQiOnsiZGVzY3JpcHRpb24iOiJSZXN0YXJ0Q291bnQgaXMgdGhlIG51bWJlciBvZiB0aW1lcyB0aGUgbWVtYmVyIGhhcyBiZWVuIHJlc3RhcnRlZC4iLCJmb3JtYXQiOiJpbnQzMiIsInR5cGUiOiJpbnRlZ2VyIn0sInN0YXRlIjp7ImRlc2NyaXB0aW9uIjoiU3RhdGUgcmVwcmVzZW50cyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgdGhlIG1lbWJlci4iLCJ0eXBlIjoic3RyaW5nIn0sInVpZCI6eyJkZXNjcmlwdGlvbiI6IlVpZCBpcyB0aGUgdW5pcXVlIG1lbWJlciBpZGVudGlmaWVyIHdpdGhpbiB0aGUgY2x1c3Rlci4iLCJ0eXBlIjoic3RyaW5nIn0sInZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJWZXJzaW9uIHJlcHJlc2VudHMgdGhlIEhhemVsY2FzdCB2ZXJzaW9uIG9mIHRoZSBtZW1iZXIuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiY29ubmVjdGVkIiwicmVzdGFydENvdW50Il0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sIm1lc3NhZ2UiOnsiZGVzY3JpcHRpb24iOiJNZXNzYWdlIGFib3V0IHRoZSBIYXplbGNhc3QgY2x1c3RlciBzdGF0ZSIsInR5cGUiOiJzdHJpbmcifSwicGhhc2UiOnsiZGVzY3JpcHRpb24iOiJQaGFzZSBvZiB0aGUgSGF6ZWxjYXN0IGNsdXN0ZXIiLCJlbnVtIjpbIlJ1bm5pbmciLCJGYWlsZWQiLCJQZW5kaW5nIl0sInR5cGUiOiJzdHJpbmcifSwicmVzdG9yZSI6eyJkZXNjcmlwdGlvbiI6IlN0YXR1cyBvZiByZXN0b3JlIHByb2Nlc3Mgb2YgdGhlIEhhemVsY2FzdCBjbHVzdGVyIiwicHJvcGVydGllcyI6eyJyZW1haW5pbmdEYXRhTG9hZFRpbWUiOnsiZGVzY3JpcHRpb24iOiJSZW1haW5pbmdEYXRhTG9hZFRpbWUgc2hvdyB0aGUgdGltZSBpbiBzZWNvbmRzIHJlbWFpbmVkIGZvciB0aGUgcmVzdG9yZSBkYXRhIGxvYWQgc3RlcC4iLCJmb3JtYXQiOiJpbnQ2NCIsInR5cGUiOiJpbnRlZ2VyIn0sInJlbWFpbmluZ1ZhbGlkYXRpb25UaW1lIjp7ImRlc2NyaXB0aW9uIjoiUmVtYWluaW5nVmFsaWRhdGlvblRpbWUgc2hvdyB0aGUgdGltZSBpbiBzZWNvbmRzIHJlbWFpbmVkIGZvciB0aGUgcmVzdG9yZSB2YWxpZGF0aW9uIHN0ZXAuIiwiZm9ybWF0IjoiaW50NjQiLCJ0eXBlIjoiaW50ZWdlciJ9LCJzdGF0ZSI6eyJkZXNjcmlwdGlvbiI6IlN0YXRlIHNob3dzIHRoZSBjdXJyZW50IHBoYXNlIG9mIHRoZSByZXN0b3JlIHByb2Nlc3Mgb2YgdGhlIGNsdXN0ZXIuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsicmVtYWluaW5nRGF0YUxvYWRUaW1lIiwicmVtYWluaW5nVmFsaWRhdGlvblRpbWUiLCJzdGF0ZSJdLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfSwic3RhdHVzIjp7ImFjY2VwdGVkTmFtZXMiOnsia2luZCI6IiIsInBsdXJhbCI6IiJ9LCJjb25kaXRpb25zIjpbXSwic3RvcmVkVmVyc2lvbnMiOltdfX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjQuMSJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibmFtZSI6ImhvdGJhY2t1cHMuaGF6ZWxjYXN0LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiaGF6ZWxjYXN0LmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJIb3RCYWNrdXAiLCJsaXN0S2luZCI6IkhvdEJhY2t1cExpc3QiLCJwbHVyYWwiOiJob3RiYWNrdXBzIiwic2luZ3VsYXIiOiJob3RiYWNrdXAifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3siZGVzY3JpcHRpb24iOiJDdXJyZW50IHN0YXRlIG9mIHRoZSBIb3RCYWNrdXAgcHJvY2VzcyIsImpzb25QYXRoIjoiLnN0YXR1cy5zdGF0ZSIsIm5hbWUiOiJTdGF0dXMiLCJ0eXBlIjoic3RyaW5nIn1dLCJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiSG90QmFja3VwIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSBob3QgYmFja3VwIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiSG90QmFja3VwU3BlYyBkZWZpbmVzIHRoZSBTcGVjIG9mIEhvdEJhY2t1cCIsInByb3BlcnRpZXMiOnsiYnVja2V0VVJJIjp7ImRlc2NyaXB0aW9uIjoiVVJMIG9mIHRoZSBidWNrZXQgdG8gZG93bmxvYWQgSG90QmFja3VwIGZvbGRlcnMuIiwidHlwZSI6InN0cmluZyJ9LCJoYXplbGNhc3RSZXNvdXJjZU5hbWUiOnsiZGVzY3JpcHRpb24iOiJIYXplbGNhc3RSZXNvdXJjZU5hbWUgZGVmaW5lcyB0aGUgbmFtZSBvZiB0aGUgSGF6ZWxjYXN0IHJlc291cmNlIiwidHlwZSI6InN0cmluZyJ9LCJzY2hlZHVsZSI6eyJkZXNjcmlwdGlvbiI6IlNjaGVkdWxlIGNvbnRhaW5zIGEgY3JvbnRhYi1saWtlIGV4cHJlc3Npb24gdGhhdCBkZWZpbmVzIHRoZSBzY2hlZHVsZSBpbiB3aGljaCBIb3RCYWNrdXAgd2lsbCBiZSBzdGFydGVkLiBJZiB0aGUgU2NoZWR1bGUgaXMgZW1wdHkgdGhlIEhvdEJhY2t1cCB3aWxsIHN0YXJ0IG9ubHkgb25jZSB3aGVuIGFwcGxpZWQuIC0tLSBTZXZlcmFsIHByZS1kZWZpbmVkIHNjaGVkdWxlcyBpbiBwbGFjZSBvZiBhIGNyb24gZXhwcmVzc2lvbiBjYW4gYmUgdXNlZC4gXHRFbnRyeSAgICAgICAgICAgICAgICAgIHwgRGVzY3JpcHRpb24gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgRXF1aXZhbGVudCBUbyBcdC0tLS0tICAgICAgICAgICAgICAgICAgfCAtLS0tLS0tLS0tLSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAtLS0tLS0tLS0tLS0tIFx0QHllYXJseSAob3IgQGFubnVhbGx5KSB8IFJ1biBvbmNlIGEgeWVhciwgbWlkbmlnaHQsIEphbi4gMXN0ICAgICAgICB8IDAgMCAxIDEgKiBcdEBtb250aGx5ICAgICAgICAgICAgICAgfCBSdW4gb25jZSBhIG1vbnRoLCBtaWRuaWdodCwgZmlyc3Qgb2YgbW9udGggfCAwIDAgMSAqICogXHRAd2Vla2x5ICAgICAgICAgICAgICAgIHwgUnVuIG9uY2UgYSB3ZWVrLCBtaWRuaWdodCBiZXR3ZWVuIFNhdC9TdW4gIHwgMCAwICogKiAwIFx0QGRhaWx5IChvciBAbWlkbmlnaHQpICB8IFJ1biBvbmNlIGEgZGF5LCBtaWRuaWdodCAgICAgICAgICAgICAgICAgICB8IDAgMCAqICogKiBcdEBob3VybHkgICAgICAgICAgICAgICAgfCBSdW4gb25jZSBhbiBob3VyLCBiZWdpbm5pbmcgb2YgaG91ciAgICAgICAgfCAwICogKiAqICoiLCJ0eXBlIjoic3RyaW5nIn0sInNlY3JldCI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIHNlY3JldCB3aXRoIGNyZWRlbnRpYWxzIGZvciBjbG91ZCBwcm92aWRlcnMuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIl0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiSG90QmFja3VwU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIEhvdEJhY2t1cCIsInByb3BlcnRpZXMiOnsibWVzc2FnZSI6eyJ0eXBlIjoic3RyaW5nIn0sInN0YXRlIjp7InR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbInN0YXRlIl0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInNwZWMiXSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6W10sInN0b3JlZFZlcnNpb25zIjpbXX19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoib3BlcmF0b3JzLmNvcmVvcy5jb20vdjFhbHBoYTEiLCJraW5kIjoiQ2x1c3RlclNlcnZpY2VWZXJzaW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiYWxtLWV4YW1wbGVzIjoiW1xuICB7XG4gICAgXCJhcGlWZXJzaW9uXCI6IFwiaGF6ZWxjYXN0LmNvbS92MWFscGhhMVwiLFxuICAgIFwia2luZFwiOiBcIkhhemVsY2FzdFwiLFxuICAgIFwibWV0YWRhdGFcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiaGF6ZWxjYXN0XCJcbiAgICB9LFxuICAgIFwic3BlY1wiOiB7XG4gICAgICBcImNsdXN0ZXJTaXplXCI6IDMsXG4gICAgICBcImxpY2Vuc2VLZXlTZWNyZXRcIjogXCJoYXplbGNhc3QtbGljZW5zZS1rZXlcIixcbiAgICAgIFwicmVwb3NpdG9yeVwiOiBcImRvY2tlci5pby9oYXplbGNhc3QvaGF6ZWxjYXN0LWVudGVycHJpc2VcIixcbiAgICAgIFwidmVyc2lvblwiOiBcIjUuMS4yXCJcbiAgICB9XG4gIH0sXG4gIHtcbiAgICBcImFwaVZlcnNpb25cIjogXCJoYXplbGNhc3QuY29tL3YxYWxwaGExXCIsXG4gICAgXCJraW5kXCI6IFwiTWFuYWdlbWVudENlbnRlclwiLFxuICAgIFwibWV0YWRhdGFcIjoge1xuICAgICAgXCJuYW1lXCI6IFwibWFuYWdlbWVudGNlbnRlclwiXG4gICAgfSxcbiAgICBcInNwZWNcIjoge1xuICAgICAgXCJleHRlcm5hbENvbm5lY3Rpdml0eVwiOiB7XG4gICAgICAgIFwidHlwZVwiOiBcIkxvYWRCYWxhbmNlclwiXG4gICAgICB9LFxuICAgICAgXCJoYXplbGNhc3RDbHVzdGVyc1wiOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBcImFkZHJlc3NcIjogXCJoYXplbGNhc3RcIixcbiAgICAgICAgICBcIm5hbWVcIjogXCJkZXZcIlxuICAgICAgICB9XG4gICAgICBdLFxuICAgICAgXCJsaWNlbnNlS2V5U2VjcmV0XCI6IFwiaGF6ZWxjYXN0LWxpY2Vuc2Uta2V5XCIsXG4gICAgICBcInBlcnNpc3RlbmNlXCI6IHtcbiAgICAgICAgXCJlbmFibGVkXCI6IHRydWUsXG4gICAgICAgIFwic2l6ZVwiOiBcIjEwR2lcIlxuICAgICAgfSxcbiAgICAgIFwicmVwb3NpdG9yeVwiOiBcImhhemVsY2FzdC9tYW5hZ2VtZW50LWNlbnRlclwiLFxuICAgICAgXCJ2ZXJzaW9uXCI6IFwiNS4xLjNcIlxuICAgIH1cbiAgfSxcbiAge1xuICAgIFwiYXBpVmVyc2lvblwiOiBcImhhemVsY2FzdC5jb20vdjFhbHBoYTFcIixcbiAgICBcImtpbmRcIjogXCJNYXBcIixcbiAgICBcIm1ldGFkYXRhXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIm1hcFwiXG4gICAgfSxcbiAgICBcInNwZWNcIjoge1xuICAgICAgXCJoYXplbGNhc3RSZXNvdXJjZU5hbWVcIjogXCJoYXplbGNhc3RcIlxuICAgIH1cbiAgfVxuXSIsImNhcGFiaWxpdGllcyI6IlNlYW1sZXNzIFVwZ3JhZGVzIiwiY2F0ZWdvcmllcyI6IkRhdGFiYXNlIiwiY29udGFpbmVySW1hZ2UiOiJkb2NrZXIuaW8vaGF6ZWxjYXN0L2hhemVsY2FzdC1wbGF0Zm9ybS1vcGVyYXRvcjo1LjMiLCJjcmVhdGVkQXQiOiIyMDIyLTA2LTIyVDExOjU5OjU5WiIsImRlc2NyaXB0aW9uIjoiSW5zdGFsbCBIYXplbGNhc3QgY2x1c3RlcnMgaW4gS3ViZXJuZXRlcyBlbnZpcm9ubWVudHMuIiwib3BlcmF0b3JzLm9wZXJhdG9yZnJhbWV3b3JrLmlvL2J1aWxkZXIiOiJvcGVyYXRvci1zZGstdjEuMTMuMCtnaXQiLCJvcGVyYXRvcnMub3BlcmF0b3JmcmFtZXdvcmsuaW8vcHJvamVjdF9sYXlvdXQiOiJnby5rdWJlYnVpbGRlci5pby92MyIsInN1cHBvcnQiOiJIYXplbGNhc3QsIEluYyJ9LCJuYW1lIjoiaGF6ZWxjYXN0LXBsYXRmb3JtLW9wZXJhdG9yLnY1LjMuMCIsIm5hbWVzcGFjZSI6InBsYWNlaG9sZGVyIn0sInNwZWMiOnsiYXBpc2VydmljZWRlZmluaXRpb25zIjp7fSwiY3VzdG9tcmVzb3VyY2VkZWZpbml0aW9ucyI6eyJvd25lZCI6W3siZGVzY3JpcHRpb24iOiJIYXplbGNhc3QgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIGhhemVsY2FzdHMgQVBJIiwiZGlzcGxheU5hbWUiOiJIYXplbGNhc3QiLCJraW5kIjoiSGF6ZWxjYXN0IiwibmFtZSI6ImhhemVsY2FzdHMuaGF6ZWxjYXN0LmNvbSIsInZlcnNpb24iOiJ2MWFscGhhMSJ9LHsia2luZCI6IkhvdEJhY2t1cCIsIm5hbWUiOiJob3RiYWNrdXBzLmhhemVsY2FzdC5jb20iLCJ2ZXJzaW9uIjoidjFhbHBoYTEifSx7ImRlc2NyaXB0aW9uIjoiTWFuYWdlbWVudENlbnRlciBpcyB0aGUgU2NoZW1hIGZvciB0aGUgbWFuYWdlbWVudGNlbnRlcnMgQVBJIiwiZGlzcGxheU5hbWUiOiJNYW5hZ2VtZW50IENlbnRlciIsImtpbmQiOiJNYW5hZ2VtZW50Q2VudGVyIiwibmFtZSI6Im1hbmFnZW1lbnRjZW50ZXJzLmhhemVsY2FzdC5jb20iLCJ2ZXJzaW9uIjoidjFhbHBoYTEifSx7ImRlc2NyaXB0aW9uIjoiTWFwIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSBtYXBzIEFQSSIsImRpc3BsYXlOYW1lIjoiTWFwIiwia2luZCI6Ik1hcCIsIm5hbWUiOiJtYXBzLmhhemVsY2FzdC5jb20iLCJ2ZXJzaW9uIjoidjFhbHBoYTEifV19LCJkZXNjcmlwdGlvbiI6IiMgSGF6ZWxjYXN0IFBsYXRmb3JtIE9wZXJhdG9yICNcblxuRWFzaWx5IGRlcGxveSBIYXplbGNhc3QgY2x1c3RlcnMgYW5kIE1hbmFnZW1lbnQgQ2VudGVyIGludG8gS3ViZXJuZXRlcyBlbnZpcm9ubWVudHMgYW5kIG1hbmFnZSB0aGVpciBsaWZlY3ljbGVzLlxuXG4jIyBCZWZvcmUgWW91IFN0YXJ0XG5cbklmIHlvdSBhcmUgcGxhbm5pbmcgdG8gY3JlYXRlIEhhemVsY2FzdCBQbGF0Zm9ybSBFbnRlcnByaXNlIGNsdXN0ZXJzLCB5b3UgbmVlZCB0byBbY3JlYXRlIGEgc2VjcmV0XShodHRwczovL2RvY3MuaGF6ZWxjYXN0LmNvbS9vcGVyYXRvci9sYXRlc3QvZ2V0LXN0YXJ0ZWQjc3RlcC0yLXN0YXJ0LXRoZS1oYXplbGNhc3QtY2x1c3RlcikgZm9yIHRoZSBsaWNlbnNlLiBZb3UgY2FuIHJlcXVlc3QgYSB0cmlhbCBsaWNlbnNlIGtleSBmcm9tIFtoZXJlXShodHRwczovL3RyaWFscmVxdWVzdC5oYXplbGNhc3QuY29tKS5cblxuRm9yIEhhemVsY2FzdCBQbGF0Zm9ybSBjbHVzdGVycywgeW91IGNhbiBzaW1wbHkgY29udGludWUuXG5cbiMjIERvY3VtZW50YXRpb25cblxuMS4gW0dldCBzdGFydGVkXShodHRwczovL2RvY3MuaGF6ZWxjYXN0LmNvbS9vcGVyYXRvci9sYXRlc3QvZ2V0LXN0YXJ0ZWQpIHdpdGggdGhlIE9wZXJhdG9yLlxuMi4gW0Nvbm5lY3QgdG8gdGhlIGNsdXN0ZXIgZnJvbSBvdXRzaWRlIEt1YmVybmV0ZXNdKGh0dHBzOi8vZ3VpZGVzLmhhemVsY2FzdC5vcmcvaGF6ZWxjYXN0LXBsYXRmb3JtLW9wZXJhdG9yLWV4cG9zZS1leHRlcm5hbGx5L21haW4pXG4gIGZyb20gdGhlIG91dHNpZGUuXG5cbiMjIEZlYXR1cmVzXG5cbkhhemVsY2FzdCBQbGF0Zm9ybSBPcGVyYXRvciBzdXBwb3J0cyB0aGUgZmVhdHVyZXMgYmVsb3c6XG5cbiogQ3VzdG9tIHJlc291cmNlIGZvciBIYXplbGNhc3QgUGxhdGZvcm0gKE9wZW4gU291cmNlIFx1MDAyNiBFbnRlcnByaXNlKSBhbmQgTWFuYWdlbWVudCBDZW50ZXJcbiogT2JzZXJ2ZSBzdGF0dXMgb2YgSGF6ZWxjYXN0IGFuZCBNYW5hZ2VtZW50IENlbnRlciBjbHVzdGVyc1xuKiBTY2FsZSB1cCBhbmQgZG93biBIYXplbGNhc3QgY2x1c3RlcnNcbiogRXhwb3NlIEhhemVsY2FzdCBjbHVzdGVyIHRvIGV4dGVybmFsXG4gIGNsaWVudHMgKFtTbWFydCBcdTAwMjYgVW5pc29ja2V0XShodHRwczovL2RvY3MuaGF6ZWxjYXN0LmNvbS9oYXplbGNhc3QvbGF0ZXN0L2NsaWVudHMvamF2YSNqYXZhLWNsaWVudC1vcGVyYXRpb24tbW9kZXMpKVxuIiwiZGlzcGxheU5hbWUiOiJIYXplbGNhc3QgUGxhdGZvcm0gT3BlcmF0b3IiLCJpY29uIjpbeyJiYXNlNjRkYXRhIjoiaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQU1nQUFBRElDQVlBQUFDdFdLNmVBQUFBQ1hCSVdYTUFBQkNjQUFBUW5BRW16VG8wQUFBSFEwbEVRVlI0bk8zZGdYSGJSaEFGVURpVEF0U0JuQTZTRHV3SzBrTGNRVnhCSmhVa0hkZ3V3UlZZSFZnZEpPekFIU1FqUXBRRW1xUUU3QUZZM0wwM293bEhrdWtOZDg4a3lBTitWOVJ1OTJYL0JXdVlZZjUrTFB5LzhicncvY0VZeGVmUEFxRW14ZWZ2aDJMM3ROdjlmUEkyTEdHbStTdTNRTHJ1elpuYnNJUlo1cS9rQXZuMXpHMVl3aXp6OTZySXZleDJkNi85L2puNjdrL2Q5ZlcvUmU0ZlZwcS9VczhnZjd6d2V6Q0gyZVl2L2d4eWV2VWVlQlpoWGpQUFg0bG5rQThUZndZbHpEcC9zUVd5Mi8zK3pEc0diKzUvQjhwYllQNm12OFRxMzJ2KytzTGYvcVc3dnI2ZC9IZkJTdk0zN1Jta0wyN01ucGN2UGp5a21BWG5iL3d6eUdOeFZ5UC81TGV1Njk1NkppRms0ZmtidDBDbUYzZGdrVERkQ3ZQMzhwZFkvY0hPMTBCeDNmMmYvZXJBbmRGV21yL25uMEg2OTVrL2xOemZjdSttNjdwM1BpZmhvcFhuNy93QzZRdTcrelR5dDhLRkhmdllkZDJmRmdvRFNlWnZ1RUQ2MTNodjdqZDdMYjBqOTI1RmY5Ny8xekZLbXhMTzM2djdVeFJmSnp6WjZkLzkxL1gxMndTMU1KZms4MWR5dXp0VXgwc3M4a2o1RXVzY0IrbXNLZVZCK2luZTVtVk5hZC9tUGRaL3VQSlhvZUxlZDlmWGZ4ZTZMMXF3MHZ6WmFzSjJyREIvTml1eUxhazNLeDZNTDlMaW9Kd0Y1ODhKVTJ4VDZoT203dlIvNGZzWC9PWjdpNFBpRnBxL0VsYzErWExoTGJnYlcwV1kxY3p6VjJLcnlidUpQNE1TWnAyLytBTHBQMmo1ZU9JbkgzMEl5T3htbmorWEhtWDcwbDk2dEMvazVzbDNiaXdPRmpQai9KWGM3djc1ekcxWXdpenpWM0tCM0p5NURVdll3UHp0ZHYvdHY2Q1MrU3VkVWVpNGd6VVZuejhMaEpvVW43KzJ6a21YNHg3VDRPUFhXZ3kwbU9xWTV2cHJnVkRUNHljbmZUSTU3akdOOXJlbG5IUTU3akZOOXJlbG5IUTU3akZOOXJlTnpZbzJVOFkwM045V2N0TGx1TWMwMjkvNmM5TGx1TWMwM3Q4V2N0TGx1TWMwM2QrNmM5TGx1TWZvYjhXWC9YRlpvaGo5M2FzekoxMk9lNHorUHFqdjBxTXVqUnFqdndOMVhiemF4YlZqOVBjNzllU2t5M0dQMGQrVHRoK2dJK0FuUm44cnpVa1hFUmVqdndjVjVhUUxHWTNSMzlIMTVjOUo3OGx4bjBwL3A1S1REcy94RXF0a2ZkbnA3K2o2SEtRL3owRjZURVVINmFkNEc5RGJ2Tk5VL2pidnNldzU2WExjWS9UM0pGdE5obXcxMGQ4Qm14VWYyYXpZNmUreE9uUFM1YmpINk84REowejFuREIxVEgvMzZzMUpsK01lbzc5NzllZWt5M0dQYWJ5L0xlU2t5M0dQYWJxLzllZWt5M0dQYWJ5L0xqM0s5aDgvT2VsQmN0eGp0dGZmV3pucDQ4bHhqOWxTZnorVnV0T1djdExsdU1mb2IxajJuSFE1N2pFTjlyZTFHR2pISFRHM3djdnV6RTFPZXBBRkV2UHQvaXNyT2VsVmsrT2VqaGpvWEY0bi94ZGFUbnFRQlJLanZoZzU2Wk9wTDBaT2VwaWM5QmoxeGNoSkQxSmZqSnoweVd4V2pGRmZqSnowTVBYRnlFbWZURTU2alBwaTVLU0hxUzlHVHZwa2NyUmoxQmNqSnoxQWZUSHEyNU9UM2xQZlUrcDc0TktqajlUWHFlK1lpMWNQcVU5OUEzTFNoOVNudmdFQk91ZXBMMFpPZWlGMVJyQ3A3MEJPZWlIYkQvRlVYM1gxeVVtZlRuMHhjdEpoNjd6RVVwLzZMdFRuSVAxNTZvdVJrejZSdHlsajFCY2pKejFBZlRGeTBpY1dacXVFK3FhVGsxNkErbUxVTnlBbnZhZStwOVQzd0FsVFBmVWRVOStlbkhUMW5hYStQVG5wNnJ0TVRucVluUFFZOWNYSVNROVJYNHljOUFKY09qTkdmVEZ5MG9QVUY5TndmWExTODFCZnpDejF5VW5QUTMweGN0TEQxQmNqSnoxTURIUk05dnJrcEFjWndKanM5VFdYazE1NmdSRHprcTBUTEVnTWRDWnI3TGthNXlyNVN5dzU2VUhaNjhzdVgvenprSnoweWJMWGw1MmM5REE1MzNXVGt4NGs1N3R1Y3RJbnM5bXViallyaHNuNXJwdWM5TW5rZk5kTlRucVluTys2eVVtZlRJNTIzZlRYWlgvdUxWOWZkdnE3SnllOXQyeDkyZW52QTVjZWZiVHMxUXV6MHQ4QkY2OGVhbnVSNk85MzVLUVB6VmRmZHZwN2tnQ2Q4OHJVbDUzK3lra1BtbFpmZHZwN0lDZDlzZnF5MDkvUjlSMXkwcThTbmd4eisrVDg1N3oxclgzeDV1Zm83MVQ3K2c0SDZSbFBvN3c2Y3p1THpLZWVIdFBmOGZZMWVZbFZzcjdzOUhkMGZRN1NuK2NnUFVaTytrVGU1czFBZitXa1QxQyt2dXowOXlSYlRZWnNOZEhmQVpzVkg5bXMyT252TVRucFBZdmpLZjE5NElTcG5oT21qdW52bnB6MHRlckxUbi8zNUtSbjN5cXlOam5wWVhLKzZ5WW5QVVRPZDkza3BCZmcwcU4xYytuUklEbmZkZHRlZjIvbHBJK1h2YjdzdHRUZlQ2WHVWRTQ2dFR4K2N0TERzdGVYblp6ME1ESExkWk9USG1TQjFFMU9ldVhra01jMDkvaTFGUU50ejFWTS9zZFBUanBjSUNjZGxweS9sbkxTcVp1Y2RGaDYvdHJZckVqZDVLVERPdk5YZjA0NmRaT1REdXZOWDkwNTZkUk5UanFzTzM5MTVxUlROem5wa0dQKzZycDROWFdUa3c2NTVtLzdBVHJVVFU1NnBSRm54TWhKLzg3MlF6S0prWk0reWpaeXlJbEpQbjlieVVtbmJuTFNYOEJMck5iSlNUL0pRVHJmazVQdWJWNWVRRTQ2NUowL1cwM1lEam5wa0d2KzZzeEpwMjV5MGlISC9OV2JrMDdkNUtURCt2UFhRazQ2ZFpPVERtdk5uMHVQc24xeTBtSFUvTWxKaHd2ekp5Y2R0amQvY3NoWms1eDB1RWhPT2x4UWR2NjZydnNmaUpBQXg4cWZvVG9BQUFBQVNVVk9SSzVDWUlJPSIsIm1lZGlhdHlwZSI6ImltYWdlL3BuZyJ9XSwiaW5zdGFsbCI6eyJzcGVjIjp7ImNsdXN0ZXJQZXJtaXNzaW9ucyI6W3sicnVsZXMiOlt7ImFwaUdyb3VwcyI6WyIiXSwicmVzb3VyY2VzIjpbImVuZHBvaW50cyIsIm5vZGVzIiwicG9kcyIsInNlY3JldHMiLCJzZXJ2aWNlcyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Il19LHsiYXBpR3JvdXBzIjpbImhhemVsY2FzdC5jb20iXSwicmVzb3VyY2VzIjpbIm1hcHMiXSwidmVyYnMiOlsiY3JlYXRlIiwiZGVsZXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsiaGF6ZWxjYXN0LmNvbSJdLCJyZXNvdXJjZXMiOlsibWFwcy9maW5hbGl6ZXJzIl0sInZlcmJzIjpbInVwZGF0ZSJdfSx7ImFwaUdyb3VwcyI6WyJoYXplbGNhc3QuY29tIl0sInJlc291cmNlcyI6WyJtYXBzL3N0YXR1cyJdLCJ2ZXJicyI6WyJnZXQiLCJwYXRjaCIsInVwZGF0ZSJdfSx7ImFwaUdyb3VwcyI6WyJyYmFjLmF1dGhvcml6YXRpb24uazhzLmlvIl0sInJlc291cmNlcyI6WyJjbHVzdGVycm9sZWJpbmRpbmdzIiwiY2x1c3RlcnJvbGVzIl0sInZlcmJzIjpbImNyZWF0ZSIsImRlbGV0ZSIsImdldCIsImxpc3QiLCJwYXRjaCIsInVwZGF0ZSIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbInNlY3VyaXR5Lm9wZW5zaGlmdC5pbyJdLCJyZXNvdXJjZXMiOlsic2VjdXJpdHljb250ZXh0Y29uc3RyYWludHMiXSwidmVyYnMiOlsidXNlIl19XSwic2VydmljZUFjY291bnROYW1lIjoiaGF6ZWxjYXN0LXBsYXRmb3JtLWNvbnRyb2xsZXItbWFuYWdlciJ9XSwiZGVwbG95bWVudHMiOlt7Im5hbWUiOiJoYXplbGNhc3QtcGxhdGZvcm0tY29udHJvbGxlci1tYW5hZ2VyIiwic3BlYyI6eyJyZXBsaWNhcyI6MSwic2VsZWN0b3IiOnsibWF0Y2hMYWJlbHMiOnsiY29udHJvbC1wbGFuZSI6ImNvbnRyb2xsZXItbWFuYWdlciJ9fSwic3RyYXRlZ3kiOnt9LCJ0ZW1wbGF0ZSI6eyJtZXRhZGF0YSI6eyJsYWJlbHMiOnsiY29udHJvbC1wbGFuZSI6ImNvbnRyb2xsZXItbWFuYWdlciJ9fSwic3BlYyI6eyJjb250YWluZXJzIjpbeyJhcmdzIjpbIi0tbGVhZGVyLWVsZWN0PWZhbHNlIl0sImNvbW1hbmQiOlsiL21hbmFnZXIiXSwiZW52IjpbeyJuYW1lIjoiV0FUQ0hfTkFNRVNQQUNFIiwidmFsdWVGcm9tIjp7ImZpZWxkUmVmIjp7ImZpZWxkUGF0aCI6Im1ldGFkYXRhLmFubm90YXRpb25zWydvbG0udGFyZ2V0TmFtZXNwYWNlcyddIn19fSx7Im5hbWUiOiJOQU1FU1BBQ0UiLCJ2YWx1ZUZyb20iOnsiZmllbGRSZWYiOnsiZmllbGRQYXRoIjoibWV0YWRhdGEubmFtZXNwYWNlIn19fSx7Im5hbWUiOiJQT0RfTkFNRSIsInZhbHVlRnJvbSI6eyJmaWVsZFJlZiI6eyJmaWVsZFBhdGgiOiJtZXRhZGF0YS5uYW1lIn19fV0sImltYWdlIjoiZG9ja2VyLmlvL2hhemVsY2FzdC9oYXplbGNhc3QtcGxhdGZvcm0tb3BlcmF0b3I6NS4zIiwiaW1hZ2VQdWxsUG9saWN5IjoiQWx3YXlzIiwibGl2ZW5lc3NQcm9iZSI6eyJodHRwR2V0Ijp7InBhdGgiOiIvaGVhbHRoeiIsInBvcnQiOjgwODF9LCJpbml0aWFsRGVsYXlTZWNvbmRzIjoxNSwicGVyaW9kU2Vjb25kcyI6MjB9LCJuYW1lIjoibWFuYWdlciIsInJlYWRpbmVzc1Byb2JlIjp7Imh0dHBHZXQiOnsicGF0aCI6Ii9yZWFkeXoiLCJwb3J0Ijo4MDgxfSwiaW5pdGlhbERlbGF5U2Vjb25kcyI6NSwicGVyaW9kU2Vjb25kcyI6MTB9LCJyZXNvdXJjZXMiOnsibGltaXRzIjp7ImNwdSI6IjIwMG0iLCJtZW1vcnkiOiIzMDBNaSJ9LCJyZXF1ZXN0cyI6eyJjcHUiOiIxMDBtIiwibWVtb3J5IjoiMTAwTWkifX0sInNlY3VyaXR5Q29udGV4dCI6eyJhbGxvd1ByaXZpbGVnZUVzY2FsYXRpb24iOmZhbHNlfX1dLCJzZXJ2aWNlQWNjb3VudE5hbWUiOiJoYXplbGNhc3QtcGxhdGZvcm0tY29udHJvbGxlci1tYW5hZ2VyIiwidGVybWluYXRpb25HcmFjZVBlcmlvZFNlY29uZHMiOjEwfX19fV0sInBlcm1pc3Npb25zIjpbeyJydWxlcyI6W3siYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsiY29uZmlnbWFwcyIsImV2ZW50cyIsInBvZHMiLCJzZXJ2aWNlYWNjb3VudHMiLCJzZXJ2aWNlcyJdLCJ2ZXJicyI6WyJjcmVhdGUiLCJkZWxldGUiLCJnZXQiLCJsaXN0IiwicGF0Y2giLCJ1cGRhdGUiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyIiXSwicmVzb3VyY2VzIjpbImV2ZW50cyIsInBvZHMiLCJzZXJ2aWNlYWNjb3VudHMiLCJzZXJ2aWNlcyJdLCJ2ZXJicyI6WyJjcmVhdGUiLCJkZWxldGUiLCJnZXQiLCJsaXN0IiwicGF0Y2giLCJ1cGRhdGUiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyJhcHBzIl0sInJlc291cmNlcyI6WyJkZXBsb3ltZW50cyJdLCJ2ZXJicyI6WyJnZXQiXX0seyJhcGlHcm91cHMiOlsiYXBwcyJdLCJyZXNvdXJjZXMiOlsic3RhdGVmdWxzZXRzIl0sInZlcmJzIjpbImNyZWF0ZSIsImRlbGV0ZSIsImdldCIsImxpc3QiLCJwYXRjaCIsInVwZGF0ZSIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbImhhemVsY2FzdC5jb20iXSwicmVzb3VyY2VzIjpbImhhemVsY2FzdHMiXSwidmVyYnMiOlsiY3JlYXRlIiwiZGVsZXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsiaGF6ZWxjYXN0LmNvbSJdLCJyZXNvdXJjZXMiOlsiaGF6ZWxjYXN0cy9maW5hbGl6ZXJzIl0sInZlcmJzIjpbInVwZGF0ZSJdfSx7ImFwaUdyb3VwcyI6WyJoYXplbGNhc3QuY29tIl0sInJlc291cmNlcyI6WyJoYXplbGNhc3RzL3N0YXR1cyJdLCJ2ZXJicyI6WyJnZXQiLCJwYXRjaCIsInVwZGF0ZSJdfSx7ImFwaUdyb3VwcyI6WyJoYXplbGNhc3QuY29tIl0sInJlc291cmNlcyI6WyJob3RiYWNrdXBzIl0sInZlcmJzIjpbImNyZWF0ZSIsImRlbGV0ZSIsImdldCIsImxpc3QiLCJwYXRjaCIsInVwZGF0ZSIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbImhhemVsY2FzdC5jb20iXSwicmVzb3VyY2VzIjpbImhvdGJhY2t1cHMvZmluYWxpemVycyJdLCJ2ZXJicyI6WyJ1cGRhdGUiXX0seyJhcGlHcm91cHMiOlsiaGF6ZWxjYXN0LmNvbSJdLCJyZXNvdXJjZXMiOlsiaG90YmFja3Vwcy9zdGF0dXMiXSwidmVyYnMiOlsiZ2V0IiwicGF0Y2giLCJ1cGRhdGUiXX0seyJhcGlHcm91cHMiOlsiaGF6ZWxjYXN0LmNvbSJdLCJyZXNvdXJjZXMiOlsibWFuYWdlbWVudGNlbnRlcnMiXSwidmVyYnMiOlsiY3JlYXRlIiwiZGVsZXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsiaGF6ZWxjYXN0LmNvbSJdLCJyZXNvdXJjZXMiOlsibWFuYWdlbWVudGNlbnRlcnMvZmluYWxpemVycyJdLCJ2ZXJicyI6WyJ1cGRhdGUiXX0seyJhcGlHcm91cHMiOlsiaGF6ZWxjYXN0LmNvbSJdLCJyZXNvdXJjZXMiOlsibWFuYWdlbWVudGNlbnRlcnMvc3RhdHVzIl0sInZlcmJzIjpbImdldCIsInBhdGNoIiwidXBkYXRlIl19LHsiYXBpR3JvdXBzIjpbInJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8iXSwicmVzb3VyY2VzIjpbInJvbGViaW5kaW5ncyIsInJvbGVzIl0sInZlcmJzIjpbImNyZWF0ZSIsImRlbGV0ZSIsImdldCIsImxpc3QiLCJwYXRjaCIsInVwZGF0ZSIsIndhdGNoIl19XSwic2VydmljZUFjY291bnROYW1lIjoiaGF6ZWxjYXN0LXBsYXRmb3JtLWNvbnRyb2xsZXItbWFuYWdlciJ9XX0sInN0cmF0ZWd5IjoiZGVwbG95bWVudCJ9LCJpbnN0YWxsTW9kZXMiOlt7InN1cHBvcnRlZCI6dHJ1ZSwidHlwZSI6Ik93bk5hbWVzcGFjZSJ9LHsic3VwcG9ydGVkIjpmYWxzZSwidHlwZSI6IlNpbmdsZU5hbWVzcGFjZSJ9LHsic3VwcG9ydGVkIjpmYWxzZSwidHlwZSI6Ik11bHRpTmFtZXNwYWNlIn0seyJzdXBwb3J0ZWQiOmZhbHNlLCJ0eXBlIjoiQWxsTmFtZXNwYWNlcyJ9XSwia2V5d29yZHMiOlsiaGF6ZWxjYXN0Iiwia2V5dmFsdWUiLCJpbi1tZW1vcnkiLCJkYXRhYmFzZSIsImNhY2hpbmciXSwibGlua3MiOlt7Im5hbWUiOiJEb2N1bWVudGF0aW9uIiwidXJsIjoiaHR0cHM6Ly9kb2NzLmhhemVsY2FzdC5jb20vb3BlcmF0b3IvbGF0ZXN0LyJ9LHsibmFtZSI6IlNvdXJjZSBDb2RlIiwidXJsIjoiaHR0cHM6Ly9naXRodWIuY29tL2hhemVsY2FzdC9oYXplbGNhc3QtcGxhdGZvcm0tb3BlcmF0b3IifV0sIm1haW50YWluZXJzIjpbeyJlbWFpbCI6ImNsb3VkbmF0aXZlQGhhemVsY2FzdC5jb20iLCJuYW1lIjoiSGF6ZWxjYXN0IENsb3VkIE5hdGl2ZSBUZWFtIn1dLCJtYXR1cml0eSI6ImFscGhhIiwibWluS3ViZVZlcnNpb24iOiIxLjE2LjAiLCJwcm92aWRlciI6eyJuYW1lIjoiSGF6ZWxjYXN0LCBJbmMifSwidmVyc2lvbiI6IjUuMy4wIn19
relatedImages:
- image: docker.io/hazelcast/hazelcast-platform-operator:5.3
  name: ""
- image: quay.io/openshift-community-operators/hazelcast-platform-operator@sha256:fc5348ce96fea63bb378ad5a072fe528826bf475ae3cd2a66341938afb587d7f
  name: ""
schema: olm.bundle
---
image: quay.io/openshift-community-operators/hazelcast-platform-operator@sha256:3154681656a0d0cb5600c9e7f15be9fbd1b531bde360ceb6cbe2a8171b17d2d2
name: hazelcast-platform-operator.v5.4.0
package: hazelcast-platform-operator
properties:
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: Hazelcast
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: HotBackup
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: ManagementCenter
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: Map
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: WanReplication
    version: v1alpha1
- type: olm.package
  value:
    packageName: hazelcast-platform-operator
    version: 5.4.0
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjQuMSJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibmFtZSI6ImhvdGJhY2t1cHMuaGF6ZWxjYXN0LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiaGF6ZWxjYXN0LmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJIb3RCYWNrdXAiLCJsaXN0S2luZCI6IkhvdEJhY2t1cExpc3QiLCJwbHVyYWwiOiJob3RiYWNrdXBzIiwic2hvcnROYW1lcyI6WyJoYiJdLCJzaW5ndWxhciI6ImhvdGJhY2t1cCJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJkZXNjcmlwdGlvbiI6IkN1cnJlbnQgc3RhdGUgb2YgdGhlIEhvdEJhY2t1cCBwcm9jZXNzIiwianNvblBhdGgiOiIuc3RhdHVzLnN0YXRlIiwibmFtZSI6IlN0YXR1cyIsInR5cGUiOiJzdHJpbmcifSx7ImRlc2NyaXB0aW9uIjoiTWVzc2FnZSBmb3IgdGhlIGN1cnJlbnQgSG90QmFja3VwIENvbmZpZyIsImpzb25QYXRoIjoiLnN0YXR1cy5tZXNzYWdlIiwibmFtZSI6Ik1lc3NhZ2UiLCJwcmlvcml0eSI6MSwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkhvdEJhY2t1cCBpcyB0aGUgU2NoZW1hIGZvciB0aGUgaG90IGJhY2t1cCBBUEkiLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuIFNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZCBtYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy4gU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uIENhbm5vdCBiZSB1cGRhdGVkLiBJbiBDYW1lbENhc2UuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IkhvdEJhY2t1cFNwZWMgZGVmaW5lcyB0aGUgU3BlYyBvZiBIb3RCYWNrdXAiLCJwcm9wZXJ0aWVzIjp7ImJ1Y2tldFVSSSI6eyJkZXNjcmlwdGlvbiI6IlVSTCBvZiB0aGUgYnVja2V0IHRvIGRvd25sb2FkIEhvdEJhY2t1cCBmb2xkZXJzLiIsInR5cGUiOiJzdHJpbmcifSwiaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIjp7ImRlc2NyaXB0aW9uIjoiSGF6ZWxjYXN0UmVzb3VyY2VOYW1lIGRlZmluZXMgdGhlIG5hbWUgb2YgdGhlIEhhemVsY2FzdCByZXNvdXJjZSIsInR5cGUiOiJzdHJpbmcifSwic2NoZWR1bGUiOnsiZGVzY3JpcHRpb24iOiJTY2hlZHVsZSBjb250YWlucyBhIGNyb250YWItbGlrZSBleHByZXNzaW9uIHRoYXQgZGVmaW5lcyB0aGUgc2NoZWR1bGUgaW4gd2hpY2ggSG90QmFja3VwIHdpbGwgYmUgc3RhcnRlZC4gSWYgdGhlIFNjaGVkdWxlIGlzIGVtcHR5IHRoZSBIb3RCYWNrdXAgd2lsbCBzdGFydCBvbmx5IG9uY2Ugd2hlbiBhcHBsaWVkLiAtLS0gU2V2ZXJhbCBwcmUtZGVmaW5lZCBzY2hlZHVsZXMgaW4gcGxhY2Ugb2YgYSBjcm9uIGV4cHJlc3Npb24gY2FuIGJlIHVzZWQuIFx0RW50cnkgICAgICAgICAgICAgICAgICB8IERlc2NyaXB0aW9uICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IEVxdWl2YWxlbnQgVG8gXHQtLS0tLSAgICAgICAgICAgICAgICAgIHwgLS0tLS0tLS0tLS0gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgLS0tLS0tLS0tLS0tLSBcdEB5ZWFybHkgKG9yIEBhbm51YWxseSkgfCBSdW4gb25jZSBhIHllYXIsIG1pZG5pZ2h0LCBKYW4uIDFzdCAgICAgICAgfCAwIDAgMSAxICogXHRAbW9udGhseSAgICAgICAgICAgICAgIHwgUnVuIG9uY2UgYSBtb250aCwgbWlkbmlnaHQsIGZpcnN0IG9mIG1vbnRoIHwgMCAwIDEgKiAqIFx0QHdlZWtseSAgICAgICAgICAgICAgICB8IFJ1biBvbmNlIGEgd2VlaywgbWlkbmlnaHQgYmV0d2VlbiBTYXQvU3VuICB8IDAgMCAqICogMCBcdEBkYWlseSAob3IgQG1pZG5pZ2h0KSAgfCBSdW4gb25jZSBhIGRheSwgbWlkbmlnaHQgICAgICAgICAgICAgICAgICAgfCAwIDAgKiAqICogXHRAaG91cmx5ICAgICAgICAgICAgICAgIHwgUnVuIG9uY2UgYW4gaG91ciwgYmVnaW5uaW5nIG9mIGhvdXIgICAgICAgIHwgMCAqICogKiAqIiwidHlwZSI6InN0cmluZyJ9LCJzZWNyZXQiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBzZWNyZXQgd2l0aCBjcmVkZW50aWFscyBmb3IgY2xvdWQgcHJvdmlkZXJzLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImhhemVsY2FzdFJlc291cmNlTmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IkhvdEJhY2t1cFN0YXR1cyBkZWZpbmVzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBIb3RCYWNrdXAiLCJwcm9wZXJ0aWVzIjp7Im1lc3NhZ2UiOnsidHlwZSI6InN0cmluZyJ9LCJzdGF0ZSI6eyJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJzdGF0ZSJdLCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJzcGVjIl0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOltdLCJzdG9yZWRWZXJzaW9ucyI6W119fQ==
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjQuMSJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibmFtZSI6IndhbnJlcGxpY2F0aW9ucy5oYXplbGNhc3QuY29tIn0sInNwZWMiOnsiZ3JvdXAiOiJoYXplbGNhc3QuY29tIiwibmFtZXMiOnsia2luZCI6IldhblJlcGxpY2F0aW9uIiwibGlzdEtpbmQiOiJXYW5SZXBsaWNhdGlvbkxpc3QiLCJwbHVyYWwiOiJ3YW5yZXBsaWNhdGlvbnMiLCJzaG9ydE5hbWVzIjpbIndyIl0sInNpbmd1bGFyIjoid2FucmVwbGljYXRpb24ifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3siZGVzY3JpcHRpb24iOiJDdXJyZW50IHN0YXRlIG9mIHRoZSBIYXplbGNhc3QgV0FOIFJlcGxpY2F0aW9uIiwianNvblBhdGgiOiIuc3RhdHVzLnN0YXR1cyIsIm5hbWUiOiJTdGF0dXMiLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6Ik1lc3NhZ2UgZm9yIHRoZSBjdXJyZW50IFdhblJlcGxpY2F0aW9uIENvbmZpZyIsImpzb25QYXRoIjoiLnN0YXR1cy5tZXNzYWdlIiwibmFtZSI6Ik1lc3NhZ2UiLCJwcmlvcml0eSI6MSwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IldhblJlcGxpY2F0aW9uIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSB3YW5yZXBsaWNhdGlvbnMgQVBJIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJXYW5SZXBsaWNhdGlvblNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBXYW5SZXBsaWNhdGlvbiIsInByb3BlcnRpZXMiOnsiYWNrbm93bGVkZ2VtZW50Ijp7ImRlc2NyaXB0aW9uIjoiQWNrbm93bGVkZ2VtZW50IGlzIHRoZSBjb25maWd1cmF0aW9uIGZvciB0aGUgY29uZGl0aW9uIHdoZW4gdGhlIG5leHQgYmF0Y2ggb2YgV0FOIGV2ZW50cyBhcmUgc2VudC4iLCJwcm9wZXJ0aWVzIjp7InRpbWVvdXQiOnsiZGVmYXVsdCI6NjAwMDAsImRlc2NyaXB0aW9uIjoiVGltZW91dCByZXByZXNlbnRzIHRoZSB0aW1lIHRoZSBzb3VyY2UgY2x1c3RlciB3YWl0cyBmb3IgdGhlIGFja25vd2xlZGdlbWVudC4gQWZ0ZXIgdGltZW91dCwgdGhlIGV2ZW50cyB3aWxsIGJlIHJlc2VudC4iLCJmb3JtYXQiOiJpbnQzMiIsInR5cGUiOiJpbnRlZ2VyIn0sInR5cGUiOnsiZGVmYXVsdCI6IkFDS19PTl9PUEVSQVRJT05fQ09NUExFVEUiLCJkZXNjcmlwdGlvbiI6IlR5cGUgcmVwcmVzZW50cyBob3cgYSBiYXRjaCBvZiByZXBsaWNhdGlvbiBldmVudHMgaXMgY29uc2lkZXJlZCBzdWNjZXNzZnVsbHkgcmVwbGljYXRlZC4iLCJlbnVtIjpbIkFDS19PTl9PUEVSQVRJT05fQ09NUExFVEUiLCJBQ0tfT05fUkVDRUlQVCJdLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sImJhdGNoIjp7ImRlc2NyaXB0aW9uIjoiQmF0Y2ggaXMgdGhlIGNvbmZpZ3VyYXRpb24gZm9yIFdBTiBldmVudHMgYmF0Y2guIiwicHJvcGVydGllcyI6eyJtYXhpbXVtRGVsYXkiOnsiZGVmYXVsdCI6MTAwMCwiZGVzY3JpcHRpb24iOiJNYXhpbXVtRGVsYXkgcmVwcmVzZW50cyB0aGUgbWF4aW11bSBkZWxheSBpbiBtaWxsaXNlY29uZHMuIElmIHRoZSBiYXRjaCBzaXplIGlzIG5vdCByZWFjaGVkLCB0aGUgZXZlbnRzIHdpbGwgYmUgc2VudCBhZnRlciB0aGUgbWF4aW11bSBkZWxheS4iLCJmb3JtYXQiOiJpbnQzMiIsInR5cGUiOiJpbnRlZ2VyIn0sInNpemUiOnsiZGVmYXVsdCI6NTAwLCJkZXNjcmlwdGlvbiI6IlNpemUgcmVwcmVzZW50cyB0aGUgbWF4aW11bSBiYXRjaCBzaXplLiIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifX0sInR5cGUiOiJvYmplY3QifSwiZW5kcG9pbnRzIjp7ImRlc2NyaXB0aW9uIjoiRW5kcG9pbnRzIGlzIHRoZSB0YXJnZXQgY2x1c3RlciBlbmRwb2ludHMuIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn0sIm1hcFJlc291cmNlTmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik1hcFJlc291cmNlTmFtZSBpcyB0aGUgbmFtZSBvZiBNYXAgY3VzdG9tIHJlc291cmNlIHdoaWNoIFdBTiByZXBsaWNhdGlvbiB3aWxsIGJlIGFwcGxpZWQgdG8uIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn0sInF1ZXVlIjp7ImRlc2NyaXB0aW9uIjoiUXVldWUgaXMgdGhlIGNvbmZpZ3VyYXRpb24gZm9yIFdBTiBldmVudHMgcXVldWUuIiwicHJvcGVydGllcyI6eyJjYXBhY2l0eSI6eyJkZWZhdWx0IjoxMDAwMCwiZGVzY3JpcHRpb24iOiJDYXBhY2l0eSBpcyB0aGUgdG90YWwgY2FwYWNpdHkgb2YgV0FOIHF1ZXVlLiIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifSwiZnVsbEJlaGF2aW9yIjp7ImRlZmF1bHQiOiJESVNDQVJEX0FGVEVSX01VVEFUSU9OIiwiZGVzY3JpcHRpb24iOiJGdWxsQmVoYXZpb3IgcmVwcmVzZW50cyB0aGUgYmVoYXZpb3Igb2YgdGhlIG5ldyBhcnJpdmFsIHdoZW4gdGhlIHF1ZXVlIGlzIGZ1bGwuIiwiZW51bSI6WyJESVNDQVJEX0FGVEVSX01VVEFUSU9OIiwiVEhST1dfRVhDRVBUSU9OIiwiVEhST1dfRVhDRVBUSU9OX09OTFlfSUZfUkVQTElDQVRJT05fQUNUSVZFIl0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwidGFyZ2V0Q2x1c3Rlck5hbWUiOnsiZGVzY3JpcHRpb24iOiJDbHVzdGVyTmFtZSBpcyB0aGUgY2x1c3Rlck5hbWUgZmllbGQgb2YgdGhlIHRhcmdldCBIYXplbGNhc3QgcmVzb3VyY2UuIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJlbmRwb2ludHMiLCJtYXBSZXNvdXJjZU5hbWUiLCJ0YXJnZXRDbHVzdGVyTmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IldhblJlcGxpY2F0aW9uU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIFdhblJlcGxpY2F0aW9uIiwicHJvcGVydGllcyI6eyJtZXNzYWdlIjp7ImRlc2NyaXB0aW9uIjoiTWVzc2FnZSBpcyB0aGUgZmllbGQgdG8gc2hvdyBkZXRhaWwgaW5mb3JtYXRpb24gb3IgZXJyb3IiLCJ0eXBlIjoic3RyaW5nIn0sInB1Ymxpc2hlcklkIjp7ImRlc2NyaXB0aW9uIjoiUHVibGlzaGVySWQgaXMgdGhlIElEIHVzZWQgZm9yIFdBTiBwdWJsaXNoZXIgSUQiLCJ0eXBlIjoic3RyaW5nIn0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IlN0YXR1cyBpcyB0aGUgc3RhdHVzIG9mIFdBTiByZXBsaWNhdGlvbiIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOltdLCJzdG9yZWRWZXJzaW9ucyI6W119fQ==
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: docker.io/hazelcast/hazelcast-platform-operator:5.4
  name: ""
- image: quay.io/openshift-community-operators/hazelcast-platform-operator@sha256:3154681656a0d0cb5600c9e7f15be9fbd1b531bde360ceb6cbe2a8171b17d2d2
  name: ""
schema: olm.bundle
---
image: quay.io/openshift-community-operators/hazelcast-platform-operator@sha256:8e7f6d9b9e39f4cd7693d9168819d93bcebd802f37cee9a34127adc57242759a
name: hazelcast-platform-operator.v5.5.0
package: hazelcast-platform-operator
properties:
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: CronHotBackup
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: Hazelcast
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: HotBackup
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: ManagementCenter
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: Map
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: MultiMap
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: ReplicatedMap
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: Topic
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: WanReplication
    version: v1alpha1
- type: olm.package
  value:
    packageName: hazelcast-platform-operator
    version: 5.5.0
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjQuMSJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibmFtZSI6Im11bHRpbWFwcy5oYXplbGNhc3QuY29tIn0sInNwZWMiOnsiZ3JvdXAiOiJoYXplbGNhc3QuY29tIiwibmFtZXMiOnsia2luZCI6Ik11bHRpTWFwIiwibGlzdEtpbmQiOiJNdWx0aU1hcExpc3QiLCJwbHVyYWwiOiJtdWx0aW1hcHMiLCJzaG9ydE5hbWVzIjpbIm1tYXAiXSwic2luZ3VsYXIiOiJtdWx0aW1hcCJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJkZXNjcmlwdGlvbiI6IkN1cnJlbnQgc3RhdGUgb2YgdGhlIE11bHRpTWFwIENvbmZpZyIsImpzb25QYXRoIjoiLnN0YXR1cy5zdGF0ZSIsIm5hbWUiOiJTdGF0dXMiLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6Ik1lc3NhZ2UgZm9yIHRoZSBjdXJyZW50IE11bHRpTWFwIENvbmZpZyIsImpzb25QYXRoIjoiLnN0YXR1cy5tZXNzYWdlIiwibmFtZSI6Ik1lc3NhZ2UiLCJwcmlvcml0eSI6MSwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6Ik11bHRpTWFwIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSBtdWx0aW1hcHMgQVBJIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJNdWx0aU1hcFNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBNdWx0aU1hcCIsInByb3BlcnRpZXMiOnsiYmFja3VwQ291bnQiOnsiZGVmYXVsdCI6MSwiZGVzY3JpcHRpb24iOiJDb3VudCBvZiBzeW5jaHJvbm91cyBiYWNrdXBzLiIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifSwiYmluYXJ5Ijp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6IlNwZWNpZmllcyBpbiB3aGljaCBmb3JtYXQgZGF0YSB3aWxsIGJlIHN0b3JlZCBpbiB5b3VyIG11bHRpTWFwLiBmYWxzZTogT0JKRUNUIHRydWU6IEJJTkFSWSIsInR5cGUiOiJib29sZWFuIn0sImNvbGxlY3Rpb25UeXBlIjp7ImRlZmF1bHQiOiJTRVQiLCJkZXNjcmlwdGlvbiI6IlR5cGUgb2YgdGhlIHZhbHVlIGNvbGxlY3Rpb24iLCJlbnVtIjpbIlNFVCIsIkxJU1QiXSwidHlwZSI6InN0cmluZyJ9LCJoYXplbGNhc3RSZXNvdXJjZU5hbWUiOnsiZGVzY3JpcHRpb24iOiJIYXplbGNhc3RSZXNvdXJjZU5hbWUgZGVmaW5lcyB0aGUgbmFtZSBvZiB0aGUgSGF6ZWxjYXN0IHJlc291cmNlLiIsIm1pbkxlbmd0aCI6MSwidHlwZSI6InN0cmluZyJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgbXVsdGlNYXAgY29uZmlnIHRvIGJlIGNyZWF0ZWQuIElmIGVtcHR5LCBDUiBuYW1lIHdpbGwgYmUgdXNlZC4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJoYXplbGNhc3RSZXNvdXJjZU5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJNdWx0aU1hcFN0YXR1cyBkZWZpbmVzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBNdWx0aU1hcCIsInByb3BlcnRpZXMiOnsibWVtYmVyU3RhdHVzZXMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsiZW51bSI6WyJTdWNjZXNzIiwiRmFpbGVkIiwiUGVuZGluZyIsIlBlcnNpc3RpbmciLCJUZXJtaW5hdGluZyJdLCJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJvYmplY3QifSwibWVzc2FnZSI6eyJ0eXBlIjoic3RyaW5nIn0sInN0YXRlIjp7ImVudW0iOlsiU3VjY2VzcyIsIkZhaWxlZCIsIlBlbmRpbmciLCJQZXJzaXN0aW5nIiwiVGVybWluYXRpbmciXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6W10sInN0b3JlZFZlcnNpb25zIjpbXX19
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjQuMSJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibmFtZSI6ImNyb25ob3RiYWNrdXBzLmhhemVsY2FzdC5jb20ifSwic3BlYyI6eyJncm91cCI6ImhhemVsY2FzdC5jb20iLCJuYW1lcyI6eyJraW5kIjoiQ3JvbkhvdEJhY2t1cCIsImxpc3RLaW5kIjoiQ3JvbkhvdEJhY2t1cExpc3QiLCJwbHVyYWwiOiJjcm9uaG90YmFja3VwcyIsInNob3J0TmFtZXMiOlsiY2hiIl0sInNpbmd1bGFyIjoiY3JvbmhvdGJhY2t1cCJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJkZXNjcmlwdGlvbiI6IlN1c3BlbnRpb24gc3RhdHVzIG9mIHRoZSBDcm9uSG90QmFja3VwIiwianNvblBhdGgiOiIuc3BlYy5zdXNwZW5kIiwibmFtZSI6IlNVU1BFTkRFRCIsInR5cGUiOiJib29sZWFuIn1dLCJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiQ3JvbkhvdEJhY2t1cCBpcyB0aGUgU2NoZW1hIGZvciB0aGUgY3JvbmhvdGJhY2t1cHMgQVBJIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJDcm9uSG90QmFja3VwU3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIENyb25Ib3RCYWNrdXAiLCJwcm9wZXJ0aWVzIjp7ImZhaWxlZEhvdEJhY2t1cHNIaXN0b3J5TGltaXQiOnsiZGVmYXVsdCI6MywiZGVzY3JpcHRpb24iOiJUaGUgbnVtYmVyIG9mIGZhaWxlZCBmaW5pc2hlZCBob3QgYmFja3VwcyB0byByZXRhaW4uIFRoaXMgaXMgYSBwb2ludGVyIHRvIGRpc3Rpbmd1aXNoIGJldHdlZW4gZXhwbGljaXQgemVybyBhbmQgbm90IHNwZWNpZmllZC4iLCJmb3JtYXQiOiJpbnQzMiIsInR5cGUiOiJpbnRlZ2VyIn0sImhvdEJhY2t1cFRlbXBsYXRlIjp7ImRlc2NyaXB0aW9uIjoiU3BlY2lmaWVzIHRoZSBob3QgYmFja3VwIHRoYXQgd2lsbCBiZSBjcmVhdGVkIHdoZW4gZXhlY3V0aW5nIGEgQ3JvbkhvdEJhY2t1cC4iLCJwcm9wZXJ0aWVzIjp7Im1ldGFkYXRhIjp7ImRlc2NyaXB0aW9uIjoiU3RhbmRhcmQgb2JqZWN0J3MgbWV0YWRhdGEgb2YgdGhlIGhvdCBiYWNrdXBzIGNyZWF0ZWQgZnJvbSB0aGlzIHRlbXBsYXRlLiIsInR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiU3BlY2lmaWNhdGlvbiBvZiB0aGUgZGVzaXJlZCBiZWhhdmlvciBvZiB0aGUgaG90IGJhY2t1cC4iLCJwcm9wZXJ0aWVzIjp7ImJ1Y2tldFVSSSI6eyJkZXNjcmlwdGlvbiI6IlVSTCBvZiB0aGUgYnVja2V0IHRvIGRvd25sb2FkIEhvdEJhY2t1cCBmb2xkZXJzLiIsInR5cGUiOiJzdHJpbmcifSwiaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIjp7ImRlc2NyaXB0aW9uIjoiSGF6ZWxjYXN0UmVzb3VyY2VOYW1lIGRlZmluZXMgdGhlIG5hbWUgb2YgdGhlIEhhemVsY2FzdCByZXNvdXJjZSIsInR5cGUiOiJzdHJpbmcifSwic2VjcmV0Ijp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgc2VjcmV0IHdpdGggY3JlZGVudGlhbHMgZm9yIGNsb3VkIHByb3ZpZGVycy4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJoYXplbGNhc3RSZXNvdXJjZU5hbWUiXSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsic3BlYyJdLCJ0eXBlIjoib2JqZWN0In0sInNjaGVkdWxlIjp7ImRlc2NyaXB0aW9uIjoiU2NoZWR1bGUgY29udGFpbnMgYSBjcm9udGFiLWxpa2UgZXhwcmVzc2lvbiB0aGF0IGRlZmluZXMgdGhlIHNjaGVkdWxlIGluIHdoaWNoIEhvdEJhY2t1cCB3aWxsIGJlIHN0YXJ0ZWQuIElmIHRoZSBTY2hlZHVsZSBpcyBlbXB0eSB0aGUgSG90QmFja3VwIHdpbGwgc3RhcnQgb25seSBvbmNlIHdoZW4gYXBwbGllZC4gLS0tIFNldmVyYWwgcHJlLWRlZmluZWQgc2NoZWR1bGVzIGluIHBsYWNlIG9mIGEgY3JvbiBleHByZXNzaW9uIGNhbiBiZSB1c2VkLiBcdEVudHJ5ICAgICAgICAgICAgICAgICAgfCBEZXNjcmlwdGlvbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBFcXVpdmFsZW50IFRvIFx0LS0tLS0gICAgICAgICAgICAgICAgICB8IC0tLS0tLS0tLS0tICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IC0tLS0tLS0tLS0tLS0gXHRAeWVhcmx5IChvciBAYW5udWFsbHkpIHwgUnVuIG9uY2UgYSB5ZWFyLCBtaWRuaWdodCwgSmFuLiAxc3QgICAgICAgIHwgMCAwIDEgMSAqIFx0QG1vbnRobHkgICAgICAgICAgICAgICB8IFJ1biBvbmNlIGEgbW9udGgsIG1pZG5pZ2h0LCBmaXJzdCBvZiBtb250aCB8IDAgMCAxICogKiBcdEB3ZWVrbHkgICAgICAgICAgICAgICAgfCBSdW4gb25jZSBhIHdlZWssIG1pZG5pZ2h0IGJldHdlZW4gU2F0L1N1biAgfCAwIDAgKiAqIDAgXHRAZGFpbHkgKG9yIEBtaWRuaWdodCkgIHwgUnVuIG9uY2UgYSBkYXksIG1pZG5pZ2h0ICAgICAgICAgICAgICAgICAgIHwgMCAwICogKiAqIFx0QGhvdXJseSAgICAgICAgICAgICAgICB8IFJ1biBvbmNlIGFuIGhvdXIsIGJlZ2lubmluZyBvZiBob3VyICAgICAgICB8IDAgKiAqICogKiIsIm1pbkxlbmd0aCI6MSwidHlwZSI6InN0cmluZyJ9LCJzdWNjZXNzZnVsSG90QmFja3Vwc0hpc3RvcnlMaW1pdCI6eyJkZWZhdWx0Ijo1LCJkZXNjcmlwdGlvbiI6IlRoZSBudW1iZXIgb2Ygc3VjY2Vzc2Z1bCBmaW5pc2hlZCBob3QgYmFja3VwcyB0byByZXRhaW4uIFRoaXMgaXMgYSBwb2ludGVyIHRvIGRpc3Rpbmd1aXNoIGJldHdlZW4gZXhwbGljaXQgemVybyBhbmQgbm90IHNwZWNpZmllZC4iLCJmb3JtYXQiOiJpbnQzMiIsInR5cGUiOiJpbnRlZ2VyIn0sInN1c3BlbmQiOnsiZGVmYXVsdCI6ZmFsc2UsImRlc2NyaXB0aW9uIjoiV2hlbiB0cnVlLCBDcm9uSG90QmFja3VwIHdpbGwgc3RvcCBjcmVhdGluZyBIb3RCYWNrdXAgQ1JzIHVudGlsIGl0IGlzIGRpc2FibGVkIiwidHlwZSI6ImJvb2xlYW4ifX0sInJlcXVpcmVkIjpbImhvdEJhY2t1cFRlbXBsYXRlIiwic2NoZWR1bGUiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJDcm9uSG90QmFja3VwU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIENyb25Ib3RCYWNrdXAiLCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJzcGVjIl0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOltdLCJzdG9yZWRWZXJzaW9ucyI6W119fQ==
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjQuMSJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibmFtZSI6ImhvdGJhY2t1cHMuaGF6ZWxjYXN0LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiaGF6ZWxjYXN0LmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJIb3RCYWNrdXAiLCJsaXN0S2luZCI6IkhvdEJhY2t1cExpc3QiLCJwbHVyYWwiOiJob3RiYWNrdXBzIiwic2hvcnROYW1lcyI6WyJoYiJdLCJzaW5ndWxhciI6ImhvdGJhY2t1cCJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJkZXNjcmlwdGlvbiI6IkN1cnJlbnQgc3RhdGUgb2YgdGhlIEhvdEJhY2t1cCBwcm9jZXNzIiwianNvblBhdGgiOiIuc3RhdHVzLnN0YXRlIiwibmFtZSI6IlN0YXR1cyIsInR5cGUiOiJzdHJpbmcifSx7ImRlc2NyaXB0aW9uIjoiTWVzc2FnZSBmb3IgdGhlIGN1cnJlbnQgSG90QmFja3VwIENvbmZpZyIsImpzb25QYXRoIjoiLnN0YXR1cy5tZXNzYWdlIiwibmFtZSI6Ik1lc3NhZ2UiLCJwcmlvcml0eSI6MSwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkhvdEJhY2t1cCBpcyB0aGUgU2NoZW1hIGZvciB0aGUgaG90IGJhY2t1cCBBUEkiLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuIFNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZCBtYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy4gU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uIENhbm5vdCBiZSB1cGRhdGVkLiBJbiBDYW1lbENhc2UuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IkhvdEJhY2t1cFNwZWMgZGVmaW5lcyB0aGUgU3BlYyBvZiBIb3RCYWNrdXAiLCJwcm9wZXJ0aWVzIjp7ImJ1Y2tldFVSSSI6eyJkZXNjcmlwdGlvbiI6IlVSTCBvZiB0aGUgYnVja2V0IHRvIGRvd25sb2FkIEhvdEJhY2t1cCBmb2xkZXJzLiIsInR5cGUiOiJzdHJpbmcifSwiaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIjp7ImRlc2NyaXB0aW9uIjoiSGF6ZWxjYXN0UmVzb3VyY2VOYW1lIGRlZmluZXMgdGhlIG5hbWUgb2YgdGhlIEhhemVsY2FzdCByZXNvdXJjZSIsInR5cGUiOiJzdHJpbmcifSwic2VjcmV0Ijp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgc2VjcmV0IHdpdGggY3JlZGVudGlhbHMgZm9yIGNsb3VkIHByb3ZpZGVycy4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJoYXplbGNhc3RSZXNvdXJjZU5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJIb3RCYWNrdXBTdGF0dXMgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgSG90QmFja3VwIiwicHJvcGVydGllcyI6eyJiYWNrdXBVVUlEcyI6eyJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJtZXNzYWdlIjp7InR5cGUiOiJzdHJpbmcifSwic3RhdGUiOnsidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibWVzc2FnZSIsInN0YXRlIl0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInNwZWMiXSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6W10sInN0b3JlZFZlcnNpb25zIjpbXX19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjQuMSJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibmFtZSI6InJlcGxpY2F0ZWRtYXBzLmhhemVsY2FzdC5jb20ifSwic3BlYyI6eyJncm91cCI6ImhhemVsY2FzdC5jb20iLCJuYW1lcyI6eyJraW5kIjoiUmVwbGljYXRlZE1hcCIsImxpc3RLaW5kIjoiUmVwbGljYXRlZE1hcExpc3QiLCJwbHVyYWwiOiJyZXBsaWNhdGVkbWFwcyIsInNob3J0TmFtZXMiOlsicm1hcCJdLCJzaW5ndWxhciI6InJlcGxpY2F0ZWRtYXAifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3siZGVzY3JpcHRpb24iOiJDdXJyZW50IHN0YXRlIG9mIHRoZSBSZXBsaWNhdGVkTWFwIENvbmZpZyIsImpzb25QYXRoIjoiLnN0YXR1cy5zdGF0ZSIsIm5hbWUiOiJTdGF0dXMiLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6Ik1lc3NhZ2UgZm9yIHRoZSBjdXJyZW50IFJlcGxpY2F0ZWRNYXAgQ29uZmlnIiwianNvblBhdGgiOiIuc3RhdHVzLm1lc3NhZ2UiLCJuYW1lIjoiTWVzc2FnZSIsInByaW9yaXR5IjoxLCJ0eXBlIjoic3RyaW5nIn1dLCJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiUmVwbGljYXRlZE1hcCBpcyB0aGUgU2NoZW1hIGZvciB0aGUgcmVwbGljYXRlZG1hcHMgQVBJIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJSZXBsaWNhdGVkTWFwU3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIFJlcGxpY2F0ZWRNYXAiLCJwcm9wZXJ0aWVzIjp7ImFzeW5jRmlsbHVwIjp7ImRlZmF1bHQiOnRydWUsImRlc2NyaXB0aW9uIjoiQXN5bmNGaWxsdXAgc3BlY2lmaWVzIHdoZXRoZXIgdGhlIFJlcGxpY2F0ZWRNYXAgaXMgYXZhaWxhYmxlIGZvciByZWFkcyBiZWZvcmUgdGhlIGluaXRpYWwgcmVwbGljYXRpb24gaXMgY29tcGxldGVkIiwidHlwZSI6ImJvb2xlYW4ifSwiaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIjp7ImRlc2NyaXB0aW9uIjoiSGF6ZWxjYXN0UmVzb3VyY2VOYW1lIGRlZmluZXMgdGhlIG5hbWUgb2YgdGhlIEhhemVsY2FzdCByZXNvdXJjZS4iLCJtaW5MZW5ndGgiOjEsInR5cGUiOiJzdHJpbmcifSwiaW5NZW1vcnlGb3JtYXQiOnsiZGVmYXVsdCI6Ik9CSkVDVCIsImRlc2NyaXB0aW9uIjoiSW5NZW1vcnlGb3JtYXQgc3BlY2lmaWVzIGluIHdoaWNoIGZvcm1hdCBkYXRhIHdpbGwgYmUgc3RvcmVkIGluIHRoZSBSZXBsaWNhdGVkTWFwIiwiZW51bSI6WyJCSU5BUlkiLCJPQkpFQ1QiXSwidHlwZSI6InN0cmluZyJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgUmVwbGljYXRlZE1hcCBjb25maWcgdG8gYmUgY3JlYXRlZC4gSWYgZW1wdHksIENSIG5hbWUgd2lsbCBiZSB1c2VkLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImhhemVsY2FzdFJlc291cmNlTmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IlJlcGxpY2F0ZWRNYXBTdGF0dXMgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgUmVwbGljYXRlZE1hcCIsInByb3BlcnRpZXMiOnsibWVtYmVyU3RhdHVzZXMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsiZW51bSI6WyJTdWNjZXNzIiwiRmFpbGVkIiwiUGVuZGluZyIsIlBlcnNpc3RpbmciLCJUZXJtaW5hdGluZyJdLCJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJvYmplY3QifSwibWVzc2FnZSI6eyJ0eXBlIjoic3RyaW5nIn0sInN0YXRlIjp7ImVudW0iOlsiU3VjY2VzcyIsIkZhaWxlZCIsIlBlbmRpbmciLCJQZXJzaXN0aW5nIiwiVGVybWluYXRpbmciXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6W10sInN0b3JlZFZlcnNpb25zIjpbXX19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjQuMSJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibmFtZSI6InRvcGljcy5oYXplbGNhc3QuY29tIn0sInNwZWMiOnsiZ3JvdXAiOiJoYXplbGNhc3QuY29tIiwibmFtZXMiOnsia2luZCI6IlRvcGljIiwibGlzdEtpbmQiOiJUb3BpY0xpc3QiLCJwbHVyYWwiOiJ0b3BpY3MiLCJzaW5ndWxhciI6InRvcGljIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJhZGRpdGlvbmFsUHJpbnRlckNvbHVtbnMiOlt7ImRlc2NyaXB0aW9uIjoiQ3VycmVudCBzdGF0ZSBvZiB0aGUgVG9waWMgQ29uZmlnIiwianNvblBhdGgiOiIuc3RhdHVzLnN0YXRlIiwibmFtZSI6IlN0YXR1cyIsInR5cGUiOiJzdHJpbmcifSx7ImRlc2NyaXB0aW9uIjoiTWVzc2FnZSBmb3IgdGhlIGN1cnJlbnQgVG9waWMgQ29uZmlnIiwianNvblBhdGgiOiIuc3RhdHVzLm1lc3NhZ2UiLCJuYW1lIjoiTWVzc2FnZSIsInByaW9yaXR5IjoxLCJ0eXBlIjoic3RyaW5nIn1dLCJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiVG9waWMgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIHRvcGljcyBBUEkiLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuIFNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZCBtYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy4gU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uIENhbm5vdCBiZSB1cGRhdGVkLiBJbiBDYW1lbENhc2UuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IlRvcGljU3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIFRvcGljIiwicHJvcGVydGllcyI6eyJnbG9iYWxPcmRlcmluZ0VuYWJsZWQiOnsiZGVmYXVsdCI6ZmFsc2UsImRlc2NyaXB0aW9uIjoiV2hlbiB0cnVlIGFsbCBub2RlcyBsaXN0ZW5pbmcgdG8gdGhlIHNhbWUgdG9waWMgZ2V0IHRoZWlyIG1lc3NhZ2VzIGluIHRoZSBzYW1lIG9yZGVyIiwidHlwZSI6ImJvb2xlYW4ifSwiaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIjp7ImRlc2NyaXB0aW9uIjoiSGF6ZWxjYXN0UmVzb3VyY2VOYW1lIGRlZmluZXMgdGhlIG5hbWUgb2YgdGhlIEhhemVsY2FzdCByZXNvdXJjZSBmb3Igd2hpY2ggdG9waWMgY29uZmlnIHdpbGwgYmUgY3JlYXRlZCIsIm1pbkxlbmd0aCI6MSwidHlwZSI6InN0cmluZyJ9LCJtdWx0aVRocmVhZGluZ0VuYWJsZWQiOnsiZGVmYXVsdCI6ZmFsc2UsImRlc2NyaXB0aW9uIjoiV2hlbiB0cnVlIGVuYWJsZXMgbXVsdGktdGhyZWFkZWQgcHJvY2Vzc2luZyBvZiBpbmNvbWluZyBtZXNzYWdlcywgb3RoZXJ3aXNlIGEgc2luZ2xlIHRocmVhZCB3aWxsIGhhbmRsZSBhbGwgdG9waWMgbWVzc2FnZXMiLCJ0eXBlIjoiYm9vbGVhbiJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgdG9waWMgY29uZmlnIHRvIGJlIGNyZWF0ZWQuIElmIGVtcHR5LCBDUiBuYW1lIHdpbGwgYmUgdXNlZC4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJoYXplbGNhc3RSZXNvdXJjZU5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJUb3BpY1N0YXR1cyBkZWZpbmVzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBUb3BpYyIsInByb3BlcnRpZXMiOnsibWVtYmVyU3RhdHVzZXMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsiZW51bSI6WyJTdWNjZXNzIiwiRmFpbGVkIiwiUGVuZGluZyIsIlBlcnNpc3RpbmciLCJUZXJtaW5hdGluZyJdLCJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJvYmplY3QifSwibWVzc2FnZSI6eyJ0eXBlIjoic3RyaW5nIn0sInN0YXRlIjp7ImVudW0iOlsiU3VjY2VzcyIsIkZhaWxlZCIsIlBlbmRpbmciLCJQZXJzaXN0aW5nIiwiVGVybWluYXRpbmciXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsic3BlYyJdLCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfSwic3RhdHVzIjp7ImFjY2VwdGVkTmFtZXMiOnsia2luZCI6IiIsInBsdXJhbCI6IiJ9LCJjb25kaXRpb25zIjpbXSwic3RvcmVkVmVyc2lvbnMiOltdfX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjQuMSJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibmFtZSI6IndhbnJlcGxpY2F0aW9ucy5oYXplbGNhc3QuY29tIn0sInNwZWMiOnsiZ3JvdXAiOiJoYXplbGNhc3QuY29tIiwibmFtZXMiOnsia2luZCI6IldhblJlcGxpY2F0aW9uIiwibGlzdEtpbmQiOiJXYW5SZXBsaWNhdGlvbkxpc3QiLCJwbHVyYWwiOiJ3YW5yZXBsaWNhdGlvbnMiLCJzaG9ydE5hbWVzIjpbIndyIl0sInNpbmd1bGFyIjoid2FucmVwbGljYXRpb24ifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3siZGVzY3JpcHRpb24iOiJDdXJyZW50IHN0YXRlIG9mIHRoZSBIYXplbGNhc3QgV0FOIFJlcGxpY2F0aW9uIiwianNvblBhdGgiOiIuc3RhdHVzLnN0YXR1cyIsIm5hbWUiOiJTdGF0dXMiLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6Ik1lc3NhZ2UgZm9yIHRoZSBjdXJyZW50IFdhblJlcGxpY2F0aW9uIENvbmZpZyIsImpzb25QYXRoIjoiLnN0YXR1cy5tZXNzYWdlIiwibmFtZSI6Ik1lc3NhZ2UiLCJwcmlvcml0eSI6MSwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IldhblJlcGxpY2F0aW9uIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSB3YW5yZXBsaWNhdGlvbnMgQVBJIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJXYW5SZXBsaWNhdGlvblNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBXYW5SZXBsaWNhdGlvbiIsInByb3BlcnRpZXMiOnsiYWNrbm93bGVkZ2VtZW50Ijp7ImRlc2NyaXB0aW9uIjoiQWNrbm93bGVkZ2VtZW50IGlzIHRoZSBjb25maWd1cmF0aW9uIGZvciB0aGUgY29uZGl0aW9uIHdoZW4gdGhlIG5leHQgYmF0Y2ggb2YgV0FOIGV2ZW50cyBhcmUgc2VudC4iLCJwcm9wZXJ0aWVzIjp7InRpbWVvdXQiOnsiZGVmYXVsdCI6NjAwMDAsImRlc2NyaXB0aW9uIjoiVGltZW91dCByZXByZXNlbnRzIHRoZSB0aW1lIHRoZSBzb3VyY2UgY2x1c3RlciB3YWl0cyBmb3IgdGhlIGFja25vd2xlZGdlbWVudC4gQWZ0ZXIgdGltZW91dCwgdGhlIGV2ZW50cyB3aWxsIGJlIHJlc2VudC4iLCJmb3JtYXQiOiJpbnQzMiIsInR5cGUiOiJpbnRlZ2VyIn0sInR5cGUiOnsiZGVmYXVsdCI6IkFDS19PTl9PUEVSQVRJT05fQ09NUExFVEUiLCJkZXNjcmlwdGlvbiI6IlR5cGUgcmVwcmVzZW50cyBob3cgYSBiYXRjaCBvZiByZXBsaWNhdGlvbiBldmVudHMgaXMgY29uc2lkZXJlZCBzdWNjZXNzZnVsbHkgcmVwbGljYXRlZC4iLCJlbnVtIjpbIkFDS19PTl9PUEVSQVRJT05fQ09NUExFVEUiLCJBQ0tfT05fUkVDRUlQVCJdLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sImJhdGNoIjp7ImRlc2NyaXB0aW9uIjoiQmF0Y2ggaXMgdGhlIGNvbmZpZ3VyYXRpb24gZm9yIFdBTiBldmVudHMgYmF0Y2guIiwicHJvcGVydGllcyI6eyJtYXhpbXVtRGVsYXkiOnsiZGVmYXVsdCI6MTAwMCwiZGVzY3JpcHRpb24iOiJNYXhpbXVtRGVsYXkgcmVwcmVzZW50cyB0aGUgbWF4aW11bSBkZWxheSBpbiBtaWxsaXNlY29uZHMuIElmIHRoZSBiYXRjaCBzaXplIGlzIG5vdCByZWFjaGVkLCB0aGUgZXZlbnRzIHdpbGwgYmUgc2VudCBhZnRlciB0aGUgbWF4aW11bSBkZWxheS4iLCJmb3JtYXQiOiJpbnQzMiIsInR5cGUiOiJpbnRlZ2VyIn0sInNpemUiOnsiZGVmYXVsdCI6NTAwLCJkZXNjcmlwdGlvbiI6IlNpemUgcmVwcmVzZW50cyB0aGUgbWF4aW11bSBiYXRjaCBzaXplLiIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifX0sInR5cGUiOiJvYmplY3QifSwiZW5kcG9pbnRzIjp7ImRlc2NyaXB0aW9uIjoiRW5kcG9pbnRzIGlzIHRoZSB0YXJnZXQgY2x1c3RlciBlbmRwb2ludHMuIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn0sInF1ZXVlIjp7ImRlc2NyaXB0aW9uIjoiUXVldWUgaXMgdGhlIGNvbmZpZ3VyYXRpb24gZm9yIFdBTiBldmVudHMgcXVldWUuIiwicHJvcGVydGllcyI6eyJjYXBhY2l0eSI6eyJkZWZhdWx0IjoxMDAwMCwiZGVzY3JpcHRpb24iOiJDYXBhY2l0eSBpcyB0aGUgdG90YWwgY2FwYWNpdHkgb2YgV0FOIHF1ZXVlLiIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifSwiZnVsbEJlaGF2aW9yIjp7ImRlZmF1bHQiOiJESVNDQVJEX0FGVEVSX01VVEFUSU9OIiwiZGVzY3JpcHRpb24iOiJGdWxsQmVoYXZpb3IgcmVwcmVzZW50cyB0aGUgYmVoYXZpb3Igb2YgdGhlIG5ldyBhcnJpdmFsIHdoZW4gdGhlIHF1ZXVlIGlzIGZ1bGwuIiwiZW51bSI6WyJESVNDQVJEX0FGVEVSX01VVEFUSU9OIiwiVEhST1dfRVhDRVBUSU9OIiwiVEhST1dfRVhDRVBUSU9OX09OTFlfSUZfUkVQTElDQVRJT05fQUNUSVZFIl0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwicmVzb3VyY2VzIjp7ImRlc2NyaXB0aW9uIjoiUmVzb3VyY2VzIGlzIHRoZSBsaXN0IG9mIGN1c3RvbSByZXNvdXJjZXMgdG8gd2hpY2ggV0FOIHJlcGxpY2F0aW9uIGFwcGxpZXMuIiwiaXRlbXMiOnsicHJvcGVydGllcyI6eyJraW5kIjp7ImRlZmF1bHQiOiJNYXAiLCJkZXNjcmlwdGlvbiI6IktpbmQgaXMgdGhlIGtpbmQgb2YgY3VzdG9tIHJlc291cmNlIHRvIHdoaWNoIFdBTiByZXBsaWNhdGlvbiBhcHBsaWVzLiIsImVudW0iOlsiTWFwIiwiSGF6ZWxjYXN0Il0sInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgaXMgdGhlIG5hbWUgb2YgY3VzdG9tIHJlc291cmNlIHRvIHdoaWNoIFdBTiByZXBsaWNhdGlvbiBhcHBsaWVzLiIsIm1pbkxlbmd0aCI6MSwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsia2luZCIsIm5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJtaW5JdGVtcyI6MSwidHlwZSI6ImFycmF5In0sInRhcmdldENsdXN0ZXJOYW1lIjp7ImRlc2NyaXB0aW9uIjoiQ2x1c3Rlck5hbWUgaXMgdGhlIGNsdXN0ZXJOYW1lIGZpZWxkIG9mIHRoZSB0YXJnZXQgSGF6ZWxjYXN0IHJlc291cmNlLiIsIm1pbkxlbmd0aCI6MSwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiZW5kcG9pbnRzIiwicmVzb3VyY2VzIiwidGFyZ2V0Q2x1c3Rlck5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJXYW5SZXBsaWNhdGlvblN0YXR1cyBkZWZpbmVzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBXYW5SZXBsaWNhdGlvbiIsInByb3BlcnRpZXMiOnsibWVzc2FnZSI6eyJkZXNjcmlwdGlvbiI6Ik1lc3NhZ2UgaXMgdGhlIGZpZWxkIHRvIHNob3cgZGV0YWlsIGluZm9ybWF0aW9uIG9yIGVycm9yIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJTdGF0dXMgaXMgdGhlIHN0YXR1cyBvZiBXQU4gcmVwbGljYXRpb24iLCJ0eXBlIjoic3RyaW5nIn0sIndhblJlcGxpY2F0aW9uTWFwc1N0YXR1cyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJwcm9wZXJ0aWVzIjp7Im1lc3NhZ2UiOnsiZGVzY3JpcHRpb24iOiJNZXNzYWdlIGlzIHRoZSBmaWVsZCB0byBzaG93IGRldGFpbCBpbmZvcm1hdGlvbiBvciBlcnJvciIsInR5cGUiOiJzdHJpbmcifSwicHVibGlzaGVySWQiOnsiZGVzY3JpcHRpb24iOiJQdWJsaXNoZXJJZCBpcyB0aGUgSUQgdXNlZCBmb3IgV0FOIHB1Ymxpc2hlciBJRCIsInR5cGUiOiJzdHJpbmcifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiU3RhdHVzIGlzIHRoZSBzdGF0dXMgb2YgV0FOIHJlcGxpY2F0aW9uIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfSwic3RhdHVzIjp7ImFjY2VwdGVkTmFtZXMiOnsia2luZCI6IiIsInBsdXJhbCI6IiJ9LCJjb25kaXRpb25zIjpbXSwic3RvcmVkVmVyc2lvbnMiOltdfX0=
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: docker.io/hazelcast/hazelcast-platform-operator:5.5
  name: ""
- image: quay.io/openshift-community-operators/hazelcast-platform-operator@sha256:8e7f6d9b9e39f4cd7693d9168819d93bcebd802f37cee9a34127adc57242759a
  name: ""
schema: olm.bundle
---
image: quay.io/openshift-community-operators/hazelcast-platform-operator@sha256:a62c579229fff55feccf2f45a2f7802b8055ff8e2376546665ae6a7f667db6f8
name: hazelcast-platform-operator.v5.6.0
package: hazelcast-platform-operator
properties:
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: Cache
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: CronHotBackup
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: Hazelcast
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: HotBackup
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: ManagementCenter
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: Map
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: MultiMap
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: Queue
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: ReplicatedMap
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: Topic
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: WanReplication
    version: v1alpha1
- type: olm.package
  value:
    packageName: hazelcast-platform-operator
    version: 5.6.0
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEwLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJ0b3BpY3MuaGF6ZWxjYXN0LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiaGF6ZWxjYXN0LmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJUb3BpYyIsImxpc3RLaW5kIjoiVG9waWNMaXN0IiwicGx1cmFsIjoidG9waWNzIiwic2luZ3VsYXIiOiJ0b3BpYyJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJkZXNjcmlwdGlvbiI6IkN1cnJlbnQgc3RhdGUgb2YgdGhlIFRvcGljIENvbmZpZyIsImpzb25QYXRoIjoiLnN0YXR1cy5zdGF0ZSIsIm5hbWUiOiJTdGF0dXMiLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6Ik1lc3NhZ2UgZm9yIHRoZSBjdXJyZW50IFRvcGljIENvbmZpZyIsImpzb25QYXRoIjoiLnN0YXR1cy5tZXNzYWdlIiwibmFtZSI6Ik1lc3NhZ2UiLCJwcmlvcml0eSI6MSwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IlRvcGljIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSB0b3BpY3MgQVBJIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJUb3BpY1NwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBUb3BpYyIsInByb3BlcnRpZXMiOnsiZ2xvYmFsT3JkZXJpbmdFbmFibGVkIjp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6IldoZW4gdHJ1ZSBhbGwgbm9kZXMgbGlzdGVuaW5nIHRvIHRoZSBzYW1lIHRvcGljIGdldCB0aGVpciBtZXNzYWdlcyBpbiB0aGUgc2FtZSBvcmRlciIsInR5cGUiOiJib29sZWFuIn0sImhhemVsY2FzdFJlc291cmNlTmFtZSI6eyJkZXNjcmlwdGlvbiI6IkhhemVsY2FzdFJlc291cmNlTmFtZSBkZWZpbmVzIHRoZSBuYW1lIG9mIHRoZSBIYXplbGNhc3QgcmVzb3VyY2UgZm9yIHdoaWNoIHRvcGljIGNvbmZpZyB3aWxsIGJlIGNyZWF0ZWQiLCJtaW5MZW5ndGgiOjEsInR5cGUiOiJzdHJpbmcifSwibXVsdGlUaHJlYWRpbmdFbmFibGVkIjp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6IldoZW4gdHJ1ZSBlbmFibGVzIG11bHRpLXRocmVhZGVkIHByb2Nlc3Npbmcgb2YgaW5jb21pbmcgbWVzc2FnZXMsIG90aGVyd2lzZSBhIHNpbmdsZSB0aHJlYWQgd2lsbCBoYW5kbGUgYWxsIHRvcGljIG1lc3NhZ2VzIiwidHlwZSI6ImJvb2xlYW4ifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIHRvcGljIGNvbmZpZyB0byBiZSBjcmVhdGVkLiBJZiBlbXB0eSwgQ1IgbmFtZSB3aWxsIGJlIHVzZWQuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIl0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiVG9waWNTdGF0dXMgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgVG9waWMiLCJwcm9wZXJ0aWVzIjp7Im1lbWJlclN0YXR1c2VzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7ImVudW0iOlsiU3VjY2VzcyIsIkZhaWxlZCIsIlBlbmRpbmciLCJQZXJzaXN0aW5nIiwiVGVybWluYXRpbmciXSwidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoib2JqZWN0In0sIm1lc3NhZ2UiOnsidHlwZSI6InN0cmluZyJ9LCJzdGF0ZSI6eyJlbnVtIjpbIlN1Y2Nlc3MiLCJGYWlsZWQiLCJQZW5kaW5nIiwiUGVyc2lzdGluZyIsIlRlcm1pbmF0aW5nIl0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInNwZWMiXSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6bnVsbCwic3RvcmVkVmVyc2lvbnMiOm51bGx9fQ==
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEwLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJ3YW5yZXBsaWNhdGlvbnMuaGF6ZWxjYXN0LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiaGF6ZWxjYXN0LmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJXYW5SZXBsaWNhdGlvbiIsImxpc3RLaW5kIjoiV2FuUmVwbGljYXRpb25MaXN0IiwicGx1cmFsIjoid2FucmVwbGljYXRpb25zIiwic2hvcnROYW1lcyI6WyJ3ciJdLCJzaW5ndWxhciI6IndhbnJlcGxpY2F0aW9uIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJhZGRpdGlvbmFsUHJpbnRlckNvbHVtbnMiOlt7ImRlc2NyaXB0aW9uIjoiQ3VycmVudCBzdGF0ZSBvZiB0aGUgSGF6ZWxjYXN0IFdBTiBSZXBsaWNhdGlvbiIsImpzb25QYXRoIjoiLnN0YXR1cy5zdGF0dXMiLCJuYW1lIjoiU3RhdHVzIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJNZXNzYWdlIGZvciB0aGUgY3VycmVudCBXYW5SZXBsaWNhdGlvbiBDb25maWciLCJqc29uUGF0aCI6Ii5zdGF0dXMubWVzc2FnZSIsIm5hbWUiOiJNZXNzYWdlIiwicHJpb3JpdHkiOjEsInR5cGUiOiJzdHJpbmcifV0sIm5hbWUiOiJ2MWFscGhhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJXYW5SZXBsaWNhdGlvbiBpcyB0aGUgU2NoZW1hIGZvciB0aGUgd2FucmVwbGljYXRpb25zIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiV2FuUmVwbGljYXRpb25TcGVjIGRlZmluZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgV2FuUmVwbGljYXRpb24iLCJwcm9wZXJ0aWVzIjp7ImFja25vd2xlZGdlbWVudCI6eyJkZWZhdWx0Ijp7InRpbWVvdXQiOjYwMDAwLCJ0eXBlIjoiQUNLX09OX09QRVJBVElPTl9DT01QTEVURSJ9LCJkZXNjcmlwdGlvbiI6IkFja25vd2xlZGdlbWVudCBpcyB0aGUgY29uZmlndXJhdGlvbiBmb3IgdGhlIGNvbmRpdGlvbiB3aGVuIHRoZSBuZXh0IGJhdGNoIG9mIFdBTiBldmVudHMgYXJlIHNlbnQuIiwicHJvcGVydGllcyI6eyJ0aW1lb3V0Ijp7ImRlZmF1bHQiOjYwMDAwLCJkZXNjcmlwdGlvbiI6IlRpbWVvdXQgcmVwcmVzZW50cyB0aGUgdGltZSBpbiBtaWxsaXNlY29uZHMgdGhlIHNvdXJjZSBjbHVzdGVyIHdhaXRzIGZvciB0aGUgYWNrbm93bGVkZ2VtZW50LiBBZnRlciB0aW1lb3V0LCB0aGUgZXZlbnRzIHdpbGwgYmUgcmVzZW50LiIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifSwidHlwZSI6eyJkZWZhdWx0IjoiQUNLX09OX09QRVJBVElPTl9DT01QTEVURSIsImRlc2NyaXB0aW9uIjoiVHlwZSByZXByZXNlbnRzIGhvdyBhIGJhdGNoIG9mIHJlcGxpY2F0aW9uIGV2ZW50cyBpcyBjb25zaWRlcmVkIHN1Y2Nlc3NmdWxseSByZXBsaWNhdGVkLiIsImVudW0iOlsiQUNLX09OX09QRVJBVElPTl9DT01QTEVURSIsIkFDS19PTl9SRUNFSVBUIl0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwiYmF0Y2giOnsiZGVmYXVsdCI6eyJtYXhpbXVtRGVsYXkiOjEwMDAsInNpemUiOjUwMH0sImRlc2NyaXB0aW9uIjoiQmF0Y2ggaXMgdGhlIGNvbmZpZ3VyYXRpb24gZm9yIFdBTiBldmVudHMgYmF0Y2guIiwicHJvcGVydGllcyI6eyJtYXhpbXVtRGVsYXkiOnsiZGVmYXVsdCI6MTAwMCwiZGVzY3JpcHRpb24iOiJNYXhpbXVtRGVsYXkgcmVwcmVzZW50cyB0aGUgbWF4aW11bSBkZWxheSBpbiBtaWxsaXNlY29uZHMuIElmIHRoZSBiYXRjaCBzaXplIGlzIG5vdCByZWFjaGVkLCB0aGUgZXZlbnRzIHdpbGwgYmUgc2VudCBhZnRlciB0aGUgbWF4aW11bSBkZWxheS4iLCJmb3JtYXQiOiJpbnQzMiIsInR5cGUiOiJpbnRlZ2VyIn0sInNpemUiOnsiZGVmYXVsdCI6NTAwLCJkZXNjcmlwdGlvbiI6IlNpemUgcmVwcmVzZW50cyB0aGUgbWF4aW11bSBiYXRjaCBzaXplLiIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifX0sInR5cGUiOiJvYmplY3QifSwiZW5kcG9pbnRzIjp7ImRlc2NyaXB0aW9uIjoiRW5kcG9pbnRzIGlzIHRoZSB0YXJnZXQgY2x1c3RlciBlbmRwb2ludHMuIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn0sInF1ZXVlIjp7ImRlZmF1bHQiOnsiY2FwYWNpdHkiOjEwMDAwLCJmdWxsQmVoYXZpb3IiOiJESVNDQVJEX0FGVEVSX01VVEFUSU9OIn0sImRlc2NyaXB0aW9uIjoiUXVldWUgaXMgdGhlIGNvbmZpZ3VyYXRpb24gZm9yIFdBTiBldmVudHMgcXVldWUuIiwicHJvcGVydGllcyI6eyJjYXBhY2l0eSI6eyJkZWZhdWx0IjoxMDAwMCwiZGVzY3JpcHRpb24iOiJDYXBhY2l0eSBpcyB0aGUgdG90YWwgY2FwYWNpdHkgb2YgV0FOIHF1ZXVlLiIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifSwiZnVsbEJlaGF2aW9yIjp7ImRlZmF1bHQiOiJESVNDQVJEX0FGVEVSX01VVEFUSU9OIiwiZGVzY3JpcHRpb24iOiJGdWxsQmVoYXZpb3IgcmVwcmVzZW50cyB0aGUgYmVoYXZpb3Igb2YgdGhlIG5ldyBhcnJpdmFsIHdoZW4gdGhlIHF1ZXVlIGlzIGZ1bGwuIiwiZW51bSI6WyJESVNDQVJEX0FGVEVSX01VVEFUSU9OIiwiVEhST1dfRVhDRVBUSU9OIiwiVEhST1dfRVhDRVBUSU9OX09OTFlfSUZfUkVQTElDQVRJT05fQUNUSVZFIl0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwicmVzb3VyY2VzIjp7ImRlc2NyaXB0aW9uIjoiUmVzb3VyY2VzIGlzIHRoZSBsaXN0IG9mIGN1c3RvbSByZXNvdXJjZXMgdG8gd2hpY2ggV0FOIHJlcGxpY2F0aW9uIGFwcGxpZXMuIiwiaXRlbXMiOnsicHJvcGVydGllcyI6eyJraW5kIjp7ImRlZmF1bHQiOiJNYXAiLCJkZXNjcmlwdGlvbiI6IktpbmQgaXMgdGhlIGtpbmQgb2YgY3VzdG9tIHJlc291cmNlIHRvIHdoaWNoIFdBTiByZXBsaWNhdGlvbiBhcHBsaWVzLiIsImVudW0iOlsiTWFwIiwiSGF6ZWxjYXN0Il0sInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgaXMgdGhlIG5hbWUgb2YgY3VzdG9tIHJlc291cmNlIHRvIHdoaWNoIFdBTiByZXBsaWNhdGlvbiBhcHBsaWVzLiIsIm1pbkxlbmd0aCI6MSwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sIm1pbkl0ZW1zIjoxLCJ0eXBlIjoiYXJyYXkifSwidGFyZ2V0Q2x1c3Rlck5hbWUiOnsiZGVzY3JpcHRpb24iOiJDbHVzdGVyTmFtZSBpcyB0aGUgY2x1c3Rlck5hbWUgZmllbGQgb2YgdGhlIHRhcmdldCBIYXplbGNhc3QgcmVzb3VyY2UuIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJlbmRwb2ludHMiLCJyZXNvdXJjZXMiLCJ0YXJnZXRDbHVzdGVyTmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IldhblJlcGxpY2F0aW9uU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIFdhblJlcGxpY2F0aW9uIiwicHJvcGVydGllcyI6eyJtZXNzYWdlIjp7ImRlc2NyaXB0aW9uIjoiTWVzc2FnZSBpcyB0aGUgZmllbGQgdG8gc2hvdyBkZXRhaWwgaW5mb3JtYXRpb24gb3IgZXJyb3IiLCJ0eXBlIjoic3RyaW5nIn0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IlN0YXR1cyBpcyB0aGUgc3RhdHVzIG9mIFdBTiByZXBsaWNhdGlvbiIsInR5cGUiOiJzdHJpbmcifSwid2FuUmVwbGljYXRpb25NYXBzU3RhdHVzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InByb3BlcnRpZXMiOnsibWVzc2FnZSI6eyJkZXNjcmlwdGlvbiI6Ik1lc3NhZ2UgaXMgdGhlIGZpZWxkIHRvIHNob3cgZGV0YWlsIGluZm9ybWF0aW9uIG9yIGVycm9yIiwidHlwZSI6InN0cmluZyJ9LCJwdWJsaXNoZXJJZCI6eyJkZXNjcmlwdGlvbiI6IlB1Ymxpc2hlcklkIGlzIHRoZSBJRCB1c2VkIGZvciBXQU4gcHVibGlzaGVyIElEIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJTdGF0dXMgaXMgdGhlIHN0YXR1cyBvZiBXQU4gcmVwbGljYXRpb24iLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInNwZWMiXSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6bnVsbCwic3RvcmVkVmVyc2lvbnMiOm51bGx9fQ==
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEwLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJjYWNoZXMuaGF6ZWxjYXN0LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiaGF6ZWxjYXN0LmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJDYWNoZSIsImxpc3RLaW5kIjoiQ2FjaGVMaXN0IiwicGx1cmFsIjoiY2FjaGVzIiwic2hvcnROYW1lcyI6WyJjaCJdLCJzaW5ndWxhciI6ImNhY2hlIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJhZGRpdGlvbmFsUHJpbnRlckNvbHVtbnMiOlt7ImRlc2NyaXB0aW9uIjoiQ3VycmVudCBzdGF0ZSBvZiB0aGUgQ2FjaGUgQ29uZmlnIiwianNvblBhdGgiOiIuc3RhdHVzLnN0YXRlIiwibmFtZSI6IlN0YXR1cyIsInR5cGUiOiJzdHJpbmcifSx7ImRlc2NyaXB0aW9uIjoiTWVzc2FnZSBmb3IgdGhlIGN1cnJlbnQgQ2FjaGUgQ29uZmlnIiwianNvblBhdGgiOiIuc3RhdHVzLm1lc3NhZ2UiLCJuYW1lIjoiTWVzc2FnZSIsInByaW9yaXR5IjoxLCJ0eXBlIjoic3RyaW5nIn1dLCJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiQ2FjaGUgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIGNhY2hlcyBBUEkiLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuIFNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZCBtYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy4gU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uIENhbm5vdCBiZSB1cGRhdGVkLiBJbiBDYW1lbENhc2UuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IkNhY2hlU3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIENhY2hlIEl0IGNhbm5vdCBiZSB1cGRhdGVkIGFmdGVyIHRoZSBDYWNoZSBpcyBjcmVhdGVkIiwicHJvcGVydGllcyI6eyJhc3luY0JhY2t1cENvdW50Ijp7ImRlZmF1bHQiOjAsImRlc2NyaXB0aW9uIjoiTnVtYmVyIG9mIGFzeW5jaHJvbm91cyBiYWNrdXBzLiIsImZvcm1hdCI6ImludDMyIiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifSwiYmFja3VwQ291bnQiOnsiZGVmYXVsdCI6MSwiZGVzY3JpcHRpb24iOiJOdW1iZXIgb2Ygc3luY2hyb25vdXMgYmFja3Vwcy4iLCJmb3JtYXQiOiJpbnQzMiIsIm1pbmltdW0iOjAsInR5cGUiOiJpbnRlZ2VyIn0sImhhemVsY2FzdFJlc291cmNlTmFtZSI6eyJkZXNjcmlwdGlvbiI6IkhhemVsY2FzdFJlc291cmNlTmFtZSBkZWZpbmVzIHRoZSBuYW1lIG9mIHRoZSBIYXplbGNhc3QgcmVzb3VyY2UuIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn0sImtleVR5cGUiOnsiZGVzY3JpcHRpb24iOiJDbGFzcyBuYW1lIG9mIHRoZSBrZXkgdHlwZSIsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIGRhdGEgc3RydWN0dXJlIGNvbmZpZyB0byBiZSBjcmVhdGVkLiBJZiBlbXB0eSwgQ1IgbmFtZSB3aWxsIGJlIHVzZWQuIEl0IGNhbm5vdCBiZSB1cGRhdGVkIGFmdGVyIHRoZSBjb25maWcgaXMgY3JlYXRlZCBzdWNjZXNzZnVsbHkuIiwidHlwZSI6InN0cmluZyJ9LCJwZXJzaXN0ZW5jZUVuYWJsZWQiOnsiZGVmYXVsdCI6ZmFsc2UsImRlc2NyaXB0aW9uIjoiV2hlbiBlbmFibGVkLCBjYWNoZSBkYXRhIHdpbGwgYmUgcGVyc2lzdGVkLiIsInR5cGUiOiJib29sZWFuIn0sInZhbHVlVHlwZSI6eyJkZXNjcmlwdGlvbiI6IkNsYXNzIG5hbWUgb2YgdGhlIHZhbHVlIHR5cGUiLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJoYXplbGNhc3RSZXNvdXJjZU5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJDYWNoZVN0YXR1cyBkZWZpbmVzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBDYWNoZSIsInByb3BlcnRpZXMiOnsibWVtYmVyU3RhdHVzZXMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsiZW51bSI6WyJTdWNjZXNzIiwiRmFpbGVkIiwiUGVuZGluZyIsIlBlcnNpc3RpbmciLCJUZXJtaW5hdGluZyJdLCJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJvYmplY3QifSwibWVzc2FnZSI6eyJ0eXBlIjoic3RyaW5nIn0sInN0YXRlIjp7ImVudW0iOlsiU3VjY2VzcyIsIkZhaWxlZCIsIlBlbmRpbmciLCJQZXJzaXN0aW5nIiwiVGVybWluYXRpbmciXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsic3BlYyJdLCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfSwic3RhdHVzIjp7ImFjY2VwdGVkTmFtZXMiOnsia2luZCI6IiIsInBsdXJhbCI6IiJ9LCJjb25kaXRpb25zIjpudWxsLCJzdG9yZWRWZXJzaW9ucyI6bnVsbH19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEwLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJjcm9uaG90YmFja3Vwcy5oYXplbGNhc3QuY29tIn0sInNwZWMiOnsiZ3JvdXAiOiJoYXplbGNhc3QuY29tIiwibmFtZXMiOnsia2luZCI6IkNyb25Ib3RCYWNrdXAiLCJsaXN0S2luZCI6IkNyb25Ib3RCYWNrdXBMaXN0IiwicGx1cmFsIjoiY3JvbmhvdGJhY2t1cHMiLCJzaG9ydE5hbWVzIjpbImNoYiJdLCJzaW5ndWxhciI6ImNyb25ob3RiYWNrdXAifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3siZGVzY3JpcHRpb24iOiJTdXNwZW50aW9uIHN0YXR1cyBvZiB0aGUgQ3JvbkhvdEJhY2t1cCIsImpzb25QYXRoIjoiLnNwZWMuc3VzcGVuZCIsIm5hbWUiOiJTVVNQRU5ERUQiLCJ0eXBlIjoiYm9vbGVhbiJ9XSwibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkNyb25Ib3RCYWNrdXAgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIGNyb25ob3RiYWNrdXBzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiQ3JvbkhvdEJhY2t1cFNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBDcm9uSG90QmFja3VwIiwicHJvcGVydGllcyI6eyJmYWlsZWRIb3RCYWNrdXBzSGlzdG9yeUxpbWl0Ijp7ImRlZmF1bHQiOjMsImRlc2NyaXB0aW9uIjoiVGhlIG51bWJlciBvZiBmYWlsZWQgZmluaXNoZWQgaG90IGJhY2t1cHMgdG8gcmV0YWluLiIsImZvcm1hdCI6ImludDMyIiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifSwiaG90QmFja3VwVGVtcGxhdGUiOnsiZGVzY3JpcHRpb24iOiJTcGVjaWZpZXMgdGhlIGhvdCBiYWNrdXAgdGhhdCB3aWxsIGJlIGNyZWF0ZWQgd2hlbiBleGVjdXRpbmcgYSBDcm9uSG90QmFja3VwLiIsInByb3BlcnRpZXMiOnsibWV0YWRhdGEiOnsiZGVzY3JpcHRpb24iOiJTdGFuZGFyZCBvYmplY3QncyBtZXRhZGF0YSBvZiB0aGUgaG90IGJhY2t1cHMgY3JlYXRlZCBmcm9tIHRoaXMgdGVtcGxhdGUuIiwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJTcGVjaWZpY2F0aW9uIG9mIHRoZSBkZXNpcmVkIGJlaGF2aW9yIG9mIHRoZSBob3QgYmFja3VwLiIsInByb3BlcnRpZXMiOnsiYnVja2V0VVJJIjp7ImRlc2NyaXB0aW9uIjoiVVJMIG9mIHRoZSBidWNrZXQgdG8gZG93bmxvYWQgSG90QmFja3VwIGZvbGRlcnMuIiwidHlwZSI6InN0cmluZyJ9LCJoYXplbGNhc3RSZXNvdXJjZU5hbWUiOnsiZGVzY3JpcHRpb24iOiJIYXplbGNhc3RSZXNvdXJjZU5hbWUgZGVmaW5lcyB0aGUgbmFtZSBvZiB0aGUgSGF6ZWxjYXN0IHJlc291cmNlIiwidHlwZSI6InN0cmluZyJ9LCJzZWNyZXQiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBzZWNyZXQgd2l0aCBjcmVkZW50aWFscyBmb3IgY2xvdWQgcHJvdmlkZXJzLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImhhemVsY2FzdFJlc291cmNlTmFtZSJdLCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJzcGVjIl0sInR5cGUiOiJvYmplY3QifSwic2NoZWR1bGUiOnsiZGVzY3JpcHRpb24iOiJTY2hlZHVsZSBjb250YWlucyBhIGNyb250YWItbGlrZSBleHByZXNzaW9uIHRoYXQgZGVmaW5lcyB0aGUgc2NoZWR1bGUgaW4gd2hpY2ggSG90QmFja3VwIHdpbGwgYmUgc3RhcnRlZC4gSWYgdGhlIFNjaGVkdWxlIGlzIGVtcHR5IHRoZSBIb3RCYWNrdXAgd2lsbCBzdGFydCBvbmx5IG9uY2Ugd2hlbiBhcHBsaWVkLiAtLS0gU2V2ZXJhbCBwcmUtZGVmaW5lZCBzY2hlZHVsZXMgaW4gcGxhY2Ugb2YgYSBjcm9uIGV4cHJlc3Npb24gY2FuIGJlIHVzZWQuIEVudHJ5ICAgICAgICAgICAgICAgICAgfCBEZXNjcmlwdGlvbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBFcXVpdmFsZW50IFRvIC0tLS0tICAgICAgICAgICAgICAgICAgfCAtLS0tLS0tLS0tLSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAtLS0tLS0tLS0tLS0tIEB5ZWFybHkgKG9yIEBhbm51YWxseSkgfCBSdW4gb25jZSBhIHllYXIsIG1pZG5pZ2h0LCBKYW4uIDFzdCAgICAgICAgfCAwIDAgMSAxICogQG1vbnRobHkgICAgICAgICAgICAgICB8IFJ1biBvbmNlIGEgbW9udGgsIG1pZG5pZ2h0LCBmaXJzdCBvZiBtb250aCB8IDAgMCAxICogKiBAd2Vla2x5ICAgICAgICAgICAgICAgIHwgUnVuIG9uY2UgYSB3ZWVrLCBtaWRuaWdodCBiZXR3ZWVuIFNhdC9TdW4gIHwgMCAwICogKiAwIEBkYWlseSAob3IgQG1pZG5pZ2h0KSAgfCBSdW4gb25jZSBhIGRheSwgbWlkbmlnaHQgICAgICAgICAgICAgICAgICAgfCAwIDAgKiAqICogQGhvdXJseSAgICAgICAgICAgICAgICB8IFJ1biBvbmNlIGFuIGhvdXIsIGJlZ2lubmluZyBvZiBob3VyICAgICAgICB8IDAgKiAqICogKiIsIm1pbkxlbmd0aCI6MSwidHlwZSI6InN0cmluZyJ9LCJzdWNjZXNzZnVsSG90QmFja3Vwc0hpc3RvcnlMaW1pdCI6eyJkZWZhdWx0Ijo1LCJkZXNjcmlwdGlvbiI6IlRoZSBudW1iZXIgb2Ygc3VjY2Vzc2Z1bCBmaW5pc2hlZCBob3QgYmFja3VwcyB0byByZXRhaW4uIiwiZm9ybWF0IjoiaW50MzIiLCJtaW5pbXVtIjowLCJ0eXBlIjoiaW50ZWdlciJ9LCJzdXNwZW5kIjp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6IldoZW4gdHJ1ZSwgQ3JvbkhvdEJhY2t1cCB3aWxsIHN0b3AgY3JlYXRpbmcgSG90QmFja3VwIENScyB1bnRpbCBpdCBpcyBkaXNhYmxlZCIsInR5cGUiOiJib29sZWFuIn19LCJyZXF1aXJlZCI6WyJob3RCYWNrdXBUZW1wbGF0ZSIsInNjaGVkdWxlIl0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiQ3JvbkhvdEJhY2t1cFN0YXR1cyBkZWZpbmVzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBDcm9uSG90QmFja3VwIiwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsic3BlYyJdLCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfSwic3RhdHVzIjp7ImFjY2VwdGVkTmFtZXMiOnsia2luZCI6IiIsInBsdXJhbCI6IiJ9LCJjb25kaXRpb25zIjpudWxsLCJzdG9yZWRWZXJzaW9ucyI6bnVsbH19
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEwLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJob3RiYWNrdXBzLmhhemVsY2FzdC5jb20ifSwic3BlYyI6eyJncm91cCI6ImhhemVsY2FzdC5jb20iLCJuYW1lcyI6eyJraW5kIjoiSG90QmFja3VwIiwibGlzdEtpbmQiOiJIb3RCYWNrdXBMaXN0IiwicGx1cmFsIjoiaG90YmFja3VwcyIsInNob3J0TmFtZXMiOlsiaGIiXSwic2luZ3VsYXIiOiJob3RiYWNrdXAifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3siZGVzY3JpcHRpb24iOiJDdXJyZW50IHN0YXRlIG9mIHRoZSBIb3RCYWNrdXAgcHJvY2VzcyIsImpzb25QYXRoIjoiLnN0YXR1cy5zdGF0ZSIsIm5hbWUiOiJTdGF0dXMiLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6Ik1lc3NhZ2UgZm9yIHRoZSBjdXJyZW50IEhvdEJhY2t1cCBDb25maWciLCJqc29uUGF0aCI6Ii5zdGF0dXMubWVzc2FnZSIsIm5hbWUiOiJNZXNzYWdlIiwicHJpb3JpdHkiOjEsInR5cGUiOiJzdHJpbmcifV0sIm5hbWUiOiJ2MWFscGhhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJIb3RCYWNrdXAgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIGhvdCBiYWNrdXAgQVBJIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJIb3RCYWNrdXBTcGVjIGRlZmluZXMgdGhlIFNwZWMgb2YgSG90QmFja3VwIiwicHJvcGVydGllcyI6eyJidWNrZXRVUkkiOnsiZGVzY3JpcHRpb24iOiJVUkwgb2YgdGhlIGJ1Y2tldCB0byBkb3dubG9hZCBIb3RCYWNrdXAgZm9sZGVycy4iLCJ0eXBlIjoic3RyaW5nIn0sImhhemVsY2FzdFJlc291cmNlTmFtZSI6eyJkZXNjcmlwdGlvbiI6IkhhemVsY2FzdFJlc291cmNlTmFtZSBkZWZpbmVzIHRoZSBuYW1lIG9mIHRoZSBIYXplbGNhc3QgcmVzb3VyY2UiLCJ0eXBlIjoic3RyaW5nIn0sInNlY3JldCI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIHNlY3JldCB3aXRoIGNyZWRlbnRpYWxzIGZvciBjbG91ZCBwcm92aWRlcnMuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIl0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiSG90QmFja3VwU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIEhvdEJhY2t1cCIsInByb3BlcnRpZXMiOnsiYmFja3VwVVVJRHMiOnsiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifSwibWVzc2FnZSI6eyJ0eXBlIjoic3RyaW5nIn0sInN0YXRlIjp7ImVudW0iOlsiVW5rbm93biIsIlBlbmRpbmciLCJOb3RTdGFydGVkIiwiSW5Qcm9ncmVzcyIsIkZhaWx1cmUiLCJTdWNjZXNzIl0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInNwZWMiXSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6bnVsbCwic3RvcmVkVmVyc2lvbnMiOm51bGx9fQ==
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEwLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJtdWx0aW1hcHMuaGF6ZWxjYXN0LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiaGF6ZWxjYXN0LmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJNdWx0aU1hcCIsImxpc3RLaW5kIjoiTXVsdGlNYXBMaXN0IiwicGx1cmFsIjoibXVsdGltYXBzIiwic2hvcnROYW1lcyI6WyJtbWFwIl0sInNpbmd1bGFyIjoibXVsdGltYXAifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3siZGVzY3JpcHRpb24iOiJDdXJyZW50IHN0YXRlIG9mIHRoZSBNdWx0aU1hcCBDb25maWciLCJqc29uUGF0aCI6Ii5zdGF0dXMuc3RhdGUiLCJuYW1lIjoiU3RhdHVzIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJNZXNzYWdlIGZvciB0aGUgY3VycmVudCBNdWx0aU1hcCBDb25maWciLCJqc29uUGF0aCI6Ii5zdGF0dXMubWVzc2FnZSIsIm5hbWUiOiJNZXNzYWdlIiwicHJpb3JpdHkiOjEsInR5cGUiOiJzdHJpbmcifV0sIm5hbWUiOiJ2MWFscGhhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJNdWx0aU1hcCBpcyB0aGUgU2NoZW1hIGZvciB0aGUgbXVsdGltYXBzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiTXVsdGlNYXBTcGVjIGRlZmluZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgTXVsdGlNYXAiLCJwcm9wZXJ0aWVzIjp7ImFzeW5jQmFja3VwQ291bnQiOnsiZGVmYXVsdCI6MCwiZGVzY3JpcHRpb24iOiJOdW1iZXIgb2YgYXN5bmNocm9ub3VzIGJhY2t1cHMuIiwiZm9ybWF0IjoiaW50MzIiLCJtaW5pbXVtIjowLCJ0eXBlIjoiaW50ZWdlciJ9LCJiYWNrdXBDb3VudCI6eyJkZWZhdWx0IjoxLCJkZXNjcmlwdGlvbiI6Ik51bWJlciBvZiBzeW5jaHJvbm91cyBiYWNrdXBzLiIsImZvcm1hdCI6ImludDMyIiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifSwiYmluYXJ5Ijp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6IlNwZWNpZmllcyBpbiB3aGljaCBmb3JtYXQgZGF0YSB3aWxsIGJlIHN0b3JlZCBpbiB5b3VyIG11bHRpTWFwLiBmYWxzZTogT0JKRUNUIHRydWU6IEJJTkFSWSIsInR5cGUiOiJib29sZWFuIn0sImNvbGxlY3Rpb25UeXBlIjp7ImRlZmF1bHQiOiJTRVQiLCJkZXNjcmlwdGlvbiI6IlR5cGUgb2YgdGhlIHZhbHVlIGNvbGxlY3Rpb24iLCJlbnVtIjpbIlNFVCIsIkxJU1QiXSwidHlwZSI6InN0cmluZyJ9LCJoYXplbGNhc3RSZXNvdXJjZU5hbWUiOnsiZGVzY3JpcHRpb24iOiJIYXplbGNhc3RSZXNvdXJjZU5hbWUgZGVmaW5lcyB0aGUgbmFtZSBvZiB0aGUgSGF6ZWxjYXN0IHJlc291cmNlLiIsIm1pbkxlbmd0aCI6MSwidHlwZSI6InN0cmluZyJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgZGF0YSBzdHJ1Y3R1cmUgY29uZmlnIHRvIGJlIGNyZWF0ZWQuIElmIGVtcHR5LCBDUiBuYW1lIHdpbGwgYmUgdXNlZC4gSXQgY2Fubm90IGJlIHVwZGF0ZWQgYWZ0ZXIgdGhlIGNvbmZpZyBpcyBjcmVhdGVkIHN1Y2Nlc3NmdWxseS4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJoYXplbGNhc3RSZXNvdXJjZU5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJNdWx0aU1hcFN0YXR1cyBkZWZpbmVzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBNdWx0aU1hcCIsInByb3BlcnRpZXMiOnsibWVtYmVyU3RhdHVzZXMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsiZW51bSI6WyJTdWNjZXNzIiwiRmFpbGVkIiwiUGVuZGluZyIsIlBlcnNpc3RpbmciLCJUZXJtaW5hdGluZyJdLCJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJvYmplY3QifSwibWVzc2FnZSI6eyJ0eXBlIjoic3RyaW5nIn0sInN0YXRlIjp7ImVudW0iOlsiU3VjY2VzcyIsIkZhaWxlZCIsIlBlbmRpbmciLCJQZXJzaXN0aW5nIiwiVGVybWluYXRpbmciXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsic3BlYyJdLCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfSwic3RhdHVzIjp7ImFjY2VwdGVkTmFtZXMiOnsia2luZCI6IiIsInBsdXJhbCI6IiJ9LCJjb25kaXRpb25zIjpudWxsLCJzdG9yZWRWZXJzaW9ucyI6bnVsbH19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEwLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJxdWV1ZXMuaGF6ZWxjYXN0LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiaGF6ZWxjYXN0LmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJRdWV1ZSIsImxpc3RLaW5kIjoiUXVldWVMaXN0IiwicGx1cmFsIjoicXVldWVzIiwic2hvcnROYW1lcyI6WyJxIl0sInNpbmd1bGFyIjoicXVldWUifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3siZGVzY3JpcHRpb24iOiJDdXJyZW50IHN0YXRlIG9mIHRoZSBRdWV1ZSBDb25maWciLCJqc29uUGF0aCI6Ii5zdGF0dXMuc3RhdGUiLCJuYW1lIjoiU3RhdHVzIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJNZXNzYWdlIGZvciB0aGUgY3VycmVudCBRdWV1ZSBDb25maWciLCJqc29uUGF0aCI6Ii5zdGF0dXMubWVzc2FnZSIsIm5hbWUiOiJNZXNzYWdlIiwicHJpb3JpdHkiOjEsInR5cGUiOiJzdHJpbmcifV0sIm5hbWUiOiJ2MWFscGhhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJRdWV1ZSBpcyB0aGUgU2NoZW1hIGZvciB0aGUgcXVldWVzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiUXVldWVTcGVjIGRlZmluZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgUXVldWUgSXQgY2Fubm90IGJlIHVwZGF0ZWQgYWZ0ZXIgdGhlIFF1ZXVlIGlzIGNyZWF0ZWQiLCJwcm9wZXJ0aWVzIjp7ImFzeW5jQmFja3VwQ291bnQiOnsiZGVmYXVsdCI6MCwiZGVzY3JpcHRpb24iOiJOdW1iZXIgb2YgYXN5bmNocm9ub3VzIGJhY2t1cHMuIiwiZm9ybWF0IjoiaW50MzIiLCJtaW5pbXVtIjowLCJ0eXBlIjoiaW50ZWdlciJ9LCJiYWNrdXBDb3VudCI6eyJkZWZhdWx0IjoxLCJkZXNjcmlwdGlvbiI6Ik51bWJlciBvZiBzeW5jaHJvbm91cyBiYWNrdXBzLiIsImZvcm1hdCI6ImludDMyIiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifSwiZW1wdHlRdWV1ZVRUTFNlY29uZHMiOnsiZGVmYXVsdCI6LTEsImRlc2NyaXB0aW9uIjoiVGltZSBpbiBzZWNvbmRzIGFmdGVyIHdoaWNoIHRoZSBRdWV1ZSB3aWxsIGJlIGRlc3Ryb3llZCBpZiBpdCBzdGF5cyBlbXB0eSBvciB1bnVzZWQuIElmIHRoZSB2YWx1ZXMgaXMgbm90IHByb3ZpZGVkIHRoZSBRdWV1ZSB3aWxsIG5ldmVyIGJlIGRlc3Ryb3llZC4iLCJmb3JtYXQiOiJpbnQzMiIsInR5cGUiOiJpbnRlZ2VyIn0sImhhemVsY2FzdFJlc291cmNlTmFtZSI6eyJkZXNjcmlwdGlvbiI6IkhhemVsY2FzdFJlc291cmNlTmFtZSBkZWZpbmVzIHRoZSBuYW1lIG9mIHRoZSBIYXplbGNhc3QgcmVzb3VyY2UuIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn0sIm1heFNpemUiOnsiZGVmYXVsdCI6MCwiZGVzY3JpcHRpb24iOiJNYXggc2l6ZSBvZiB0aGUgcXVldWUuIiwiZm9ybWF0IjoiaW50MzIiLCJ0eXBlIjoiaW50ZWdlciJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgZGF0YSBzdHJ1Y3R1cmUgY29uZmlnIHRvIGJlIGNyZWF0ZWQuIElmIGVtcHR5LCBDUiBuYW1lIHdpbGwgYmUgdXNlZC4gSXQgY2Fubm90IGJlIHVwZGF0ZWQgYWZ0ZXIgdGhlIGNvbmZpZyBpcyBjcmVhdGVkIHN1Y2Nlc3NmdWxseS4iLCJ0eXBlIjoic3RyaW5nIn0sInByaW9yaXR5Q29tcGFyYXRvckNsYXNzTmFtZSI6eyJkZXNjcmlwdGlvbiI6IlRoZSBuYW1lIG9mIHRoZSBjb21wYXJhdG9yIGNsYXNzLiBJZiB0aGUgY2xhc3MgbmFtZSBpcyBwcm92aWRlZCwgdGhlIFF1ZXVlIGJlY29tZXMgUHJpb3JpdHkgUXVldWUuIFlvdSBjYW4gbGVhcm4gbW9yZSBhdCBodHRwczovL2RvY3MuaGF6ZWxjYXN0LmNvbS9oYXplbGNhc3QvbGF0ZXN0L2RhdGEtc3RydWN0dXJlcy9wcmlvcml0eS1xdWV1ZS4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJoYXplbGNhc3RSZXNvdXJjZU5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJRdWV1ZVN0YXR1cyBkZWZpbmVzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBRdWV1ZSIsInByb3BlcnRpZXMiOnsibWVtYmVyU3RhdHVzZXMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsiZW51bSI6WyJTdWNjZXNzIiwiRmFpbGVkIiwiUGVuZGluZyIsIlBlcnNpc3RpbmciLCJUZXJtaW5hdGluZyJdLCJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJvYmplY3QifSwibWVzc2FnZSI6eyJ0eXBlIjoic3RyaW5nIn0sInN0YXRlIjp7ImVudW0iOlsiU3VjY2VzcyIsIkZhaWxlZCIsIlBlbmRpbmciLCJQZXJzaXN0aW5nIiwiVGVybWluYXRpbmciXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsic3BlYyJdLCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfSwic3RhdHVzIjp7ImFjY2VwdGVkTmFtZXMiOnsia2luZCI6IiIsInBsdXJhbCI6IiJ9LCJjb25kaXRpb25zIjpudWxsLCJzdG9yZWRWZXJzaW9ucyI6bnVsbH19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEwLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJyZXBsaWNhdGVkbWFwcy5oYXplbGNhc3QuY29tIn0sInNwZWMiOnsiZ3JvdXAiOiJoYXplbGNhc3QuY29tIiwibmFtZXMiOnsia2luZCI6IlJlcGxpY2F0ZWRNYXAiLCJsaXN0S2luZCI6IlJlcGxpY2F0ZWRNYXBMaXN0IiwicGx1cmFsIjoicmVwbGljYXRlZG1hcHMiLCJzaG9ydE5hbWVzIjpbInJtYXAiXSwic2luZ3VsYXIiOiJyZXBsaWNhdGVkbWFwIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJhZGRpdGlvbmFsUHJpbnRlckNvbHVtbnMiOlt7ImRlc2NyaXB0aW9uIjoiQ3VycmVudCBzdGF0ZSBvZiB0aGUgUmVwbGljYXRlZE1hcCBDb25maWciLCJqc29uUGF0aCI6Ii5zdGF0dXMuc3RhdGUiLCJuYW1lIjoiU3RhdHVzIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJNZXNzYWdlIGZvciB0aGUgY3VycmVudCBSZXBsaWNhdGVkTWFwIENvbmZpZyIsImpzb25QYXRoIjoiLnN0YXR1cy5tZXNzYWdlIiwibmFtZSI6Ik1lc3NhZ2UiLCJwcmlvcml0eSI6MSwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IlJlcGxpY2F0ZWRNYXAgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIHJlcGxpY2F0ZWRtYXBzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiUmVwbGljYXRlZE1hcFNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBSZXBsaWNhdGVkTWFwIiwicHJvcGVydGllcyI6eyJhc3luY0ZpbGx1cCI6eyJkZWZhdWx0Ijp0cnVlLCJkZXNjcmlwdGlvbiI6IkFzeW5jRmlsbHVwIHNwZWNpZmllcyB3aGV0aGVyIHRoZSBSZXBsaWNhdGVkTWFwIGlzIGF2YWlsYWJsZSBmb3IgcmVhZHMgYmVmb3JlIHRoZSBpbml0aWFsIHJlcGxpY2F0aW9uIGlzIGNvbXBsZXRlZCIsInR5cGUiOiJib29sZWFuIn0sImhhemVsY2FzdFJlc291cmNlTmFtZSI6eyJkZXNjcmlwdGlvbiI6IkhhemVsY2FzdFJlc291cmNlTmFtZSBkZWZpbmVzIHRoZSBuYW1lIG9mIHRoZSBIYXplbGNhc3QgcmVzb3VyY2UuIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn0sImluTWVtb3J5Rm9ybWF0Ijp7ImRlZmF1bHQiOiJPQkpFQ1QiLCJkZXNjcmlwdGlvbiI6IkluTWVtb3J5Rm9ybWF0IHNwZWNpZmllcyBpbiB3aGljaCBmb3JtYXQgZGF0YSB3aWxsIGJlIHN0b3JlZCBpbiB0aGUgUmVwbGljYXRlZE1hcCIsImVudW0iOlsiQklOQVJZIiwiT0JKRUNUIl0sInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIFJlcGxpY2F0ZWRNYXAgY29uZmlnIHRvIGJlIGNyZWF0ZWQuIElmIGVtcHR5LCBDUiBuYW1lIHdpbGwgYmUgdXNlZC4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJoYXplbGNhc3RSZXNvdXJjZU5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJSZXBsaWNhdGVkTWFwU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIFJlcGxpY2F0ZWRNYXAiLCJwcm9wZXJ0aWVzIjp7Im1lbWJlclN0YXR1c2VzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7ImVudW0iOlsiU3VjY2VzcyIsIkZhaWxlZCIsIlBlbmRpbmciLCJQZXJzaXN0aW5nIiwiVGVybWluYXRpbmciXSwidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoib2JqZWN0In0sIm1lc3NhZ2UiOnsidHlwZSI6InN0cmluZyJ9LCJzdGF0ZSI6eyJlbnVtIjpbIlN1Y2Nlc3MiLCJGYWlsZWQiLCJQZW5kaW5nIiwiUGVyc2lzdGluZyIsIlRlcm1pbmF0aW5nIl0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInNwZWMiXSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6bnVsbCwic3RvcmVkVmVyc2lvbnMiOm51bGx9fQ==
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwLmt1YmVybmV0ZXMuaW8vY29tcG9uZW50Ijoid2ViaG9vayIsImFwcC5rdWJlcm5ldGVzLmlvL2NyZWF0ZWQtYnkiOiJoYXplbGNhc3QtcGxhdGZvcm0tb3BlcmF0b3IiLCJhcHAua3ViZXJuZXRlcy5pby9pbnN0YW5jZSI6IndlYmhvb2stc2VydmljZSIsImFwcC5rdWJlcm5ldGVzLmlvL21hbmFnZWQtYnkiOiJrdXN0b21pemUiLCJhcHAua3ViZXJuZXRlcy5pby9uYW1lIjoic2VydmljZSIsImFwcC5rdWJlcm5ldGVzLmlvL3BhcnQtb2YiOiJoYXplbGNhc3QtcGxhdGZvcm0tb3BlcmF0b3IifSwibmFtZSI6ImhhemVsY2FzdC1wbGF0Zm9ybS13ZWJob29rLXNlcnZpY2UifSwic3BlYyI6eyJwb3J0cyI6W3sicG9ydCI6NDQzLCJwcm90b2NvbCI6IlRDUCIsInRhcmdldFBvcnQiOjk0NDN9XSwic2VsZWN0b3IiOnsiY29udHJvbC1wbGFuZSI6ImNvbnRyb2xsZXItbWFuYWdlciJ9fSwic3RhdHVzIjp7ImxvYWRCYWxhbmNlciI6e319fQ==
relatedImages:
- image: docker.io/hazelcast/hazelcast-platform-operator:5.6
  name: ""
- image: quay.io/openshift-community-operators/hazelcast-platform-operator@sha256:a62c579229fff55feccf2f45a2f7802b8055ff8e2376546665ae6a7f667db6f8
  name: ""
schema: olm.bundle
---
image: quay.io/openshift-community-operators/hazelcast-platform-operator@sha256:4a403a82c1e97ca7629b239bb2d9a88ca544ebbc85bfeef09b01f86941c682b4
name: hazelcast-platform-operator.v5.7.0
package: hazelcast-platform-operator
properties:
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: Cache
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: CronHotBackup
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: Hazelcast
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: HotBackup
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: ManagementCenter
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: Map
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: MultiMap
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: Queue
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: ReplicatedMap
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: Topic
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: WanReplication
    version: v1alpha1
- type: olm.package
  value:
    packageName: hazelcast-platform-operator
    version: 5.7.0
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEwLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJ0b3BpY3MuaGF6ZWxjYXN0LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiaGF6ZWxjYXN0LmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJUb3BpYyIsImxpc3RLaW5kIjoiVG9waWNMaXN0IiwicGx1cmFsIjoidG9waWNzIiwic2luZ3VsYXIiOiJ0b3BpYyJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJkZXNjcmlwdGlvbiI6IkN1cnJlbnQgc3RhdGUgb2YgdGhlIFRvcGljIENvbmZpZyIsImpzb25QYXRoIjoiLnN0YXR1cy5zdGF0ZSIsIm5hbWUiOiJTdGF0dXMiLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6Ik1lc3NhZ2UgZm9yIHRoZSBjdXJyZW50IFRvcGljIENvbmZpZyIsImpzb25QYXRoIjoiLnN0YXR1cy5tZXNzYWdlIiwibmFtZSI6Ik1lc3NhZ2UiLCJwcmlvcml0eSI6MSwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IlRvcGljIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSB0b3BpY3MgQVBJIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJUb3BpY1NwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBUb3BpYyIsInByb3BlcnRpZXMiOnsiZ2xvYmFsT3JkZXJpbmdFbmFibGVkIjp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6Imdsb2JhbE9yZGVyaW5nRW5hYmxlZCBhbGxvd3MgYWxsIG5vZGVzIGxpc3RlbmluZyB0byB0aGUgc2FtZSB0b3BpYyBnZXQgdGhlaXIgbWVzc2FnZXMgaW4gdGhlIHNhbWUgb3JkZXIgdGhlIHNhbWUgb3JkZXIiLCJ0eXBlIjoiYm9vbGVhbiJ9LCJoYXplbGNhc3RSZXNvdXJjZU5hbWUiOnsiZGVzY3JpcHRpb24iOiJIYXplbGNhc3RSZXNvdXJjZU5hbWUgZGVmaW5lcyB0aGUgbmFtZSBvZiB0aGUgSGF6ZWxjYXN0IHJlc291cmNlIGZvciB3aGljaCB0b3BpYyBjb25maWcgd2lsbCBiZSBjcmVhdGVkIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn0sIm11bHRpVGhyZWFkaW5nRW5hYmxlZCI6eyJkZWZhdWx0IjpmYWxzZSwiZGVzY3JpcHRpb24iOiJtdWx0aVRocmVhZGluZ0VuYWJsZWQgZW5hYmxlcyBtdWx0aS10aHJlYWRlZCBwcm9jZXNzaW5nIG9mIGluY29taW5nIG1lc3NhZ2VzIGEgc2luZ2xlIHRocmVhZCB3aWxsIGhhbmRsZSBhbGwgdG9waWMgbWVzc2FnZXMiLCJ0eXBlIjoiYm9vbGVhbiJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgdG9waWMgY29uZmlnIHRvIGJlIGNyZWF0ZWQuIElmIGVtcHR5LCBDUiBuYW1lIHdpbGwgYmUgdXNlZC4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJoYXplbGNhc3RSZXNvdXJjZU5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJUb3BpY1N0YXR1cyBkZWZpbmVzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBUb3BpYyIsInByb3BlcnRpZXMiOnsibWVtYmVyU3RhdHVzZXMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsiZW51bSI6WyJTdWNjZXNzIiwiRmFpbGVkIiwiUGVuZGluZyIsIlBlcnNpc3RpbmciLCJUZXJtaW5hdGluZyJdLCJ0eXBlIjoic3RyaW5nIn0sImRlc2NyaXB0aW9uIjoiSG9sZHMgc3RhdHVzIG9mIGRhdGEgc3RydWN0dXJlIGZvciBlYWNoIEhhemVsY2FzdCBtZW1iZXIiLCJ0eXBlIjoib2JqZWN0In0sIm1lc3NhZ2UiOnsiZGVzY3JpcHRpb24iOiJNZXNzYWdlIGV4cGxhaW5pbmcgdGhlIGN1cnJlbnQgc3RhdGUiLCJ0eXBlIjoic3RyaW5nIn0sInN0YXRlIjp7ImRlc2NyaXB0aW9uIjoiU3RhdGUgb2YgdGhlIGRhdGEgc3RydWN0dXJlIiwiZW51bSI6WyJTdWNjZXNzIiwiRmFpbGVkIiwiUGVuZGluZyIsIlBlcnNpc3RpbmciLCJUZXJtaW5hdGluZyJdLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJzcGVjIl0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOm51bGwsInN0b3JlZFZlcnNpb25zIjpudWxsfX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEwLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJ3YW5yZXBsaWNhdGlvbnMuaGF6ZWxjYXN0LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiaGF6ZWxjYXN0LmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJXYW5SZXBsaWNhdGlvbiIsImxpc3RLaW5kIjoiV2FuUmVwbGljYXRpb25MaXN0IiwicGx1cmFsIjoid2FucmVwbGljYXRpb25zIiwic2hvcnROYW1lcyI6WyJ3ciJdLCJzaW5ndWxhciI6IndhbnJlcGxpY2F0aW9uIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJhZGRpdGlvbmFsUHJpbnRlckNvbHVtbnMiOlt7ImRlc2NyaXB0aW9uIjoiQ3VycmVudCBzdGF0ZSBvZiB0aGUgSGF6ZWxjYXN0IFdBTiBSZXBsaWNhdGlvbiIsImpzb25QYXRoIjoiLnN0YXR1cy5zdGF0dXMiLCJuYW1lIjoiU3RhdHVzIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJNZXNzYWdlIGZvciB0aGUgY3VycmVudCBXYW5SZXBsaWNhdGlvbiBDb25maWciLCJqc29uUGF0aCI6Ii5zdGF0dXMubWVzc2FnZSIsIm5hbWUiOiJNZXNzYWdlIiwicHJpb3JpdHkiOjEsInR5cGUiOiJzdHJpbmcifV0sIm5hbWUiOiJ2MWFscGhhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJXYW5SZXBsaWNhdGlvbiBpcyB0aGUgU2NoZW1hIGZvciB0aGUgd2FucmVwbGljYXRpb25zIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiV2FuUmVwbGljYXRpb25TcGVjIGRlZmluZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgV2FuUmVwbGljYXRpb24iLCJwcm9wZXJ0aWVzIjp7ImFja25vd2xlZGdlbWVudCI6eyJkZWZhdWx0Ijp7InRpbWVvdXQiOjYwMDAwLCJ0eXBlIjoiQUNLX09OX09QRVJBVElPTl9DT01QTEVURSJ9LCJkZXNjcmlwdGlvbiI6IkFja25vd2xlZGdlbWVudCBpcyB0aGUgY29uZmlndXJhdGlvbiBmb3IgdGhlIGNvbmRpdGlvbiB3aGVuIHRoZSBuZXh0IGJhdGNoIG9mIFdBTiBldmVudHMgYXJlIHNlbnQuIiwicHJvcGVydGllcyI6eyJ0aW1lb3V0Ijp7ImRlZmF1bHQiOjYwMDAwLCJkZXNjcmlwdGlvbiI6IlRpbWVvdXQgcmVwcmVzZW50cyB0aGUgdGltZSBpbiBtaWxsaXNlY29uZHMgdGhlIHNvdXJjZSBjbHVzdGVyIHdhaXRzIGZvciB0aGUgYWNrbm93bGVkZ2VtZW50LiBBZnRlciB0aW1lb3V0LCB0aGUgZXZlbnRzIHdpbGwgYmUgcmVzZW50LiIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifSwidHlwZSI6eyJkZWZhdWx0IjoiQUNLX09OX09QRVJBVElPTl9DT01QTEVURSIsImRlc2NyaXB0aW9uIjoiVHlwZSByZXByZXNlbnRzIGhvdyBhIGJhdGNoIG9mIHJlcGxpY2F0aW9uIGV2ZW50cyBpcyBjb25zaWRlcmVkIHN1Y2Nlc3NmdWxseSByZXBsaWNhdGVkLiIsImVudW0iOlsiQUNLX09OX09QRVJBVElPTl9DT01QTEVURSIsIkFDS19PTl9SRUNFSVBUIl0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwiYmF0Y2giOnsiZGVmYXVsdCI6eyJtYXhpbXVtRGVsYXkiOjEwMDAsInNpemUiOjUwMH0sImRlc2NyaXB0aW9uIjoiQmF0Y2ggaXMgdGhlIGNvbmZpZ3VyYXRpb24gZm9yIFdBTiBldmVudHMgYmF0Y2guIiwicHJvcGVydGllcyI6eyJtYXhpbXVtRGVsYXkiOnsiZGVmYXVsdCI6MTAwMCwiZGVzY3JpcHRpb24iOiJNYXhpbXVtRGVsYXkgcmVwcmVzZW50cyB0aGUgbWF4aW11bSBkZWxheSBpbiBtaWxsaXNlY29uZHMuIElmIHRoZSBiYXRjaCBzaXplIGlzIG5vdCByZWFjaGVkLCB0aGUgZXZlbnRzIHdpbGwgYmUgc2VudCBhZnRlciB0aGUgbWF4aW11bSBkZWxheS4iLCJmb3JtYXQiOiJpbnQzMiIsInR5cGUiOiJpbnRlZ2VyIn0sInNpemUiOnsiZGVmYXVsdCI6NTAwLCJkZXNjcmlwdGlvbiI6IlNpemUgcmVwcmVzZW50cyB0aGUgbWF4aW11bSBiYXRjaCBzaXplLiIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifX0sInR5cGUiOiJvYmplY3QifSwiZW5kcG9pbnRzIjp7ImRlc2NyaXB0aW9uIjoiRW5kcG9pbnRzIGlzIHRoZSB0YXJnZXQgY2x1c3RlciBjb21tYSBzZXBhcmF0ZWQgZW5kcG9pbnQgbGlzdCAuIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn0sInF1ZXVlIjp7ImRlZmF1bHQiOnsiY2FwYWNpdHkiOjEwMDAwLCJmdWxsQmVoYXZpb3IiOiJESVNDQVJEX0FGVEVSX01VVEFUSU9OIn0sImRlc2NyaXB0aW9uIjoiUXVldWUgaXMgdGhlIGNvbmZpZ3VyYXRpb24gZm9yIFdBTiBldmVudHMgcXVldWUuIiwicHJvcGVydGllcyI6eyJjYXBhY2l0eSI6eyJkZWZhdWx0IjoxMDAwMCwiZGVzY3JpcHRpb24iOiJDYXBhY2l0eSBpcyB0aGUgdG90YWwgY2FwYWNpdHkgb2YgV0FOIHF1ZXVlLiIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifSwiZnVsbEJlaGF2aW9yIjp7ImRlZmF1bHQiOiJESVNDQVJEX0FGVEVSX01VVEFUSU9OIiwiZGVzY3JpcHRpb24iOiJGdWxsQmVoYXZpb3IgcmVwcmVzZW50cyB0aGUgYmVoYXZpb3Igb2YgdGhlIG5ldyBhcnJpdmFsIHdoZW4gdGhlIHF1ZXVlIGlzIGZ1bGwuIiwiZW51bSI6WyJESVNDQVJEX0FGVEVSX01VVEFUSU9OIiwiVEhST1dfRVhDRVBUSU9OIiwiVEhST1dfRVhDRVBUSU9OX09OTFlfSUZfUkVQTElDQVRJT05fQUNUSVZFIl0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwicmVzb3VyY2VzIjp7ImRlc2NyaXB0aW9uIjoiUmVzb3VyY2VzIGlzIHRoZSBsaXN0IG9mIGN1c3RvbSByZXNvdXJjZXMgdG8gd2hpY2ggV0FOIHJlcGxpY2F0aW9uIGFwcGxpZXMuIiwiaXRlbXMiOnsicHJvcGVydGllcyI6eyJraW5kIjp7ImRlZmF1bHQiOiJNYXAiLCJkZXNjcmlwdGlvbiI6IktpbmQgaXMgdGhlIGtpbmQgb2YgY3VzdG9tIHJlc291cmNlIHRvIHdoaWNoIFdBTiByZXBsaWNhdGlvbiBhcHBsaWVzLiIsImVudW0iOlsiTWFwIiwiSGF6ZWxjYXN0Il0sInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgaXMgdGhlIG5hbWUgb2YgY3VzdG9tIHJlc291cmNlIHRvIHdoaWNoIFdBTiByZXBsaWNhdGlvbiBhcHBsaWVzLiIsIm1pbkxlbmd0aCI6MSwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sIm1pbkl0ZW1zIjoxLCJ0eXBlIjoiYXJyYXkifSwidGFyZ2V0Q2x1c3Rlck5hbWUiOnsiZGVzY3JpcHRpb24iOiJDbHVzdGVyTmFtZSBpcyB0aGUgY2x1c3Rlck5hbWUgZmllbGQgb2YgdGhlIHRhcmdldCBIYXplbGNhc3QgcmVzb3VyY2UuIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJlbmRwb2ludHMiLCJyZXNvdXJjZXMiLCJ0YXJnZXRDbHVzdGVyTmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IldhblJlcGxpY2F0aW9uU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIFdhblJlcGxpY2F0aW9uIiwicHJvcGVydGllcyI6eyJtZXNzYWdlIjp7ImRlc2NyaXB0aW9uIjoiTWVzc2FnZSBpcyB0aGUgZmllbGQgdG8gc2hvdyBkZXRhaWwgaW5mb3JtYXRpb24gb3IgZXJyb3IiLCJ0eXBlIjoic3RyaW5nIn0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IlN0YXR1cyBpcyB0aGUgc3RhdHVzIG9mIFdBTiByZXBsaWNhdGlvbiIsInR5cGUiOiJzdHJpbmcifSwid2FuUmVwbGljYXRpb25NYXBzU3RhdHVzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InByb3BlcnRpZXMiOnsibWVzc2FnZSI6eyJkZXNjcmlwdGlvbiI6Ik1lc3NhZ2UgaXMgdGhlIGZpZWxkIHRvIHNob3cgZGV0YWlsIGluZm9ybWF0aW9uIG9yIGVycm9yIiwidHlwZSI6InN0cmluZyJ9LCJwdWJsaXNoZXJJZCI6eyJkZXNjcmlwdGlvbiI6IlB1Ymxpc2hlcklkIGlzIHRoZSBJRCB1c2VkIGZvciBXQU4gcHVibGlzaGVyIElEIiwidHlwZSI6InN0cmluZyJ9LCJyZXNvdXJjZU5hbWUiOnsiZGVzY3JpcHRpb24iOiJSZXNvdXJjZU5hbWUgaXMgdGhlIG5hbWUgb2YgdGhlIE1hcCBDdXN0b20gUmVzb3VyY2UuIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJTdGF0dXMgaXMgdGhlIHN0YXR1cyBvZiBXQU4gcmVwbGljYXRpb24iLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sImRlc2NyaXB0aW9uIjoiV2FuUmVwbGljYXRpb25NYXBzU3RhdHVzIGlzIHRoZSBXQU4gUmVwbGljYXRpb24gc3RhdHVzIG9mIHRoZSBNYXBzIGdpdmVuIGluIHRoZSBzcGVjIGRpcmVjdGx5IG9yIGluZGlyZWN0bHkgYnkgSGF6ZWxjYXN0IHJlc291cmNlLiIsInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInNwZWMiXSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6bnVsbCwic3RvcmVkVmVyc2lvbnMiOm51bGx9fQ==
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEwLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJjYWNoZXMuaGF6ZWxjYXN0LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiaGF6ZWxjYXN0LmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJDYWNoZSIsImxpc3RLaW5kIjoiQ2FjaGVMaXN0IiwicGx1cmFsIjoiY2FjaGVzIiwic2hvcnROYW1lcyI6WyJjaCJdLCJzaW5ndWxhciI6ImNhY2hlIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJhZGRpdGlvbmFsUHJpbnRlckNvbHVtbnMiOlt7ImRlc2NyaXB0aW9uIjoiQ3VycmVudCBzdGF0ZSBvZiB0aGUgQ2FjaGUgQ29uZmlnIiwianNvblBhdGgiOiIuc3RhdHVzLnN0YXRlIiwibmFtZSI6IlN0YXR1cyIsInR5cGUiOiJzdHJpbmcifSx7ImRlc2NyaXB0aW9uIjoiTWVzc2FnZSBmb3IgdGhlIGN1cnJlbnQgQ2FjaGUgQ29uZmlnIiwianNvblBhdGgiOiIuc3RhdHVzLm1lc3NhZ2UiLCJuYW1lIjoiTWVzc2FnZSIsInByaW9yaXR5IjoxLCJ0eXBlIjoic3RyaW5nIn1dLCJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiQ2FjaGUgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIGNhY2hlcyBBUEkiLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuIFNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZCBtYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy4gU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uIENhbm5vdCBiZSB1cGRhdGVkLiBJbiBDYW1lbENhc2UuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IkNhY2hlU3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIENhY2hlIEl0IGNhbm5vdCBiZSB1cGRhdGVkIGFmdGVyIHRoZSBDYWNoZSBpcyBjcmVhdGVkIiwicHJvcGVydGllcyI6eyJhc3luY0JhY2t1cENvdW50Ijp7ImRlZmF1bHQiOjAsImRlc2NyaXB0aW9uIjoiTnVtYmVyIG9mIGFzeW5jaHJvbm91cyBiYWNrdXBzLiIsImZvcm1hdCI6ImludDMyIiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifSwiYmFja3VwQ291bnQiOnsiZGVmYXVsdCI6MSwiZGVzY3JpcHRpb24iOiJOdW1iZXIgb2Ygc3luY2hyb25vdXMgYmFja3Vwcy4iLCJmb3JtYXQiOiJpbnQzMiIsIm1pbmltdW0iOjAsInR5cGUiOiJpbnRlZ2VyIn0sImhhemVsY2FzdFJlc291cmNlTmFtZSI6eyJkZXNjcmlwdGlvbiI6IkhhemVsY2FzdFJlc291cmNlTmFtZSBkZWZpbmVzIHRoZSBuYW1lIG9mIHRoZSBIYXplbGNhc3QgcmVzb3VyY2UgdGhhdCB0aGlzIHJlc291cmNlIGlzIGNyZWF0ZWQgZm9yLiIsIm1pbkxlbmd0aCI6MSwidHlwZSI6InN0cmluZyJ9LCJpbk1lbW9yeUZvcm1hdCI6eyJkZWZhdWx0IjoiQklOQVJZIiwiZGVzY3JpcHRpb24iOiJJbk1lbW9yeUZvcm1hdCBzcGVjaWZpZXMgaW4gd2hpY2ggZm9ybWF0IGRhdGEgd2lsbCBiZSBzdG9yZWQgaW4geW91ciBjYWNoZSIsImVudW0iOlsiQklOQVJZIiwiT0JKRUNUIiwiTkFUSVZFIl0sInR5cGUiOiJzdHJpbmcifSwia2V5VHlwZSI6eyJkZXNjcmlwdGlvbiI6IkNsYXNzIG5hbWUgb2YgdGhlIGtleSB0eXBlIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgZGF0YSBzdHJ1Y3R1cmUgY29uZmlnIHRvIGJlIGNyZWF0ZWQuIElmIGVtcHR5LCBDUiBuYW1lIHdpbGwgYmUgdXNlZC4gSXQgY2Fubm90IGJlIHVwZGF0ZWQgYWZ0ZXIgdGhlIGNvbmZpZyBpcyBjcmVhdGVkIHN1Y2Nlc3NmdWxseS4iLCJ0eXBlIjoic3RyaW5nIn0sInBlcnNpc3RlbmNlRW5hYmxlZCI6eyJkZWZhdWx0IjpmYWxzZSwiZGVzY3JpcHRpb24iOiJXaGVuIGVuYWJsZWQsIGNhY2hlIGRhdGEgd2lsbCBiZSBwZXJzaXN0ZWQuIiwidHlwZSI6ImJvb2xlYW4ifSwidmFsdWVUeXBlIjp7ImRlc2NyaXB0aW9uIjoiQ2xhc3MgbmFtZSBvZiB0aGUgdmFsdWUgdHlwZSIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImhhemVsY2FzdFJlc291cmNlTmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IkNhY2hlU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIENhY2hlIiwicHJvcGVydGllcyI6eyJtZW1iZXJTdGF0dXNlcyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJlbnVtIjpbIlN1Y2Nlc3MiLCJGYWlsZWQiLCJQZW5kaW5nIiwiUGVyc2lzdGluZyIsIlRlcm1pbmF0aW5nIl0sInR5cGUiOiJzdHJpbmcifSwiZGVzY3JpcHRpb24iOiJIb2xkcyBzdGF0dXMgb2YgZGF0YSBzdHJ1Y3R1cmUgZm9yIGVhY2ggSGF6ZWxjYXN0IG1lbWJlciIsInR5cGUiOiJvYmplY3QifSwibWVzc2FnZSI6eyJkZXNjcmlwdGlvbiI6Ik1lc3NhZ2UgZXhwbGFpbmluZyB0aGUgY3VycmVudCBzdGF0ZSIsInR5cGUiOiJzdHJpbmcifSwic3RhdGUiOnsiZGVzY3JpcHRpb24iOiJTdGF0ZSBvZiB0aGUgZGF0YSBzdHJ1Y3R1cmUiLCJlbnVtIjpbIlN1Y2Nlc3MiLCJGYWlsZWQiLCJQZW5kaW5nIiwiUGVyc2lzdGluZyIsIlRlcm1pbmF0aW5nIl0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInNwZWMiXSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6bnVsbCwic3RvcmVkVmVyc2lvbnMiOm51bGx9fQ==
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEwLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJjcm9uaG90YmFja3Vwcy5oYXplbGNhc3QuY29tIn0sInNwZWMiOnsiZ3JvdXAiOiJoYXplbGNhc3QuY29tIiwibmFtZXMiOnsia2luZCI6IkNyb25Ib3RCYWNrdXAiLCJsaXN0S2luZCI6IkNyb25Ib3RCYWNrdXBMaXN0IiwicGx1cmFsIjoiY3JvbmhvdGJhY2t1cHMiLCJzaG9ydE5hbWVzIjpbImNoYiJdLCJzaW5ndWxhciI6ImNyb25ob3RiYWNrdXAifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3siZGVzY3JpcHRpb24iOiJTdXNwZW50aW9uIHN0YXR1cyBvZiB0aGUgQ3JvbkhvdEJhY2t1cCIsImpzb25QYXRoIjoiLnNwZWMuc3VzcGVuZCIsIm5hbWUiOiJTVVNQRU5ERUQiLCJ0eXBlIjoiYm9vbGVhbiJ9XSwibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkNyb25Ib3RCYWNrdXAgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIGNyb25ob3RiYWNrdXBzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiQ3JvbkhvdEJhY2t1cFNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBDcm9uSG90QmFja3VwIiwicHJvcGVydGllcyI6eyJmYWlsZWRIb3RCYWNrdXBzSGlzdG9yeUxpbWl0Ijp7ImRlZmF1bHQiOjMsImRlc2NyaXB0aW9uIjoiVGhlIG51bWJlciBvZiBmYWlsZWQgZmluaXNoZWQgaG90IGJhY2t1cHMgdG8gcmV0YWluLiIsImZvcm1hdCI6ImludDMyIiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifSwiaG90QmFja3VwVGVtcGxhdGUiOnsiZGVzY3JpcHRpb24iOiJTcGVjaWZpZXMgdGhlIGhvdCBiYWNrdXAgdGhhdCB3aWxsIGJlIGNyZWF0ZWQgd2hlbiBleGVjdXRpbmcgYSBDcm9uSG90QmFja3VwLiIsInByb3BlcnRpZXMiOnsibWV0YWRhdGEiOnsiZGVzY3JpcHRpb24iOiJTdGFuZGFyZCBvYmplY3QncyBtZXRhZGF0YSBvZiB0aGUgaG90IGJhY2t1cHMgY3JlYXRlZCBmcm9tIHRoaXMgdGVtcGxhdGUuIiwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJTcGVjaWZpY2F0aW9uIG9mIHRoZSBkZXNpcmVkIGJlaGF2aW9yIG9mIHRoZSBob3QgYmFja3VwLiIsInByb3BlcnRpZXMiOnsiYnVja2V0VVJJIjp7ImRlc2NyaXB0aW9uIjoiVVJMIG9mIHRoZSBidWNrZXQgdG8gZG93bmxvYWQgSG90QmFja3VwIGZvbGRlcnMuIEFXUyBTMywgR0NQIEJ1Y2tldCBhbmQgQXp1cmUgQmxvYiBzdG9yYWdlIGJ1Y2tldHMgYXJlIHN1cHBvcnRlZC4gRXhhbXBsZSBidWNrZXQgVVJJczogLSBBV1MgUzMgICAgIC1cdTAwM2UgczM6Ly9idWNrZXQtbmFtZS9wYXRoL3RvL2ZvbGRlciAtIEdDUCBCdWNrZXQgLVx1MDAzZSBnczovL2J1Y2tldC1uYW1lL3BhdGgvdG8vZm9sZGVyIC0gQXp1cmUgQmxvYiAtXHUwMDNlIGF6YmxvYjovL2J1Y2tldC1uYW1lL3BhdGgvdG8vZm9sZGVyIiwidHlwZSI6InN0cmluZyJ9LCJoYXplbGNhc3RSZXNvdXJjZU5hbWUiOnsiZGVzY3JpcHRpb24iOiJIYXplbGNhc3RSZXNvdXJjZU5hbWUgZGVmaW5lcyB0aGUgbmFtZSBvZiB0aGUgSGF6ZWxjYXN0IHJlc291cmNlIiwidHlwZSI6InN0cmluZyJ9LCJzZWNyZXQiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBzZWNyZXQgd2l0aCBjcmVkZW50aWFscyBmb3IgY2xvdWQgcHJvdmlkZXJzLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImhhemVsY2FzdFJlc291cmNlTmFtZSJdLCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJzcGVjIl0sInR5cGUiOiJvYmplY3QifSwic2NoZWR1bGUiOnsiZGVzY3JpcHRpb24iOiJTY2hlZHVsZSBjb250YWlucyBhIGNyb250YWItbGlrZSBleHByZXNzaW9uIHRoYXQgZGVmaW5lcyB0aGUgc2NoZWR1bGUgaW4gd2hpY2ggSG90QmFja3VwIHdpbGwgYmUgc3RhcnRlZC4gSWYgdGhlIFNjaGVkdWxlIGlzIGVtcHR5IHRoZSBIb3RCYWNrdXAgd2lsbCBzdGFydCBvbmx5IG9uY2Ugd2hlbiBhcHBsaWVkLiAtLS0gU2V2ZXJhbCBwcmUtZGVmaW5lZCBzY2hlZHVsZXMgaW4gcGxhY2Ugb2YgYSBjcm9uIGV4cHJlc3Npb24gY2FuIGJlIHVzZWQuIEVudHJ5ICAgICAgICAgICAgICAgICAgfCBEZXNjcmlwdGlvbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCBFcXVpdmFsZW50IFRvIC0tLS0tICAgICAgICAgICAgICAgICAgfCAtLS0tLS0tLS0tLSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAtLS0tLS0tLS0tLS0tIEB5ZWFybHkgKG9yIEBhbm51YWxseSkgfCBSdW4gb25jZSBhIHllYXIsIG1pZG5pZ2h0LCBKYW4uIDFzdCAgICAgICAgfCAwIDAgMSAxICogQG1vbnRobHkgICAgICAgICAgICAgICB8IFJ1biBvbmNlIGEgbW9udGgsIG1pZG5pZ2h0LCBmaXJzdCBvZiBtb250aCB8IDAgMCAxICogKiBAd2Vla2x5ICAgICAgICAgICAgICAgIHwgUnVuIG9uY2UgYSB3ZWVrLCBtaWRuaWdodCBiZXR3ZWVuIFNhdC9TdW4gIHwgMCAwICogKiAwIEBkYWlseSAob3IgQG1pZG5pZ2h0KSAgfCBSdW4gb25jZSBhIGRheSwgbWlkbmlnaHQgICAgICAgICAgICAgICAgICAgfCAwIDAgKiAqICogQGhvdXJseSAgICAgICAgICAgICAgICB8IFJ1biBvbmNlIGFuIGhvdXIsIGJlZ2lubmluZyBvZiBob3VyICAgICAgICB8IDAgKiAqICogKiIsIm1pbkxlbmd0aCI6MSwidHlwZSI6InN0cmluZyJ9LCJzdWNjZXNzZnVsSG90QmFja3Vwc0hpc3RvcnlMaW1pdCI6eyJkZWZhdWx0Ijo1LCJkZXNjcmlwdGlvbiI6IlRoZSBudW1iZXIgb2Ygc3VjY2Vzc2Z1bCBmaW5pc2hlZCBob3QgYmFja3VwcyB0byByZXRhaW4uIiwiZm9ybWF0IjoiaW50MzIiLCJtaW5pbXVtIjowLCJ0eXBlIjoiaW50ZWdlciJ9LCJzdXNwZW5kIjp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6IldoZW4gdHJ1ZSwgQ3JvbkhvdEJhY2t1cCB3aWxsIHN0b3AgY3JlYXRpbmcgSG90QmFja3VwIENScyB1bnRpbCBpdCBpcyBkaXNhYmxlZCIsInR5cGUiOiJib29sZWFuIn19LCJyZXF1aXJlZCI6WyJob3RCYWNrdXBUZW1wbGF0ZSIsInNjaGVkdWxlIl0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiQ3JvbkhvdEJhY2t1cFN0YXR1cyBkZWZpbmVzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBDcm9uSG90QmFja3VwIiwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsic3BlYyJdLCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfSwic3RhdHVzIjp7ImFjY2VwdGVkTmFtZXMiOnsia2luZCI6IiIsInBsdXJhbCI6IiJ9LCJjb25kaXRpb25zIjpudWxsLCJzdG9yZWRWZXJzaW9ucyI6bnVsbH19
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEwLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJob3RiYWNrdXBzLmhhemVsY2FzdC5jb20ifSwic3BlYyI6eyJncm91cCI6ImhhemVsY2FzdC5jb20iLCJuYW1lcyI6eyJraW5kIjoiSG90QmFja3VwIiwibGlzdEtpbmQiOiJIb3RCYWNrdXBMaXN0IiwicGx1cmFsIjoiaG90YmFja3VwcyIsInNob3J0TmFtZXMiOlsiaGIiXSwic2luZ3VsYXIiOiJob3RiYWNrdXAifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3siZGVzY3JpcHRpb24iOiJDdXJyZW50IHN0YXRlIG9mIHRoZSBIb3RCYWNrdXAgcHJvY2VzcyIsImpzb25QYXRoIjoiLnN0YXR1cy5zdGF0ZSIsIm5hbWUiOiJTdGF0dXMiLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6Ik1lc3NhZ2UgZm9yIHRoZSBjdXJyZW50IEhvdEJhY2t1cCBDb25maWciLCJqc29uUGF0aCI6Ii5zdGF0dXMubWVzc2FnZSIsIm5hbWUiOiJNZXNzYWdlIiwicHJpb3JpdHkiOjEsInR5cGUiOiJzdHJpbmcifV0sIm5hbWUiOiJ2MWFscGhhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJIb3RCYWNrdXAgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIGhvdCBiYWNrdXAgQVBJIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJIb3RCYWNrdXBTcGVjIGRlZmluZXMgdGhlIFNwZWMgb2YgSG90QmFja3VwIiwicHJvcGVydGllcyI6eyJidWNrZXRVUkkiOnsiZGVzY3JpcHRpb24iOiJVUkwgb2YgdGhlIGJ1Y2tldCB0byBkb3dubG9hZCBIb3RCYWNrdXAgZm9sZGVycy4gQVdTIFMzLCBHQ1AgQnVja2V0IGFuZCBBenVyZSBCbG9iIHN0b3JhZ2UgYnVja2V0cyBhcmUgc3VwcG9ydGVkLiBFeGFtcGxlIGJ1Y2tldCBVUklzOiAtIEFXUyBTMyAgICAgLVx1MDAzZSBzMzovL2J1Y2tldC1uYW1lL3BhdGgvdG8vZm9sZGVyIC0gR0NQIEJ1Y2tldCAtXHUwMDNlIGdzOi8vYnVja2V0LW5hbWUvcGF0aC90by9mb2xkZXIgLSBBenVyZSBCbG9iIC1cdTAwM2UgYXpibG9iOi8vYnVja2V0LW5hbWUvcGF0aC90by9mb2xkZXIiLCJ0eXBlIjoic3RyaW5nIn0sImhhemVsY2FzdFJlc291cmNlTmFtZSI6eyJkZXNjcmlwdGlvbiI6IkhhemVsY2FzdFJlc291cmNlTmFtZSBkZWZpbmVzIHRoZSBuYW1lIG9mIHRoZSBIYXplbGNhc3QgcmVzb3VyY2UiLCJ0eXBlIjoic3RyaW5nIn0sInNlY3JldCI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIHNlY3JldCB3aXRoIGNyZWRlbnRpYWxzIGZvciBjbG91ZCBwcm92aWRlcnMuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIl0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiSG90QmFja3VwU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIEhvdEJhY2t1cCIsInByb3BlcnRpZXMiOnsiYmFja3VwVVVJRHMiOnsiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifSwibWVzc2FnZSI6eyJ0eXBlIjoic3RyaW5nIn0sInN0YXRlIjp7ImVudW0iOlsiVW5rbm93biIsIlBlbmRpbmciLCJOb3RTdGFydGVkIiwiSW5Qcm9ncmVzcyIsIkZhaWx1cmUiLCJTdWNjZXNzIl0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInNwZWMiXSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6bnVsbCwic3RvcmVkVmVyc2lvbnMiOm51bGx9fQ==
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEwLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJtdWx0aW1hcHMuaGF6ZWxjYXN0LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiaGF6ZWxjYXN0LmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJNdWx0aU1hcCIsImxpc3RLaW5kIjoiTXVsdGlNYXBMaXN0IiwicGx1cmFsIjoibXVsdGltYXBzIiwic2hvcnROYW1lcyI6WyJtbWFwIl0sInNpbmd1bGFyIjoibXVsdGltYXAifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3siZGVzY3JpcHRpb24iOiJDdXJyZW50IHN0YXRlIG9mIHRoZSBNdWx0aU1hcCBDb25maWciLCJqc29uUGF0aCI6Ii5zdGF0dXMuc3RhdGUiLCJuYW1lIjoiU3RhdHVzIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJNZXNzYWdlIGZvciB0aGUgY3VycmVudCBNdWx0aU1hcCBDb25maWciLCJqc29uUGF0aCI6Ii5zdGF0dXMubWVzc2FnZSIsIm5hbWUiOiJNZXNzYWdlIiwicHJpb3JpdHkiOjEsInR5cGUiOiJzdHJpbmcifV0sIm5hbWUiOiJ2MWFscGhhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJNdWx0aU1hcCBpcyB0aGUgU2NoZW1hIGZvciB0aGUgbXVsdGltYXBzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiTXVsdGlNYXBTcGVjIGRlZmluZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgTXVsdGlNYXAiLCJwcm9wZXJ0aWVzIjp7ImFzeW5jQmFja3VwQ291bnQiOnsiZGVmYXVsdCI6MCwiZGVzY3JpcHRpb24iOiJOdW1iZXIgb2YgYXN5bmNocm9ub3VzIGJhY2t1cHMuIiwiZm9ybWF0IjoiaW50MzIiLCJtaW5pbXVtIjowLCJ0eXBlIjoiaW50ZWdlciJ9LCJiYWNrdXBDb3VudCI6eyJkZWZhdWx0IjoxLCJkZXNjcmlwdGlvbiI6Ik51bWJlciBvZiBzeW5jaHJvbm91cyBiYWNrdXBzLiIsImZvcm1hdCI6ImludDMyIiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifSwiYmluYXJ5Ijp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6IlNwZWNpZmllcyBpbiB3aGljaCBmb3JtYXQgZGF0YSB3aWxsIGJlIHN0b3JlZCBpbiB5b3VyIE11bHRpTWFwLiBmYWxzZTogT0JKRUNUIHRydWU6IEJJTkFSWSIsInR5cGUiOiJib29sZWFuIn0sImNvbGxlY3Rpb25UeXBlIjp7ImRlZmF1bHQiOiJTRVQiLCJkZXNjcmlwdGlvbiI6IlR5cGUgb2YgdGhlIHZhbHVlIGNvbGxlY3Rpb24iLCJlbnVtIjpbIlNFVCIsIkxJU1QiXSwidHlwZSI6InN0cmluZyJ9LCJoYXplbGNhc3RSZXNvdXJjZU5hbWUiOnsiZGVzY3JpcHRpb24iOiJIYXplbGNhc3RSZXNvdXJjZU5hbWUgZGVmaW5lcyB0aGUgbmFtZSBvZiB0aGUgSGF6ZWxjYXN0IHJlc291cmNlIHRoYXQgdGhpcyByZXNvdXJjZSBpcyBjcmVhdGVkIGZvci4iLCJtaW5MZW5ndGgiOjEsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIGRhdGEgc3RydWN0dXJlIGNvbmZpZyB0byBiZSBjcmVhdGVkLiBJZiBlbXB0eSwgQ1IgbmFtZSB3aWxsIGJlIHVzZWQuIEl0IGNhbm5vdCBiZSB1cGRhdGVkIGFmdGVyIHRoZSBjb25maWcgaXMgY3JlYXRlZCBzdWNjZXNzZnVsbHkuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIl0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiTXVsdGlNYXBTdGF0dXMgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgTXVsdGlNYXAiLCJwcm9wZXJ0aWVzIjp7Im1lbWJlclN0YXR1c2VzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7ImVudW0iOlsiU3VjY2VzcyIsIkZhaWxlZCIsIlBlbmRpbmciLCJQZXJzaXN0aW5nIiwiVGVybWluYXRpbmciXSwidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6IkhvbGRzIHN0YXR1cyBvZiBkYXRhIHN0cnVjdHVyZSBmb3IgZWFjaCBIYXplbGNhc3QgbWVtYmVyIiwidHlwZSI6Im9iamVjdCJ9LCJtZXNzYWdlIjp7ImRlc2NyaXB0aW9uIjoiTWVzc2FnZSBleHBsYWluaW5nIHRoZSBjdXJyZW50IHN0YXRlIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0ZSI6eyJkZXNjcmlwdGlvbiI6IlN0YXRlIG9mIHRoZSBkYXRhIHN0cnVjdHVyZSIsImVudW0iOlsiU3VjY2VzcyIsIkZhaWxlZCIsIlBlbmRpbmciLCJQZXJzaXN0aW5nIiwiVGVybWluYXRpbmciXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsic3BlYyJdLCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfSwic3RhdHVzIjp7ImFjY2VwdGVkTmFtZXMiOnsia2luZCI6IiIsInBsdXJhbCI6IiJ9LCJjb25kaXRpb25zIjpudWxsLCJzdG9yZWRWZXJzaW9ucyI6bnVsbH19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEwLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJxdWV1ZXMuaGF6ZWxjYXN0LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiaGF6ZWxjYXN0LmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJRdWV1ZSIsImxpc3RLaW5kIjoiUXVldWVMaXN0IiwicGx1cmFsIjoicXVldWVzIiwic2hvcnROYW1lcyI6WyJxIl0sInNpbmd1bGFyIjoicXVldWUifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3siZGVzY3JpcHRpb24iOiJDdXJyZW50IHN0YXRlIG9mIHRoZSBRdWV1ZSBDb25maWciLCJqc29uUGF0aCI6Ii5zdGF0dXMuc3RhdGUiLCJuYW1lIjoiU3RhdHVzIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJNZXNzYWdlIGZvciB0aGUgY3VycmVudCBRdWV1ZSBDb25maWciLCJqc29uUGF0aCI6Ii5zdGF0dXMubWVzc2FnZSIsIm5hbWUiOiJNZXNzYWdlIiwicHJpb3JpdHkiOjEsInR5cGUiOiJzdHJpbmcifV0sIm5hbWUiOiJ2MWFscGhhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJRdWV1ZSBpcyB0aGUgU2NoZW1hIGZvciB0aGUgcXVldWVzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiUXVldWVTcGVjIGRlZmluZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgUXVldWUgSXQgY2Fubm90IGJlIHVwZGF0ZWQgYWZ0ZXIgdGhlIFF1ZXVlIGlzIGNyZWF0ZWQiLCJwcm9wZXJ0aWVzIjp7ImFzeW5jQmFja3VwQ291bnQiOnsiZGVmYXVsdCI6MCwiZGVzY3JpcHRpb24iOiJOdW1iZXIgb2YgYXN5bmNocm9ub3VzIGJhY2t1cHMuIiwiZm9ybWF0IjoiaW50MzIiLCJtaW5pbXVtIjowLCJ0eXBlIjoiaW50ZWdlciJ9LCJiYWNrdXBDb3VudCI6eyJkZWZhdWx0IjoxLCJkZXNjcmlwdGlvbiI6Ik51bWJlciBvZiBzeW5jaHJvbm91cyBiYWNrdXBzLiIsImZvcm1hdCI6ImludDMyIiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifSwiZW1wdHlRdWV1ZVRUTFNlY29uZHMiOnsiZGVmYXVsdCI6LTEsImRlc2NyaXB0aW9uIjoiVGltZSBpbiBzZWNvbmRzIGFmdGVyIHdoaWNoIHRoZSBRdWV1ZSB3aWxsIGJlIGRlc3Ryb3llZCBpZiBpdCBzdGF5cyBlbXB0eSBvciB1bnVzZWQuIElmIHRoZSB2YWx1ZXMgaXMgbm90IHByb3ZpZGVkIHRoZSBRdWV1ZSB3aWxsIG5ldmVyIGJlIGRlc3Ryb3llZC4iLCJmb3JtYXQiOiJpbnQzMiIsInR5cGUiOiJpbnRlZ2VyIn0sImhhemVsY2FzdFJlc291cmNlTmFtZSI6eyJkZXNjcmlwdGlvbiI6IkhhemVsY2FzdFJlc291cmNlTmFtZSBkZWZpbmVzIHRoZSBuYW1lIG9mIHRoZSBIYXplbGNhc3QgcmVzb3VyY2UgdGhhdCB0aGlzIHJlc291cmNlIGlzIGNyZWF0ZWQgZm9yLiIsIm1pbkxlbmd0aCI6MSwidHlwZSI6InN0cmluZyJ9LCJtYXhTaXplIjp7ImRlZmF1bHQiOjAsImRlc2NyaXB0aW9uIjoiTWF4IHNpemUgb2YgdGhlIHF1ZXVlLiIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIGRhdGEgc3RydWN0dXJlIGNvbmZpZyB0byBiZSBjcmVhdGVkLiBJZiBlbXB0eSwgQ1IgbmFtZSB3aWxsIGJlIHVzZWQuIEl0IGNhbm5vdCBiZSB1cGRhdGVkIGFmdGVyIHRoZSBjb25maWcgaXMgY3JlYXRlZCBzdWNjZXNzZnVsbHkuIiwidHlwZSI6InN0cmluZyJ9LCJwcmlvcml0eUNvbXBhcmF0b3JDbGFzc05hbWUiOnsiZGVzY3JpcHRpb24iOiJUaGUgbmFtZSBvZiB0aGUgY29tcGFyYXRvciBjbGFzcy4gSWYgdGhlIGNsYXNzIG5hbWUgaXMgcHJvdmlkZWQsIHRoZSBRdWV1ZSBiZWNvbWVzIFByaW9yaXR5IFF1ZXVlLiBZb3UgY2FuIGxlYXJuIG1vcmUgYXQgaHR0cHM6Ly9kb2NzLmhhemVsY2FzdC5jb20vaGF6ZWxjYXN0L2xhdGVzdC9kYXRhLXN0cnVjdHVyZXMvcHJpb3JpdHktcXVldWUuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIl0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiUXVldWVTdGF0dXMgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgUXVldWUiLCJwcm9wZXJ0aWVzIjp7Im1lbWJlclN0YXR1c2VzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7ImVudW0iOlsiU3VjY2VzcyIsIkZhaWxlZCIsIlBlbmRpbmciLCJQZXJzaXN0aW5nIiwiVGVybWluYXRpbmciXSwidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6IkhvbGRzIHN0YXR1cyBvZiBkYXRhIHN0cnVjdHVyZSBmb3IgZWFjaCBIYXplbGNhc3QgbWVtYmVyIiwidHlwZSI6Im9iamVjdCJ9LCJtZXNzYWdlIjp7ImRlc2NyaXB0aW9uIjoiTWVzc2FnZSBleHBsYWluaW5nIHRoZSBjdXJyZW50IHN0YXRlIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0ZSI6eyJkZXNjcmlwdGlvbiI6IlN0YXRlIG9mIHRoZSBkYXRhIHN0cnVjdHVyZSIsImVudW0iOlsiU3VjY2VzcyIsIkZhaWxlZCIsIlBlbmRpbmciLCJQZXJzaXN0aW5nIiwiVGVybWluYXRpbmciXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsic3BlYyJdLCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfSwic3RhdHVzIjp7ImFjY2VwdGVkTmFtZXMiOnsia2luZCI6IiIsInBsdXJhbCI6IiJ9LCJjb25kaXRpb25zIjpudWxsLCJzdG9yZWRWZXJzaW9ucyI6bnVsbH19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEwLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJyZXBsaWNhdGVkbWFwcy5oYXplbGNhc3QuY29tIn0sInNwZWMiOnsiZ3JvdXAiOiJoYXplbGNhc3QuY29tIiwibmFtZXMiOnsia2luZCI6IlJlcGxpY2F0ZWRNYXAiLCJsaXN0S2luZCI6IlJlcGxpY2F0ZWRNYXBMaXN0IiwicGx1cmFsIjoicmVwbGljYXRlZG1hcHMiLCJzaG9ydE5hbWVzIjpbInJtYXAiXSwic2luZ3VsYXIiOiJyZXBsaWNhdGVkbWFwIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJhZGRpdGlvbmFsUHJpbnRlckNvbHVtbnMiOlt7ImRlc2NyaXB0aW9uIjoiQ3VycmVudCBzdGF0ZSBvZiB0aGUgUmVwbGljYXRlZE1hcCBDb25maWciLCJqc29uUGF0aCI6Ii5zdGF0dXMuc3RhdGUiLCJuYW1lIjoiU3RhdHVzIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJNZXNzYWdlIGZvciB0aGUgY3VycmVudCBSZXBsaWNhdGVkTWFwIENvbmZpZyIsImpzb25QYXRoIjoiLnN0YXR1cy5tZXNzYWdlIiwibmFtZSI6Ik1lc3NhZ2UiLCJwcmlvcml0eSI6MSwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IlJlcGxpY2F0ZWRNYXAgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIHJlcGxpY2F0ZWRtYXBzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiUmVwbGljYXRlZE1hcFNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBSZXBsaWNhdGVkTWFwIiwicHJvcGVydGllcyI6eyJhc3luY0ZpbGx1cCI6eyJkZWZhdWx0Ijp0cnVlLCJkZXNjcmlwdGlvbiI6IkFzeW5jRmlsbHVwIHNwZWNpZmllcyB3aGV0aGVyIHRoZSBSZXBsaWNhdGVkTWFwIGlzIGF2YWlsYWJsZSBmb3IgcmVhZHMgYmVmb3JlIHRoZSBpbml0aWFsIHJlcGxpY2F0aW9uIGlzIGNvbXBsZXRlZCIsInR5cGUiOiJib29sZWFuIn0sImhhemVsY2FzdFJlc291cmNlTmFtZSI6eyJkZXNjcmlwdGlvbiI6IkhhemVsY2FzdFJlc291cmNlTmFtZSBkZWZpbmVzIHRoZSBuYW1lIG9mIHRoZSBIYXplbGNhc3QgcmVzb3VyY2UuIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn0sImluTWVtb3J5Rm9ybWF0Ijp7ImRlZmF1bHQiOiJPQkpFQ1QiLCJkZXNjcmlwdGlvbiI6IkluTWVtb3J5Rm9ybWF0IHNwZWNpZmllcyBpbiB3aGljaCBmb3JtYXQgZGF0YSB3aWxsIGJlIHN0b3JlZCBpbiB0aGUgUmVwbGljYXRlZE1hcCIsImVudW0iOlsiQklOQVJZIiwiT0JKRUNUIl0sInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIFJlcGxpY2F0ZWRNYXAgY29uZmlnIHRvIGJlIGNyZWF0ZWQuIElmIGVtcHR5LCBDUiBuYW1lIHdpbGwgYmUgdXNlZC4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJoYXplbGNhc3RSZXNvdXJjZU5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJSZXBsaWNhdGVkTWFwU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIFJlcGxpY2F0ZWRNYXAiLCJwcm9wZXJ0aWVzIjp7Im1lbWJlclN0YXR1c2VzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7ImVudW0iOlsiU3VjY2VzcyIsIkZhaWxlZCIsIlBlbmRpbmciLCJQZXJzaXN0aW5nIiwiVGVybWluYXRpbmciXSwidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6IkhvbGRzIHN0YXR1cyBvZiBkYXRhIHN0cnVjdHVyZSBmb3IgZWFjaCBIYXplbGNhc3QgbWVtYmVyIiwidHlwZSI6Im9iamVjdCJ9LCJtZXNzYWdlIjp7ImRlc2NyaXB0aW9uIjoiTWVzc2FnZSBleHBsYWluaW5nIHRoZSBjdXJyZW50IHN0YXRlIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0ZSI6eyJkZXNjcmlwdGlvbiI6IlN0YXRlIG9mIHRoZSBkYXRhIHN0cnVjdHVyZSIsImVudW0iOlsiU3VjY2VzcyIsIkZhaWxlZCIsIlBlbmRpbmciLCJQZXJzaXN0aW5nIiwiVGVybWluYXRpbmciXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsic3BlYyJdLCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfSwic3RhdHVzIjp7ImFjY2VwdGVkTmFtZXMiOnsia2luZCI6IiIsInBsdXJhbCI6IiJ9LCJjb25kaXRpb25zIjpudWxsLCJzdG9yZWRWZXJzaW9ucyI6bnVsbH19
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwLmt1YmVybmV0ZXMuaW8vY29tcG9uZW50Ijoid2ViaG9vayIsImFwcC5rdWJlcm5ldGVzLmlvL2NyZWF0ZWQtYnkiOiJoYXplbGNhc3QtcGxhdGZvcm0tb3BlcmF0b3IiLCJhcHAua3ViZXJuZXRlcy5pby9pbnN0YW5jZSI6IndlYmhvb2stc2VydmljZSIsImFwcC5rdWJlcm5ldGVzLmlvL21hbmFnZWQtYnkiOiJrdXN0b21pemUiLCJhcHAua3ViZXJuZXRlcy5pby9uYW1lIjoic2VydmljZSIsImFwcC5rdWJlcm5ldGVzLmlvL3BhcnQtb2YiOiJoYXplbGNhc3QtcGxhdGZvcm0tb3BlcmF0b3IifSwibmFtZSI6ImhhemVsY2FzdC1wbGF0Zm9ybS13ZWJob29rLXNlcnZpY2UifSwic3BlYyI6eyJwb3J0cyI6W3sicG9ydCI6NDQzLCJwcm90b2NvbCI6IlRDUCIsInRhcmdldFBvcnQiOjk0NDN9XSwic2VsZWN0b3IiOnsiY29udHJvbC1wbGFuZSI6ImNvbnRyb2xsZXItbWFuYWdlciJ9fSwic3RhdHVzIjp7ImxvYWRCYWxhbmNlciI6e319fQ==
relatedImages:
- image: docker.io/hazelcast/hazelcast-platform-operator:5.7
  name: ""
- image: quay.io/openshift-community-operators/hazelcast-platform-operator@sha256:4a403a82c1e97ca7629b239bb2d9a88ca544ebbc85bfeef09b01f86941c682b4
  name: ""
schema: olm.bundle
---
image: quay.io/openshift-community-operators/hazelcast-platform-operator@sha256:fab1fc1419ab200c7f0e79160ada4a204d259f119a69180dc79d80a2672c3ffe
name: hazelcast-platform-operator.v5.8.0
package: hazelcast-platform-operator
properties:
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: Cache
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: CronHotBackup
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: Hazelcast
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: HotBackup
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: JetJob
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: JetJobSnapshot
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: ManagementCenter
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: Map
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: MultiMap
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: Queue
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: ReplicatedMap
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: Topic
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: WanReplication
    version: v1alpha1
- type: olm.package
  value:
    packageName: hazelcast-platform-operator
    version: 5.8.0
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEwLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJ0b3BpY3MuaGF6ZWxjYXN0LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiaGF6ZWxjYXN0LmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJUb3BpYyIsImxpc3RLaW5kIjoiVG9waWNMaXN0IiwicGx1cmFsIjoidG9waWNzIiwic2luZ3VsYXIiOiJ0b3BpYyJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJkZXNjcmlwdGlvbiI6IkN1cnJlbnQgc3RhdGUgb2YgdGhlIFRvcGljIENvbmZpZyIsImpzb25QYXRoIjoiLnN0YXR1cy5zdGF0ZSIsIm5hbWUiOiJTdGF0dXMiLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6Ik1lc3NhZ2UgZm9yIHRoZSBjdXJyZW50IFRvcGljIENvbmZpZyIsImpzb25QYXRoIjoiLnN0YXR1cy5tZXNzYWdlIiwibmFtZSI6Ik1lc3NhZ2UiLCJwcmlvcml0eSI6MSwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IlRvcGljIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSB0b3BpY3MgQVBJIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJUb3BpY1NwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBUb3BpYyIsInByb3BlcnRpZXMiOnsiZ2xvYmFsT3JkZXJpbmdFbmFibGVkIjp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6Imdsb2JhbE9yZGVyaW5nRW5hYmxlZCBhbGxvd3MgYWxsIG5vZGVzIGxpc3RlbmluZyB0byB0aGUgc2FtZSB0b3BpYyBnZXQgdGhlaXIgbWVzc2FnZXMgaW4gdGhlIHNhbWUgb3JkZXIgdGhlIHNhbWUgb3JkZXIiLCJ0eXBlIjoiYm9vbGVhbiJ9LCJoYXplbGNhc3RSZXNvdXJjZU5hbWUiOnsiZGVzY3JpcHRpb24iOiJIYXplbGNhc3RSZXNvdXJjZU5hbWUgZGVmaW5lcyB0aGUgbmFtZSBvZiB0aGUgSGF6ZWxjYXN0IHJlc291cmNlIGZvciB3aGljaCB0b3BpYyBjb25maWcgd2lsbCBiZSBjcmVhdGVkIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn0sIm11bHRpVGhyZWFkaW5nRW5hYmxlZCI6eyJkZWZhdWx0IjpmYWxzZSwiZGVzY3JpcHRpb24iOiJtdWx0aVRocmVhZGluZ0VuYWJsZWQgZW5hYmxlcyBtdWx0aS10aHJlYWRlZCBwcm9jZXNzaW5nIG9mIGluY29taW5nIG1lc3NhZ2VzIGEgc2luZ2xlIHRocmVhZCB3aWxsIGhhbmRsZSBhbGwgdG9waWMgbWVzc2FnZXMiLCJ0eXBlIjoiYm9vbGVhbiJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgdG9waWMgY29uZmlnIHRvIGJlIGNyZWF0ZWQuIElmIGVtcHR5LCBDUiBuYW1lIHdpbGwgYmUgdXNlZC4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJoYXplbGNhc3RSZXNvdXJjZU5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJUb3BpY1N0YXR1cyBkZWZpbmVzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBUb3BpYyIsInByb3BlcnRpZXMiOnsibWVtYmVyU3RhdHVzZXMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsiZW51bSI6WyJTdWNjZXNzIiwiRmFpbGVkIiwiUGVuZGluZyIsIlBlcnNpc3RpbmciLCJUZXJtaW5hdGluZyJdLCJ0eXBlIjoic3RyaW5nIn0sImRlc2NyaXB0aW9uIjoiSG9sZHMgc3RhdHVzIG9mIGRhdGEgc3RydWN0dXJlIGZvciBlYWNoIEhhemVsY2FzdCBtZW1iZXIiLCJ0eXBlIjoib2JqZWN0In0sIm1lc3NhZ2UiOnsiZGVzY3JpcHRpb24iOiJNZXNzYWdlIGV4cGxhaW5pbmcgdGhlIGN1cnJlbnQgc3RhdGUiLCJ0eXBlIjoic3RyaW5nIn0sInN0YXRlIjp7ImRlc2NyaXB0aW9uIjoiU3RhdGUgb2YgdGhlIGRhdGEgc3RydWN0dXJlIiwiZW51bSI6WyJTdWNjZXNzIiwiRmFpbGVkIiwiUGVuZGluZyIsIlBlcnNpc3RpbmciLCJUZXJtaW5hdGluZyJdLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJzcGVjIl0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOm51bGwsInN0b3JlZFZlcnNpb25zIjpudWxsfX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEwLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJ3YW5yZXBsaWNhdGlvbnMuaGF6ZWxjYXN0LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiaGF6ZWxjYXN0LmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJXYW5SZXBsaWNhdGlvbiIsImxpc3RLaW5kIjoiV2FuUmVwbGljYXRpb25MaXN0IiwicGx1cmFsIjoid2FucmVwbGljYXRpb25zIiwic2hvcnROYW1lcyI6WyJ3ciJdLCJzaW5ndWxhciI6IndhbnJlcGxpY2F0aW9uIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJhZGRpdGlvbmFsUHJpbnRlckNvbHVtbnMiOlt7ImRlc2NyaXB0aW9uIjoiQ3VycmVudCBzdGF0ZSBvZiB0aGUgSGF6ZWxjYXN0IFdBTiBSZXBsaWNhdGlvbiIsImpzb25QYXRoIjoiLnN0YXR1cy5zdGF0dXMiLCJuYW1lIjoiU3RhdHVzIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJNZXNzYWdlIGZvciB0aGUgY3VycmVudCBXYW5SZXBsaWNhdGlvbiBDb25maWciLCJqc29uUGF0aCI6Ii5zdGF0dXMubWVzc2FnZSIsIm5hbWUiOiJNZXNzYWdlIiwicHJpb3JpdHkiOjEsInR5cGUiOiJzdHJpbmcifV0sIm5hbWUiOiJ2MWFscGhhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJXYW5SZXBsaWNhdGlvbiBpcyB0aGUgU2NoZW1hIGZvciB0aGUgd2FucmVwbGljYXRpb25zIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiV2FuUmVwbGljYXRpb25TcGVjIGRlZmluZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgV2FuUmVwbGljYXRpb24iLCJwcm9wZXJ0aWVzIjp7ImFja25vd2xlZGdlbWVudCI6eyJkZWZhdWx0Ijp7InRpbWVvdXQiOjYwMDAwLCJ0eXBlIjoiQUNLX09OX09QRVJBVElPTl9DT01QTEVURSJ9LCJkZXNjcmlwdGlvbiI6IkFja25vd2xlZGdlbWVudCBpcyB0aGUgY29uZmlndXJhdGlvbiBmb3IgdGhlIGNvbmRpdGlvbiB3aGVuIHRoZSBuZXh0IGJhdGNoIG9mIFdBTiBldmVudHMgYXJlIHNlbnQuIiwicHJvcGVydGllcyI6eyJ0aW1lb3V0Ijp7ImRlZmF1bHQiOjYwMDAwLCJkZXNjcmlwdGlvbiI6IlRpbWVvdXQgcmVwcmVzZW50cyB0aGUgdGltZSBpbiBtaWxsaXNlY29uZHMgdGhlIHNvdXJjZSBjbHVzdGVyIHdhaXRzIGZvciB0aGUgYWNrbm93bGVkZ2VtZW50LiBBZnRlciB0aW1lb3V0LCB0aGUgZXZlbnRzIHdpbGwgYmUgcmVzZW50LiIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifSwidHlwZSI6eyJkZWZhdWx0IjoiQUNLX09OX09QRVJBVElPTl9DT01QTEVURSIsImRlc2NyaXB0aW9uIjoiVHlwZSByZXByZXNlbnRzIGhvdyBhIGJhdGNoIG9mIHJlcGxpY2F0aW9uIGV2ZW50cyBpcyBjb25zaWRlcmVkIHN1Y2Nlc3NmdWxseSByZXBsaWNhdGVkLiIsImVudW0iOlsiQUNLX09OX09QRVJBVElPTl9DT01QTEVURSIsIkFDS19PTl9SRUNFSVBUIl0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwiYmF0Y2giOnsiZGVmYXVsdCI6eyJtYXhpbXVtRGVsYXkiOjEwMDAsInNpemUiOjUwMH0sImRlc2NyaXB0aW9uIjoiQmF0Y2ggaXMgdGhlIGNvbmZpZ3VyYXRpb24gZm9yIFdBTiBldmVudHMgYmF0Y2guIiwicHJvcGVydGllcyI6eyJtYXhpbXVtRGVsYXkiOnsiZGVmYXVsdCI6MTAwMCwiZGVzY3JpcHRpb24iOiJNYXhpbXVtRGVsYXkgcmVwcmVzZW50cyB0aGUgbWF4aW11bSBkZWxheSBpbiBtaWxsaXNlY29uZHMuIElmIHRoZSBiYXRjaCBzaXplIGlzIG5vdCByZWFjaGVkLCB0aGUgZXZlbnRzIHdpbGwgYmUgc2VudCBhZnRlciB0aGUgbWF4aW11bSBkZWxheS4iLCJmb3JtYXQiOiJpbnQzMiIsInR5cGUiOiJpbnRlZ2VyIn0sInNpemUiOnsiZGVmYXVsdCI6NTAwLCJkZXNjcmlwdGlvbiI6IlNpemUgcmVwcmVzZW50cyB0aGUgbWF4aW11bSBiYXRjaCBzaXplLiIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifX0sInR5cGUiOiJvYmplY3QifSwiZW5kcG9pbnRzIjp7ImRlc2NyaXB0aW9uIjoiRW5kcG9pbnRzIGlzIHRoZSB0YXJnZXQgY2x1c3RlciBjb21tYSBzZXBhcmF0ZWQgZW5kcG9pbnQgbGlzdCAuIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn0sInF1ZXVlIjp7ImRlZmF1bHQiOnsiY2FwYWNpdHkiOjEwMDAwLCJmdWxsQmVoYXZpb3IiOiJESVNDQVJEX0FGVEVSX01VVEFUSU9OIn0sImRlc2NyaXB0aW9uIjoiUXVldWUgaXMgdGhlIGNvbmZpZ3VyYXRpb24gZm9yIFdBTiBldmVudHMgcXVldWUuIiwicHJvcGVydGllcyI6eyJjYXBhY2l0eSI6eyJkZWZhdWx0IjoxMDAwMCwiZGVzY3JpcHRpb24iOiJDYXBhY2l0eSBpcyB0aGUgdG90YWwgY2FwYWNpdHkgb2YgV0FOIHF1ZXVlLiIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifSwiZnVsbEJlaGF2aW9yIjp7ImRlZmF1bHQiOiJESVNDQVJEX0FGVEVSX01VVEFUSU9OIiwiZGVzY3JpcHRpb24iOiJGdWxsQmVoYXZpb3IgcmVwcmVzZW50cyB0aGUgYmVoYXZpb3Igb2YgdGhlIG5ldyBhcnJpdmFsIHdoZW4gdGhlIHF1ZXVlIGlzIGZ1bGwuIiwiZW51bSI6WyJESVNDQVJEX0FGVEVSX01VVEFUSU9OIiwiVEhST1dfRVhDRVBUSU9OIiwiVEhST1dfRVhDRVBUSU9OX09OTFlfSUZfUkVQTElDQVRJT05fQUNUSVZFIl0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwicmVzb3VyY2VzIjp7ImRlc2NyaXB0aW9uIjoiUmVzb3VyY2VzIGlzIHRoZSBsaXN0IG9mIGN1c3RvbSByZXNvdXJjZXMgdG8gd2hpY2ggV0FOIHJlcGxpY2F0aW9uIGFwcGxpZXMuIiwiaXRlbXMiOnsicHJvcGVydGllcyI6eyJraW5kIjp7ImRlZmF1bHQiOiJNYXAiLCJkZXNjcmlwdGlvbiI6IktpbmQgaXMgdGhlIGtpbmQgb2YgY3VzdG9tIHJlc291cmNlIHRvIHdoaWNoIFdBTiByZXBsaWNhdGlvbiBhcHBsaWVzLiIsImVudW0iOlsiTWFwIiwiSGF6ZWxjYXN0Il0sInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgaXMgdGhlIG5hbWUgb2YgY3VzdG9tIHJlc291cmNlIHRvIHdoaWNoIFdBTiByZXBsaWNhdGlvbiBhcHBsaWVzLiIsIm1pbkxlbmd0aCI6MSwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sIm1pbkl0ZW1zIjoxLCJ0eXBlIjoiYXJyYXkifSwidGFyZ2V0Q2x1c3Rlck5hbWUiOnsiZGVzY3JpcHRpb24iOiJDbHVzdGVyTmFtZSBpcyB0aGUgY2x1c3Rlck5hbWUgZmllbGQgb2YgdGhlIHRhcmdldCBIYXplbGNhc3QgcmVzb3VyY2UuIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJlbmRwb2ludHMiLCJyZXNvdXJjZXMiLCJ0YXJnZXRDbHVzdGVyTmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IldhblJlcGxpY2F0aW9uU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIFdhblJlcGxpY2F0aW9uIiwicHJvcGVydGllcyI6eyJtZXNzYWdlIjp7ImRlc2NyaXB0aW9uIjoiTWVzc2FnZSBpcyB0aGUgZmllbGQgdG8gc2hvdyBkZXRhaWwgaW5mb3JtYXRpb24gb3IgZXJyb3IiLCJ0eXBlIjoic3RyaW5nIn0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IlN0YXR1cyBpcyB0aGUgc3RhdHVzIG9mIFdBTiByZXBsaWNhdGlvbiIsInR5cGUiOiJzdHJpbmcifSwid2FuUmVwbGljYXRpb25NYXBzU3RhdHVzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InByb3BlcnRpZXMiOnsibWVzc2FnZSI6eyJkZXNjcmlwdGlvbiI6Ik1lc3NhZ2UgaXMgdGhlIGZpZWxkIHRvIHNob3cgZGV0YWlsIGluZm9ybWF0aW9uIG9yIGVycm9yIiwidHlwZSI6InN0cmluZyJ9LCJwdWJsaXNoZXJJZCI6eyJkZXNjcmlwdGlvbiI6IlB1Ymxpc2hlcklkIGlzIHRoZSBJRCB1c2VkIGZvciBXQU4gcHVibGlzaGVyIElEIiwidHlwZSI6InN0cmluZyJ9LCJyZXNvdXJjZU5hbWUiOnsiZGVzY3JpcHRpb24iOiJSZXNvdXJjZU5hbWUgaXMgdGhlIG5hbWUgb2YgdGhlIE1hcCBDdXN0b20gUmVzb3VyY2UuIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJTdGF0dXMgaXMgdGhlIHN0YXR1cyBvZiBXQU4gcmVwbGljYXRpb24iLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sImRlc2NyaXB0aW9uIjoiV2FuUmVwbGljYXRpb25NYXBzU3RhdHVzIGlzIHRoZSBXQU4gUmVwbGljYXRpb24gc3RhdHVzIG9mIHRoZSBNYXBzIGdpdmVuIGluIHRoZSBzcGVjIGRpcmVjdGx5IG9yIGluZGlyZWN0bHkgYnkgSGF6ZWxjYXN0IHJlc291cmNlLiIsInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInNwZWMiXSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6bnVsbCwic3RvcmVkVmVyc2lvbnMiOm51bGx9fQ==
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEwLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJjYWNoZXMuaGF6ZWxjYXN0LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiaGF6ZWxjYXN0LmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJDYWNoZSIsImxpc3RLaW5kIjoiQ2FjaGVMaXN0IiwicGx1cmFsIjoiY2FjaGVzIiwic2hvcnROYW1lcyI6WyJjaCJdLCJzaW5ndWxhciI6ImNhY2hlIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJhZGRpdGlvbmFsUHJpbnRlckNvbHVtbnMiOlt7ImRlc2NyaXB0aW9uIjoiQ3VycmVudCBzdGF0ZSBvZiB0aGUgQ2FjaGUgQ29uZmlnIiwianNvblBhdGgiOiIuc3RhdHVzLnN0YXRlIiwibmFtZSI6IlN0YXR1cyIsInR5cGUiOiJzdHJpbmcifSx7ImRlc2NyaXB0aW9uIjoiTWVzc2FnZSBmb3IgdGhlIGN1cnJlbnQgQ2FjaGUgQ29uZmlnIiwianNvblBhdGgiOiIuc3RhdHVzLm1lc3NhZ2UiLCJuYW1lIjoiTWVzc2FnZSIsInByaW9yaXR5IjoxLCJ0eXBlIjoic3RyaW5nIn1dLCJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiQ2FjaGUgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIGNhY2hlcyBBUEkiLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuIFNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZCBtYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy4gU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uIENhbm5vdCBiZSB1cGRhdGVkLiBJbiBDYW1lbENhc2UuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IkNhY2hlU3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIENhY2hlIEl0IGNhbm5vdCBiZSB1cGRhdGVkIGFmdGVyIHRoZSBDYWNoZSBpcyBjcmVhdGVkIiwicHJvcGVydGllcyI6eyJhc3luY0JhY2t1cENvdW50Ijp7ImRlZmF1bHQiOjAsImRlc2NyaXB0aW9uIjoiTnVtYmVyIG9mIGFzeW5jaHJvbm91cyBiYWNrdXBzLiIsImZvcm1hdCI6ImludDMyIiwibWF4aW11bSI6NiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifSwiYmFja3VwQ291bnQiOnsiZGVmYXVsdCI6MSwiZGVzY3JpcHRpb24iOiJOdW1iZXIgb2Ygc3luY2hyb25vdXMgYmFja3Vwcy4iLCJmb3JtYXQiOiJpbnQzMiIsIm1heGltdW0iOjYsIm1pbmltdW0iOjAsInR5cGUiOiJpbnRlZ2VyIn0sImV2ZW50Sm91cm5hbCI6eyJkZXNjcmlwdGlvbiI6IkV2ZW50Sm91cm5hbCBzcGVjaWZpZXMgZXZlbnQgam91cm5hbCBjb25maWd1cmF0aW9uIG9mIHRoZSBDYWNoZSIsInByb3BlcnRpZXMiOnsiY2FwYWNpdHkiOnsiZGVmYXVsdCI6MTAwMDAsImRlc2NyaXB0aW9uIjoiQ2FwYWNpdHkgc2V0cyB0aGUgY2FwYWNpdHkgb2YgdGhlIHJpbmdidWZmZXIgdW5kZXJseWluZyB0aGUgZXZlbnQgam91cm5hbC4iLCJmb3JtYXQiOiJpbnQzMiIsInR5cGUiOiJpbnRlZ2VyIn0sInRpbWVUb0xpdmVTZWNvbmRzIjp7ImRlZmF1bHQiOjAsImRlc2NyaXB0aW9uIjoiVGltZVRvTGl2ZVNlY29uZHMgaW5kaWNhdGVzIGhvdyBsb25nIHRoZSBpdGVtcyByZW1haW4gaW4gdGhlIGV2ZW50IGpvdXJuYWwgYmVmb3JlIHRoZXkgYXJlIGV4cGlyZWQuIiwiZm9ybWF0IjoiaW50MzIiLCJ0eXBlIjoiaW50ZWdlciJ9fSwidHlwZSI6Im9iamVjdCJ9LCJoYXplbGNhc3RSZXNvdXJjZU5hbWUiOnsiZGVzY3JpcHRpb24iOiJIYXplbGNhc3RSZXNvdXJjZU5hbWUgZGVmaW5lcyB0aGUgbmFtZSBvZiB0aGUgSGF6ZWxjYXN0IHJlc291cmNlIHRoYXQgdGhpcyByZXNvdXJjZSBpcyBjcmVhdGVkIGZvci4iLCJtaW5MZW5ndGgiOjEsInR5cGUiOiJzdHJpbmcifSwiaW5NZW1vcnlGb3JtYXQiOnsiZGVmYXVsdCI6IkJJTkFSWSIsImRlc2NyaXB0aW9uIjoiSW5NZW1vcnlGb3JtYXQgc3BlY2lmaWVzIGluIHdoaWNoIGZvcm1hdCBkYXRhIHdpbGwgYmUgc3RvcmVkIGluIHlvdXIgY2FjaGUiLCJlbnVtIjpbIkJJTkFSWSIsIk9CSkVDVCIsIk5BVElWRSJdLCJ0eXBlIjoic3RyaW5nIn0sImtleVR5cGUiOnsiZGVzY3JpcHRpb24iOiJDbGFzcyBuYW1lIG9mIHRoZSBrZXkgdHlwZSIsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIGRhdGEgc3RydWN0dXJlIGNvbmZpZyB0byBiZSBjcmVhdGVkLiBJZiBlbXB0eSwgQ1IgbmFtZSB3aWxsIGJlIHVzZWQuIEl0IGNhbm5vdCBiZSB1cGRhdGVkIGFmdGVyIHRoZSBjb25maWcgaXMgY3JlYXRlZCBzdWNjZXNzZnVsbHkuIiwidHlwZSI6InN0cmluZyJ9LCJwZXJzaXN0ZW5jZUVuYWJsZWQiOnsiZGVmYXVsdCI6ZmFsc2UsImRlc2NyaXB0aW9uIjoiV2hlbiBlbmFibGVkLCBjYWNoZSBkYXRhIHdpbGwgYmUgcGVyc2lzdGVkLiIsInR5cGUiOiJib29sZWFuIn0sInZhbHVlVHlwZSI6eyJkZXNjcmlwdGlvbiI6IkNsYXNzIG5hbWUgb2YgdGhlIHZhbHVlIHR5cGUiLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJoYXplbGNhc3RSZXNvdXJjZU5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJDYWNoZVN0YXR1cyBkZWZpbmVzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBDYWNoZSIsInByb3BlcnRpZXMiOnsibWVtYmVyU3RhdHVzZXMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsiZW51bSI6WyJTdWNjZXNzIiwiRmFpbGVkIiwiUGVuZGluZyIsIlBlcnNpc3RpbmciLCJUZXJtaW5hdGluZyJdLCJ0eXBlIjoic3RyaW5nIn0sImRlc2NyaXB0aW9uIjoiSG9sZHMgc3RhdHVzIG9mIGRhdGEgc3RydWN0dXJlIGZvciBlYWNoIEhhemVsY2FzdCBtZW1iZXIiLCJ0eXBlIjoib2JqZWN0In0sIm1lc3NhZ2UiOnsiZGVzY3JpcHRpb24iOiJNZXNzYWdlIGV4cGxhaW5pbmcgdGhlIGN1cnJlbnQgc3RhdGUiLCJ0eXBlIjoic3RyaW5nIn0sInN0YXRlIjp7ImRlc2NyaXB0aW9uIjoiU3RhdGUgb2YgdGhlIGRhdGEgc3RydWN0dXJlIiwiZW51bSI6WyJTdWNjZXNzIiwiRmFpbGVkIiwiUGVuZGluZyIsIlBlcnNpc3RpbmciLCJUZXJtaW5hdGluZyJdLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJzcGVjIl0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOm51bGwsInN0b3JlZFZlcnNpb25zIjpudWxsfX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEwLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJjcm9uaG90YmFja3Vwcy5oYXplbGNhc3QuY29tIn0sInNwZWMiOnsiZ3JvdXAiOiJoYXplbGNhc3QuY29tIiwibmFtZXMiOnsia2luZCI6IkNyb25Ib3RCYWNrdXAiLCJsaXN0S2luZCI6IkNyb25Ib3RCYWNrdXBMaXN0IiwicGx1cmFsIjoiY3JvbmhvdGJhY2t1cHMiLCJzaG9ydE5hbWVzIjpbImNoYiJdLCJzaW5ndWxhciI6ImNyb25ob3RiYWNrdXAifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3siZGVzY3JpcHRpb24iOiJTdXNwZW50aW9uIHN0YXR1cyBvZiB0aGUgQ3JvbkhvdEJhY2t1cCIsImpzb25QYXRoIjoiLnNwZWMuc3VzcGVuZCIsIm5hbWUiOiJTVVNQRU5ERUQiLCJ0eXBlIjoiYm9vbGVhbiJ9XSwibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkNyb25Ib3RCYWNrdXAgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIGNyb25ob3RiYWNrdXBzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiQ3JvbkhvdEJhY2t1cFNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBDcm9uSG90QmFja3VwIiwicHJvcGVydGllcyI6eyJmYWlsZWRIb3RCYWNrdXBzSGlzdG9yeUxpbWl0Ijp7ImRlZmF1bHQiOjMsImRlc2NyaXB0aW9uIjoiVGhlIG51bWJlciBvZiBmYWlsZWQgZmluaXNoZWQgaG90IGJhY2t1cHMgdG8gcmV0YWluLiIsImZvcm1hdCI6ImludDMyIiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifSwiaG90QmFja3VwVGVtcGxhdGUiOnsiZGVzY3JpcHRpb24iOiJTcGVjaWZpZXMgdGhlIGhvdCBiYWNrdXAgdGhhdCB3aWxsIGJlIGNyZWF0ZWQgd2hlbiBleGVjdXRpbmcgYSBDcm9uSG90QmFja3VwLiIsInByb3BlcnRpZXMiOnsibWV0YWRhdGEiOnsiZGVzY3JpcHRpb24iOiJTdGFuZGFyZCBvYmplY3QncyBtZXRhZGF0YSBvZiB0aGUgaG90IGJhY2t1cHMgY3JlYXRlZCBmcm9tIHRoaXMgdGVtcGxhdGUuIiwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJTcGVjaWZpY2F0aW9uIG9mIHRoZSBkZXNpcmVkIGJlaGF2aW9yIG9mIHRoZSBob3QgYmFja3VwLiIsInByb3BlcnRpZXMiOnsiYnVja2V0VVJJIjp7ImRlc2NyaXB0aW9uIjoiVVJMIG9mIHRoZSBidWNrZXQgdG8gZG93bmxvYWQgSG90QmFja3VwIGZvbGRlcnMuIEFXUyBTMywgR0NQIEJ1Y2tldCBhbmQgQXp1cmUgQmxvYiBzdG9yYWdlIGJ1Y2tldHMgYXJlIHN1cHBvcnRlZC4gRXhhbXBsZSBidWNrZXQgVVJJczogLSBBV1MgUzMgICAgIC1cdTAwM2UgczM6Ly9idWNrZXQtbmFtZS9wYXRoL3RvL2ZvbGRlciAtIEdDUCBCdWNrZXQgLVx1MDAzZSBnczovL2J1Y2tldC1uYW1lL3BhdGgvdG8vZm9sZGVyIC0gQXp1cmUgQmxvYiAtXHUwMDNlIGF6YmxvYjovL2J1Y2tldC1uYW1lL3BhdGgvdG8vZm9sZGVyIiwidHlwZSI6InN0cmluZyJ9LCJoYXplbGNhc3RSZXNvdXJjZU5hbWUiOnsiZGVzY3JpcHRpb24iOiJIYXplbGNhc3RSZXNvdXJjZU5hbWUgZGVmaW5lcyB0aGUgbmFtZSBvZiB0aGUgSGF6ZWxjYXN0IHJlc291cmNlIiwidHlwZSI6InN0cmluZyJ9LCJzZWNyZXQiOnsiZGVzY3JpcHRpb24iOiJzZWNyZXQgaXMgYSBkZXByZWNhdGVkIGFsaWFzIGZvciBzZWNyZXROYW1lLiIsInR5cGUiOiJzdHJpbmcifSwic2VjcmV0TmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIHNlY3JldCB3aXRoIGNyZWRlbnRpYWxzIGZvciBjbG91ZCBwcm92aWRlcnMuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIl0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInNwZWMiXSwidHlwZSI6Im9iamVjdCJ9LCJzY2hlZHVsZSI6eyJkZXNjcmlwdGlvbiI6IlNjaGVkdWxlIGNvbnRhaW5zIGEgY3JvbnRhYi1saWtlIGV4cHJlc3Npb24gdGhhdCBkZWZpbmVzIHRoZSBzY2hlZHVsZSBpbiB3aGljaCBIb3RCYWNrdXAgd2lsbCBiZSBzdGFydGVkLiBJZiB0aGUgU2NoZWR1bGUgaXMgZW1wdHkgdGhlIEhvdEJhY2t1cCB3aWxsIHN0YXJ0IG9ubHkgb25jZSB3aGVuIGFwcGxpZWQuIC0tLSBTZXZlcmFsIHByZS1kZWZpbmVkIHNjaGVkdWxlcyBpbiBwbGFjZSBvZiBhIGNyb24gZXhwcmVzc2lvbiBjYW4gYmUgdXNlZC4gRW50cnkgICAgICAgICAgICAgICAgICB8IERlc2NyaXB0aW9uICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IEVxdWl2YWxlbnQgVG8gLS0tLS0gICAgICAgICAgICAgICAgICB8IC0tLS0tLS0tLS0tICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IC0tLS0tLS0tLS0tLS0gQHllYXJseSAob3IgQGFubnVhbGx5KSB8IFJ1biBvbmNlIGEgeWVhciwgbWlkbmlnaHQsIEphbi4gMXN0ICAgICAgICB8IDAgMCAxIDEgKiBAbW9udGhseSAgICAgICAgICAgICAgIHwgUnVuIG9uY2UgYSBtb250aCwgbWlkbmlnaHQsIGZpcnN0IG9mIG1vbnRoIHwgMCAwIDEgKiAqIEB3ZWVrbHkgICAgICAgICAgICAgICAgfCBSdW4gb25jZSBhIHdlZWssIG1pZG5pZ2h0IGJldHdlZW4gU2F0L1N1biAgfCAwIDAgKiAqIDAgQGRhaWx5IChvciBAbWlkbmlnaHQpICB8IFJ1biBvbmNlIGEgZGF5LCBtaWRuaWdodCAgICAgICAgICAgICAgICAgICB8IDAgMCAqICogKiBAaG91cmx5ICAgICAgICAgICAgICAgIHwgUnVuIG9uY2UgYW4gaG91ciwgYmVnaW5uaW5nIG9mIGhvdXIgICAgICAgIHwgMCAqICogKiAqIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn0sInN1Y2Nlc3NmdWxIb3RCYWNrdXBzSGlzdG9yeUxpbWl0Ijp7ImRlZmF1bHQiOjUsImRlc2NyaXB0aW9uIjoiVGhlIG51bWJlciBvZiBzdWNjZXNzZnVsIGZpbmlzaGVkIGhvdCBiYWNrdXBzIHRvIHJldGFpbi4iLCJmb3JtYXQiOiJpbnQzMiIsIm1pbmltdW0iOjAsInR5cGUiOiJpbnRlZ2VyIn0sInN1c3BlbmQiOnsiZGVmYXVsdCI6ZmFsc2UsImRlc2NyaXB0aW9uIjoiV2hlbiB0cnVlLCBDcm9uSG90QmFja3VwIHdpbGwgc3RvcCBjcmVhdGluZyBIb3RCYWNrdXAgQ1JzIHVudGlsIGl0IGlzIGRpc2FibGVkIiwidHlwZSI6ImJvb2xlYW4ifX0sInJlcXVpcmVkIjpbImhvdEJhY2t1cFRlbXBsYXRlIiwic2NoZWR1bGUiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJDcm9uSG90QmFja3VwU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIENyb25Ib3RCYWNrdXAiLCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJzcGVjIl0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOm51bGwsInN0b3JlZFZlcnNpb25zIjpudWxsfX0=
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEwLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJob3RiYWNrdXBzLmhhemVsY2FzdC5jb20ifSwic3BlYyI6eyJncm91cCI6ImhhemVsY2FzdC5jb20iLCJuYW1lcyI6eyJraW5kIjoiSG90QmFja3VwIiwibGlzdEtpbmQiOiJIb3RCYWNrdXBMaXN0IiwicGx1cmFsIjoiaG90YmFja3VwcyIsInNob3J0TmFtZXMiOlsiaGIiXSwic2luZ3VsYXIiOiJob3RiYWNrdXAifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3siZGVzY3JpcHRpb24iOiJDdXJyZW50IHN0YXRlIG9mIHRoZSBIb3RCYWNrdXAgcHJvY2VzcyIsImpzb25QYXRoIjoiLnN0YXR1cy5zdGF0ZSIsIm5hbWUiOiJTdGF0dXMiLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6Ik1lc3NhZ2UgZm9yIHRoZSBjdXJyZW50IEhvdEJhY2t1cCBDb25maWciLCJqc29uUGF0aCI6Ii5zdGF0dXMubWVzc2FnZSIsIm5hbWUiOiJNZXNzYWdlIiwicHJpb3JpdHkiOjEsInR5cGUiOiJzdHJpbmcifV0sIm5hbWUiOiJ2MWFscGhhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJIb3RCYWNrdXAgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIGhvdCBiYWNrdXAgQVBJIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJIb3RCYWNrdXBTcGVjIGRlZmluZXMgdGhlIFNwZWMgb2YgSG90QmFja3VwIiwicHJvcGVydGllcyI6eyJidWNrZXRVUkkiOnsiZGVzY3JpcHRpb24iOiJVUkwgb2YgdGhlIGJ1Y2tldCB0byBkb3dubG9hZCBIb3RCYWNrdXAgZm9sZGVycy4gQVdTIFMzLCBHQ1AgQnVja2V0IGFuZCBBenVyZSBCbG9iIHN0b3JhZ2UgYnVja2V0cyBhcmUgc3VwcG9ydGVkLiBFeGFtcGxlIGJ1Y2tldCBVUklzOiAtIEFXUyBTMyAgICAgLVx1MDAzZSBzMzovL2J1Y2tldC1uYW1lL3BhdGgvdG8vZm9sZGVyIC0gR0NQIEJ1Y2tldCAtXHUwMDNlIGdzOi8vYnVja2V0LW5hbWUvcGF0aC90by9mb2xkZXIgLSBBenVyZSBCbG9iIC1cdTAwM2UgYXpibG9iOi8vYnVja2V0LW5hbWUvcGF0aC90by9mb2xkZXIiLCJ0eXBlIjoic3RyaW5nIn0sImhhemVsY2FzdFJlc291cmNlTmFtZSI6eyJkZXNjcmlwdGlvbiI6IkhhemVsY2FzdFJlc291cmNlTmFtZSBkZWZpbmVzIHRoZSBuYW1lIG9mIHRoZSBIYXplbGNhc3QgcmVzb3VyY2UiLCJ0eXBlIjoic3RyaW5nIn0sInNlY3JldCI6eyJkZXNjcmlwdGlvbiI6InNlY3JldCBpcyBhIGRlcHJlY2F0ZWQgYWxpYXMgZm9yIHNlY3JldE5hbWUuIiwidHlwZSI6InN0cmluZyJ9LCJzZWNyZXROYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgc2VjcmV0IHdpdGggY3JlZGVudGlhbHMgZm9yIGNsb3VkIHByb3ZpZGVycy4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJoYXplbGNhc3RSZXNvdXJjZU5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJIb3RCYWNrdXBTdGF0dXMgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgSG90QmFja3VwIiwicHJvcGVydGllcyI6eyJiYWNrdXBVVUlEcyI6eyJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJtZXNzYWdlIjp7InR5cGUiOiJzdHJpbmcifSwic3RhdGUiOnsiZW51bSI6WyJVbmtub3duIiwiUGVuZGluZyIsIk5vdFN0YXJ0ZWQiLCJJblByb2dyZXNzIiwiRmFpbHVyZSIsIlN1Y2Nlc3MiXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsic3BlYyJdLCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfSwic3RhdHVzIjp7ImFjY2VwdGVkTmFtZXMiOnsia2luZCI6IiIsInBsdXJhbCI6IiJ9LCJjb25kaXRpb25zIjpudWxsLCJzdG9yZWRWZXJzaW9ucyI6bnVsbH19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEwLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJqZXRqb2JzLmhhemVsY2FzdC5jb20ifSwic3BlYyI6eyJncm91cCI6ImhhemVsY2FzdC5jb20iLCJuYW1lcyI6eyJraW5kIjoiSmV0Sm9iIiwibGlzdEtpbmQiOiJKZXRKb2JMaXN0IiwicGx1cmFsIjoiamV0am9icyIsInNob3J0TmFtZXMiOlsiamoiXSwic2luZ3VsYXIiOiJqZXRqb2IifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3siZGVzY3JpcHRpb24iOiJDdXJyZW50IHN0YXRlIG9mIHRoZSBKZXRKb2IiLCJqc29uUGF0aCI6Ii5zdGF0dXMucGhhc2UiLCJuYW1lIjoiU3RhdHVzIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJJRCBvZiB0aGUgSmV0Sm9iIiwianNvblBhdGgiOiIuc3RhdHVzLmlkIiwibmFtZSI6IklkIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJUaW1lIHdoZW4gdGhlIEpldEpvYiB3YXMgc3VibWl0dGVkIiwianNvblBhdGgiOiIuc3RhdHVzLnN1Ym1pc3Npb25UaW1lIiwibmFtZSI6IlN1Ym1pc3Npb25UaW1lIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJUaW1lIHdoZW4gdGhlIEpldEpvYiB3YXMgY29tcGxldGVkIiwianNvblBhdGgiOiIuc3RhdHVzLmNvbXBsZXRpb25UaW1lIiwibmFtZSI6IkNvbXBsZXRpb25UaW1lIiwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkpldEpvYiBpcyB0aGUgU2NoZW1hIGZvciB0aGUgamV0am9icyBBUEkiLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuIFNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZCBtYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy4gU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uIENhbm5vdCBiZSB1cGRhdGVkLiBJbiBDYW1lbENhc2UuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IkpldEpvYlNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBKZXRKb2IiLCJwcm9wZXJ0aWVzIjp7ImJ1Y2tldENvbmZpZyI6eyJkZXNjcmlwdGlvbiI6IkJ1Y2tldCBjb25maWcgZnJvbSB3aGVyZSB0aGUgSkFSIGZpbGVzIHdpbGwgYmUgZG93bmxvYWRlZC4iLCJwcm9wZXJ0aWVzIjp7ImJ1Y2tldFVSSSI6eyJkZXNjcmlwdGlvbiI6IlVSTCBvZiB0aGUgYnVja2V0IHRvIGRvd25sb2FkIEhvdEJhY2t1cCBmb2xkZXJzLiBBV1MgUzMsIEdDUCBCdWNrZXQgYW5kIEF6dXJlIEJsb2Igc3RvcmFnZSBidWNrZXRzIGFyZSBzdXBwb3J0ZWQuIEV4YW1wbGUgYnVja2V0IFVSSXM6IC0gQVdTIFMzICAgICAtXHUwMDNlIHMzOi8vYnVja2V0LW5hbWUvcGF0aC90by9mb2xkZXIgLSBHQ1AgQnVja2V0IC1cdTAwM2UgZ3M6Ly9idWNrZXQtbmFtZS9wYXRoL3RvL2ZvbGRlciAtIEF6dXJlIEJsb2IgLVx1MDAzZSBhemJsb2I6Ly9idWNrZXQtbmFtZS9wYXRoL3RvL2ZvbGRlciIsIm1pbkxlbmd0aCI6NiwidHlwZSI6InN0cmluZyJ9LCJzZWNyZXQiOnsiZGVzY3JpcHRpb24iOiJzZWNyZXQgaXMgYSBkZXByZWNhdGVkIGFsaWFzIGZvciBzZWNyZXROYW1lLiIsInR5cGUiOiJzdHJpbmcifSwic2VjcmV0TmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIHNlY3JldCB3aXRoIGNyZWRlbnRpYWxzIGZvciBjbG91ZCBwcm92aWRlcnMuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiYnVja2V0VVJJIl0sInR5cGUiOiJvYmplY3QifSwiaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIjp7ImRlc2NyaXB0aW9uIjoiSGF6ZWxjYXN0UmVzb3VyY2VOYW1lIGRlZmluZXMgdGhlIG5hbWUgb2YgdGhlIEhhemVsY2FzdCByZXNvdXJjZSB0aGF0IHRoaXMgcmVzb3VyY2UgaXMgY3JlYXRlZCBmb3IuIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn0sImluaXRpYWxTbmFwc2hvdFJlc291cmNlTmFtZSI6eyJkZXNjcmlwdGlvbiI6IkluaXRpYWxTbmFwc2hvdFJlc291cmNlTmFtZSBzcGVjaWZ5IHRoZSBuYW1lIG9mIHRoZSBKZXRKb2JTbmFwc2hvdCBvYmplY3QgZnJvbSB3aGljaCB0aGUgSmV0Sm9iIGlzIGluaXRpYWxpemVkLiIsInR5cGUiOiJzdHJpbmcifSwiamFyTmFtZSI6eyJkZXNjcmlwdGlvbiI6Ikphck5hbWUgc3BlY2lmeSB0aGUgbmFtZSBvZiB0aGUgSmFyIHRvIHJ1biB0aGF0IGlzIHByZXNlbnQgb24gdGhlIG1lbWJlci4iLCJtaW5MZW5ndGgiOjEsInR5cGUiOiJzdHJpbmcifSwibWFpbkNsYXNzIjp7ImRlc2NyaXB0aW9uIjoiTWFpbkNsYXNzIGlzIHRoZSBuYW1lIG9mIHRoZSBtYWluIGNsYXNzIHRoYXQgd2lsbCBiZSBydW4gb24gdGhlIHN1Ym1pdHRlZCBqb2IuIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgSmV0Sm9iIHRvIGJlIGNyZWF0ZWQuIElmIGVtcHR5LCBDUiBuYW1lIHdpbGwgYmUgdXNlZC4gSXQgY2Fubm90IGJlIHVwZGF0ZWQgYWZ0ZXIgdGhlIGNvbmZpZyBpcyBjcmVhdGVkIHN1Y2Nlc3NmdWxseS4iLCJ0eXBlIjoic3RyaW5nIn0sInJlbW90ZVVSTCI6eyJkZXNjcmlwdGlvbiI6IlVSTCBmcm9tIHdoZXJlIHRoZSBmaWxlIHdpbGwgYmUgZG93bmxvYWRlZC4iLCJ0eXBlIjoic3RyaW5nIn0sInN0YXRlIjp7ImRlZmF1bHQiOiJSdW5uaW5nIiwiZGVzY3JpcHRpb24iOiJTdGF0ZSBpcyB1c2VkIHRvIG1hbmFnZSB0aGUgam9iIHN0YXRlLiIsImVudW0iOlsiUnVubmluZyIsIlN1c3BlbmRlZCIsIkNhbmNlbGVkIiwiUmVzdGFydGVkIl0sInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImhhemVsY2FzdFJlc291cmNlTmFtZSIsImphck5hbWUiLCJzdGF0ZSJdLCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IkpldEpvYlN0YXR1cyBkZWZpbmVzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBKZXRKb2IiLCJwcm9wZXJ0aWVzIjp7ImNvbXBsZXRpb25UaW1lIjp7ImZvcm1hdCI6ImRhdGUtdGltZSIsInR5cGUiOiJzdHJpbmcifSwiZmFpbHVyZVRleHQiOnsidHlwZSI6InN0cmluZyJ9LCJpZCI6eyJmb3JtYXQiOiJpbnQ2NCIsInR5cGUiOiJpbnRlZ2VyIn0sInBoYXNlIjp7ImVudW0iOlsiRmFpbGVkIiwiTm90UnVubmluZyIsIlN0YXJ0aW5nIiwiUnVubmluZyIsIlN1c3BlbmRlZCIsIlN1c3BlbmRlZEV4cG9ydGluZ1NuYXBzaG90IiwiQ29tcGxldGluZyIsIkV4ZWN1dGlvbkZhaWxlZCIsIkNvbXBsZXRlZCJdLCJ0eXBlIjoic3RyaW5nIn0sInN1Ym1pc3Npb25UaW1lIjp7ImZvcm1hdCI6ImRhdGUtdGltZSIsInR5cGUiOiJzdHJpbmcifSwic3VzcGVuc2lvbkNhdXNlIjp7InR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImlkIiwicGhhc2UiXSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6bnVsbCwic3RvcmVkVmVyc2lvbnMiOm51bGx9fQ==
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEwLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJqZXRqb2JzbmFwc2hvdHMuaGF6ZWxjYXN0LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiaGF6ZWxjYXN0LmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJKZXRKb2JTbmFwc2hvdCIsImxpc3RLaW5kIjoiSmV0Sm9iU25hcHNob3RMaXN0IiwicGx1cmFsIjoiamV0am9ic25hcHNob3RzIiwic2hvcnROYW1lcyI6WyJqanMiXSwic2luZ3VsYXIiOiJqZXRqb2JzbmFwc2hvdCJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJkZXNjcmlwdGlvbiI6IkN1cnJlbnQgc3RhdGUgb2YgdGhlIEpldEpvYlNuYXBzaG90IiwianNvblBhdGgiOiIuc3RhdHVzLnN0YXRlIiwibmFtZSI6IlN0YXRlIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJUaW1lIHdoZW4gdGhlIEpldEpvYlNuYXBzaG90IHdhcyBjcmVhdGVkLCBpZiBjcmVhdGVkIiwianNvblBhdGgiOiIuc3RhdHVzLmNyZWF0aW9uVGltZSIsIm5hbWUiOiJDcmVhdGlvblRpbWUiLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6Ik1lc3NhZ2UgZm9yIHRoZSBKZXRKb2JTbmFwc2hvdCIsImpzb25QYXRoIjoiLnN0YXR1cy5tZXNzYWdlIiwibmFtZSI6Ik1lc3NhZ2UiLCJwcmlvcml0eSI6MSwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkpldEpvYlNuYXBzaG90IGlzIHRoZSBTY2hlbWEgZm9yIHRoZSBqZXRqb2JzbmFwc2hvdHMgQVBJIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJKZXRKb2JTbmFwc2hvdFNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBKZXRKb2JTbmFwc2hvdCIsInByb3BlcnRpZXMiOnsiY2FuY2VsSm9iIjp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6IkNhbmNlbEpvYiBkZXRlcm1pbmVzIHdoZXRoZXIgdGhlIGpvYiBpcyBjYW5jZWxlZCBhZnRlciBleHBvcnRpbmcgc25hcHNob3QiLCJ0eXBlIjoiYm9vbGVhbiJ9LCJqZXRKb2JSZXNvdXJjZU5hbWUiOnsiZGVzY3JpcHRpb24iOiJKZXRKb2JSZXNvdXJjZU5hbWUgaXMgdGhlIG5hbWUgb2YgdGhlIEpldEpvYiBDUiB3aGVyZSB0aGUgU25hcHNob3QgaXMgZXhwb3J0ZWQgZnJvbSIsIm1pbkxlbmd0aCI6MSwidHlwZSI6InN0cmluZyJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgZXhwb3J0ZWQgc25hcHNob3QiLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJqZXRKb2JSZXNvdXJjZU5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVmYXVsdCI6eyJzdGF0ZSI6IldhaXRpbmcifSwiZGVzY3JpcHRpb24iOiJKZXRKb2JTbmFwc2hvdFN0YXR1cyBkZWZpbmVzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBKZXRKb2JTbmFwc2hvdCIsInByb3BlcnRpZXMiOnsiY3JlYXRpb25UaW1lIjp7ImZvcm1hdCI6ImRhdGUtdGltZSIsInR5cGUiOiJzdHJpbmcifSwibWVzc2FnZSI6eyJ0eXBlIjoic3RyaW5nIn0sInN0YXRlIjp7ImVudW0iOlsiV2FpdGluZyIsIkV4cG9ydGluZyIsIkV4cG9ydGVkIiwiRmFpbGVkIl0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInNwZWMiXSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6bnVsbCwic3RvcmVkVmVyc2lvbnMiOm51bGx9fQ==
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEwLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJtdWx0aW1hcHMuaGF6ZWxjYXN0LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiaGF6ZWxjYXN0LmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJNdWx0aU1hcCIsImxpc3RLaW5kIjoiTXVsdGlNYXBMaXN0IiwicGx1cmFsIjoibXVsdGltYXBzIiwic2hvcnROYW1lcyI6WyJtbWFwIl0sInNpbmd1bGFyIjoibXVsdGltYXAifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3siZGVzY3JpcHRpb24iOiJDdXJyZW50IHN0YXRlIG9mIHRoZSBNdWx0aU1hcCBDb25maWciLCJqc29uUGF0aCI6Ii5zdGF0dXMuc3RhdGUiLCJuYW1lIjoiU3RhdHVzIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJNZXNzYWdlIGZvciB0aGUgY3VycmVudCBNdWx0aU1hcCBDb25maWciLCJqc29uUGF0aCI6Ii5zdGF0dXMubWVzc2FnZSIsIm5hbWUiOiJNZXNzYWdlIiwicHJpb3JpdHkiOjEsInR5cGUiOiJzdHJpbmcifV0sIm5hbWUiOiJ2MWFscGhhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJNdWx0aU1hcCBpcyB0aGUgU2NoZW1hIGZvciB0aGUgbXVsdGltYXBzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiTXVsdGlNYXBTcGVjIGRlZmluZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgTXVsdGlNYXAiLCJwcm9wZXJ0aWVzIjp7ImFzeW5jQmFja3VwQ291bnQiOnsiZGVmYXVsdCI6MCwiZGVzY3JpcHRpb24iOiJOdW1iZXIgb2YgYXN5bmNocm9ub3VzIGJhY2t1cHMuIiwiZm9ybWF0IjoiaW50MzIiLCJtYXhpbXVtIjo2LCJtaW5pbXVtIjowLCJ0eXBlIjoiaW50ZWdlciJ9LCJiYWNrdXBDb3VudCI6eyJkZWZhdWx0IjoxLCJkZXNjcmlwdGlvbiI6Ik51bWJlciBvZiBzeW5jaHJvbm91cyBiYWNrdXBzLiIsImZvcm1hdCI6ImludDMyIiwibWF4aW11bSI6NiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifSwiYmluYXJ5Ijp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6IlNwZWNpZmllcyBpbiB3aGljaCBmb3JtYXQgZGF0YSB3aWxsIGJlIHN0b3JlZCBpbiB5b3VyIE11bHRpTWFwLiBmYWxzZTogT0JKRUNUIHRydWU6IEJJTkFSWSIsInR5cGUiOiJib29sZWFuIn0sImNvbGxlY3Rpb25UeXBlIjp7ImRlZmF1bHQiOiJTRVQiLCJkZXNjcmlwdGlvbiI6IlR5cGUgb2YgdGhlIHZhbHVlIGNvbGxlY3Rpb24iLCJlbnVtIjpbIlNFVCIsIkxJU1QiXSwidHlwZSI6InN0cmluZyJ9LCJoYXplbGNhc3RSZXNvdXJjZU5hbWUiOnsiZGVzY3JpcHRpb24iOiJIYXplbGNhc3RSZXNvdXJjZU5hbWUgZGVmaW5lcyB0aGUgbmFtZSBvZiB0aGUgSGF6ZWxjYXN0IHJlc291cmNlIHRoYXQgdGhpcyByZXNvdXJjZSBpcyBjcmVhdGVkIGZvci4iLCJtaW5MZW5ndGgiOjEsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIGRhdGEgc3RydWN0dXJlIGNvbmZpZyB0byBiZSBjcmVhdGVkLiBJZiBlbXB0eSwgQ1IgbmFtZSB3aWxsIGJlIHVzZWQuIEl0IGNhbm5vdCBiZSB1cGRhdGVkIGFmdGVyIHRoZSBjb25maWcgaXMgY3JlYXRlZCBzdWNjZXNzZnVsbHkuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIl0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiTXVsdGlNYXBTdGF0dXMgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgTXVsdGlNYXAiLCJwcm9wZXJ0aWVzIjp7Im1lbWJlclN0YXR1c2VzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7ImVudW0iOlsiU3VjY2VzcyIsIkZhaWxlZCIsIlBlbmRpbmciLCJQZXJzaXN0aW5nIiwiVGVybWluYXRpbmciXSwidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6IkhvbGRzIHN0YXR1cyBvZiBkYXRhIHN0cnVjdHVyZSBmb3IgZWFjaCBIYXplbGNhc3QgbWVtYmVyIiwidHlwZSI6Im9iamVjdCJ9LCJtZXNzYWdlIjp7ImRlc2NyaXB0aW9uIjoiTWVzc2FnZSBleHBsYWluaW5nIHRoZSBjdXJyZW50IHN0YXRlIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0ZSI6eyJkZXNjcmlwdGlvbiI6IlN0YXRlIG9mIHRoZSBkYXRhIHN0cnVjdHVyZSIsImVudW0iOlsiU3VjY2VzcyIsIkZhaWxlZCIsIlBlbmRpbmciLCJQZXJzaXN0aW5nIiwiVGVybWluYXRpbmciXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsic3BlYyJdLCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfSwic3RhdHVzIjp7ImFjY2VwdGVkTmFtZXMiOnsia2luZCI6IiIsInBsdXJhbCI6IiJ9LCJjb25kaXRpb25zIjpudWxsLCJzdG9yZWRWZXJzaW9ucyI6bnVsbH19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEwLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJxdWV1ZXMuaGF6ZWxjYXN0LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiaGF6ZWxjYXN0LmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJRdWV1ZSIsImxpc3RLaW5kIjoiUXVldWVMaXN0IiwicGx1cmFsIjoicXVldWVzIiwic2hvcnROYW1lcyI6WyJxIl0sInNpbmd1bGFyIjoicXVldWUifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3siZGVzY3JpcHRpb24iOiJDdXJyZW50IHN0YXRlIG9mIHRoZSBRdWV1ZSBDb25maWciLCJqc29uUGF0aCI6Ii5zdGF0dXMuc3RhdGUiLCJuYW1lIjoiU3RhdHVzIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJNZXNzYWdlIGZvciB0aGUgY3VycmVudCBRdWV1ZSBDb25maWciLCJqc29uUGF0aCI6Ii5zdGF0dXMubWVzc2FnZSIsIm5hbWUiOiJNZXNzYWdlIiwicHJpb3JpdHkiOjEsInR5cGUiOiJzdHJpbmcifV0sIm5hbWUiOiJ2MWFscGhhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJRdWV1ZSBpcyB0aGUgU2NoZW1hIGZvciB0aGUgcXVldWVzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiUXVldWVTcGVjIGRlZmluZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgUXVldWUgSXQgY2Fubm90IGJlIHVwZGF0ZWQgYWZ0ZXIgdGhlIFF1ZXVlIGlzIGNyZWF0ZWQiLCJwcm9wZXJ0aWVzIjp7ImFzeW5jQmFja3VwQ291bnQiOnsiZGVmYXVsdCI6MCwiZGVzY3JpcHRpb24iOiJOdW1iZXIgb2YgYXN5bmNocm9ub3VzIGJhY2t1cHMuIiwiZm9ybWF0IjoiaW50MzIiLCJtYXhpbXVtIjo2LCJtaW5pbXVtIjowLCJ0eXBlIjoiaW50ZWdlciJ9LCJiYWNrdXBDb3VudCI6eyJkZWZhdWx0IjoxLCJkZXNjcmlwdGlvbiI6Ik51bWJlciBvZiBzeW5jaHJvbm91cyBiYWNrdXBzLiIsImZvcm1hdCI6ImludDMyIiwibWF4aW11bSI6NiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifSwiZW1wdHlRdWV1ZVRUTFNlY29uZHMiOnsiZGVmYXVsdCI6LTEsImRlc2NyaXB0aW9uIjoiVGltZSBpbiBzZWNvbmRzIGFmdGVyIHdoaWNoIHRoZSBRdWV1ZSB3aWxsIGJlIGRlc3Ryb3llZCBpZiBpdCBzdGF5cyBlbXB0eSBvciB1bnVzZWQuIElmIHRoZSB2YWx1ZXMgaXMgbm90IHByb3ZpZGVkIHRoZSBRdWV1ZSB3aWxsIG5ldmVyIGJlIGRlc3Ryb3llZC4iLCJmb3JtYXQiOiJpbnQzMiIsInR5cGUiOiJpbnRlZ2VyIn0sImhhemVsY2FzdFJlc291cmNlTmFtZSI6eyJkZXNjcmlwdGlvbiI6IkhhemVsY2FzdFJlc291cmNlTmFtZSBkZWZpbmVzIHRoZSBuYW1lIG9mIHRoZSBIYXplbGNhc3QgcmVzb3VyY2UgdGhhdCB0aGlzIHJlc291cmNlIGlzIGNyZWF0ZWQgZm9yLiIsIm1pbkxlbmd0aCI6MSwidHlwZSI6InN0cmluZyJ9LCJtYXhTaXplIjp7ImRlZmF1bHQiOjAsImRlc2NyaXB0aW9uIjoiTWF4IHNpemUgb2YgdGhlIHF1ZXVlLiIsImZvcm1hdCI6ImludDMyIiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIGRhdGEgc3RydWN0dXJlIGNvbmZpZyB0byBiZSBjcmVhdGVkLiBJZiBlbXB0eSwgQ1IgbmFtZSB3aWxsIGJlIHVzZWQuIEl0IGNhbm5vdCBiZSB1cGRhdGVkIGFmdGVyIHRoZSBjb25maWcgaXMgY3JlYXRlZCBzdWNjZXNzZnVsbHkuIiwidHlwZSI6InN0cmluZyJ9LCJwcmlvcml0eUNvbXBhcmF0b3JDbGFzc05hbWUiOnsiZGVzY3JpcHRpb24iOiJUaGUgbmFtZSBvZiB0aGUgY29tcGFyYXRvciBjbGFzcy4gSWYgdGhlIGNsYXNzIG5hbWUgaXMgcHJvdmlkZWQsIHRoZSBRdWV1ZSBiZWNvbWVzIFByaW9yaXR5IFF1ZXVlLiBZb3UgY2FuIGxlYXJuIG1vcmUgYXQgaHR0cHM6Ly9kb2NzLmhhemVsY2FzdC5jb20vaGF6ZWxjYXN0L2xhdGVzdC9kYXRhLXN0cnVjdHVyZXMvcHJpb3JpdHktcXVldWUuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIl0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiUXVldWVTdGF0dXMgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgUXVldWUiLCJwcm9wZXJ0aWVzIjp7Im1lbWJlclN0YXR1c2VzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7ImVudW0iOlsiU3VjY2VzcyIsIkZhaWxlZCIsIlBlbmRpbmciLCJQZXJzaXN0aW5nIiwiVGVybWluYXRpbmciXSwidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6IkhvbGRzIHN0YXR1cyBvZiBkYXRhIHN0cnVjdHVyZSBmb3IgZWFjaCBIYXplbGNhc3QgbWVtYmVyIiwidHlwZSI6Im9iamVjdCJ9LCJtZXNzYWdlIjp7ImRlc2NyaXB0aW9uIjoiTWVzc2FnZSBleHBsYWluaW5nIHRoZSBjdXJyZW50IHN0YXRlIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0ZSI6eyJkZXNjcmlwdGlvbiI6IlN0YXRlIG9mIHRoZSBkYXRhIHN0cnVjdHVyZSIsImVudW0iOlsiU3VjY2VzcyIsIkZhaWxlZCIsIlBlbmRpbmciLCJQZXJzaXN0aW5nIiwiVGVybWluYXRpbmciXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsic3BlYyJdLCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfSwic3RhdHVzIjp7ImFjY2VwdGVkTmFtZXMiOnsia2luZCI6IiIsInBsdXJhbCI6IiJ9LCJjb25kaXRpb25zIjpudWxsLCJzdG9yZWRWZXJzaW9ucyI6bnVsbH19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEwLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJyZXBsaWNhdGVkbWFwcy5oYXplbGNhc3QuY29tIn0sInNwZWMiOnsiZ3JvdXAiOiJoYXplbGNhc3QuY29tIiwibmFtZXMiOnsia2luZCI6IlJlcGxpY2F0ZWRNYXAiLCJsaXN0S2luZCI6IlJlcGxpY2F0ZWRNYXBMaXN0IiwicGx1cmFsIjoicmVwbGljYXRlZG1hcHMiLCJzaG9ydE5hbWVzIjpbInJtYXAiXSwic2luZ3VsYXIiOiJyZXBsaWNhdGVkbWFwIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJhZGRpdGlvbmFsUHJpbnRlckNvbHVtbnMiOlt7ImRlc2NyaXB0aW9uIjoiQ3VycmVudCBzdGF0ZSBvZiB0aGUgUmVwbGljYXRlZE1hcCBDb25maWciLCJqc29uUGF0aCI6Ii5zdGF0dXMuc3RhdGUiLCJuYW1lIjoiU3RhdHVzIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJNZXNzYWdlIGZvciB0aGUgY3VycmVudCBSZXBsaWNhdGVkTWFwIENvbmZpZyIsImpzb25QYXRoIjoiLnN0YXR1cy5tZXNzYWdlIiwibmFtZSI6Ik1lc3NhZ2UiLCJwcmlvcml0eSI6MSwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IlJlcGxpY2F0ZWRNYXAgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIHJlcGxpY2F0ZWRtYXBzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiUmVwbGljYXRlZE1hcFNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBSZXBsaWNhdGVkTWFwIiwicHJvcGVydGllcyI6eyJhc3luY0ZpbGx1cCI6eyJkZWZhdWx0Ijp0cnVlLCJkZXNjcmlwdGlvbiI6IkFzeW5jRmlsbHVwIHNwZWNpZmllcyB3aGV0aGVyIHRoZSBSZXBsaWNhdGVkTWFwIGlzIGF2YWlsYWJsZSBmb3IgcmVhZHMgYmVmb3JlIHRoZSBpbml0aWFsIHJlcGxpY2F0aW9uIGlzIGNvbXBsZXRlZCIsInR5cGUiOiJib29sZWFuIn0sImhhemVsY2FzdFJlc291cmNlTmFtZSI6eyJkZXNjcmlwdGlvbiI6IkhhemVsY2FzdFJlc291cmNlTmFtZSBkZWZpbmVzIHRoZSBuYW1lIG9mIHRoZSBIYXplbGNhc3QgcmVzb3VyY2UuIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn0sImluTWVtb3J5Rm9ybWF0Ijp7ImRlZmF1bHQiOiJPQkpFQ1QiLCJkZXNjcmlwdGlvbiI6IkluTWVtb3J5Rm9ybWF0IHNwZWNpZmllcyBpbiB3aGljaCBmb3JtYXQgZGF0YSB3aWxsIGJlIHN0b3JlZCBpbiB0aGUgUmVwbGljYXRlZE1hcCIsImVudW0iOlsiQklOQVJZIiwiT0JKRUNUIl0sInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIFJlcGxpY2F0ZWRNYXAgY29uZmlnIHRvIGJlIGNyZWF0ZWQuIElmIGVtcHR5LCBDUiBuYW1lIHdpbGwgYmUgdXNlZC4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJoYXplbGNhc3RSZXNvdXJjZU5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJSZXBsaWNhdGVkTWFwU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIFJlcGxpY2F0ZWRNYXAiLCJwcm9wZXJ0aWVzIjp7Im1lbWJlclN0YXR1c2VzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7ImVudW0iOlsiU3VjY2VzcyIsIkZhaWxlZCIsIlBlbmRpbmciLCJQZXJzaXN0aW5nIiwiVGVybWluYXRpbmciXSwidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6IkhvbGRzIHN0YXR1cyBvZiBkYXRhIHN0cnVjdHVyZSBmb3IgZWFjaCBIYXplbGNhc3QgbWVtYmVyIiwidHlwZSI6Im9iamVjdCJ9LCJtZXNzYWdlIjp7ImRlc2NyaXB0aW9uIjoiTWVzc2FnZSBleHBsYWluaW5nIHRoZSBjdXJyZW50IHN0YXRlIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0ZSI6eyJkZXNjcmlwdGlvbiI6IlN0YXRlIG9mIHRoZSBkYXRhIHN0cnVjdHVyZSIsImVudW0iOlsiU3VjY2VzcyIsIkZhaWxlZCIsIlBlbmRpbmciLCJQZXJzaXN0aW5nIiwiVGVybWluYXRpbmciXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsic3BlYyJdLCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfSwic3RhdHVzIjp7ImFjY2VwdGVkTmFtZXMiOnsia2luZCI6IiIsInBsdXJhbCI6IiJ9LCJjb25kaXRpb25zIjpudWxsLCJzdG9yZWRWZXJzaW9ucyI6bnVsbH19
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwLmt1YmVybmV0ZXMuaW8vY29tcG9uZW50Ijoid2ViaG9vayIsImFwcC5rdWJlcm5ldGVzLmlvL2NyZWF0ZWQtYnkiOiJoYXplbGNhc3QtcGxhdGZvcm0tb3BlcmF0b3IiLCJhcHAua3ViZXJuZXRlcy5pby9pbnN0YW5jZSI6IndlYmhvb2stc2VydmljZSIsImFwcC5rdWJlcm5ldGVzLmlvL21hbmFnZWQtYnkiOiJrdXN0b21pemUiLCJhcHAua3ViZXJuZXRlcy5pby9uYW1lIjoic2VydmljZSIsImFwcC5rdWJlcm5ldGVzLmlvL3BhcnQtb2YiOiJoYXplbGNhc3QtcGxhdGZvcm0tb3BlcmF0b3IifSwibmFtZSI6ImhhemVsY2FzdC1wbGF0Zm9ybS13ZWJob29rLXNlcnZpY2UifSwic3BlYyI6eyJwb3J0cyI6W3sicG9ydCI6NDQzLCJwcm90b2NvbCI6IlRDUCIsInRhcmdldFBvcnQiOjk0NDN9XSwic2VsZWN0b3IiOnsiY29udHJvbC1wbGFuZSI6ImNvbnRyb2xsZXItbWFuYWdlciJ9fSwic3RhdHVzIjp7ImxvYWRCYWxhbmNlciI6e319fQ==
relatedImages:
- image: docker.io/hazelcast/hazelcast-platform-operator@sha256:40bbe3105311b8fb1e8c9ba821fc863a1a5c5b31ac17db50f3fd572570be5a29
  name: manager
- image: quay.io/openshift-community-operators/hazelcast-platform-operator@sha256:fab1fc1419ab200c7f0e79160ada4a204d259f119a69180dc79d80a2672c3ffe
  name: ""
schema: olm.bundle
---
image: quay.io/openshift-community-operators/hazelcast-platform-operator@sha256:3d1e31a717e0e1cba1513278b64a50fefcc66073705e118b02b9528fc3fc19dd
name: hazelcast-platform-operator.v5.9.0
package: hazelcast-platform-operator
properties:
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: Cache
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: CronHotBackup
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: Hazelcast
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: HotBackup
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: JetJob
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: JetJobSnapshot
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: ManagementCenter
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: Map
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: MultiMap
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: Queue
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: ReplicatedMap
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: Topic
    version: v1alpha1
- type: olm.gvk
  value:
    group: hazelcast.com
    kind: WanReplication
    version: v1alpha1
- type: olm.package
  value:
    packageName: hazelcast-platform-operator
    version: 5.9.0
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEwLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJ0b3BpY3MuaGF6ZWxjYXN0LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiaGF6ZWxjYXN0LmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJUb3BpYyIsImxpc3RLaW5kIjoiVG9waWNMaXN0IiwicGx1cmFsIjoidG9waWNzIiwic2luZ3VsYXIiOiJ0b3BpYyJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJkZXNjcmlwdGlvbiI6IkN1cnJlbnQgc3RhdGUgb2YgdGhlIFRvcGljIENvbmZpZyIsImpzb25QYXRoIjoiLnN0YXR1cy5zdGF0ZSIsIm5hbWUiOiJTdGF0dXMiLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6Ik1lc3NhZ2UgZm9yIHRoZSBjdXJyZW50IFRvcGljIENvbmZpZyIsImpzb25QYXRoIjoiLnN0YXR1cy5tZXNzYWdlIiwibmFtZSI6Ik1lc3NhZ2UiLCJwcmlvcml0eSI6MSwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IlRvcGljIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSB0b3BpY3MgQVBJIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJUb3BpY1NwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBUb3BpYyIsInByb3BlcnRpZXMiOnsiZ2xvYmFsT3JkZXJpbmdFbmFibGVkIjp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6Imdsb2JhbE9yZGVyaW5nRW5hYmxlZCBhbGxvd3MgYWxsIG5vZGVzIGxpc3RlbmluZyB0byB0aGUgc2FtZSB0b3BpYyBnZXQgdGhlaXIgbWVzc2FnZXMgaW4gdGhlIHNhbWUgb3JkZXIgdGhlIHNhbWUgb3JkZXIiLCJ0eXBlIjoiYm9vbGVhbiJ9LCJoYXplbGNhc3RSZXNvdXJjZU5hbWUiOnsiZGVzY3JpcHRpb24iOiJIYXplbGNhc3RSZXNvdXJjZU5hbWUgZGVmaW5lcyB0aGUgbmFtZSBvZiB0aGUgSGF6ZWxjYXN0IHJlc291cmNlIGZvciB3aGljaCB0b3BpYyBjb25maWcgd2lsbCBiZSBjcmVhdGVkIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn0sIm11bHRpVGhyZWFkaW5nRW5hYmxlZCI6eyJkZWZhdWx0IjpmYWxzZSwiZGVzY3JpcHRpb24iOiJtdWx0aVRocmVhZGluZ0VuYWJsZWQgZW5hYmxlcyBtdWx0aS10aHJlYWRlZCBwcm9jZXNzaW5nIG9mIGluY29taW5nIG1lc3NhZ2VzIGEgc2luZ2xlIHRocmVhZCB3aWxsIGhhbmRsZSBhbGwgdG9waWMgbWVzc2FnZXMiLCJ0eXBlIjoiYm9vbGVhbiJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgdG9waWMgY29uZmlnIHRvIGJlIGNyZWF0ZWQuIElmIGVtcHR5LCBDUiBuYW1lIHdpbGwgYmUgdXNlZC4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJoYXplbGNhc3RSZXNvdXJjZU5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJUb3BpY1N0YXR1cyBkZWZpbmVzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBUb3BpYyIsInByb3BlcnRpZXMiOnsibWVtYmVyU3RhdHVzZXMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsiZW51bSI6WyJTdWNjZXNzIiwiRmFpbGVkIiwiUGVuZGluZyIsIlBlcnNpc3RpbmciLCJUZXJtaW5hdGluZyJdLCJ0eXBlIjoic3RyaW5nIn0sImRlc2NyaXB0aW9uIjoiSG9sZHMgc3RhdHVzIG9mIGRhdGEgc3RydWN0dXJlIGZvciBlYWNoIEhhemVsY2FzdCBtZW1iZXIiLCJ0eXBlIjoib2JqZWN0In0sIm1lc3NhZ2UiOnsiZGVzY3JpcHRpb24iOiJNZXNzYWdlIGV4cGxhaW5pbmcgdGhlIGN1cnJlbnQgc3RhdGUiLCJ0eXBlIjoic3RyaW5nIn0sInN0YXRlIjp7ImRlc2NyaXB0aW9uIjoiU3RhdGUgb2YgdGhlIGRhdGEgc3RydWN0dXJlIiwiZW51bSI6WyJTdWNjZXNzIiwiRmFpbGVkIiwiUGVuZGluZyIsIlBlcnNpc3RpbmciLCJUZXJtaW5hdGluZyJdLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJzcGVjIl0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOm51bGwsInN0b3JlZFZlcnNpb25zIjpudWxsfX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEwLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJ3YW5yZXBsaWNhdGlvbnMuaGF6ZWxjYXN0LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiaGF6ZWxjYXN0LmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJXYW5SZXBsaWNhdGlvbiIsImxpc3RLaW5kIjoiV2FuUmVwbGljYXRpb25MaXN0IiwicGx1cmFsIjoid2FucmVwbGljYXRpb25zIiwic2hvcnROYW1lcyI6WyJ3ciJdLCJzaW5ndWxhciI6IndhbnJlcGxpY2F0aW9uIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJhZGRpdGlvbmFsUHJpbnRlckNvbHVtbnMiOlt7ImRlc2NyaXB0aW9uIjoiQ3VycmVudCBzdGF0ZSBvZiB0aGUgSGF6ZWxjYXN0IFdBTiBSZXBsaWNhdGlvbiIsImpzb25QYXRoIjoiLnN0YXR1cy5zdGF0dXMiLCJuYW1lIjoiU3RhdHVzIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJNZXNzYWdlIGZvciB0aGUgY3VycmVudCBXYW5SZXBsaWNhdGlvbiBDb25maWciLCJqc29uUGF0aCI6Ii5zdGF0dXMubWVzc2FnZSIsIm5hbWUiOiJNZXNzYWdlIiwicHJpb3JpdHkiOjEsInR5cGUiOiJzdHJpbmcifV0sIm5hbWUiOiJ2MWFscGhhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJXYW5SZXBsaWNhdGlvbiBpcyB0aGUgU2NoZW1hIGZvciB0aGUgd2FucmVwbGljYXRpb25zIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiV2FuUmVwbGljYXRpb25TcGVjIGRlZmluZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgV2FuUmVwbGljYXRpb24iLCJwcm9wZXJ0aWVzIjp7ImFja25vd2xlZGdlbWVudCI6eyJkZWZhdWx0Ijp7InRpbWVvdXQiOjYwMDAwLCJ0eXBlIjoiQUNLX09OX09QRVJBVElPTl9DT01QTEVURSJ9LCJkZXNjcmlwdGlvbiI6IkFja25vd2xlZGdlbWVudCBpcyB0aGUgY29uZmlndXJhdGlvbiBmb3IgdGhlIGNvbmRpdGlvbiB3aGVuIHRoZSBuZXh0IGJhdGNoIG9mIFdBTiBldmVudHMgYXJlIHNlbnQuIiwicHJvcGVydGllcyI6eyJ0aW1lb3V0Ijp7ImRlZmF1bHQiOjYwMDAwLCJkZXNjcmlwdGlvbiI6IlRpbWVvdXQgcmVwcmVzZW50cyB0aGUgdGltZSBpbiBtaWxsaXNlY29uZHMgdGhlIHNvdXJjZSBjbHVzdGVyIHdhaXRzIGZvciB0aGUgYWNrbm93bGVkZ2VtZW50LiBBZnRlciB0aW1lb3V0LCB0aGUgZXZlbnRzIHdpbGwgYmUgcmVzZW50LiIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifSwidHlwZSI6eyJkZWZhdWx0IjoiQUNLX09OX09QRVJBVElPTl9DT01QTEVURSIsImRlc2NyaXB0aW9uIjoiVHlwZSByZXByZXNlbnRzIGhvdyBhIGJhdGNoIG9mIHJlcGxpY2F0aW9uIGV2ZW50cyBpcyBjb25zaWRlcmVkIHN1Y2Nlc3NmdWxseSByZXBsaWNhdGVkLiIsImVudW0iOlsiQUNLX09OX09QRVJBVElPTl9DT01QTEVURSIsIkFDS19PTl9SRUNFSVBUIl0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwiYmF0Y2giOnsiZGVmYXVsdCI6eyJtYXhpbXVtRGVsYXkiOjEwMDAsInNpemUiOjUwMH0sImRlc2NyaXB0aW9uIjoiQmF0Y2ggaXMgdGhlIGNvbmZpZ3VyYXRpb24gZm9yIFdBTiBldmVudHMgYmF0Y2guIiwicHJvcGVydGllcyI6eyJtYXhpbXVtRGVsYXkiOnsiZGVmYXVsdCI6MTAwMCwiZGVzY3JpcHRpb24iOiJNYXhpbXVtRGVsYXkgcmVwcmVzZW50cyB0aGUgbWF4aW11bSBkZWxheSBpbiBtaWxsaXNlY29uZHMuIElmIHRoZSBiYXRjaCBzaXplIGlzIG5vdCByZWFjaGVkLCB0aGUgZXZlbnRzIHdpbGwgYmUgc2VudCBhZnRlciB0aGUgbWF4aW11bSBkZWxheS4iLCJmb3JtYXQiOiJpbnQzMiIsInR5cGUiOiJpbnRlZ2VyIn0sInNpemUiOnsiZGVmYXVsdCI6NTAwLCJkZXNjcmlwdGlvbiI6IlNpemUgcmVwcmVzZW50cyB0aGUgbWF4aW11bSBiYXRjaCBzaXplLiIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifX0sInR5cGUiOiJvYmplY3QifSwiZW5kcG9pbnRzIjp7ImRlc2NyaXB0aW9uIjoiRW5kcG9pbnRzIGlzIHRoZSB0YXJnZXQgY2x1c3RlciBjb21tYSBzZXBhcmF0ZWQgZW5kcG9pbnQgbGlzdCAuIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn0sInF1ZXVlIjp7ImRlZmF1bHQiOnsiY2FwYWNpdHkiOjEwMDAwLCJmdWxsQmVoYXZpb3IiOiJESVNDQVJEX0FGVEVSX01VVEFUSU9OIn0sImRlc2NyaXB0aW9uIjoiUXVldWUgaXMgdGhlIGNvbmZpZ3VyYXRpb24gZm9yIFdBTiBldmVudHMgcXVldWUuIiwicHJvcGVydGllcyI6eyJjYXBhY2l0eSI6eyJkZWZhdWx0IjoxMDAwMCwiZGVzY3JpcHRpb24iOiJDYXBhY2l0eSBpcyB0aGUgdG90YWwgY2FwYWNpdHkgb2YgV0FOIHF1ZXVlLiIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifSwiZnVsbEJlaGF2aW9yIjp7ImRlZmF1bHQiOiJESVNDQVJEX0FGVEVSX01VVEFUSU9OIiwiZGVzY3JpcHRpb24iOiJGdWxsQmVoYXZpb3IgcmVwcmVzZW50cyB0aGUgYmVoYXZpb3Igb2YgdGhlIG5ldyBhcnJpdmFsIHdoZW4gdGhlIHF1ZXVlIGlzIGZ1bGwuIiwiZW51bSI6WyJESVNDQVJEX0FGVEVSX01VVEFUSU9OIiwiVEhST1dfRVhDRVBUSU9OIiwiVEhST1dfRVhDRVBUSU9OX09OTFlfSUZfUkVQTElDQVRJT05fQUNUSVZFIl0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwicmVzb3VyY2VzIjp7ImRlc2NyaXB0aW9uIjoiUmVzb3VyY2VzIGlzIHRoZSBsaXN0IG9mIGN1c3RvbSByZXNvdXJjZXMgdG8gd2hpY2ggV0FOIHJlcGxpY2F0aW9uIGFwcGxpZXMuIiwiaXRlbXMiOnsicHJvcGVydGllcyI6eyJraW5kIjp7ImRlZmF1bHQiOiJNYXAiLCJkZXNjcmlwdGlvbiI6IktpbmQgaXMgdGhlIGtpbmQgb2YgY3VzdG9tIHJlc291cmNlIHRvIHdoaWNoIFdBTiByZXBsaWNhdGlvbiBhcHBsaWVzLiIsImVudW0iOlsiTWFwIiwiSGF6ZWxjYXN0Il0sInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgaXMgdGhlIG5hbWUgb2YgY3VzdG9tIHJlc291cmNlIHRvIHdoaWNoIFdBTiByZXBsaWNhdGlvbiBhcHBsaWVzLiIsIm1pbkxlbmd0aCI6MSwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sIm1pbkl0ZW1zIjoxLCJ0eXBlIjoiYXJyYXkifSwidGFyZ2V0Q2x1c3Rlck5hbWUiOnsiZGVzY3JpcHRpb24iOiJDbHVzdGVyTmFtZSBpcyB0aGUgY2x1c3Rlck5hbWUgZmllbGQgb2YgdGhlIHRhcmdldCBIYXplbGNhc3QgcmVzb3VyY2UuIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJlbmRwb2ludHMiLCJyZXNvdXJjZXMiLCJ0YXJnZXRDbHVzdGVyTmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IldhblJlcGxpY2F0aW9uU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIFdhblJlcGxpY2F0aW9uIiwicHJvcGVydGllcyI6eyJtZXNzYWdlIjp7ImRlc2NyaXB0aW9uIjoiTWVzc2FnZSBpcyB0aGUgZmllbGQgdG8gc2hvdyBkZXRhaWwgaW5mb3JtYXRpb24gb3IgZXJyb3IiLCJ0eXBlIjoic3RyaW5nIn0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IlN0YXR1cyBpcyB0aGUgc3RhdHVzIG9mIFdBTiByZXBsaWNhdGlvbiIsInR5cGUiOiJzdHJpbmcifSwid2FuUmVwbGljYXRpb25NYXBzU3RhdHVzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InByb3BlcnRpZXMiOnsibWVzc2FnZSI6eyJkZXNjcmlwdGlvbiI6Ik1lc3NhZ2UgaXMgdGhlIGZpZWxkIHRvIHNob3cgZGV0YWlsIGluZm9ybWF0aW9uIG9yIGVycm9yIiwidHlwZSI6InN0cmluZyJ9LCJwdWJsaXNoZXJJZCI6eyJkZXNjcmlwdGlvbiI6IlB1Ymxpc2hlcklkIGlzIHRoZSBJRCB1c2VkIGZvciBXQU4gcHVibGlzaGVyIElEIiwidHlwZSI6InN0cmluZyJ9LCJyZXNvdXJjZU5hbWUiOnsiZGVzY3JpcHRpb24iOiJSZXNvdXJjZU5hbWUgaXMgdGhlIG5hbWUgb2YgdGhlIE1hcCBDdXN0b20gUmVzb3VyY2UuIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJTdGF0dXMgaXMgdGhlIHN0YXR1cyBvZiBXQU4gcmVwbGljYXRpb24iLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sImRlc2NyaXB0aW9uIjoiV2FuUmVwbGljYXRpb25NYXBzU3RhdHVzIGlzIHRoZSBXQU4gUmVwbGljYXRpb24gc3RhdHVzIG9mIHRoZSBNYXBzIGdpdmVuIGluIHRoZSBzcGVjIGRpcmVjdGx5IG9yIGluZGlyZWN0bHkgYnkgSGF6ZWxjYXN0IHJlc291cmNlLiIsInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInNwZWMiXSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6bnVsbCwic3RvcmVkVmVyc2lvbnMiOm51bGx9fQ==
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEwLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJjYWNoZXMuaGF6ZWxjYXN0LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiaGF6ZWxjYXN0LmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJDYWNoZSIsImxpc3RLaW5kIjoiQ2FjaGVMaXN0IiwicGx1cmFsIjoiY2FjaGVzIiwic2hvcnROYW1lcyI6WyJjaCJdLCJzaW5ndWxhciI6ImNhY2hlIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJhZGRpdGlvbmFsUHJpbnRlckNvbHVtbnMiOlt7ImRlc2NyaXB0aW9uIjoiQ3VycmVudCBzdGF0ZSBvZiB0aGUgQ2FjaGUgQ29uZmlnIiwianNvblBhdGgiOiIuc3RhdHVzLnN0YXRlIiwibmFtZSI6IlN0YXR1cyIsInR5cGUiOiJzdHJpbmcifSx7ImRlc2NyaXB0aW9uIjoiTWVzc2FnZSBmb3IgdGhlIGN1cnJlbnQgQ2FjaGUgQ29uZmlnIiwianNvblBhdGgiOiIuc3RhdHVzLm1lc3NhZ2UiLCJuYW1lIjoiTWVzc2FnZSIsInByaW9yaXR5IjoxLCJ0eXBlIjoic3RyaW5nIn1dLCJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiQ2FjaGUgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIGNhY2hlcyBBUEkiLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuIFNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZCBtYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy4gU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uIENhbm5vdCBiZSB1cGRhdGVkLiBJbiBDYW1lbENhc2UuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IkNhY2hlU3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIENhY2hlIEl0IGNhbm5vdCBiZSB1cGRhdGVkIGFmdGVyIHRoZSBDYWNoZSBpcyBjcmVhdGVkIiwicHJvcGVydGllcyI6eyJhc3luY0JhY2t1cENvdW50Ijp7ImRlZmF1bHQiOjAsImRlc2NyaXB0aW9uIjoiTnVtYmVyIG9mIGFzeW5jaHJvbm91cyBiYWNrdXBzLiIsImZvcm1hdCI6ImludDMyIiwibWF4aW11bSI6NiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifSwiYmFja3VwQ291bnQiOnsiZGVmYXVsdCI6MSwiZGVzY3JpcHRpb24iOiJOdW1iZXIgb2Ygc3luY2hyb25vdXMgYmFja3Vwcy4iLCJmb3JtYXQiOiJpbnQzMiIsIm1heGltdW0iOjYsIm1pbmltdW0iOjAsInR5cGUiOiJpbnRlZ2VyIn0sImV2ZW50Sm91cm5hbCI6eyJkZXNjcmlwdGlvbiI6IkV2ZW50Sm91cm5hbCBzcGVjaWZpZXMgZXZlbnQgam91cm5hbCBjb25maWd1cmF0aW9uIG9mIHRoZSBDYWNoZSIsInByb3BlcnRpZXMiOnsiY2FwYWNpdHkiOnsiZGVmYXVsdCI6MTAwMDAsImRlc2NyaXB0aW9uIjoiQ2FwYWNpdHkgc2V0cyB0aGUgY2FwYWNpdHkgb2YgdGhlIHJpbmdidWZmZXIgdW5kZXJseWluZyB0aGUgZXZlbnQgam91cm5hbC4iLCJmb3JtYXQiOiJpbnQzMiIsInR5cGUiOiJpbnRlZ2VyIn0sInRpbWVUb0xpdmVTZWNvbmRzIjp7ImRlZmF1bHQiOjAsImRlc2NyaXB0aW9uIjoiVGltZVRvTGl2ZVNlY29uZHMgaW5kaWNhdGVzIGhvdyBsb25nIHRoZSBpdGVtcyByZW1haW4gaW4gdGhlIGV2ZW50IGpvdXJuYWwgYmVmb3JlIHRoZXkgYXJlIGV4cGlyZWQuIiwiZm9ybWF0IjoiaW50MzIiLCJ0eXBlIjoiaW50ZWdlciJ9fSwidHlwZSI6Im9iamVjdCJ9LCJoYXplbGNhc3RSZXNvdXJjZU5hbWUiOnsiZGVzY3JpcHRpb24iOiJIYXplbGNhc3RSZXNvdXJjZU5hbWUgZGVmaW5lcyB0aGUgbmFtZSBvZiB0aGUgSGF6ZWxjYXN0IHJlc291cmNlIHRoYXQgdGhpcyByZXNvdXJjZSBpcyBjcmVhdGVkIGZvci4iLCJtaW5MZW5ndGgiOjEsInR5cGUiOiJzdHJpbmcifSwiaW5NZW1vcnlGb3JtYXQiOnsiZGVmYXVsdCI6IkJJTkFSWSIsImRlc2NyaXB0aW9uIjoiSW5NZW1vcnlGb3JtYXQgc3BlY2lmaWVzIGluIHdoaWNoIGZvcm1hdCBkYXRhIHdpbGwgYmUgc3RvcmVkIGluIHlvdXIgY2FjaGUiLCJlbnVtIjpbIkJJTkFSWSIsIk9CSkVDVCIsIk5BVElWRSJdLCJ0eXBlIjoic3RyaW5nIn0sImtleVR5cGUiOnsiZGVzY3JpcHRpb24iOiJDbGFzcyBuYW1lIG9mIHRoZSBrZXkgdHlwZSIsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIGRhdGEgc3RydWN0dXJlIGNvbmZpZyB0byBiZSBjcmVhdGVkLiBJZiBlbXB0eSwgQ1IgbmFtZSB3aWxsIGJlIHVzZWQuIEl0IGNhbm5vdCBiZSB1cGRhdGVkIGFmdGVyIHRoZSBjb25maWcgaXMgY3JlYXRlZCBzdWNjZXNzZnVsbHkuIiwidHlwZSI6InN0cmluZyJ9LCJwZXJzaXN0ZW5jZUVuYWJsZWQiOnsiZGVmYXVsdCI6ZmFsc2UsImRlc2NyaXB0aW9uIjoiV2hlbiBlbmFibGVkLCBjYWNoZSBkYXRhIHdpbGwgYmUgcGVyc2lzdGVkLiIsInR5cGUiOiJib29sZWFuIn0sInZhbHVlVHlwZSI6eyJkZXNjcmlwdGlvbiI6IkNsYXNzIG5hbWUgb2YgdGhlIHZhbHVlIHR5cGUiLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJoYXplbGNhc3RSZXNvdXJjZU5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJDYWNoZVN0YXR1cyBkZWZpbmVzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBDYWNoZSIsInByb3BlcnRpZXMiOnsibWVtYmVyU3RhdHVzZXMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsiZW51bSI6WyJTdWNjZXNzIiwiRmFpbGVkIiwiUGVuZGluZyIsIlBlcnNpc3RpbmciLCJUZXJtaW5hdGluZyJdLCJ0eXBlIjoic3RyaW5nIn0sImRlc2NyaXB0aW9uIjoiSG9sZHMgc3RhdHVzIG9mIGRhdGEgc3RydWN0dXJlIGZvciBlYWNoIEhhemVsY2FzdCBtZW1iZXIiLCJ0eXBlIjoib2JqZWN0In0sIm1lc3NhZ2UiOnsiZGVzY3JpcHRpb24iOiJNZXNzYWdlIGV4cGxhaW5pbmcgdGhlIGN1cnJlbnQgc3RhdGUiLCJ0eXBlIjoic3RyaW5nIn0sInN0YXRlIjp7ImRlc2NyaXB0aW9uIjoiU3RhdGUgb2YgdGhlIGRhdGEgc3RydWN0dXJlIiwiZW51bSI6WyJTdWNjZXNzIiwiRmFpbGVkIiwiUGVuZGluZyIsIlBlcnNpc3RpbmciLCJUZXJtaW5hdGluZyJdLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJzcGVjIl0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOm51bGwsInN0b3JlZFZlcnNpb25zIjpudWxsfX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEwLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJjcm9uaG90YmFja3Vwcy5oYXplbGNhc3QuY29tIn0sInNwZWMiOnsiZ3JvdXAiOiJoYXplbGNhc3QuY29tIiwibmFtZXMiOnsia2luZCI6IkNyb25Ib3RCYWNrdXAiLCJsaXN0S2luZCI6IkNyb25Ib3RCYWNrdXBMaXN0IiwicGx1cmFsIjoiY3JvbmhvdGJhY2t1cHMiLCJzaG9ydE5hbWVzIjpbImNoYiJdLCJzaW5ndWxhciI6ImNyb25ob3RiYWNrdXAifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3siZGVzY3JpcHRpb24iOiJTdXNwZW50aW9uIHN0YXR1cyBvZiB0aGUgQ3JvbkhvdEJhY2t1cCIsImpzb25QYXRoIjoiLnNwZWMuc3VzcGVuZCIsIm5hbWUiOiJTVVNQRU5ERUQiLCJ0eXBlIjoiYm9vbGVhbiJ9XSwibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkNyb25Ib3RCYWNrdXAgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIGNyb25ob3RiYWNrdXBzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiQ3JvbkhvdEJhY2t1cFNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBDcm9uSG90QmFja3VwIiwicHJvcGVydGllcyI6eyJmYWlsZWRIb3RCYWNrdXBzSGlzdG9yeUxpbWl0Ijp7ImRlZmF1bHQiOjMsImRlc2NyaXB0aW9uIjoiVGhlIG51bWJlciBvZiBmYWlsZWQgZmluaXNoZWQgaG90IGJhY2t1cHMgdG8gcmV0YWluLiIsImZvcm1hdCI6ImludDMyIiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifSwiaG90QmFja3VwVGVtcGxhdGUiOnsiZGVzY3JpcHRpb24iOiJTcGVjaWZpZXMgdGhlIGhvdCBiYWNrdXAgdGhhdCB3aWxsIGJlIGNyZWF0ZWQgd2hlbiBleGVjdXRpbmcgYSBDcm9uSG90QmFja3VwLiIsInByb3BlcnRpZXMiOnsibWV0YWRhdGEiOnsiZGVzY3JpcHRpb24iOiJTdGFuZGFyZCBvYmplY3QncyBtZXRhZGF0YSBvZiB0aGUgaG90IGJhY2t1cHMgY3JlYXRlZCBmcm9tIHRoaXMgdGVtcGxhdGUuIiwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJTcGVjaWZpY2F0aW9uIG9mIHRoZSBkZXNpcmVkIGJlaGF2aW9yIG9mIHRoZSBob3QgYmFja3VwLiIsInByb3BlcnRpZXMiOnsiYnVja2V0VVJJIjp7ImRlc2NyaXB0aW9uIjoiVVJMIG9mIHRoZSBidWNrZXQgdG8gZG93bmxvYWQgSG90QmFja3VwIGZvbGRlcnMuIEFXUyBTMywgR0NQIEJ1Y2tldCBhbmQgQXp1cmUgQmxvYiBzdG9yYWdlIGJ1Y2tldHMgYXJlIHN1cHBvcnRlZC4gRXhhbXBsZSBidWNrZXQgVVJJczogLSBBV1MgUzMgICAgIC1cdTAwM2UgczM6Ly9idWNrZXQtbmFtZS9wYXRoL3RvL2ZvbGRlciAtIEdDUCBCdWNrZXQgLVx1MDAzZSBnczovL2J1Y2tldC1uYW1lL3BhdGgvdG8vZm9sZGVyIC0gQXp1cmUgQmxvYiAtXHUwMDNlIGF6YmxvYjovL2J1Y2tldC1uYW1lL3BhdGgvdG8vZm9sZGVyIiwidHlwZSI6InN0cmluZyJ9LCJoYXplbGNhc3RSZXNvdXJjZU5hbWUiOnsiZGVzY3JpcHRpb24iOiJIYXplbGNhc3RSZXNvdXJjZU5hbWUgZGVmaW5lcyB0aGUgbmFtZSBvZiB0aGUgSGF6ZWxjYXN0IHJlc291cmNlIiwidHlwZSI6InN0cmluZyJ9LCJzZWNyZXQiOnsiZGVzY3JpcHRpb24iOiJzZWNyZXQgaXMgYSBkZXByZWNhdGVkIGFsaWFzIGZvciBzZWNyZXROYW1lLiIsInR5cGUiOiJzdHJpbmcifSwic2VjcmV0TmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIHNlY3JldCB3aXRoIGNyZWRlbnRpYWxzIGZvciBjbG91ZCBwcm92aWRlcnMuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIl0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInNwZWMiXSwidHlwZSI6Im9iamVjdCJ9LCJzY2hlZHVsZSI6eyJkZXNjcmlwdGlvbiI6IlNjaGVkdWxlIGNvbnRhaW5zIGEgY3JvbnRhYi1saWtlIGV4cHJlc3Npb24gdGhhdCBkZWZpbmVzIHRoZSBzY2hlZHVsZSBpbiB3aGljaCBIb3RCYWNrdXAgd2lsbCBiZSBzdGFydGVkLiBJZiB0aGUgU2NoZWR1bGUgaXMgZW1wdHkgdGhlIEhvdEJhY2t1cCB3aWxsIHN0YXJ0IG9ubHkgb25jZSB3aGVuIGFwcGxpZWQuIC0tLSBTZXZlcmFsIHByZS1kZWZpbmVkIHNjaGVkdWxlcyBpbiBwbGFjZSBvZiBhIGNyb24gZXhwcmVzc2lvbiBjYW4gYmUgdXNlZC4gRW50cnkgICAgICAgICAgICAgICAgICB8IERlc2NyaXB0aW9uICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IEVxdWl2YWxlbnQgVG8gLS0tLS0gICAgICAgICAgICAgICAgICB8IC0tLS0tLS0tLS0tICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IC0tLS0tLS0tLS0tLS0gQHllYXJseSAob3IgQGFubnVhbGx5KSB8IFJ1biBvbmNlIGEgeWVhciwgbWlkbmlnaHQsIEphbi4gMXN0ICAgICAgICB8IDAgMCAxIDEgKiBAbW9udGhseSAgICAgICAgICAgICAgIHwgUnVuIG9uY2UgYSBtb250aCwgbWlkbmlnaHQsIGZpcnN0IG9mIG1vbnRoIHwgMCAwIDEgKiAqIEB3ZWVrbHkgICAgICAgICAgICAgICAgfCBSdW4gb25jZSBhIHdlZWssIG1pZG5pZ2h0IGJldHdlZW4gU2F0L1N1biAgfCAwIDAgKiAqIDAgQGRhaWx5IChvciBAbWlkbmlnaHQpICB8IFJ1biBvbmNlIGEgZGF5LCBtaWRuaWdodCAgICAgICAgICAgICAgICAgICB8IDAgMCAqICogKiBAaG91cmx5ICAgICAgICAgICAgICAgIHwgUnVuIG9uY2UgYW4gaG91ciwgYmVnaW5uaW5nIG9mIGhvdXIgICAgICAgIHwgMCAqICogKiAqIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn0sInN1Y2Nlc3NmdWxIb3RCYWNrdXBzSGlzdG9yeUxpbWl0Ijp7ImRlZmF1bHQiOjUsImRlc2NyaXB0aW9uIjoiVGhlIG51bWJlciBvZiBzdWNjZXNzZnVsIGZpbmlzaGVkIGhvdCBiYWNrdXBzIHRvIHJldGFpbi4iLCJmb3JtYXQiOiJpbnQzMiIsIm1pbmltdW0iOjAsInR5cGUiOiJpbnRlZ2VyIn0sInN1c3BlbmQiOnsiZGVmYXVsdCI6ZmFsc2UsImRlc2NyaXB0aW9uIjoiV2hlbiB0cnVlLCBDcm9uSG90QmFja3VwIHdpbGwgc3RvcCBjcmVhdGluZyBIb3RCYWNrdXAgQ1JzIHVudGlsIGl0IGlzIGRpc2FibGVkIiwidHlwZSI6ImJvb2xlYW4ifX0sInJlcXVpcmVkIjpbImhvdEJhY2t1cFRlbXBsYXRlIiwic2NoZWR1bGUiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJDcm9uSG90QmFja3VwU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIENyb25Ib3RCYWNrdXAiLCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJzcGVjIl0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOm51bGwsInN0b3JlZFZlcnNpb25zIjpudWxsfX0=
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEwLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJob3RiYWNrdXBzLmhhemVsY2FzdC5jb20ifSwic3BlYyI6eyJncm91cCI6ImhhemVsY2FzdC5jb20iLCJuYW1lcyI6eyJraW5kIjoiSG90QmFja3VwIiwibGlzdEtpbmQiOiJIb3RCYWNrdXBMaXN0IiwicGx1cmFsIjoiaG90YmFja3VwcyIsInNob3J0TmFtZXMiOlsiaGIiXSwic2luZ3VsYXIiOiJob3RiYWNrdXAifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3siZGVzY3JpcHRpb24iOiJDdXJyZW50IHN0YXRlIG9mIHRoZSBIb3RCYWNrdXAgcHJvY2VzcyIsImpzb25QYXRoIjoiLnN0YXR1cy5zdGF0ZSIsIm5hbWUiOiJTdGF0dXMiLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6Ik1lc3NhZ2UgZm9yIHRoZSBjdXJyZW50IEhvdEJhY2t1cCBDb25maWciLCJqc29uUGF0aCI6Ii5zdGF0dXMubWVzc2FnZSIsIm5hbWUiOiJNZXNzYWdlIiwicHJpb3JpdHkiOjEsInR5cGUiOiJzdHJpbmcifV0sIm5hbWUiOiJ2MWFscGhhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJIb3RCYWNrdXAgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIGhvdCBiYWNrdXAgQVBJIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJIb3RCYWNrdXBTcGVjIGRlZmluZXMgdGhlIFNwZWMgb2YgSG90QmFja3VwIiwicHJvcGVydGllcyI6eyJidWNrZXRVUkkiOnsiZGVzY3JpcHRpb24iOiJVUkwgb2YgdGhlIGJ1Y2tldCB0byBkb3dubG9hZCBIb3RCYWNrdXAgZm9sZGVycy4gQVdTIFMzLCBHQ1AgQnVja2V0IGFuZCBBenVyZSBCbG9iIHN0b3JhZ2UgYnVja2V0cyBhcmUgc3VwcG9ydGVkLiBFeGFtcGxlIGJ1Y2tldCBVUklzOiAtIEFXUyBTMyAgICAgLVx1MDAzZSBzMzovL2J1Y2tldC1uYW1lL3BhdGgvdG8vZm9sZGVyIC0gR0NQIEJ1Y2tldCAtXHUwMDNlIGdzOi8vYnVja2V0LW5hbWUvcGF0aC90by9mb2xkZXIgLSBBenVyZSBCbG9iIC1cdTAwM2UgYXpibG9iOi8vYnVja2V0LW5hbWUvcGF0aC90by9mb2xkZXIiLCJ0eXBlIjoic3RyaW5nIn0sImhhemVsY2FzdFJlc291cmNlTmFtZSI6eyJkZXNjcmlwdGlvbiI6IkhhemVsY2FzdFJlc291cmNlTmFtZSBkZWZpbmVzIHRoZSBuYW1lIG9mIHRoZSBIYXplbGNhc3QgcmVzb3VyY2UiLCJ0eXBlIjoic3RyaW5nIn0sInNlY3JldCI6eyJkZXNjcmlwdGlvbiI6InNlY3JldCBpcyBhIGRlcHJlY2F0ZWQgYWxpYXMgZm9yIHNlY3JldE5hbWUuIiwidHlwZSI6InN0cmluZyJ9LCJzZWNyZXROYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgc2VjcmV0IHdpdGggY3JlZGVudGlhbHMgZm9yIGNsb3VkIHByb3ZpZGVycy4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJoYXplbGNhc3RSZXNvdXJjZU5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJIb3RCYWNrdXBTdGF0dXMgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgSG90QmFja3VwIiwicHJvcGVydGllcyI6eyJiYWNrdXBVVUlEcyI6eyJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJtZXNzYWdlIjp7InR5cGUiOiJzdHJpbmcifSwic3RhdGUiOnsiZW51bSI6WyJVbmtub3duIiwiUGVuZGluZyIsIk5vdFN0YXJ0ZWQiLCJJblByb2dyZXNzIiwiRmFpbHVyZSIsIlN1Y2Nlc3MiXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsic3BlYyJdLCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfSwic3RhdHVzIjp7ImFjY2VwdGVkTmFtZXMiOnsia2luZCI6IiIsInBsdXJhbCI6IiJ9LCJjb25kaXRpb25zIjpudWxsLCJzdG9yZWRWZXJzaW9ucyI6bnVsbH19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEwLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJqZXRqb2JzLmhhemVsY2FzdC5jb20ifSwic3BlYyI6eyJncm91cCI6ImhhemVsY2FzdC5jb20iLCJuYW1lcyI6eyJraW5kIjoiSmV0Sm9iIiwibGlzdEtpbmQiOiJKZXRKb2JMaXN0IiwicGx1cmFsIjoiamV0am9icyIsInNob3J0TmFtZXMiOlsiamoiXSwic2luZ3VsYXIiOiJqZXRqb2IifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3siZGVzY3JpcHRpb24iOiJDdXJyZW50IHN0YXRlIG9mIHRoZSBKZXRKb2IiLCJqc29uUGF0aCI6Ii5zdGF0dXMucGhhc2UiLCJuYW1lIjoiU3RhdHVzIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJJRCBvZiB0aGUgSmV0Sm9iIiwianNvblBhdGgiOiIuc3RhdHVzLmlkIiwibmFtZSI6IklkIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJUaW1lIHdoZW4gdGhlIEpldEpvYiB3YXMgc3VibWl0dGVkIiwianNvblBhdGgiOiIuc3RhdHVzLnN1Ym1pc3Npb25UaW1lIiwibmFtZSI6IlN1Ym1pc3Npb25UaW1lIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJUaW1lIHdoZW4gdGhlIEpldEpvYiB3YXMgY29tcGxldGVkIiwianNvblBhdGgiOiIuc3RhdHVzLmNvbXBsZXRpb25UaW1lIiwibmFtZSI6IkNvbXBsZXRpb25UaW1lIiwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkpldEpvYiBpcyB0aGUgU2NoZW1hIGZvciB0aGUgamV0am9icyBBUEkiLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuIFNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZCBtYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy4gU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uIENhbm5vdCBiZSB1cGRhdGVkLiBJbiBDYW1lbENhc2UuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IkpldEpvYlNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBKZXRKb2IiLCJwcm9wZXJ0aWVzIjp7ImJ1Y2tldENvbmZpZyI6eyJkZXNjcmlwdGlvbiI6IkJ1Y2tldCBjb25maWcgZnJvbSB3aGVyZSB0aGUgSkFSIGZpbGVzIHdpbGwgYmUgZG93bmxvYWRlZC4iLCJwcm9wZXJ0aWVzIjp7ImJ1Y2tldFVSSSI6eyJkZXNjcmlwdGlvbiI6IlVSTCBvZiB0aGUgYnVja2V0IHRvIGRvd25sb2FkIEhvdEJhY2t1cCBmb2xkZXJzLiBBV1MgUzMsIEdDUCBCdWNrZXQgYW5kIEF6dXJlIEJsb2Igc3RvcmFnZSBidWNrZXRzIGFyZSBzdXBwb3J0ZWQuIEV4YW1wbGUgYnVja2V0IFVSSXM6IC0gQVdTIFMzICAgICAtXHUwMDNlIHMzOi8vYnVja2V0LW5hbWUvcGF0aC90by9mb2xkZXIgLSBHQ1AgQnVja2V0IC1cdTAwM2UgZ3M6Ly9idWNrZXQtbmFtZS9wYXRoL3RvL2ZvbGRlciAtIEF6dXJlIEJsb2IgLVx1MDAzZSBhemJsb2I6Ly9idWNrZXQtbmFtZS9wYXRoL3RvL2ZvbGRlciIsIm1pbkxlbmd0aCI6NiwidHlwZSI6InN0cmluZyJ9LCJzZWNyZXQiOnsiZGVzY3JpcHRpb24iOiJzZWNyZXQgaXMgYSBkZXByZWNhdGVkIGFsaWFzIGZvciBzZWNyZXROYW1lLiIsInR5cGUiOiJzdHJpbmcifSwic2VjcmV0TmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIHNlY3JldCB3aXRoIGNyZWRlbnRpYWxzIGZvciBjbG91ZCBwcm92aWRlcnMuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiYnVja2V0VVJJIl0sInR5cGUiOiJvYmplY3QifSwiaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIjp7ImRlc2NyaXB0aW9uIjoiSGF6ZWxjYXN0UmVzb3VyY2VOYW1lIGRlZmluZXMgdGhlIG5hbWUgb2YgdGhlIEhhemVsY2FzdCByZXNvdXJjZSB0aGF0IHRoaXMgcmVzb3VyY2UgaXMgY3JlYXRlZCBmb3IuIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn0sImluaXRpYWxTbmFwc2hvdFJlc291cmNlTmFtZSI6eyJkZXNjcmlwdGlvbiI6IkluaXRpYWxTbmFwc2hvdFJlc291cmNlTmFtZSBzcGVjaWZ5IHRoZSBuYW1lIG9mIHRoZSBKZXRKb2JTbmFwc2hvdCBvYmplY3QgZnJvbSB3aGljaCB0aGUgSmV0Sm9iIGlzIGluaXRpYWxpemVkLiIsInR5cGUiOiJzdHJpbmcifSwiamFyTmFtZSI6eyJkZXNjcmlwdGlvbiI6Ikphck5hbWUgc3BlY2lmeSB0aGUgbmFtZSBvZiB0aGUgSmFyIHRvIHJ1biB0aGF0IGlzIHByZXNlbnQgb24gdGhlIG1lbWJlci4iLCJtaW5MZW5ndGgiOjEsInR5cGUiOiJzdHJpbmcifSwibWFpbkNsYXNzIjp7ImRlc2NyaXB0aW9uIjoiTWFpbkNsYXNzIGlzIHRoZSBuYW1lIG9mIHRoZSBtYWluIGNsYXNzIHRoYXQgd2lsbCBiZSBydW4gb24gdGhlIHN1Ym1pdHRlZCBqb2IuIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgSmV0Sm9iIHRvIGJlIGNyZWF0ZWQuIElmIGVtcHR5LCBDUiBuYW1lIHdpbGwgYmUgdXNlZC4gSXQgY2Fubm90IGJlIHVwZGF0ZWQgYWZ0ZXIgdGhlIGNvbmZpZyBpcyBjcmVhdGVkIHN1Y2Nlc3NmdWxseS4iLCJ0eXBlIjoic3RyaW5nIn0sInJlbW90ZVVSTCI6eyJkZXNjcmlwdGlvbiI6IlVSTCBmcm9tIHdoZXJlIHRoZSBmaWxlIHdpbGwgYmUgZG93bmxvYWRlZC4iLCJ0eXBlIjoic3RyaW5nIn0sInN0YXRlIjp7ImRlZmF1bHQiOiJSdW5uaW5nIiwiZGVzY3JpcHRpb24iOiJTdGF0ZSBpcyB1c2VkIHRvIG1hbmFnZSB0aGUgam9iIHN0YXRlLiIsImVudW0iOlsiUnVubmluZyIsIlN1c3BlbmRlZCIsIkNhbmNlbGVkIiwiUmVzdGFydGVkIl0sInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImhhemVsY2FzdFJlc291cmNlTmFtZSIsImphck5hbWUiLCJzdGF0ZSJdLCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IkpldEpvYlN0YXR1cyBkZWZpbmVzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBKZXRKb2IiLCJwcm9wZXJ0aWVzIjp7ImNvbXBsZXRpb25UaW1lIjp7ImZvcm1hdCI6ImRhdGUtdGltZSIsInR5cGUiOiJzdHJpbmcifSwiZmFpbHVyZVRleHQiOnsidHlwZSI6InN0cmluZyJ9LCJpZCI6eyJmb3JtYXQiOiJpbnQ2NCIsInR5cGUiOiJpbnRlZ2VyIn0sInBoYXNlIjp7ImVudW0iOlsiRmFpbGVkIiwiTm90UnVubmluZyIsIlN0YXJ0aW5nIiwiUnVubmluZyIsIlN1c3BlbmRlZCIsIlN1c3BlbmRlZEV4cG9ydGluZ1NuYXBzaG90IiwiQ29tcGxldGluZyIsIkV4ZWN1dGlvbkZhaWxlZCIsIkNvbXBsZXRlZCJdLCJ0eXBlIjoic3RyaW5nIn0sInN1Ym1pc3Npb25UaW1lIjp7ImZvcm1hdCI6ImRhdGUtdGltZSIsInR5cGUiOiJzdHJpbmcifSwic3VzcGVuc2lvbkNhdXNlIjp7InR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImlkIiwicGhhc2UiXSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6bnVsbCwic3RvcmVkVmVyc2lvbnMiOm51bGx9fQ==
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEwLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJqZXRqb2JzbmFwc2hvdHMuaGF6ZWxjYXN0LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiaGF6ZWxjYXN0LmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJKZXRKb2JTbmFwc2hvdCIsImxpc3RLaW5kIjoiSmV0Sm9iU25hcHNob3RMaXN0IiwicGx1cmFsIjoiamV0am9ic25hcHNob3RzIiwic2hvcnROYW1lcyI6WyJqanMiXSwic2luZ3VsYXIiOiJqZXRqb2JzbmFwc2hvdCJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJkZXNjcmlwdGlvbiI6IkN1cnJlbnQgc3RhdGUgb2YgdGhlIEpldEpvYlNuYXBzaG90IiwianNvblBhdGgiOiIuc3RhdHVzLnN0YXRlIiwibmFtZSI6IlN0YXRlIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJUaW1lIHdoZW4gdGhlIEpldEpvYlNuYXBzaG90IHdhcyBjcmVhdGVkLCBpZiBjcmVhdGVkIiwianNvblBhdGgiOiIuc3RhdHVzLmNyZWF0aW9uVGltZSIsIm5hbWUiOiJDcmVhdGlvblRpbWUiLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6Ik1lc3NhZ2UgZm9yIHRoZSBKZXRKb2JTbmFwc2hvdCIsImpzb25QYXRoIjoiLnN0YXR1cy5tZXNzYWdlIiwibmFtZSI6Ik1lc3NhZ2UiLCJwcmlvcml0eSI6MSwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkpldEpvYlNuYXBzaG90IGlzIHRoZSBTY2hlbWEgZm9yIHRoZSBqZXRqb2JzbmFwc2hvdHMgQVBJIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJKZXRKb2JTbmFwc2hvdFNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBKZXRKb2JTbmFwc2hvdCIsInByb3BlcnRpZXMiOnsiY2FuY2VsSm9iIjp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6IkNhbmNlbEpvYiBkZXRlcm1pbmVzIHdoZXRoZXIgdGhlIGpvYiBpcyBjYW5jZWxlZCBhZnRlciBleHBvcnRpbmcgc25hcHNob3QiLCJ0eXBlIjoiYm9vbGVhbiJ9LCJqZXRKb2JSZXNvdXJjZU5hbWUiOnsiZGVzY3JpcHRpb24iOiJKZXRKb2JSZXNvdXJjZU5hbWUgaXMgdGhlIG5hbWUgb2YgdGhlIEpldEpvYiBDUiB3aGVyZSB0aGUgU25hcHNob3QgaXMgZXhwb3J0ZWQgZnJvbSIsIm1pbkxlbmd0aCI6MSwidHlwZSI6InN0cmluZyJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgZXhwb3J0ZWQgc25hcHNob3QiLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJqZXRKb2JSZXNvdXJjZU5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVmYXVsdCI6eyJzdGF0ZSI6IldhaXRpbmcifSwiZGVzY3JpcHRpb24iOiJKZXRKb2JTbmFwc2hvdFN0YXR1cyBkZWZpbmVzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBKZXRKb2JTbmFwc2hvdCIsInByb3BlcnRpZXMiOnsiY3JlYXRpb25UaW1lIjp7ImZvcm1hdCI6ImRhdGUtdGltZSIsInR5cGUiOiJzdHJpbmcifSwibWVzc2FnZSI6eyJ0eXBlIjoic3RyaW5nIn0sInN0YXRlIjp7ImVudW0iOlsiV2FpdGluZyIsIkV4cG9ydGluZyIsIkV4cG9ydGVkIiwiRmFpbGVkIl0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInNwZWMiXSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6bnVsbCwic3RvcmVkVmVyc2lvbnMiOm51bGx9fQ==
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEwLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJtdWx0aW1hcHMuaGF6ZWxjYXN0LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiaGF6ZWxjYXN0LmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJNdWx0aU1hcCIsImxpc3RLaW5kIjoiTXVsdGlNYXBMaXN0IiwicGx1cmFsIjoibXVsdGltYXBzIiwic2hvcnROYW1lcyI6WyJtbWFwIl0sInNpbmd1bGFyIjoibXVsdGltYXAifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3siZGVzY3JpcHRpb24iOiJDdXJyZW50IHN0YXRlIG9mIHRoZSBNdWx0aU1hcCBDb25maWciLCJqc29uUGF0aCI6Ii5zdGF0dXMuc3RhdGUiLCJuYW1lIjoiU3RhdHVzIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJNZXNzYWdlIGZvciB0aGUgY3VycmVudCBNdWx0aU1hcCBDb25maWciLCJqc29uUGF0aCI6Ii5zdGF0dXMubWVzc2FnZSIsIm5hbWUiOiJNZXNzYWdlIiwicHJpb3JpdHkiOjEsInR5cGUiOiJzdHJpbmcifV0sIm5hbWUiOiJ2MWFscGhhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJNdWx0aU1hcCBpcyB0aGUgU2NoZW1hIGZvciB0aGUgbXVsdGltYXBzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiTXVsdGlNYXBTcGVjIGRlZmluZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgTXVsdGlNYXAiLCJwcm9wZXJ0aWVzIjp7ImFzeW5jQmFja3VwQ291bnQiOnsiZGVmYXVsdCI6MCwiZGVzY3JpcHRpb24iOiJOdW1iZXIgb2YgYXN5bmNocm9ub3VzIGJhY2t1cHMuIiwiZm9ybWF0IjoiaW50MzIiLCJtYXhpbXVtIjo2LCJtaW5pbXVtIjowLCJ0eXBlIjoiaW50ZWdlciJ9LCJiYWNrdXBDb3VudCI6eyJkZWZhdWx0IjoxLCJkZXNjcmlwdGlvbiI6Ik51bWJlciBvZiBzeW5jaHJvbm91cyBiYWNrdXBzLiIsImZvcm1hdCI6ImludDMyIiwibWF4aW11bSI6NiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifSwiYmluYXJ5Ijp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6IlNwZWNpZmllcyBpbiB3aGljaCBmb3JtYXQgZGF0YSB3aWxsIGJlIHN0b3JlZCBpbiB5b3VyIE11bHRpTWFwLiBmYWxzZTogT0JKRUNUIHRydWU6IEJJTkFSWSIsInR5cGUiOiJib29sZWFuIn0sImNvbGxlY3Rpb25UeXBlIjp7ImRlZmF1bHQiOiJTRVQiLCJkZXNjcmlwdGlvbiI6IlR5cGUgb2YgdGhlIHZhbHVlIGNvbGxlY3Rpb24iLCJlbnVtIjpbIlNFVCIsIkxJU1QiXSwidHlwZSI6InN0cmluZyJ9LCJoYXplbGNhc3RSZXNvdXJjZU5hbWUiOnsiZGVzY3JpcHRpb24iOiJIYXplbGNhc3RSZXNvdXJjZU5hbWUgZGVmaW5lcyB0aGUgbmFtZSBvZiB0aGUgSGF6ZWxjYXN0IHJlc291cmNlIHRoYXQgdGhpcyByZXNvdXJjZSBpcyBjcmVhdGVkIGZvci4iLCJtaW5MZW5ndGgiOjEsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIGRhdGEgc3RydWN0dXJlIGNvbmZpZyB0byBiZSBjcmVhdGVkLiBJZiBlbXB0eSwgQ1IgbmFtZSB3aWxsIGJlIHVzZWQuIEl0IGNhbm5vdCBiZSB1cGRhdGVkIGFmdGVyIHRoZSBjb25maWcgaXMgY3JlYXRlZCBzdWNjZXNzZnVsbHkuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIl0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiTXVsdGlNYXBTdGF0dXMgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgTXVsdGlNYXAiLCJwcm9wZXJ0aWVzIjp7Im1lbWJlclN0YXR1c2VzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7ImVudW0iOlsiU3VjY2VzcyIsIkZhaWxlZCIsIlBlbmRpbmciLCJQZXJzaXN0aW5nIiwiVGVybWluYXRpbmciXSwidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6IkhvbGRzIHN0YXR1cyBvZiBkYXRhIHN0cnVjdHVyZSBmb3IgZWFjaCBIYXplbGNhc3QgbWVtYmVyIiwidHlwZSI6Im9iamVjdCJ9LCJtZXNzYWdlIjp7ImRlc2NyaXB0aW9uIjoiTWVzc2FnZSBleHBsYWluaW5nIHRoZSBjdXJyZW50IHN0YXRlIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0ZSI6eyJkZXNjcmlwdGlvbiI6IlN0YXRlIG9mIHRoZSBkYXRhIHN0cnVjdHVyZSIsImVudW0iOlsiU3VjY2VzcyIsIkZhaWxlZCIsIlBlbmRpbmciLCJQZXJzaXN0aW5nIiwiVGVybWluYXRpbmciXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsic3BlYyJdLCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfSwic3RhdHVzIjp7ImFjY2VwdGVkTmFtZXMiOnsia2luZCI6IiIsInBsdXJhbCI6IiJ9LCJjb25kaXRpb25zIjpudWxsLCJzdG9yZWRWZXJzaW9ucyI6bnVsbH19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEwLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJxdWV1ZXMuaGF6ZWxjYXN0LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiaGF6ZWxjYXN0LmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJRdWV1ZSIsImxpc3RLaW5kIjoiUXVldWVMaXN0IiwicGx1cmFsIjoicXVldWVzIiwic2hvcnROYW1lcyI6WyJxIl0sInNpbmd1bGFyIjoicXVldWUifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3siZGVzY3JpcHRpb24iOiJDdXJyZW50IHN0YXRlIG9mIHRoZSBRdWV1ZSBDb25maWciLCJqc29uUGF0aCI6Ii5zdGF0dXMuc3RhdGUiLCJuYW1lIjoiU3RhdHVzIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJNZXNzYWdlIGZvciB0aGUgY3VycmVudCBRdWV1ZSBDb25maWciLCJqc29uUGF0aCI6Ii5zdGF0dXMubWVzc2FnZSIsIm5hbWUiOiJNZXNzYWdlIiwicHJpb3JpdHkiOjEsInR5cGUiOiJzdHJpbmcifV0sIm5hbWUiOiJ2MWFscGhhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJRdWV1ZSBpcyB0aGUgU2NoZW1hIGZvciB0aGUgcXVldWVzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiUXVldWVTcGVjIGRlZmluZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgUXVldWUgSXQgY2Fubm90IGJlIHVwZGF0ZWQgYWZ0ZXIgdGhlIFF1ZXVlIGlzIGNyZWF0ZWQiLCJwcm9wZXJ0aWVzIjp7ImFzeW5jQmFja3VwQ291bnQiOnsiZGVmYXVsdCI6MCwiZGVzY3JpcHRpb24iOiJOdW1iZXIgb2YgYXN5bmNocm9ub3VzIGJhY2t1cHMuIiwiZm9ybWF0IjoiaW50MzIiLCJtYXhpbXVtIjo2LCJtaW5pbXVtIjowLCJ0eXBlIjoiaW50ZWdlciJ9LCJiYWNrdXBDb3VudCI6eyJkZWZhdWx0IjoxLCJkZXNjcmlwdGlvbiI6Ik51bWJlciBvZiBzeW5jaHJvbm91cyBiYWNrdXBzLiIsImZvcm1hdCI6ImludDMyIiwibWF4aW11bSI6NiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifSwiZW1wdHlRdWV1ZVRUTFNlY29uZHMiOnsiZGVmYXVsdCI6LTEsImRlc2NyaXB0aW9uIjoiVGltZSBpbiBzZWNvbmRzIGFmdGVyIHdoaWNoIHRoZSBRdWV1ZSB3aWxsIGJlIGRlc3Ryb3llZCBpZiBpdCBzdGF5cyBlbXB0eSBvciB1bnVzZWQuIElmIHRoZSB2YWx1ZXMgaXMgbm90IHByb3ZpZGVkIHRoZSBRdWV1ZSB3aWxsIG5ldmVyIGJlIGRlc3Ryb3llZC4iLCJmb3JtYXQiOiJpbnQzMiIsInR5cGUiOiJpbnRlZ2VyIn0sImhhemVsY2FzdFJlc291cmNlTmFtZSI6eyJkZXNjcmlwdGlvbiI6IkhhemVsY2FzdFJlc291cmNlTmFtZSBkZWZpbmVzIHRoZSBuYW1lIG9mIHRoZSBIYXplbGNhc3QgcmVzb3VyY2UgdGhhdCB0aGlzIHJlc291cmNlIGlzIGNyZWF0ZWQgZm9yLiIsIm1pbkxlbmd0aCI6MSwidHlwZSI6InN0cmluZyJ9LCJtYXhTaXplIjp7ImRlZmF1bHQiOjAsImRlc2NyaXB0aW9uIjoiTWF4IHNpemUgb2YgdGhlIHF1ZXVlLiIsImZvcm1hdCI6ImludDMyIiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIGRhdGEgc3RydWN0dXJlIGNvbmZpZyB0byBiZSBjcmVhdGVkLiBJZiBlbXB0eSwgQ1IgbmFtZSB3aWxsIGJlIHVzZWQuIEl0IGNhbm5vdCBiZSB1cGRhdGVkIGFmdGVyIHRoZSBjb25maWcgaXMgY3JlYXRlZCBzdWNjZXNzZnVsbHkuIiwidHlwZSI6InN0cmluZyJ9LCJwcmlvcml0eUNvbXBhcmF0b3JDbGFzc05hbWUiOnsiZGVzY3JpcHRpb24iOiJUaGUgbmFtZSBvZiB0aGUgY29tcGFyYXRvciBjbGFzcy4gSWYgdGhlIGNsYXNzIG5hbWUgaXMgcHJvdmlkZWQsIHRoZSBRdWV1ZSBiZWNvbWVzIFByaW9yaXR5IFF1ZXVlLiBZb3UgY2FuIGxlYXJuIG1vcmUgYXQgaHR0cHM6Ly9kb2NzLmhhemVsY2FzdC5jb20vaGF6ZWxjYXN0L2xhdGVzdC9kYXRhLXN0cnVjdHVyZXMvcHJpb3JpdHktcXVldWUuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiaGF6ZWxjYXN0UmVzb3VyY2VOYW1lIl0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiUXVldWVTdGF0dXMgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgUXVldWUiLCJwcm9wZXJ0aWVzIjp7Im1lbWJlclN0YXR1c2VzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7ImVudW0iOlsiU3VjY2VzcyIsIkZhaWxlZCIsIlBlbmRpbmciLCJQZXJzaXN0aW5nIiwiVGVybWluYXRpbmciXSwidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6IkhvbGRzIHN0YXR1cyBvZiBkYXRhIHN0cnVjdHVyZSBmb3IgZWFjaCBIYXplbGNhc3QgbWVtYmVyIiwidHlwZSI6Im9iamVjdCJ9LCJtZXNzYWdlIjp7ImRlc2NyaXB0aW9uIjoiTWVzc2FnZSBleHBsYWluaW5nIHRoZSBjdXJyZW50IHN0YXRlIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0ZSI6eyJkZXNjcmlwdGlvbiI6IlN0YXRlIG9mIHRoZSBkYXRhIHN0cnVjdHVyZSIsImVudW0iOlsiU3VjY2VzcyIsIkZhaWxlZCIsIlBlbmRpbmciLCJQZXJzaXN0aW5nIiwiVGVybWluYXRpbmciXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsic3BlYyJdLCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfSwic3RhdHVzIjp7ImFjY2VwdGVkTmFtZXMiOnsia2luZCI6IiIsInBsdXJhbCI6IiJ9LCJjb25kaXRpb25zIjpudWxsLCJzdG9yZWRWZXJzaW9ucyI6bnVsbH19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjEwLjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJyZXBsaWNhdGVkbWFwcy5oYXplbGNhc3QuY29tIn0sInNwZWMiOnsiZ3JvdXAiOiJoYXplbGNhc3QuY29tIiwibmFtZXMiOnsia2luZCI6IlJlcGxpY2F0ZWRNYXAiLCJsaXN0S2luZCI6IlJlcGxpY2F0ZWRNYXBMaXN0IiwicGx1cmFsIjoicmVwbGljYXRlZG1hcHMiLCJzaG9ydE5hbWVzIjpbInJtYXAiXSwic2luZ3VsYXIiOiJyZXBsaWNhdGVkbWFwIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJhZGRpdGlvbmFsUHJpbnRlckNvbHVtbnMiOlt7ImRlc2NyaXB0aW9uIjoiQ3VycmVudCBzdGF0ZSBvZiB0aGUgUmVwbGljYXRlZE1hcCBDb25maWciLCJqc29uUGF0aCI6Ii5zdGF0dXMuc3RhdGUiLCJuYW1lIjoiU3RhdHVzIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJNZXNzYWdlIGZvciB0aGUgY3VycmVudCBSZXBsaWNhdGVkTWFwIENvbmZpZyIsImpzb25QYXRoIjoiLnN0YXR1cy5tZXNzYWdlIiwibmFtZSI6Ik1lc3NhZ2UiLCJwcmlvcml0eSI6MSwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IlJlcGxpY2F0ZWRNYXAgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIHJlcGxpY2F0ZWRtYXBzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiUmVwbGljYXRlZE1hcFNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBSZXBsaWNhdGVkTWFwIiwicHJvcGVydGllcyI6eyJhc3luY0ZpbGx1cCI6eyJkZWZhdWx0Ijp0cnVlLCJkZXNjcmlwdGlvbiI6IkFzeW5jRmlsbHVwIHNwZWNpZmllcyB3aGV0aGVyIHRoZSBSZXBsaWNhdGVkTWFwIGlzIGF2YWlsYWJsZSBmb3IgcmVhZHMgYmVmb3JlIHRoZSBpbml0aWFsIHJlcGxpY2F0aW9uIGlzIGNvbXBsZXRlZCIsInR5cGUiOiJib29sZWFuIn0sImhhemVsY2FzdFJlc291cmNlTmFtZSI6eyJkZXNjcmlwdGlvbiI6IkhhemVsY2FzdFJlc291cmNlTmFtZSBkZWZpbmVzIHRoZSBuYW1lIG9mIHRoZSBIYXplbGNhc3QgcmVzb3VyY2UuIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn0sImluTWVtb3J5Rm9ybWF0Ijp7ImRlZmF1bHQiOiJPQkpFQ1QiLCJkZXNjcmlwdGlvbiI6IkluTWVtb3J5Rm9ybWF0IHNwZWNpZmllcyBpbiB3aGljaCBmb3JtYXQgZGF0YSB3aWxsIGJlIHN0b3JlZCBpbiB0aGUgUmVwbGljYXRlZE1hcCIsImVudW0iOlsiQklOQVJZIiwiT0JKRUNUIl0sInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIFJlcGxpY2F0ZWRNYXAgY29uZmlnIHRvIGJlIGNyZWF0ZWQuIElmIGVtcHR5LCBDUiBuYW1lIHdpbGwgYmUgdXNlZC4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJoYXplbGNhc3RSZXNvdXJjZU5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJSZXBsaWNhdGVkTWFwU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIFJlcGxpY2F0ZWRNYXAiLCJwcm9wZXJ0aWVzIjp7Im1lbWJlclN0YXR1c2VzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7ImVudW0iOlsiU3VjY2VzcyIsIkZhaWxlZCIsIlBlbmRpbmciLCJQZXJzaXN0aW5nIiwiVGVybWluYXRpbmciXSwidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6IkhvbGRzIHN0YXR1cyBvZiBkYXRhIHN0cnVjdHVyZSBmb3IgZWFjaCBIYXplbGNhc3QgbWVtYmVyIiwidHlwZSI6Im9iamVjdCJ9LCJtZXNzYWdlIjp7ImRlc2NyaXB0aW9uIjoiTWVzc2FnZSBleHBsYWluaW5nIHRoZSBjdXJyZW50IHN0YXRlIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0ZSI6eyJkZXNjcmlwdGlvbiI6IlN0YXRlIG9mIHRoZSBkYXRhIHN0cnVjdHVyZSIsImVudW0iOlsiU3VjY2VzcyIsIkZhaWxlZCIsIlBlbmRpbmciLCJQZXJzaXN0aW5nIiwiVGVybWluYXRpbmciXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsic3BlYyJdLCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfSwic3RhdHVzIjp7ImFjY2VwdGVkTmFtZXMiOnsia2luZCI6IiIsInBsdXJhbCI6IiJ9LCJjb25kaXRpb25zIjpudWxsLCJzdG9yZWRWZXJzaW9ucyI6bnVsbH19
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiYXBwLmt1YmVybmV0ZXMuaW8vY29tcG9uZW50Ijoid2ViaG9vayIsImFwcC5rdWJlcm5ldGVzLmlvL2NyZWF0ZWQtYnkiOiJoYXplbGNhc3QtcGxhdGZvcm0tb3BlcmF0b3IiLCJhcHAua3ViZXJuZXRlcy5pby9pbnN0YW5jZSI6IndlYmhvb2stc2VydmljZSIsImFwcC5rdWJlcm5ldGVzLmlvL21hbmFnZWQtYnkiOiJrdXN0b21pemUiLCJhcHAua3ViZXJuZXRlcy5pby9uYW1lIjoic2VydmljZSIsImFwcC5rdWJlcm5ldGVzLmlvL3BhcnQtb2YiOiJoYXplbGNhc3QtcGxhdGZvcm0tb3BlcmF0b3IifSwibmFtZSI6ImhhemVsY2FzdC1wbGF0Zm9ybS13ZWJob29rLXNlcnZpY2UifSwic3BlYyI6eyJwb3J0cyI6W3sicG9ydCI6NDQzLCJwcm90b2NvbCI6IlRDUCIsInRhcmdldFBvcnQiOjk0NDN9XSwic2VsZWN0b3IiOnsiY29udHJvbC1wbGFuZSI6ImNvbnRyb2xsZXItbWFuYWdlciJ9fSwic3RhdHVzIjp7ImxvYWRCYWxhbmNlciI6e319fQ==
relatedImages:
- image: docker.io/hazelcast/hazelcast-platform-operator@sha256:6b5f9c105ca61bc21570051806a944752a8fcb601269be3abf97091f8d0dd0e1
  name: manager
- image: quay.io/openshift-community-operators/hazelcast-platform-operator@sha256:3d1e31a717e0e1cba1513278b64a50fefcc66073705e118b02b9528fc3fc19dd
  name: ""
schema: olm.bundle
