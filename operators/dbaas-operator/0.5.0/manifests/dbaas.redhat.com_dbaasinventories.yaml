apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: dbaasinventories.dbaas.redhat.com
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: dbaas-operator-webhook-service
          namespace: openshift-dbaas-operator
          path: /convert
          port: 443
      conversionReviewVersions:
      - v1alpha1
      - v1beta1
  group: dbaas.redhat.com
  names:
    kind: DBaaSInventory
    listKind: DBaaSInventoryList
    plural: dbaasinventories
    singular: dbaasinventory
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DBaaSInventory defines the schema for the DBaaSInventory API.
          Inventory objects must be created in a valid namespace, determined by the
          existence of a DBaaSPolicy object.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DBaaSOperatorInventorySpec defines the desired state of a
              DBaaSInventory object.
            properties:
              connectionNamespaces:
                description: Namespaces where DBaaSConnection and DBaaSInstance objects
                  are only allowed to reference a policy's inventories. Each inventory
                  can individually override this. Using an asterisk surrounded by
                  single quotes ('*'), allows all namespaces. If not set in the policy
                  or by an inventory object, connections are only allowed in the inventory's
                  namespace.
                items:
                  type: string
                type: array
              connectionNsSelector:
                description: Use a label selector to determine the namespaces where
                  DBaaSConnection and DBaaSInstance objects are only allowed to reference
                  a policy's inventories. Each inventory can individually override
                  this. A label selector is a label query over a set of resources.
                  Results use a logical AND from matchExpressions and matchLabels
                  queries. An empty label selector matches all objects. A null label
                  selector matches no objects.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single
                      {key,value} in the matchLabels map is equivalent to an element
                      of matchExpressions, whose key field is "key", the operator
                      is "In", and the values array contains only "value". The requirements
                      are ANDed.
                    type: object
                type: object
              credentialsRef:
                description: The secret containing the provider-specific connection
                  credentials to use with the provider's API endpoint. The format
                  specifies the secret in the providerâ€™s operator for its DBaaSProvider
                  custom resource (CR), such as the CredentialFields key. The secret
                  must exist within the same namespace as the inventory.
                properties:
                  name:
                    description: Name of the referent.
                    type: string
                required:
                - name
                type: object
              disableProvisions:
                description: Disables provisioning on inventory accounts.
                type: boolean
              providerRef:
                description: A reference to a DBaaSProvider custom resource (CR).
                properties:
                  name:
                    description: The name for object of a known type.
                    type: string
                  namespace:
                    description: The namespace where an object of a known type is
                      stored.
                    type: string
                required:
                - name
                type: object
            required:
            - credentialsRef
            - providerRef
            type: object
          status:
            description: DBaaSInventoryStatus defines the inventory status that the
              provider's operator uses.
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n \ttype FooStatus struct{ \t    // Represents the observations
                    of a foo's current state. \t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\" \t    //
                    +patchMergeKey=type \t    // +patchStrategy=merge \t    // +listType=map
                    \t    // +listMapKey=type \t    Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n \t    // other fields
                    \t}"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              instances:
                description: A list of instances returned from querying the database
                  provider.
                items:
                  description: Instance defines the information of a database instance.
                  properties:
                    instanceID:
                      description: A provider-specific identifier for this instance
                        in the database service. It can contain one or more pieces
                        of information used by the provider's operator to identify
                        the instance on the database service.
                      type: string
                    instanceInfo:
                      additionalProperties:
                        type: string
                      description: Any other provider-specific information related
                        to this instance.
                      type: object
                    name:
                      description: The name of this instance in the database service.
                      type: string
                  required:
                  - instanceID
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: DBaaSInventory defines the schema for the DBaaSInventory API.
          Inventory objects must be created in a valid namespace, determined by the
          existence of a DBaaSPolicy object.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DBaaSOperatorInventorySpec defines the desired state of a
              DBaaSInventory object.
            properties:
              credentialsRef:
                description: The secret containing the provider-specific connection
                  credentials to use with the provider's API endpoint. The format
                  specifies the secret in the providerâ€™s operator for its DBaaSProvider
                  custom resource (CR), such as the CredentialFields key. The secret
                  must exist within the same namespace as the inventory.
                properties:
                  name:
                    description: Name of the referent.
                    type: string
                required:
                - name
                type: object
              policy:
                description: The policy for this inventory.
                properties:
                  connections:
                    description: Namespaces where DBaaSConnection and DBaaSInstance
                      objects are only allowed to reference a policy's inventories.
                    properties:
                      namespaces:
                        description: Namespaces where DBaaSConnection and DBaaSInstance
                          objects are only allowed to reference a policy's inventories.
                          Using an asterisk surrounded by single quotes ('*'), allows
                          all namespaces. If not set in the policy or by an inventory
                          object, connections are only allowed in the inventory's
                          namespace.
                        items:
                          type: string
                        type: array
                      nsSelector:
                        description: Use a label selector to determine the namespaces
                          where DBaaSConnection and DBaaSInstance objects are only
                          allowed to reference a policy's inventories. A label selector
                          is a label query over a set of resources. Results use a
                          logical AND from matchExpressions and matchLabels queries.
                          An empty label selector matches all objects. A null label
                          selector matches no objects.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector
                                that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship
                                    to a set of values. Valid operators are In, NotIn,
                                    Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values.
                                    If the operator is In or NotIn, the values array
                                    must be non-empty. If the operator is Exists or
                                    DoesNotExist, the values array must be empty.
                                    This array is replaced during a strategic merge
                                    patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: matchLabels is a map of {key,value} pairs.
                              A single {key,value} in the matchLabels map is equivalent
                              to an element of matchExpressions, whose key field is
                              "key", the operator is "In", and the values array contains
                              only "value". The requirements are ANDed.
                            type: object
                        type: object
                    type: object
                  disableProvisions:
                    description: Disables provisioning on inventory accounts.
                    type: boolean
                type: object
              providerRef:
                description: A reference to a DBaaSProvider custom resource (CR).
                properties:
                  name:
                    description: The name for object of a known type.
                    type: string
                  namespace:
                    description: The namespace where an object of a known type is
                      stored.
                    type: string
                required:
                - name
                type: object
            required:
            - credentialsRef
            - providerRef
            type: object
          status:
            description: DBaaSInventoryStatus defines the inventory status that the
              provider's operator uses.
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n \ttype FooStatus struct{ \t    // Represents the observations
                    of a foo's current state. \t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\" \t    //
                    +patchMergeKey=type \t    // +patchStrategy=merge \t    // +listType=map
                    \t    // +listMapKey=type \t    Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n \t    // other fields
                    \t}"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              databaseServices:
                description: A list of database services returned from querying the
                  database provider.
                items:
                  description: DatabaseService defines the information of a database
                    service.
                  properties:
                    serviceID:
                      description: A provider-specific identifier for the database
                        service. It can contain one or more pieces of information
                        used by the provider's operator to identify the database service.
                      type: string
                    serviceInfo:
                      additionalProperties:
                        type: string
                      description: Any other provider-specific information related
                        to this service.
                      type: object
                    serviceName:
                      description: The name of the database service.
                      type: string
                    serviceType:
                      description: The type of the database service.
                      type: string
                  required:
                  - serviceID
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
