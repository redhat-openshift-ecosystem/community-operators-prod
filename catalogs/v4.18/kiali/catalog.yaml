---
defaultChannel: stable
icon:
  base64data: PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPCEtLSBHZW5lcmF0b3I6IEFkb2JlIElsbHVzdHJhdG9yIDIyLjAuMSwgU1ZHIEV4cG9ydCBQbHVnLUluIC4gU1ZHIFZlcnNpb246IDYuMDAgQnVpbGQgMCkgIC0tPgo8c3ZnIHZlcnNpb249IjEuMSIgaWQ9IkxheWVyXzEiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiIHg9IjBweCIgeT0iMHB4IgoJIHZpZXdCb3g9IjAgMCAxMjgwIDEyODAiIHN0eWxlPSJlbmFibGUtYmFja2dyb3VuZDpuZXcgMCAwIDEyODAgMTI4MDsiIHhtbDpzcGFjZT0icHJlc2VydmUiPgo8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgoJLnN0MHtmaWxsOiMwMTMxNDQ7fQoJLnN0MXtmaWxsOiMwMDkzREQ7fQo8L3N0eWxlPgo8Zz4KCTxwYXRoIGNsYXNzPSJzdDAiIGQ9Ik04MTAuOSwxODAuOWMtMjUzLjYsMC00NTkuMSwyMDUuNS00NTkuMSw0NTkuMXMyMDUuNSw0NTkuMSw0NTkuMSw0NTkuMVMxMjcwLDg5My42LDEyNzAsNjQwCgkJUzEwNjQuNSwxODAuOSw4MTAuOSwxODAuOXogTTgxMC45LDEwMjkuMmMtMjE1LDAtMzg5LjItMTc0LjMtMzg5LjItMzg5LjJjMC0yMTUsMTc0LjMtMzg5LjIsMzg5LjItMzg5LjJTMTIwMC4xLDQyNSwxMjAwLjEsNjQwCgkJUzEwMjUuOSwxMDI5LjIsODEwLjksMTAyOS4yeiIvPgoJPHBhdGggY2xhc3M9InN0MSIgZD0iTTY1My4zLDI4NGMtMTM2LjQsNjAuNS0yMzEuNiwxOTcuMS0yMzEuNiwzNTZjMCwxNTguOCw5NS4yLDI5NS41LDIzMS42LDM1NmM5OC40LTg3LjEsMTYwLjQtMjE0LjMsMTYwLjQtMzU2CgkJQzgxMy43LDQ5OC4zLDc1MS42LDM3MS4xLDY1My4zLDI4NHoiLz4KCTxwYXRoIGNsYXNzPSJzdDEiIGQ9Ik0zNTEuOCw2NDBjMC0xMDkuOCwzOC42LTIxMC41LDEwMi44LTI4OS41Yy0zOS42LTE4LjItODMuNi0yOC4zLTEzMC0yOC4zQzE1MC45LDMyMi4yLDEwLDQ2NC41LDEwLDY0MAoJCXMxNDAuOSwzMTcuOCwzMTQuNiwzMTcuOGM0Ni4zLDAsOTAuNC0xMC4xLDEzMC0yOC4zQzM5MC4zLDg1MC41LDM1MS44LDc0OS44LDM1MS44LDY0MHoiLz4KPC9nPgo8L3N2Zz4K
  mediatype: image/svg+xml
name: kiali
schema: olm.package
---
entries:
- name: kiali-operator.v1.47.0
  skipRange: '>=1.0.0 <1.47.0'
- name: kiali-operator.v1.48.0
  replaces: kiali-operator.v1.47.0
  skipRange: '>=1.0.0 <1.48.0'
- name: kiali-operator.v1.49.0
  replaces: kiali-operator.v1.48.0
  skipRange: '>=1.0.0 <1.49.0'
- name: kiali-operator.v1.50.0
  replaces: kiali-operator.v1.49.0
  skipRange: '>=1.0.0 <1.50.0'
- name: kiali-operator.v1.51.0
  replaces: kiali-operator.v1.50.0
  skipRange: '>=1.0.0 <1.51.0'
- name: kiali-operator.v1.52.0
  replaces: kiali-operator.v1.51.0
  skipRange: '>=1.0.0 <1.52.0'
- name: kiali-operator.v1.53.0
  replaces: kiali-operator.v1.52.0
  skipRange: '>=1.0.0 <1.53.0'
- name: kiali-operator.v1.54.0
  replaces: kiali-operator.v1.53.0
  skipRange: '>=1.0.0 <1.54.0'
- name: kiali-operator.v1.55.0
  replaces: kiali-operator.v1.54.0
  skipRange: '>=1.0.0 <1.55.0'
- name: kiali-operator.v1.56.0
  replaces: kiali-operator.v1.55.0
  skipRange: '>=1.0.0 <1.56.0'
- name: kiali-operator.v1.57.0
  replaces: kiali-operator.v1.56.0
  skipRange: '>=1.0.0 <1.57.0'
- name: kiali-operator.v1.58.0
  replaces: kiali-operator.v1.57.0
  skipRange: '>=1.0.0 <1.58.0'
- name: kiali-operator.v1.59.0
  replaces: kiali-operator.v1.58.0
  skipRange: '>=1.0.0 <1.59.0'
- name: kiali-operator.v1.60.0
  replaces: kiali-operator.v1.59.0
  skipRange: '>=1.0.0 <1.60.0'
- name: kiali-operator.v1.61.0
  replaces: kiali-operator.v1.60.0
  skipRange: '>=1.0.0 <1.61.0'
- name: kiali-operator.v1.62.0
  replaces: kiali-operator.v1.61.0
  skipRange: '>=1.0.0 <1.62.0'
- name: kiali-operator.v1.63.0
  replaces: kiali-operator.v1.62.0
  skipRange: '>=1.0.0 <1.63.0'
- name: kiali-operator.v1.63.1
  replaces: kiali-operator.v1.63.0
  skipRange: '>=1.0.0 <1.63.1'
- name: kiali-operator.v1.64.0
  replaces: kiali-operator.v1.63.1
  skipRange: '>=1.0.0 <1.64.0'
- name: kiali-operator.v1.65.0
  replaces: kiali-operator.v1.64.0
  skipRange: '>=1.0.0 <1.65.0'
- name: kiali-operator.v1.66.0
  replaces: kiali-operator.v1.65.0
  skipRange: '>=1.0.0 <1.66.0'
- name: kiali-operator.v1.67.0
  replaces: kiali-operator.v1.66.0
  skipRange: '>=1.0.0 <1.67.0'
- name: kiali-operator.v1.68.0
  replaces: kiali-operator.v1.67.0
  skipRange: '>=1.0.0 <1.68.0'
- name: kiali-operator.v1.69.0
  replaces: kiali-operator.v1.68.0
  skipRange: '>=1.0.0 <1.69.0'
- name: kiali-operator.v1.70.0
  replaces: kiali-operator.v1.69.0
  skipRange: '>=1.0.0 <1.70.0'
- name: kiali-operator.v1.71.0
  replaces: kiali-operator.v1.70.0
  skipRange: '>=1.0.0 <1.71.0'
- name: kiali-operator.v1.72.0
  replaces: kiali-operator.v1.71.0
  skipRange: '>=1.0.0 <1.72.0'
- name: kiali-operator.v1.73.0
  replaces: kiali-operator.v1.72.0
  skipRange: '>=1.0.0 <1.73.0'
- name: kiali-operator.v1.74.0
  replaces: kiali-operator.v1.73.0
  skipRange: '>=1.0.0 <1.74.0'
- name: kiali-operator.v1.75.0
  replaces: kiali-operator.v1.74.0
  skipRange: '>=1.0.0 <1.75.0'
- name: kiali-operator.v1.76.0
  replaces: kiali-operator.v1.75.0
  skipRange: '>=1.0.0 <1.76.0'
- name: kiali-operator.v1.77.0
  replaces: kiali-operator.v1.76.0
  skipRange: '>=1.0.0 <1.77.0'
- name: kiali-operator.v1.78.0
  replaces: kiali-operator.v1.77.0
  skipRange: '>=1.0.0 <1.78.0'
- name: kiali-operator.v1.79.0
  replaces: kiali-operator.v1.78.0
  skipRange: '>=1.0.0 <1.79.0'
- name: kiali-operator.v1.80.0
  replaces: kiali-operator.v1.79.0
  skipRange: '>=1.0.0 <1.80.0'
- name: kiali-operator.v1.81.0
  replaces: kiali-operator.v1.80.0
  skipRange: '>=1.0.0 <1.81.0'
- name: kiali-operator.v1.82.0
  replaces: kiali-operator.v1.81.0
  skipRange: '>=1.0.0 <1.82.0'
- name: kiali-operator.v1.83.0
  replaces: kiali-operator.v1.82.0
  skipRange: '>=1.0.0 <1.83.0'
- name: kiali-operator.v1.84.0
  replaces: kiali-operator.v1.83.0
  skipRange: '>=1.0.0 <1.84.0'
- name: kiali-operator.v1.85.0
  replaces: kiali-operator.v1.84.0
  skipRange: '>=1.0.0 <1.85.0'
- name: kiali-operator.v1.86.0
  replaces: kiali-operator.v1.85.0
  skipRange: '>=1.0.0 <1.86.0'
- name: kiali-operator.v1.87.0
  replaces: kiali-operator.v1.86.0
  skipRange: '>=1.0.0 <1.87.0'
- name: kiali-operator.v1.88.0
  replaces: kiali-operator.v1.87.0
  skipRange: '>=1.0.0 <1.88.0'
- name: kiali-operator.v1.89.0
  replaces: kiali-operator.v1.88.0
  skipRange: '>=1.0.0 <1.89.0'
- name: kiali-operator.v2.0.0
  replaces: kiali-operator.v1.89.0
  skipRange: '>=1.0.0 <2.0.0'
name: alpha
package: kiali
schema: olm.channel
---
entries:
- name: kiali-operator.v1.47.0
  skipRange: '>=1.0.0 <1.47.0'
- name: kiali-operator.v1.48.0
  replaces: kiali-operator.v1.47.0
  skipRange: '>=1.0.0 <1.48.0'
- name: kiali-operator.v1.49.0
  replaces: kiali-operator.v1.48.0
  skipRange: '>=1.0.0 <1.49.0'
- name: kiali-operator.v1.50.0
  replaces: kiali-operator.v1.49.0
  skipRange: '>=1.0.0 <1.50.0'
- name: kiali-operator.v1.51.0
  replaces: kiali-operator.v1.50.0
  skipRange: '>=1.0.0 <1.51.0'
- name: kiali-operator.v1.52.0
  replaces: kiali-operator.v1.51.0
  skipRange: '>=1.0.0 <1.52.0'
- name: kiali-operator.v1.53.0
  replaces: kiali-operator.v1.52.0
  skipRange: '>=1.0.0 <1.53.0'
- name: kiali-operator.v1.54.0
  replaces: kiali-operator.v1.53.0
  skipRange: '>=1.0.0 <1.54.0'
- name: kiali-operator.v1.55.0
  replaces: kiali-operator.v1.54.0
  skipRange: '>=1.0.0 <1.55.0'
- name: kiali-operator.v1.56.0
  replaces: kiali-operator.v1.55.0
  skipRange: '>=1.0.0 <1.56.0'
- name: kiali-operator.v1.57.0
  replaces: kiali-operator.v1.56.0
  skipRange: '>=1.0.0 <1.57.0'
- name: kiali-operator.v1.58.0
  replaces: kiali-operator.v1.57.0
  skipRange: '>=1.0.0 <1.58.0'
- name: kiali-operator.v1.59.0
  replaces: kiali-operator.v1.58.0
  skipRange: '>=1.0.0 <1.59.0'
- name: kiali-operator.v1.60.0
  replaces: kiali-operator.v1.59.0
  skipRange: '>=1.0.0 <1.60.0'
- name: kiali-operator.v1.61.0
  replaces: kiali-operator.v1.60.0
  skipRange: '>=1.0.0 <1.61.0'
- name: kiali-operator.v1.62.0
  replaces: kiali-operator.v1.61.0
  skipRange: '>=1.0.0 <1.62.0'
- name: kiali-operator.v1.63.0
  replaces: kiali-operator.v1.62.0
  skipRange: '>=1.0.0 <1.63.0'
- name: kiali-operator.v1.63.1
  replaces: kiali-operator.v1.63.0
  skipRange: '>=1.0.0 <1.63.1'
- name: kiali-operator.v1.64.0
  replaces: kiali-operator.v1.63.1
  skipRange: '>=1.0.0 <1.64.0'
- name: kiali-operator.v1.65.0
  replaces: kiali-operator.v1.64.0
  skipRange: '>=1.0.0 <1.65.0'
- name: kiali-operator.v1.66.0
  replaces: kiali-operator.v1.65.0
  skipRange: '>=1.0.0 <1.66.0'
- name: kiali-operator.v1.67.0
  replaces: kiali-operator.v1.66.0
  skipRange: '>=1.0.0 <1.67.0'
- name: kiali-operator.v1.68.0
  replaces: kiali-operator.v1.67.0
  skipRange: '>=1.0.0 <1.68.0'
- name: kiali-operator.v1.69.0
  replaces: kiali-operator.v1.68.0
  skipRange: '>=1.0.0 <1.69.0'
- name: kiali-operator.v1.70.0
  replaces: kiali-operator.v1.69.0
  skipRange: '>=1.0.0 <1.70.0'
- name: kiali-operator.v1.71.0
  replaces: kiali-operator.v1.70.0
  skipRange: '>=1.0.0 <1.71.0'
- name: kiali-operator.v1.72.0
  replaces: kiali-operator.v1.71.0
  skipRange: '>=1.0.0 <1.72.0'
- name: kiali-operator.v1.73.0
  replaces: kiali-operator.v1.72.0
  skipRange: '>=1.0.0 <1.73.0'
- name: kiali-operator.v1.74.0
  replaces: kiali-operator.v1.73.0
  skipRange: '>=1.0.0 <1.74.0'
- name: kiali-operator.v1.75.0
  replaces: kiali-operator.v1.74.0
  skipRange: '>=1.0.0 <1.75.0'
- name: kiali-operator.v1.76.0
  replaces: kiali-operator.v1.75.0
  skipRange: '>=1.0.0 <1.76.0'
- name: kiali-operator.v1.77.0
  replaces: kiali-operator.v1.76.0
  skipRange: '>=1.0.0 <1.77.0'
- name: kiali-operator.v1.78.0
  replaces: kiali-operator.v1.77.0
  skipRange: '>=1.0.0 <1.78.0'
- name: kiali-operator.v1.79.0
  replaces: kiali-operator.v1.78.0
  skipRange: '>=1.0.0 <1.79.0'
- name: kiali-operator.v1.80.0
  replaces: kiali-operator.v1.79.0
  skipRange: '>=1.0.0 <1.80.0'
- name: kiali-operator.v1.81.0
  replaces: kiali-operator.v1.80.0
  skipRange: '>=1.0.0 <1.81.0'
- name: kiali-operator.v1.82.0
  replaces: kiali-operator.v1.81.0
  skipRange: '>=1.0.0 <1.82.0'
- name: kiali-operator.v1.83.0
  replaces: kiali-operator.v1.82.0
  skipRange: '>=1.0.0 <1.83.0'
- name: kiali-operator.v1.84.0
  replaces: kiali-operator.v1.83.0
  skipRange: '>=1.0.0 <1.84.0'
- name: kiali-operator.v1.85.0
  replaces: kiali-operator.v1.84.0
  skipRange: '>=1.0.0 <1.85.0'
- name: kiali-operator.v1.86.0
  replaces: kiali-operator.v1.85.0
  skipRange: '>=1.0.0 <1.86.0'
- name: kiali-operator.v1.87.0
  replaces: kiali-operator.v1.86.0
  skipRange: '>=1.0.0 <1.87.0'
- name: kiali-operator.v1.88.0
  replaces: kiali-operator.v1.87.0
  skipRange: '>=1.0.0 <1.88.0'
- name: kiali-operator.v1.89.0
  replaces: kiali-operator.v1.88.0
  skipRange: '>=1.0.0 <1.89.0'
- name: kiali-operator.v2.0.0
  replaces: kiali-operator.v1.89.0
  skipRange: '>=1.0.0 <2.0.0'
name: stable
package: kiali
schema: olm.channel
---
image: quay.io/openshift-community-operators/kiali@sha256:6148265b750ab4e926f7a9f9dfc6a28d43fb8f9db6405f49e84310170aee55bc
name: kiali-operator.v1.47.0
package: kiali
properties:
- type: olm.gvk
  value:
    group: kiali.io
    kind: Kiali
    version: v1alpha1
- type: olm.package
  value:
    packageName: kiali
    version: 1.47.0
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImFwcCI6ImtpYWxpLW9wZXJhdG9yIn0sIm5hbWUiOiJraWFsaXMua2lhbGkuaW8ifSwic3BlYyI6eyJncm91cCI6ImtpYWxpLmlvIiwibmFtZXMiOnsia2luZCI6IktpYWxpIiwibGlzdEtpbmQiOiJLaWFsaUxpc3QiLCJwbHVyYWwiOiJraWFsaXMiLCJzaW5ndWxhciI6ImtpYWxpIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX19
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: quay.io/kiali/kiali-operator:v1.47.0
  name: ''
- image: quay.io/openshift-community-operators/kiali@sha256:6148265b750ab4e926f7a9f9dfc6a28d43fb8f9db6405f49e84310170aee55bc
  name: ''
schema: olm.bundle
---
image: quay.io/openshift-community-operators/kiali@sha256:8f358c45fd63ae897371687c46246119d922691d3adb646687474bdc64790b26
name: kiali-operator.v1.48.0
package: kiali
properties:
- type: olm.gvk
  value:
    group: kiali.io
    kind: Kiali
    version: v1alpha1
- type: olm.package
  value:
    packageName: kiali
    version: 1.48.0
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImFwcCI6ImtpYWxpLW9wZXJhdG9yIn0sIm5hbWUiOiJraWFsaXMua2lhbGkuaW8ifSwic3BlYyI6eyJncm91cCI6ImtpYWxpLmlvIiwibmFtZXMiOnsia2luZCI6IktpYWxpIiwibGlzdEtpbmQiOiJLaWFsaUxpc3QiLCJwbHVyYWwiOiJraWFsaXMiLCJzaW5ndWxhciI6ImtpYWxpIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX19
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: quay.io/kiali/kiali-operator:v1.48.0
  name: ''
- image: quay.io/openshift-community-operators/kiali@sha256:8f358c45fd63ae897371687c46246119d922691d3adb646687474bdc64790b26
  name: ''
schema: olm.bundle
---
image: quay.io/openshift-community-operators/kiali@sha256:67135380e859126130a1ea0d3e9f506304029e5d304e76017e4f49b1a8c72455
name: kiali-operator.v1.49.0
package: kiali
properties:
- type: olm.gvk
  value:
    group: kiali.io
    kind: Kiali
    version: v1alpha1
- type: olm.package
  value:
    packageName: kiali
    version: 1.49.0
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImFwcCI6ImtpYWxpLW9wZXJhdG9yIn0sIm5hbWUiOiJraWFsaXMua2lhbGkuaW8ifSwic3BlYyI6eyJncm91cCI6ImtpYWxpLmlvIiwibmFtZXMiOnsia2luZCI6IktpYWxpIiwibGlzdEtpbmQiOiJLaWFsaUxpc3QiLCJwbHVyYWwiOiJraWFsaXMiLCJzaW5ndWxhciI6ImtpYWxpIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX19
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: quay.io/kiali/kiali-operator:v1.49.0
  name: ''
- image: quay.io/openshift-community-operators/kiali@sha256:67135380e859126130a1ea0d3e9f506304029e5d304e76017e4f49b1a8c72455
  name: ''
schema: olm.bundle
---
image: quay.io/openshift-community-operators/kiali@sha256:24a8b9c42097e2adc37b15639b69ef2b83f6befab9b2d6b7301690f77ed60536
name: kiali-operator.v1.50.0
package: kiali
properties:
- type: olm.gvk
  value:
    group: kiali.io
    kind: Kiali
    version: v1alpha1
- type: olm.package
  value:
    packageName: kiali
    version: 1.50.0
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImFwcCI6ImtpYWxpLW9wZXJhdG9yIn0sIm5hbWUiOiJraWFsaXMua2lhbGkuaW8ifSwic3BlYyI6eyJncm91cCI6ImtpYWxpLmlvIiwibmFtZXMiOnsia2luZCI6IktpYWxpIiwibGlzdEtpbmQiOiJLaWFsaUxpc3QiLCJwbHVyYWwiOiJraWFsaXMiLCJzaW5ndWxhciI6ImtpYWxpIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX19
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: quay.io/kiali/kiali-operator:v1.50.0
  name: ''
- image: quay.io/openshift-community-operators/kiali@sha256:24a8b9c42097e2adc37b15639b69ef2b83f6befab9b2d6b7301690f77ed60536
  name: ''
schema: olm.bundle
---
image: quay.io/openshift-community-operators/kiali@sha256:3515a95cc16c4606332b53c6a3427729998467f4f7e32c30115cc786648386c4
name: kiali-operator.v1.51.0
package: kiali
properties:
- type: olm.gvk
  value:
    group: kiali.io
    kind: Kiali
    version: v1alpha1
- type: olm.package
  value:
    packageName: kiali
    version: 1.51.0
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImFwcCI6ImtpYWxpLW9wZXJhdG9yIn0sIm5hbWUiOiJraWFsaXMua2lhbGkuaW8ifSwic3BlYyI6eyJncm91cCI6ImtpYWxpLmlvIiwibmFtZXMiOnsia2luZCI6IktpYWxpIiwibGlzdEtpbmQiOiJLaWFsaUxpc3QiLCJwbHVyYWwiOiJraWFsaXMiLCJzaW5ndWxhciI6ImtpYWxpIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX19
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: quay.io/kiali/kiali-operator:v1.51.0
  name: ''
- image: quay.io/openshift-community-operators/kiali@sha256:3515a95cc16c4606332b53c6a3427729998467f4f7e32c30115cc786648386c4
  name: ''
schema: olm.bundle
---
image: quay.io/openshift-community-operators/kiali@sha256:742ccb03a209425e3e3f55d4947d2d4cb7ffc807ff8869f62aed2e1f60055d9e
name: kiali-operator.v1.52.0
package: kiali
properties:
- type: olm.gvk
  value:
    group: kiali.io
    kind: Kiali
    version: v1alpha1
- type: olm.package
  value:
    packageName: kiali
    version: 1.52.0
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImFwcCI6ImtpYWxpLW9wZXJhdG9yIn0sIm5hbWUiOiJraWFsaXMua2lhbGkuaW8ifSwic3BlYyI6eyJncm91cCI6ImtpYWxpLmlvIiwibmFtZXMiOnsia2luZCI6IktpYWxpIiwibGlzdEtpbmQiOiJLaWFsaUxpc3QiLCJwbHVyYWwiOiJraWFsaXMiLCJzaW5ndWxhciI6ImtpYWxpIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX19
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: quay.io/kiali/kiali-operator:v1.52.0
  name: ''
- image: quay.io/openshift-community-operators/kiali@sha256:742ccb03a209425e3e3f55d4947d2d4cb7ffc807ff8869f62aed2e1f60055d9e
  name: ''
schema: olm.bundle
---
image: quay.io/openshift-community-operators/kiali@sha256:348689a65ea5cba8f2b983fe376030a9c2600759f136883b5da263512fdaa9a0
name: kiali-operator.v1.53.0
package: kiali
properties:
- type: olm.gvk
  value:
    group: kiali.io
    kind: Kiali
    version: v1alpha1
- type: olm.package
  value:
    packageName: kiali
    version: 1.53.0
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImFwcCI6ImtpYWxpLW9wZXJhdG9yIn0sIm5hbWUiOiJraWFsaXMua2lhbGkuaW8ifSwic3BlYyI6eyJncm91cCI6ImtpYWxpLmlvIiwibmFtZXMiOnsia2luZCI6IktpYWxpIiwibGlzdEtpbmQiOiJLaWFsaUxpc3QiLCJwbHVyYWwiOiJraWFsaXMiLCJzaW5ndWxhciI6ImtpYWxpIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX19
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: quay.io/kiali/kiali-operator:v1.53.0
  name: ''
- image: quay.io/openshift-community-operators/kiali@sha256:348689a65ea5cba8f2b983fe376030a9c2600759f136883b5da263512fdaa9a0
  name: ''
schema: olm.bundle
---
image: quay.io/openshift-community-operators/kiali@sha256:d5bf5f732163b11a8b9b48d2625f1f2a683c1dbd3bdc1c9198374f89d810f3e1
name: kiali-operator.v1.54.0
package: kiali
properties:
- type: olm.gvk
  value:
    group: kiali.io
    kind: Kiali
    version: v1alpha1
- type: olm.package
  value:
    packageName: kiali
    version: 1.54.0
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImFwcCI6ImtpYWxpLW9wZXJhdG9yIn0sIm5hbWUiOiJraWFsaXMua2lhbGkuaW8ifSwic3BlYyI6eyJncm91cCI6ImtpYWxpLmlvIiwibmFtZXMiOnsia2luZCI6IktpYWxpIiwibGlzdEtpbmQiOiJLaWFsaUxpc3QiLCJwbHVyYWwiOiJraWFsaXMiLCJzaW5ndWxhciI6ImtpYWxpIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX19
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: quay.io/kiali/kiali-operator:v1.54.0
  name: ''
- image: quay.io/openshift-community-operators/kiali@sha256:d5bf5f732163b11a8b9b48d2625f1f2a683c1dbd3bdc1c9198374f89d810f3e1
  name: ''
schema: olm.bundle
---
image: quay.io/openshift-community-operators/kiali@sha256:5c083be425e2023edc02e7ed3ea4a6fcf40457474693168ca2f9ff27dddebea3
name: kiali-operator.v1.55.0
package: kiali
properties:
- type: olm.gvk
  value:
    group: kiali.io
    kind: Kiali
    version: v1alpha1
- type: olm.package
  value:
    packageName: kiali
    version: 1.55.0
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImFwcCI6ImtpYWxpLW9wZXJhdG9yIn0sIm5hbWUiOiJraWFsaXMua2lhbGkuaW8ifSwic3BlYyI6eyJncm91cCI6ImtpYWxpLmlvIiwibmFtZXMiOnsia2luZCI6IktpYWxpIiwibGlzdEtpbmQiOiJLaWFsaUxpc3QiLCJwbHVyYWwiOiJraWFsaXMiLCJzaW5ndWxhciI6ImtpYWxpIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX19
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: quay.io/kiali/kiali-operator:v1.55.0
  name: ''
- image: quay.io/openshift-community-operators/kiali@sha256:5c083be425e2023edc02e7ed3ea4a6fcf40457474693168ca2f9ff27dddebea3
  name: ''
schema: olm.bundle
---
image: quay.io/openshift-community-operators/kiali@sha256:72006a384a48d776c97bb7670598351d7f20739b50453c32ba9f47b055f0a9e3
name: kiali-operator.v1.56.0
package: kiali
properties:
- type: olm.gvk
  value:
    group: kiali.io
    kind: Kiali
    version: v1alpha1
- type: olm.package
  value:
    packageName: kiali
    version: 1.56.0
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImFwcCI6ImtpYWxpLW9wZXJhdG9yIn0sIm5hbWUiOiJraWFsaXMua2lhbGkuaW8ifSwic3BlYyI6eyJncm91cCI6ImtpYWxpLmlvIiwibmFtZXMiOnsia2luZCI6IktpYWxpIiwibGlzdEtpbmQiOiJLaWFsaUxpc3QiLCJwbHVyYWwiOiJraWFsaXMiLCJzaW5ndWxhciI6ImtpYWxpIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX19
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: quay.io/kiali/kiali-operator:v1.56.0
  name: ''
- image: quay.io/openshift-community-operators/kiali@sha256:72006a384a48d776c97bb7670598351d7f20739b50453c32ba9f47b055f0a9e3
  name: ''
schema: olm.bundle
---
image: quay.io/openshift-community-operators/kiali@sha256:d66da70fb875940d0e261dd0e3b467149edd8e4690b3aad50302bb620f270aa8
name: kiali-operator.v1.57.0
package: kiali
properties:
- type: olm.gvk
  value:
    group: kiali.io
    kind: Kiali
    version: v1alpha1
- type: olm.package
  value:
    packageName: kiali
    version: 1.57.0
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImFwcCI6ImtpYWxpLW9wZXJhdG9yIn0sIm5hbWUiOiJraWFsaXMua2lhbGkuaW8ifSwic3BlYyI6eyJncm91cCI6ImtpYWxpLmlvIiwibmFtZXMiOnsia2luZCI6IktpYWxpIiwibGlzdEtpbmQiOiJLaWFsaUxpc3QiLCJwbHVyYWwiOiJraWFsaXMiLCJzaW5ndWxhciI6ImtpYWxpIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX19
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: quay.io/kiali/kiali-operator:v1.57.0
  name: ''
- image: quay.io/openshift-community-operators/kiali@sha256:d66da70fb875940d0e261dd0e3b467149edd8e4690b3aad50302bb620f270aa8
  name: ''
schema: olm.bundle
---
image: quay.io/openshift-community-operators/kiali@sha256:3e1ad97086d083becd8b6d4c354f106a967d63bd531e8da54f8fb6c41819ee7f
name: kiali-operator.v1.58.0
package: kiali
properties:
- type: olm.gvk
  value:
    group: kiali.io
    kind: Kiali
    version: v1alpha1
- type: olm.package
  value:
    packageName: kiali
    version: 1.58.0
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImFwcCI6ImtpYWxpLW9wZXJhdG9yIn0sIm5hbWUiOiJraWFsaXMua2lhbGkuaW8ifSwic3BlYyI6eyJncm91cCI6ImtpYWxpLmlvIiwibmFtZXMiOnsia2luZCI6IktpYWxpIiwibGlzdEtpbmQiOiJLaWFsaUxpc3QiLCJwbHVyYWwiOiJraWFsaXMiLCJzaW5ndWxhciI6ImtpYWxpIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX19
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: quay.io/kiali/kiali-operator:v1.58.0
  name: ''
- image: quay.io/openshift-community-operators/kiali@sha256:3e1ad97086d083becd8b6d4c354f106a967d63bd531e8da54f8fb6c41819ee7f
  name: ''
schema: olm.bundle
---
image: quay.io/openshift-community-operators/kiali@sha256:203055089a37e3e09de4f5ff2b14ca60d5bf749747d8caaeec6584d769837444
name: kiali-operator.v1.59.0
package: kiali
properties:
- type: olm.gvk
  value:
    group: kiali.io
    kind: Kiali
    version: v1alpha1
- type: olm.package
  value:
    packageName: kiali
    version: 1.59.0
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImFwcCI6ImtpYWxpLW9wZXJhdG9yIn0sIm5hbWUiOiJraWFsaXMua2lhbGkuaW8ifSwic3BlYyI6eyJncm91cCI6ImtpYWxpLmlvIiwibmFtZXMiOnsia2luZCI6IktpYWxpIiwibGlzdEtpbmQiOiJLaWFsaUxpc3QiLCJwbHVyYWwiOiJraWFsaXMiLCJzaW5ndWxhciI6ImtpYWxpIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX19
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: quay.io/kiali/kiali-operator:v1.59.0
  name: ''
- image: quay.io/openshift-community-operators/kiali@sha256:203055089a37e3e09de4f5ff2b14ca60d5bf749747d8caaeec6584d769837444
  name: ''
schema: olm.bundle
---
image: quay.io/openshift-community-operators/kiali@sha256:af45bba8df55246d0182a07ee53089bba0bad71d20b8b6245fc4c59cc98af4a5
name: kiali-operator.v1.60.0
package: kiali
properties:
- type: olm.gvk
  value:
    group: kiali.io
    kind: Kiali
    version: v1alpha1
- type: olm.package
  value:
    packageName: kiali
    version: 1.60.0
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImFwcCI6ImtpYWxpLW9wZXJhdG9yIn0sIm5hbWUiOiJraWFsaXMua2lhbGkuaW8ifSwic3BlYyI6eyJncm91cCI6ImtpYWxpLmlvIiwibmFtZXMiOnsia2luZCI6IktpYWxpIiwibGlzdEtpbmQiOiJLaWFsaUxpc3QiLCJwbHVyYWwiOiJraWFsaXMiLCJzaW5ndWxhciI6ImtpYWxpIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX19
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: quay.io/kiali/kiali-operator:v1.60.0
  name: ''
- image: quay.io/openshift-community-operators/kiali@sha256:af45bba8df55246d0182a07ee53089bba0bad71d20b8b6245fc4c59cc98af4a5
  name: ''
schema: olm.bundle
---
image: quay.io/openshift-community-operators/kiali@sha256:f2ee7531d60d48658c7a5066e9321e7a93fdeb3965aa33b0ad2ee96eb756d26e
name: kiali-operator.v1.61.0
package: kiali
properties:
- type: olm.gvk
  value:
    group: kiali.io
    kind: Kiali
    version: v1alpha1
- type: olm.package
  value:
    packageName: kiali
    version: 1.61.0
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImFwcCI6ImtpYWxpLW9wZXJhdG9yIn0sIm5hbWUiOiJraWFsaXMua2lhbGkuaW8ifSwic3BlYyI6eyJncm91cCI6ImtpYWxpLmlvIiwibmFtZXMiOnsia2luZCI6IktpYWxpIiwibGlzdEtpbmQiOiJLaWFsaUxpc3QiLCJwbHVyYWwiOiJraWFsaXMiLCJzaW5ndWxhciI6ImtpYWxpIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX19
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: quay.io/kiali/kiali-operator:v1.61.0
  name: ''
- image: quay.io/openshift-community-operators/kiali@sha256:f2ee7531d60d48658c7a5066e9321e7a93fdeb3965aa33b0ad2ee96eb756d26e
  name: ''
schema: olm.bundle
---
image: quay.io/openshift-community-operators/kiali@sha256:d38efde9967bfc163d7937028128cbb60fb897f2066d4dc3617226322e4edbde
name: kiali-operator.v1.62.0
package: kiali
properties:
- type: olm.gvk
  value:
    group: kiali.io
    kind: Kiali
    version: v1alpha1
- type: olm.package
  value:
    packageName: kiali
    version: 1.62.0
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImFwcCI6ImtpYWxpLW9wZXJhdG9yIn0sIm5hbWUiOiJraWFsaXMua2lhbGkuaW8ifSwic3BlYyI6eyJncm91cCI6ImtpYWxpLmlvIiwibmFtZXMiOnsia2luZCI6IktpYWxpIiwibGlzdEtpbmQiOiJLaWFsaUxpc3QiLCJwbHVyYWwiOiJraWFsaXMiLCJzaW5ndWxhciI6ImtpYWxpIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX19
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: quay.io/kiali/kiali-operator:v1.62.0
  name: ''
- image: quay.io/openshift-community-operators/kiali@sha256:d38efde9967bfc163d7937028128cbb60fb897f2066d4dc3617226322e4edbde
  name: ''
schema: olm.bundle
---
image: quay.io/openshift-community-operators/kiali@sha256:b3841abacab5e0fb8c8d5ba2f925835fe7fe745f68bfc1fde1e798f7114b54b1
name: kiali-operator.v1.63.0
package: kiali
properties:
- type: olm.gvk
  value:
    group: kiali.io
    kind: Kiali
    version: v1alpha1
- type: olm.package
  value:
    packageName: kiali
    version: 1.63.0
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImFwcCI6ImtpYWxpLW9wZXJhdG9yIn0sIm5hbWUiOiJraWFsaXMua2lhbGkuaW8ifSwic3BlYyI6eyJncm91cCI6ImtpYWxpLmlvIiwibmFtZXMiOnsia2luZCI6IktpYWxpIiwibGlzdEtpbmQiOiJLaWFsaUxpc3QiLCJwbHVyYWwiOiJraWFsaXMiLCJzaW5ndWxhciI6ImtpYWxpIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX19
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: quay.io/kiali/kiali-operator:v1.63.0
  name: ''
- image: quay.io/openshift-community-operators/kiali@sha256:b3841abacab5e0fb8c8d5ba2f925835fe7fe745f68bfc1fde1e798f7114b54b1
  name: ''
schema: olm.bundle
---
image: quay.io/openshift-community-operators/kiali@sha256:2c09005af4592bef4843a7e20eeb5b504219a817235f1e1dacb340791241df36
name: kiali-operator.v1.63.1
package: kiali
properties:
- type: olm.gvk
  value:
    group: kiali.io
    kind: Kiali
    version: v1alpha1
- type: olm.package
  value:
    packageName: kiali
    version: 1.63.1
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImFwcCI6ImtpYWxpLW9wZXJhdG9yIn0sIm5hbWUiOiJraWFsaXMua2lhbGkuaW8ifSwic3BlYyI6eyJncm91cCI6ImtpYWxpLmlvIiwibmFtZXMiOnsia2luZCI6IktpYWxpIiwibGlzdEtpbmQiOiJLaWFsaUxpc3QiLCJwbHVyYWwiOiJraWFsaXMiLCJzaW5ndWxhciI6ImtpYWxpIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX19
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: quay.io/kiali/kiali-operator:v1.63.1
  name: ''
- image: quay.io/openshift-community-operators/kiali@sha256:2c09005af4592bef4843a7e20eeb5b504219a817235f1e1dacb340791241df36
  name: ''
schema: olm.bundle
---
image: quay.io/openshift-community-operators/kiali@sha256:7700391822f4a6ec8e00305341124790af26a2e6c663a763931141f7e652f8ab
name: kiali-operator.v1.64.0
package: kiali
properties:
- type: olm.gvk
  value:
    group: kiali.io
    kind: Kiali
    version: v1alpha1
- type: olm.package
  value:
    packageName: kiali
    version: 1.64.0
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImFwcCI6ImtpYWxpLW9wZXJhdG9yIn0sIm5hbWUiOiJraWFsaXMua2lhbGkuaW8ifSwic3BlYyI6eyJncm91cCI6ImtpYWxpLmlvIiwibmFtZXMiOnsia2luZCI6IktpYWxpIiwibGlzdEtpbmQiOiJLaWFsaUxpc3QiLCJwbHVyYWwiOiJraWFsaXMiLCJzaW5ndWxhciI6ImtpYWxpIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX19
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: quay.io/kiali/kiali-operator:v1.64.0
  name: ''
- image: quay.io/openshift-community-operators/kiali@sha256:7700391822f4a6ec8e00305341124790af26a2e6c663a763931141f7e652f8ab
  name: ''
schema: olm.bundle
---
image: quay.io/openshift-community-operators/kiali@sha256:98a48b7526f71e8fd1b934b99de4a6b6098436ba80a8cbd4c4f4239c6af132a4
name: kiali-operator.v1.65.0
package: kiali
properties:
- type: olm.gvk
  value:
    group: kiali.io
    kind: Kiali
    version: v1alpha1
- type: olm.package
  value:
    packageName: kiali
    version: 1.65.0
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImFwcCI6ImtpYWxpLW9wZXJhdG9yIn0sIm5hbWUiOiJraWFsaXMua2lhbGkuaW8ifSwic3BlYyI6eyJncm91cCI6ImtpYWxpLmlvIiwibmFtZXMiOnsia2luZCI6IktpYWxpIiwibGlzdEtpbmQiOiJLaWFsaUxpc3QiLCJwbHVyYWwiOiJraWFsaXMiLCJzaW5ndWxhciI6ImtpYWxpIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX19
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: quay.io/kiali/kiali-operator:v1.65.0
  name: ''
- image: quay.io/openshift-community-operators/kiali@sha256:98a48b7526f71e8fd1b934b99de4a6b6098436ba80a8cbd4c4f4239c6af132a4
  name: ''
schema: olm.bundle
---
image: quay.io/openshift-community-operators/kiali@sha256:561c6caeb325d2d81e74176fee10bc8f251f6a929907e7e008c4164ca5d41dd9
name: kiali-operator.v1.66.0
package: kiali
properties:
- type: olm.gvk
  value:
    group: kiali.io
    kind: Kiali
    version: v1alpha1
- type: olm.package
  value:
    packageName: kiali
    version: 1.66.0
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImFwcCI6ImtpYWxpLW9wZXJhdG9yIn0sIm5hbWUiOiJraWFsaXMua2lhbGkuaW8ifSwic3BlYyI6eyJncm91cCI6ImtpYWxpLmlvIiwibmFtZXMiOnsia2luZCI6IktpYWxpIiwibGlzdEtpbmQiOiJLaWFsaUxpc3QiLCJwbHVyYWwiOiJraWFsaXMiLCJzaW5ndWxhciI6ImtpYWxpIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX19
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: quay.io/kiali/kiali-operator:v1.66.0
  name: ''
- image: quay.io/openshift-community-operators/kiali@sha256:561c6caeb325d2d81e74176fee10bc8f251f6a929907e7e008c4164ca5d41dd9
  name: ''
schema: olm.bundle
---
image: quay.io/openshift-community-operators/kiali@sha256:827a81d404a6308d929ada22340dfd07beeed80734e7fe8692d2250e4ea34b52
name: kiali-operator.v1.67.0
package: kiali
properties:
- type: olm.gvk
  value:
    group: kiali.io
    kind: Kiali
    version: v1alpha1
- type: olm.package
  value:
    packageName: kiali
    version: 1.67.0
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImFwcCI6ImtpYWxpLW9wZXJhdG9yIn0sIm5hbWUiOiJraWFsaXMua2lhbGkuaW8ifSwic3BlYyI6eyJncm91cCI6ImtpYWxpLmlvIiwibmFtZXMiOnsia2luZCI6IktpYWxpIiwibGlzdEtpbmQiOiJLaWFsaUxpc3QiLCJwbHVyYWwiOiJraWFsaXMiLCJzaW5ndWxhciI6ImtpYWxpIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX19
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: quay.io/kiali/kiali-operator:v1.67.0
  name: ''
- image: quay.io/openshift-community-operators/kiali@sha256:827a81d404a6308d929ada22340dfd07beeed80734e7fe8692d2250e4ea34b52
  name: ''
schema: olm.bundle
---
image: quay.io/openshift-community-operators/kiali@sha256:6620bb038700bc61265adff2e43a15241b366fe3c7859b652abdfdd9b9d61ef3
name: kiali-operator.v1.68.0
package: kiali
properties:
- type: olm.gvk
  value:
    group: kiali.io
    kind: Kiali
    version: v1alpha1
- type: olm.package
  value:
    packageName: kiali
    version: 1.68.0
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImFwcCI6ImtpYWxpLW9wZXJhdG9yIn0sIm5hbWUiOiJraWFsaXMua2lhbGkuaW8ifSwic3BlYyI6eyJncm91cCI6ImtpYWxpLmlvIiwibmFtZXMiOnsia2luZCI6IktpYWxpIiwibGlzdEtpbmQiOiJLaWFsaUxpc3QiLCJwbHVyYWwiOiJraWFsaXMiLCJzaW5ndWxhciI6ImtpYWxpIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX19
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: quay.io/kiali/kiali-operator:v1.68.0
  name: ''
- image: quay.io/openshift-community-operators/kiali@sha256:6620bb038700bc61265adff2e43a15241b366fe3c7859b652abdfdd9b9d61ef3
  name: ''
schema: olm.bundle
---
image: quay.io/openshift-community-operators/kiali@sha256:5938df59c2bc82da20a7baf10c73a5d87a8883903d80612a6f89a7ba91afc092
name: kiali-operator.v1.69.0
package: kiali
properties:
- type: olm.gvk
  value:
    group: kiali.io
    kind: Kiali
    version: v1alpha1
- type: olm.package
  value:
    packageName: kiali
    version: 1.69.0
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImFwcCI6ImtpYWxpLW9wZXJhdG9yIn0sIm5hbWUiOiJraWFsaXMua2lhbGkuaW8ifSwic3BlYyI6eyJncm91cCI6ImtpYWxpLmlvIiwibmFtZXMiOnsia2luZCI6IktpYWxpIiwibGlzdEtpbmQiOiJLaWFsaUxpc3QiLCJwbHVyYWwiOiJraWFsaXMiLCJzaW5ndWxhciI6ImtpYWxpIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX19
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: quay.io/kiali/kiali-operator:v1.69.0
  name: ''
- image: quay.io/openshift-community-operators/kiali@sha256:5938df59c2bc82da20a7baf10c73a5d87a8883903d80612a6f89a7ba91afc092
  name: ''
schema: olm.bundle
---
image: quay.io/openshift-community-operators/kiali@sha256:d5c6a4829a2b089035c9d9bb2fc93deb89e16b7844b371ae2d36d413d96b287e
name: kiali-operator.v1.70.0
package: kiali
properties:
- type: olm.gvk
  value:
    group: kiali.io
    kind: Kiali
    version: v1alpha1
- type: olm.package
  value:
    packageName: kiali
    version: 1.70.0
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImFwcCI6ImtpYWxpLW9wZXJhdG9yIn0sIm5hbWUiOiJraWFsaXMua2lhbGkuaW8ifSwic3BlYyI6eyJncm91cCI6ImtpYWxpLmlvIiwibmFtZXMiOnsia2luZCI6IktpYWxpIiwibGlzdEtpbmQiOiJLaWFsaUxpc3QiLCJwbHVyYWwiOiJraWFsaXMiLCJzaW5ndWxhciI6ImtpYWxpIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX19
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: quay.io/kiali/kiali-operator:v1.70.0
  name: ''
- image: quay.io/openshift-community-operators/kiali@sha256:d5c6a4829a2b089035c9d9bb2fc93deb89e16b7844b371ae2d36d413d96b287e
  name: ''
schema: olm.bundle
---
image: quay.io/openshift-community-operators/kiali@sha256:d3a0679135bfb43eea7746e40063d858bd7b781c53910d22c9decbe6cbdfba14
name: kiali-operator.v1.71.0
package: kiali
properties:
- type: olm.gvk
  value:
    group: kiali.io
    kind: Kiali
    version: v1alpha1
- type: olm.package
  value:
    packageName: kiali
    version: 1.71.0
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImFwcCI6ImtpYWxpLW9wZXJhdG9yIn0sIm5hbWUiOiJraWFsaXMua2lhbGkuaW8ifSwic3BlYyI6eyJncm91cCI6ImtpYWxpLmlvIiwibmFtZXMiOnsia2luZCI6IktpYWxpIiwibGlzdEtpbmQiOiJLaWFsaUxpc3QiLCJwbHVyYWwiOiJraWFsaXMiLCJzaW5ndWxhciI6ImtpYWxpIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX19
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: quay.io/kiali/kiali-operator:v1.71.0
  name: ''
- image: quay.io/openshift-community-operators/kiali@sha256:d3a0679135bfb43eea7746e40063d858bd7b781c53910d22c9decbe6cbdfba14
  name: ''
schema: olm.bundle
---
image: quay.io/openshift-community-operators/kiali@sha256:4b103ee7fe4b39bf97b671edc1d884b0928217d08e29a81de2fa23464c70f0d6
name: kiali-operator.v1.72.0
package: kiali
properties:
- type: olm.gvk
  value:
    group: kiali.io
    kind: Kiali
    version: v1alpha1
- type: olm.package
  value:
    packageName: kiali
    version: 1.72.0
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImFwcCI6ImtpYWxpLW9wZXJhdG9yIn0sIm5hbWUiOiJraWFsaXMua2lhbGkuaW8ifSwic3BlYyI6eyJncm91cCI6ImtpYWxpLmlvIiwibmFtZXMiOnsia2luZCI6IktpYWxpIiwibGlzdEtpbmQiOiJLaWFsaUxpc3QiLCJwbHVyYWwiOiJraWFsaXMiLCJzaW5ndWxhciI6ImtpYWxpIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX19
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: quay.io/kiali/kiali-operator:v1.72.0
  name: ''
- image: quay.io/openshift-community-operators/kiali@sha256:4b103ee7fe4b39bf97b671edc1d884b0928217d08e29a81de2fa23464c70f0d6
  name: ''
schema: olm.bundle
---
image: quay.io/openshift-community-operators/kiali@sha256:312a0cbc399fa4abcc02f96e5df1f41cff4d72ccf8c2794520d7512731b5c8db
name: kiali-operator.v1.73.0
package: kiali
properties:
- type: olm.gvk
  value:
    group: kiali.io
    kind: Kiali
    version: v1alpha1
- type: olm.package
  value:
    packageName: kiali
    version: 1.73.0
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImFwcCI6ImtpYWxpLW9wZXJhdG9yIn0sIm5hbWUiOiJraWFsaXMua2lhbGkuaW8ifSwic3BlYyI6eyJncm91cCI6ImtpYWxpLmlvIiwibmFtZXMiOnsia2luZCI6IktpYWxpIiwibGlzdEtpbmQiOiJLaWFsaUxpc3QiLCJwbHVyYWwiOiJraWFsaXMiLCJzaW5ndWxhciI6ImtpYWxpIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX19
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: quay.io/kiali/kiali-operator:v1.73.0
  name: ''
- image: quay.io/openshift-community-operators/kiali@sha256:312a0cbc399fa4abcc02f96e5df1f41cff4d72ccf8c2794520d7512731b5c8db
  name: ''
schema: olm.bundle
---
image: quay.io/openshift-community-operators/kiali@sha256:e8af5453320a398262d550c7f90c6502390418a79232d65c317b5b7d6f15b8d7
name: kiali-operator.v1.74.0
package: kiali
properties:
- type: olm.gvk
  value:
    group: kiali.io
    kind: Kiali
    version: v1alpha1
- type: olm.package
  value:
    packageName: kiali
    version: 1.74.0
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImFwcCI6ImtpYWxpLW9wZXJhdG9yIn0sIm5hbWUiOiJraWFsaXMua2lhbGkuaW8ifSwic3BlYyI6eyJncm91cCI6ImtpYWxpLmlvIiwibmFtZXMiOnsia2luZCI6IktpYWxpIiwibGlzdEtpbmQiOiJLaWFsaUxpc3QiLCJwbHVyYWwiOiJraWFsaXMiLCJzaW5ndWxhciI6ImtpYWxpIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoib3BlcmF0b3JzLmNvcmVvcy5jb20vdjFhbHBoYTEiLCJraW5kIjoiQ2x1c3RlclNlcnZpY2VWZXJzaW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiYWxtLWV4YW1wbGVzIjoiW1xuICB7XG4gICAgXCJhcGlWZXJzaW9uXCI6IFwia2lhbGkuaW8vdjFhbHBoYTFcIixcbiAgICBcImtpbmRcIjogXCJLaWFsaVwiLFxuICAgIFwibWV0YWRhdGFcIjoge1xuICAgICAgXCJuYW1lXCI6IFwia2lhbGlcIlxuICAgIH0sXG4gICAgXCJzcGVjXCI6IHtcbiAgICAgIFwiaW5zdGFsbGF0aW9uX3RhZ1wiOiBcIk15IEtpYWxpXCIsXG4gICAgICBcImlzdGlvX25hbWVzcGFjZVwiOiBcImlzdGlvLXN5c3RlbVwiLFxuICAgICAgXCJkZXBsb3ltZW50XCI6IHtcbiAgICAgICAgXCJuYW1lc3BhY2VcIjogXCJpc3Rpby1zeXN0ZW1cIixcbiAgICAgICAgXCJ2aWV3X29ubHlfbW9kZVwiOiBmYWxzZVxuICAgICAgfSxcbiAgICAgIFwic2VydmVyXCI6IHtcbiAgICAgICAgXCJ3ZWJfcm9vdFwiOiBcIi9teWtpYWxpXCJcbiAgICAgIH1cbiAgICB9XG4gIH1cbl0iLCJjYXBhYmlsaXRpZXMiOiJEZWVwIEluc2lnaHRzIiwiY2F0ZWdvcmllcyI6Ik1vbml0b3JpbmcsTG9nZ2luZyBcdTAwMjYgVHJhY2luZyIsImNlcnRpZmllZCI6ImZhbHNlIiwiY29udGFpbmVySW1hZ2UiOiJxdWF5LmlvL2tpYWxpL2tpYWxpLW9wZXJhdG9yOnYxLjc0LjAiLCJjcmVhdGVkQXQiOiIyMDIzLTA5LTE4VDA3OjE0OjEzWiIsImRlc2NyaXB0aW9uIjoiS2lhbGkgcHJvamVjdCBwcm92aWRlcyBhbnN3ZXJzIHRvIHRoZSBxdWVzdGlvbnM6IFdoYXQgbWljcm9zZXJ2aWNlcyBhcmUgcGFydCBvZiBteSBJc3RpbyBzZXJ2aWNlIG1lc2ggYW5kIGhvdyBhcmUgdGhleSBjb25uZWN0ZWQ/Iiwib2xtLnNraXBSYW5nZSI6Ilx1MDAzZT0xLjAuMCBcdTAwM2MxLjc0LjAiLCJyZXBvc2l0b3J5IjoiaHR0cHM6Ly9naXRodWIuY29tL2tpYWxpL2tpYWxpIiwic3VwcG9ydCI6IktpYWxpIn0sImxhYmVscyI6eyJvcGVyYXRvcmZyYW1ld29yay5pby9hcmNoLmFtZDY0Ijoic3VwcG9ydGVkIiwib3BlcmF0b3JmcmFtZXdvcmsuaW8vYXJjaC5hcm02NCI6InN1cHBvcnRlZCIsIm9wZXJhdG9yZnJhbWV3b3JrLmlvL2FyY2gucHBjNjRsZSI6InN1cHBvcnRlZCIsIm9wZXJhdG9yZnJhbWV3b3JrLmlvL2FyY2guczM5MHgiOiJzdXBwb3J0ZWQifSwibmFtZSI6ImtpYWxpLW9wZXJhdG9yLnYxLjc0LjAiLCJuYW1lc3BhY2UiOiJwbGFjZWhvbGRlciJ9LCJzcGVjIjp7ImFwaXNlcnZpY2VkZWZpbml0aW9ucyI6e30sImN1c3RvbXJlc291cmNlZGVmaW5pdGlvbnMiOnsib3duZWQiOlt7ImRlc2NyaXB0aW9uIjoiQSBjb25maWd1cmF0aW9uIGZpbGUgZm9yIGEgS2lhbGkgaW5zdGFsbGF0aW9uLiIsImRpc3BsYXlOYW1lIjoiS2lhbGkiLCJncm91cCI6ImtpYWxpLmlvIiwia2luZCI6IktpYWxpIiwibmFtZSI6ImtpYWxpcy5raWFsaS5pbyIsInJlc291cmNlcyI6W3sia2luZCI6IkRlcGxveW1lbnQiLCJ2ZXJzaW9uIjoiYXBwcy92MSJ9LHsia2luZCI6IlBvZCIsInZlcnNpb24iOiJ2MSJ9LHsia2luZCI6IlNlcnZpY2UiLCJ2ZXJzaW9uIjoidjEifSx7ImtpbmQiOiJDb25maWdNYXAiLCJ2ZXJzaW9uIjoidjEifSx7ImtpbmQiOiJPQXV0aENsaWVudCIsInZlcnNpb24iOiJvYXV0aC5vcGVuc2hpZnQuaW8vdjEifSx7ImtpbmQiOiJSb3V0ZSIsInZlcnNpb24iOiJyb3V0ZS5vcGVuc2hpZnQuaW8vdjEifV0sInNwZWNEZXNjcmlwdG9ycyI6W3siZGVzY3JpcHRpb24iOiJEZXRlcm1pbmVzIGhvdyBhIHVzZXIgaXMgdG8gbG9nIGludG8gS2lhbGkuIERlZmF1bHQ6IG9wZW5zaGlmdCAod2hlbiBkZXBsb3llZCBpbiBPcGVuU2hpZnQpOyB0b2tlbiAod2hlbiBkZXBsb3llZCBpbiBvdGhlciBLdWJlcm5ldGVzIGNsdXN0ZXJzKSIsImRpc3BsYXlOYW1lIjoiQXV0aGVudGljYXRpb24gU3RyYXRlZ3kiLCJwYXRoIjoiYXV0aC5zdHJhdGVneSIsIngtZGVzY3JpcHRvcnMiOlsidXJuOmFsbTpkZXNjcmlwdG9yOmNvbS50ZWN0b25pYy51aTpsYWJlbCJdfSx7ImRlc2NyaXB0aW9uIjoiVGhlIG5hbWVzcGFjZSB3aGVyZSBLaWFsaSBhbmQgaXRzIGFzc29jaWF0ZWQgcmVzb3VyY2VzIHdpbGwgYmUgY3JlYXRlZC4gRGVmYXVsdDogaXN0aW8tc3lzdGVtIiwiZGlzcGxheU5hbWUiOiJLaWFsaSBOYW1lc3BhY2UiLCJwYXRoIjoiZGVwbG95bWVudC5uYW1lc3BhY2UiLCJ4LWRlc2NyaXB0b3JzIjpbInVybjphbG06ZGVzY3JpcHRvcjpjb20udGVjdG9uaWMudWk6bGFiZWwiXX0seyJkZXNjcmlwdGlvbiI6IldoZW4gdHJ1ZSwgS2lhbGkgd2lsbCBiZSBpbiAndmlldyBvbmx5JyBtb2RlLCBhbGxvd2luZyB0aGUgdXNlciB0byB2aWV3IGFuZCByZXRyaWV2ZSBtYW5hZ2VtZW50IGFuZCBtb25pdG9yaW5nIGRhdGEgZm9yIHRoZSBzZXJ2aWNlIG1lc2gsIGJ1dCBub3QgYWxsb3cgdGhlIHVzZXIgdG8gbW9kaWZ5IHRoZSBzZXJ2aWNlIG1lc2guIERlZmF1bHQ6IGZhbHNlIiwiZGlzcGxheU5hbWUiOiJWaWV3IE9ubHkgTW9kZSIsInBhdGgiOiJkZXBsb3ltZW50LnZpZXdfb25seV9tb2RlIiwieC1kZXNjcmlwdG9ycyI6WyJ1cm46YWxtOmRlc2NyaXB0b3I6Y29tLnRlY3RvbmljLnVpOmJvb2xlYW5Td2l0Y2giXX0seyJkZXNjcmlwdGlvbiI6IkRlZmluZXMgdGhlIHJvb3QgY29udGV4dCBwYXRoIGZvciB0aGUgS2lhbGkgY29uc29sZSwgQVBJIGVuZHBvaW50cyBhbmQgcmVhZGluZXNzL2xpdmVuZXNzIHByb2Jlcy4gRGVmYXVsdDogLyAod2hlbiBkZXBsb3llZCBvbiBPcGVuU2hpZnQ7IC9raWFsaSAod2hlbiBkZXBsb3llZCBvbiBLdWJlcm5ldGVzKSIsImRpc3BsYXlOYW1lIjoiV2ViIFJvb3QiLCJwYXRoIjoic2VydmVyLndlYl9yb290IiwieC1kZXNjcmlwdG9ycyI6WyJ1cm46YWxtOmRlc2NyaXB0b3I6Y29tLnRlY3RvbmljLnVpOmxhYmVsIl19XSwidmVyc2lvbiI6InYxYWxwaGExIn1dfSwiZGVzY3JpcHRpb24iOiIjIyBBYm91dCB0aGUgbWFuYWdlZCBhcHBsaWNhdGlvblxuXG5BIE1pY3Jvc2VydmljZSBBcmNoaXRlY3R1cmUgYnJlYWtzIHVwIHRoZSBtb25vbGl0aCBpbnRvIG1hbnkgc21hbGxlciBwaWVjZXNcbnRoYXQgYXJlIGNvbXBvc2VkIHRvZ2V0aGVyLiBQYXR0ZXJucyB0byBzZWN1cmUgdGhlIGNvbW11bmljYXRpb24gYmV0d2Vlblxuc2VydmljZXMgbGlrZSBmYXVsdCB0b2xlcmFuY2UgKHZpYSB0aW1lb3V0LCByZXRyeSwgY2lyY3VpdCBicmVha2luZywgZXRjLilcbmhhdmUgY29tZSB1cCBhcyB3ZWxsIGFzIGRpc3RyaWJ1dGVkIHRyYWNpbmcgdG8gYmUgYWJsZSB0byBzZWUgd2hlcmUgY2FsbHNcbmFyZSBnb2luZy5cblxuQSBzZXJ2aWNlIG1lc2ggY2FuIG5vdyBwcm92aWRlIHRoZXNlIHNlcnZpY2VzIG9uIGEgcGxhdGZvcm0gbGV2ZWwgYW5kIGZyZWVzXG50aGUgYXBwbGljYXRpb24gd3JpdGVycyBmcm9tIHRob3NlIHRhc2tzLiBSb3V0aW5nIGRlY2lzaW9ucyBhcmUgZG9uZSBhdCB0aGVcbm1lc2ggbGV2ZWwuXG5cbktpYWxpIHdvcmtzIHdpdGggSXN0aW8sIGluIE9wZW5TaGlmdCBvciBLdWJlcm5ldGVzLCB0byB2aXN1YWxpemUgdGhlIHNlcnZpY2Vcbm1lc2ggdG9wb2xvZ3ksIHRvIHByb3ZpZGUgdmlzaWJpbGl0eSBpbnRvIGZlYXR1cmVzIGxpa2UgY2lyY3VpdCBicmVha2VycyxcbnJlcXVlc3QgcmF0ZXMgYW5kIG1vcmUuIEl0IG9mZmVycyBpbnNpZ2h0cyBhYm91dCB0aGUgbWVzaCBjb21wb25lbnRzIGF0XG5kaWZmZXJlbnQgbGV2ZWxzLCBmcm9tIGFic3RyYWN0IEFwcGxpY2F0aW9ucyB0byBTZXJ2aWNlcyBhbmQgV29ya2xvYWRzLlxuXG5TZWUgW2h0dHBzOi8vd3d3LmtpYWxpLmlvXShodHRwczovL3d3dy5raWFsaS5pbykgdG8gcmVhZCBtb3JlLlxuXG4jIyMgQWNjZXNzaW5nIHRoZSBVSVxuXG5UaGUgS2lhbGkgb3BlcmF0b3IgY2FuIGV4cG9zZSB0aGUgS2lhbGkgVUkgYXMgYSBSb3V0ZSBvbiBPcGVuU2hpZnRcbm9yIEluZ3Jlc3Mgb24gS3ViZXJuZXRlcy5cblxuT24gT3BlblNoaWZ0LCB0aGUgZGVmYXVsdCByb290IGNvbnRleHQgcGF0aCBpcyAnLycgYW5kIG9uIEt1YmVybmV0ZXMgaXQgaXNcbicva2lhbGknIHRob3VnaCB5b3UgY2FuIGNoYW5nZSB0aGlzIGJ5IGNvbmZpZ3VyaW5nIHRoZSAnd2ViX3Jvb3QnIHNldHRpbmcgaW5cbnRoZSBLaWFsaSBDUi5cblxuIyMgQWJvdXQgdGhpcyBPcGVyYXRvclxuXG4jIyMgS2lhbGkgQ3VzdG9tIFJlc291cmNlIENvbmZpZ3VyYXRpb24gU2V0dGluZ3NcblxuRm9yIHF1aWNrIGRlc2NyaXB0aW9ucyBvZiBhbGwgdGhlIHNldHRpbmdzIHlvdSBjYW4gY29uZmlndXJlIGluIHRoZSBLaWFsaVxuQ3VzdG9tIFJlc291cmNlIChDUiksIHNlZVxuW3RoZSBraWFsaS5pbyBkb2NzXShodHRwczovL2tpYWxpLmlvL2RvY3MvY29uZmlndXJhdGlvbi9raWFsaXMua2lhbGkuaW8vKS5cblxuTm90ZSB0aGF0IHRoZSBLaWFsaSBvcGVyYXRvciBjYW4gYmUgdG9sZCB0byByZXN0cmljdCBLaWFsaSdzIGFjY2VzcyB0b1xuc3BlY2lmaWMgbmFtZXNwYWNlcywgb3IgY2FuIHByb3ZpZGUgdG8gS2lhbGkgY2x1c3Rlci13aWRlIGFjY2VzcyB0byBhbGxcbm5hbWVzcGFjZXMuXG5cbiMjIFByZXJlcXVpc2l0ZXMgZm9yIGVuYWJsaW5nIHRoaXMgT3BlcmF0b3JcblxuVG9kYXkgS2lhbGkgd29ya3Mgd2l0aCBJc3Rpby4gU28gYmVmb3JlIHlvdSBpbnN0YWxsIEtpYWxpLCB5b3UgbXVzdCBoYXZlXG5hbHJlYWR5IGluc3RhbGxlZCBJc3Rpby5cbklmIHlvdSBhbHJlYWR5IGhhdmUgS2lhbGkgaW4geW91ciBJc3RpbyBlbnZpcm9ubWVudCBhbmQgeW91IHdhbnQgdG9cbmluc3RhbGwgS2lhbGkgdmlhIHRoZSBLaWFsaSBPcGVyYXRvciwgdW5pbnN0YWxsIHRoZSBpbnN0YWxsZWQgS2lhbGkgZmlyc3QuXG5cbldoZW4geW91IGluc3RhbGwgS2lhbGkgaW4gYSBub24tT3BlblNoaWZ0IEt1YmVybmV0ZXMgZW52aXJvbm1lbnQsIHRoZVxuYXV0aGVudGljYXRpb24gc3RyYXRlZ3kgd2lsbCBkZWZhdWx0IHRvIGB0b2tlbmAuXG5cbklmIHlvdSB3aXNoIHRvIHVzZSB0aGUgYG9wZW5pZGAgYXV0aGVudGljYXRpb24gc3RyYXRlZ3ksIHlvdSBtdXN0IGhhdmUgYW5cbk9wZW5JRCBDb25uZWN0IGF2YWlsYWJsZSBhbmQgYWNjZXNzaWJsZSB0byBLaWFsaS4iLCJkaXNwbGF5TmFtZSI6IktpYWxpIE9wZXJhdG9yIiwiaWNvbiI6W3siYmFzZTY0ZGF0YSI6IlBEOTRiV3dnZG1WeWMybHZiajBpTVM0d0lpQmxibU52WkdsdVp6MGlkWFJtTFRnaVB6NEtQQ0V0TFNCSFpXNWxjbUYwYjNJNklFRmtiMkpsSUVsc2JIVnpkSEpoZEc5eUlESXlMakF1TVN3Z1UxWkhJRVY0Y0c5eWRDQlFiSFZuTFVsdUlDNGdVMVpISUZabGNuTnBiMjQ2SURZdU1EQWdRblZwYkdRZ01Da2dJQzB0UGdvOGMzWm5JSFpsY25OcGIyNDlJakV1TVNJZ2FXUTlJa3hoZVdWeVh6RWlJSGh0Ykc1elBTSm9kSFJ3T2k4dmQzZDNMbmN6TG05eVp5OHlNREF3TDNOMlp5SWdlRzFzYm5NNmVHeHBibXM5SW1oMGRIQTZMeTkzZDNjdWR6TXViM0puTHpFNU9Ua3ZlR3hwYm1zaUlIZzlJakJ3ZUNJZ2VUMGlNSEI0SWdvSklIWnBaWGRDYjNnOUlqQWdNQ0F4TWpnd0lERXlPREFpSUhOMGVXeGxQU0psYm1GaWJHVXRZbUZqYTJkeWIzVnVaRHB1WlhjZ01DQXdJREV5T0RBZ01USTRNRHNpSUhodGJEcHpjR0ZqWlQwaWNISmxjMlZ5ZG1VaVBnbzhjM1I1YkdVZ2RIbHdaVDBpZEdWNGRDOWpjM01pUGdvSkxuTjBNSHRtYVd4c09pTXdNVE14TkRRN2ZRb0pMbk4wTVh0bWFXeHNPaU13TURrelJFUTdmUW84TDNOMGVXeGxQZ284Wno0S0NUeHdZWFJvSUdOc1lYTnpQU0p6ZERBaUlHUTlJazA0TVRBdU9Td3hPREF1T1dNdE1qVXpMallzTUMwME5Ua3VNU3d5TURVdU5TMDBOVGt1TVN3ME5Ua3VNWE15TURVdU5TdzBOVGt1TVN3ME5Ua3VNU3cwTlRrdU1WTXhNamN3TERnNU15NDJMREV5TnpBc05qUXdDZ2tKVXpFd05qUXVOU3d4T0RBdU9TdzRNVEF1T1N3eE9EQXVPWG9nVFRneE1DNDVMREV3TWprdU1tTXRNakUxTERBdE16ZzVMakl0TVRjMExqTXRNemc1TGpJdE16ZzVMakpqTUMweU1UVXNNVGMwTGpNdE16ZzVMaklzTXpnNUxqSXRNemc1TGpKVE1USXdNQzR4TERReU5Td3hNakF3TGpFc05qUXdDZ2tKVXpFd01qVXVPU3d4TURJNUxqSXNPREV3TGprc01UQXlPUzR5ZWlJdlBnb0pQSEJoZEdnZ1kyeGhjM005SW5OME1TSWdaRDBpVFRZMU15NHpMREk0TkdNdE1UTTJMalFzTmpBdU5TMHlNekV1Tml3eE9UY3VNUzB5TXpFdU5pd3pOVFpqTUN3eE5UZ3VPQ3c1TlM0eUxESTVOUzQxTERJek1TNDJMRE0xTm1NNU9DNDBMVGczTGpFc01UWXdMalF0TWpFMExqTXNNVFl3TGpRdE16VTJDZ2tKUXpneE15NDNMRFE1T0M0ekxEYzFNUzQyTERNM01TNHhMRFkxTXk0ekxESTROSG9pTHo0S0NUeHdZWFJvSUdOc1lYTnpQU0p6ZERFaUlHUTlJazB6TlRFdU9DdzJOREJqTUMweE1Ea3VPQ3d6T0M0MkxUSXhNQzQxTERFd01pNDRMVEk0T1M0MVl5MHpPUzQyTFRFNExqSXRPRE11TmkweU9DNHpMVEV6TUMweU9DNHpRekUxTUM0NUxETXlNaTR5TERFd0xEUTJOQzQxTERFd0xEWTBNQW9KQ1hNeE5EQXVPU3d6TVRjdU9Dd3pNVFF1Tml3ek1UY3VPR00wTmk0ekxEQXNPVEF1TkMweE1DNHhMREV6TUMweU9DNHpRek01TUM0ekxEZzFNQzQxTERNMU1TNDRMRGMwT1M0NExETTFNUzQ0TERZME1Ib2lMejRLUEM5blBnbzhMM04yWno0SyIsIm1lZGlhdHlwZSI6ImltYWdlL3N2Zyt4bWwifV0sImluc3RhbGwiOnsic3BlYyI6eyJjbHVzdGVyUGVybWlzc2lvbnMiOlt7InJ1bGVzIjpbeyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJjb25maWdtYXBzIiwiZW5kcG9pbnRzIiwicG9kcyIsInNlcnZpY2VhY2NvdW50cyIsInNlcnZpY2VzIiwic2VydmljZXMvZmluYWxpemVycyJdLCJ2ZXJicyI6WyJjcmVhdGUiLCJkZWxldGUiLCJnZXQiLCJsaXN0IiwicGF0Y2giLCJ1cGRhdGUiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyIiXSwicmVzb3VyY2VzIjpbIm5hbWVzcGFjZXMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsInBhdGNoIl19LHsiYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsic2VjcmV0cyJdLCJ2ZXJicyI6WyJjcmVhdGUiLCJsaXN0Iiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlTmFtZXMiOlsiY2FjZXJ0cyIsImlzdGlvLWNhLXNlY3JldCJdLCJyZXNvdXJjZXMiOlsic2VjcmV0cyJdLCJ2ZXJicyI6WyJnZXQiXX0seyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlTmFtZXMiOlsia2lhbGktc2lnbmluZy1rZXkiXSwicmVzb3VyY2VzIjpbInNlY3JldHMiXSwidmVyYnMiOlsiZGVsZXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsiYXBwcyJdLCJyZXNvdXJjZXMiOlsiZGVwbG95bWVudHMiLCJyZXBsaWNhc2V0cyJdLCJ2ZXJicyI6WyJjcmVhdGUiLCJkZWxldGUiLCJnZXQiLCJsaXN0IiwicGF0Y2giLCJ1cGRhdGUiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyJhdXRvc2NhbGluZyJdLCJyZXNvdXJjZXMiOlsiaG9yaXpvbnRhbHBvZGF1dG9zY2FsZXJzIl0sInZlcmJzIjpbImNyZWF0ZSIsImRlbGV0ZSIsImdldCIsImxpc3QiLCJwYXRjaCIsInVwZGF0ZSIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbIm1vbml0b3JpbmcuY29yZW9zLmNvbSJdLCJyZXNvdXJjZXMiOlsic2VydmljZW1vbml0b3JzIl0sInZlcmJzIjpbImNyZWF0ZSIsImdldCJdfSx7ImFwaUdyb3VwcyI6WyJhcHBzIl0sInJlc291cmNlTmFtZXMiOlsia2lhbGktb3BlcmF0b3IiXSwicmVzb3VyY2VzIjpbImRlcGxveW1lbnRzL2ZpbmFsaXplcnMiXSwidmVyYnMiOlsidXBkYXRlIl19LHsiYXBpR3JvdXBzIjpbImtpYWxpLmlvIl0sInJlc291cmNlcyI6WyIqIl0sInZlcmJzIjpbImNyZWF0ZSIsImRlbGV0ZSIsImdldCIsImxpc3QiLCJwYXRjaCIsInVwZGF0ZSIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbImF1dGhvcml6YXRpb24uazhzLmlvIl0sInJlc291cmNlcyI6WyJzZWxmc3ViamVjdGFjY2Vzc3Jldmlld3MiXSwidmVyYnMiOlsibGlzdCJdfSx7ImFwaUdyb3VwcyI6WyJyYmFjLmF1dGhvcml6YXRpb24uazhzLmlvIl0sInJlc291cmNlcyI6WyJjbHVzdGVycm9sZWJpbmRpbmdzIiwiY2x1c3RlcnJvbGVzIiwicm9sZWJpbmRpbmdzIiwicm9sZXMiXSwidmVyYnMiOlsiY3JlYXRlIiwiZGVsZXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsiYXBpZXh0ZW5zaW9ucy5rOHMuaW8iXSwicmVzb3VyY2VzIjpbImN1c3RvbXJlc291cmNlZGVmaW5pdGlvbnMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbImV4dGVuc2lvbnMiLCJuZXR3b3JraW5nLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsiaW5ncmVzc2VzIl0sInZlcmJzIjpbImNyZWF0ZSIsImRlbGV0ZSIsImdldCIsImxpc3QiLCJwYXRjaCIsInVwZGF0ZSIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbInJvdXRlLm9wZW5zaGlmdC5pbyJdLCJyZXNvdXJjZXMiOlsicm91dGVzIiwicm91dGVzL2N1c3RvbS1ob3N0Il0sInZlcmJzIjpbImNyZWF0ZSIsImRlbGV0ZSIsImdldCIsImxpc3QiLCJwYXRjaCIsInVwZGF0ZSIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbIm9hdXRoLm9wZW5zaGlmdC5pbyJdLCJyZXNvdXJjZXMiOlsib2F1dGhjbGllbnRzIl0sInZlcmJzIjpbImNyZWF0ZSIsImRlbGV0ZSIsImdldCIsImxpc3QiLCJwYXRjaCIsInVwZGF0ZSIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbImNvbmZpZy5vcGVuc2hpZnQuaW8iXSwicmVzb3VyY2VzIjpbImNsdXN0ZXJvcGVyYXRvcnMiXSwidmVyYnMiOlsibGlzdCIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbImNvbmZpZy5vcGVuc2hpZnQuaW8iXSwicmVzb3VyY2VOYW1lcyI6WyJrdWJlLWFwaXNlcnZlciJdLCJyZXNvdXJjZXMiOlsiY2x1c3Rlcm9wZXJhdG9ycyJdLCJ2ZXJicyI6WyJnZXQiXX0seyJhcGlHcm91cHMiOlsiY29uc29sZS5vcGVuc2hpZnQuaW8iXSwicmVzb3VyY2VzIjpbImNvbnNvbGVsaW5rcyJdLCJ2ZXJicyI6WyJjcmVhdGUiLCJkZWxldGUiLCJnZXQiLCJsaXN0IiwicGF0Y2giLCJ1cGRhdGUiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyIiXSwicmVzb3VyY2VzIjpbImNvbmZpZ21hcHMiLCJlbmRwb2ludHMiLCJwb2RzL2xvZyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Iiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJuYW1lc3BhY2VzIiwicG9kcyIsInJlcGxpY2F0aW9uY29udHJvbGxlcnMiLCJzZXJ2aWNlcyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Iiwid2F0Y2giLCJwYXRjaCJdfSx7ImFwaUdyb3VwcyI6WyIiXSwicmVzb3VyY2VzIjpbInBvZHMvcG9ydGZvcndhcmQiXSwidmVyYnMiOlsiY3JlYXRlIiwicG9zdCJdfSx7ImFwaUdyb3VwcyI6WyJleHRlbnNpb25zIiwiYXBwcyJdLCJyZXNvdXJjZXMiOlsiZGFlbW9uc2V0cyIsImRlcGxveW1lbnRzIiwicmVwbGljYXNldHMiLCJzdGF0ZWZ1bHNldHMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIiwicGF0Y2giXX0seyJhcGlHcm91cHMiOlsiYmF0Y2giXSwicmVzb3VyY2VzIjpbImNyb25qb2JzIiwiam9icyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Iiwid2F0Y2giLCJwYXRjaCJdfSx7ImFwaUdyb3VwcyI6WyJjb25maWcuaXN0aW8uaW8iLCJuZXR3b3JraW5nLmlzdGlvLmlvIiwiYXV0aGVudGljYXRpb24uaXN0aW8uaW8iLCJyYmFjLmlzdGlvLmlvIiwic2VjdXJpdHkuaXN0aW8uaW8iLCJleHRlbnNpb25zLmlzdGlvLmlvIiwidGVsZW1ldHJ5LmlzdGlvLmlvIiwiZ2F0ZXdheS5uZXR3b3JraW5nLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsiKiJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Iiwid2F0Y2giLCJjcmVhdGUiLCJkZWxldGUiLCJwYXRjaCJdfSx7ImFwaUdyb3VwcyI6WyJhcHBzLm9wZW5zaGlmdC5pbyJdLCJyZXNvdXJjZXMiOlsiZGVwbG95bWVudGNvbmZpZ3MiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIiwicGF0Y2giXX0seyJhcGlHcm91cHMiOlsicHJvamVjdC5vcGVuc2hpZnQuaW8iXSwicmVzb3VyY2VzIjpbInByb2plY3RzIl0sInZlcmJzIjpbImdldCJdfSx7ImFwaUdyb3VwcyI6WyJyb3V0ZS5vcGVuc2hpZnQuaW8iXSwicmVzb3VyY2VzIjpbInJvdXRlcyJdLCJ2ZXJicyI6WyJnZXQiXX0seyJhcGlHcm91cHMiOlsiYXV0aGVudGljYXRpb24uazhzLmlvIl0sInJlc291cmNlcyI6WyJ0b2tlbnJldmlld3MiXSwidmVyYnMiOlsiY3JlYXRlIl19XSwic2VydmljZUFjY291bnROYW1lIjoia2lhbGktb3BlcmF0b3IifV0sImRlcGxveW1lbnRzIjpbeyJuYW1lIjoia2lhbGktb3BlcmF0b3IiLCJzcGVjIjp7InJlcGxpY2FzIjoxLCJzZWxlY3RvciI6eyJtYXRjaExhYmVscyI6eyJhcHAiOiJraWFsaS1vcGVyYXRvciJ9fSwidGVtcGxhdGUiOnsibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsicHJvbWV0aGV1cy5pby9wYXRoIjoiL21ldHJpY3MiLCJwcm9tZXRoZXVzLmlvL3BvcnQiOiI4MDgwIiwicHJvbWV0aGV1cy5pby9zY3JhcGUiOiJ0cnVlIn0sImxhYmVscyI6eyJhcHAiOiJraWFsaS1vcGVyYXRvciIsImFwcC5rdWJlcm5ldGVzLmlvL25hbWUiOiJraWFsaS1vcGVyYXRvciIsImFwcC5rdWJlcm5ldGVzLmlvL3BhcnQtb2YiOiJraWFsaS1vcGVyYXRvciIsImFwcC5rdWJlcm5ldGVzLmlvL3ZlcnNpb24iOiJ2MS43NC4wIiwibmFtZSI6ImtpYWxpLW9wZXJhdG9yIiwidmVyc2lvbiI6InYxLjc0LjAifSwibmFtZSI6ImtpYWxpLW9wZXJhdG9yIn0sInNwZWMiOnsiY29udGFpbmVycyI6W3siYXJncyI6WyItLXphcC1sb2ctbGV2ZWw9aW5mbyIsIi0tbGVhZGVyLWVsZWN0aW9uLWlkPWtpYWxpLW9wZXJhdG9yIl0sImVudiI6W3sibmFtZSI6IldBVENIX05BTUVTUEFDRSIsInZhbHVlRnJvbSI6eyJmaWVsZFJlZiI6eyJmaWVsZFBhdGgiOiJtZXRhZGF0YS5hbm5vdGF0aW9uc1snb2xtLnRhcmdldE5hbWVzcGFjZXMnXSJ9fX0seyJuYW1lIjoiUE9EX05BTUUiLCJ2YWx1ZUZyb20iOnsiZmllbGRSZWYiOnsiZmllbGRQYXRoIjoibWV0YWRhdGEubmFtZSJ9fX0seyJuYW1lIjoiUE9EX05BTUVTUEFDRSIsInZhbHVlRnJvbSI6eyJmaWVsZFJlZiI6eyJmaWVsZFBhdGgiOiJtZXRhZGF0YS5uYW1lc3BhY2UifX19LHsibmFtZSI6IkFMTE9XX0FEX0hPQ19LSUFMSV9OQU1FU1BBQ0UiLCJ2YWx1ZSI6ImZhbHNlIn0seyJuYW1lIjoiQUxMT1dfQURfSE9DX0tJQUxJX0lNQUdFIiwidmFsdWUiOiJmYWxzZSJ9LHsibmFtZSI6IkFMTE9XX1NFQ1VSSVRZX0NPTlRFWFRfT1ZFUlJJREUiLCJ2YWx1ZSI6ImZhbHNlIn0seyJuYW1lIjoiQUxMT1dfQUxMX0FDQ0VTU0lCTEVfTkFNRVNQQUNFUyIsInZhbHVlIjoidHJ1ZSJ9LHsibmFtZSI6IkFDQ0VTU0lCTEVfTkFNRVNQQUNFU19MQUJFTCIsInZhbHVlIjoiIn0seyJuYW1lIjoiUFJPRklMRV9UQVNLU19UQVNLX09VVFBVVF9MSU1JVCIsInZhbHVlIjoiMTAwIn0seyJuYW1lIjoiQU5TSUJMRV9ERUJVR19MT0dTIiwidmFsdWUiOiJUcnVlIn0seyJuYW1lIjoiQU5TSUJMRV9WRVJCT1NJVFlfS0lBTElfS0lBTElfSU8iLCJ2YWx1ZSI6IjEifSx7Im5hbWUiOiJBTlNJQkxFX0NPTkZJRyIsInZhbHVlIjoiL2V0Yy9hbnNpYmxlL2Fuc2libGUuY2ZnIn1dLCJpbWFnZSI6InF1YXkuaW8va2lhbGkva2lhbGktb3BlcmF0b3I6djEuNzQuMCIsImltYWdlUHVsbFBvbGljeSI6IklmTm90UHJlc2VudCIsIm5hbWUiOiJvcGVyYXRvciIsInBvcnRzIjpbeyJjb250YWluZXJQb3J0Ijo4MDgwLCJuYW1lIjoiaHR0cC1tZXRyaWNzIn1dLCJyZXNvdXJjZXMiOnsicmVxdWVzdHMiOnsiY3B1IjoiMTBtIiwibWVtb3J5IjoiNjRNaSJ9fSwic2VjdXJpdHlDb250ZXh0Ijp7ImFsbG93UHJpdmlsZWdlRXNjYWxhdGlvbiI6ZmFsc2UsImNhcGFiaWxpdGllcyI6eyJkcm9wIjpbIkFMTCJdfSwicHJpdmlsZWdlZCI6ZmFsc2UsInJ1bkFzTm9uUm9vdCI6dHJ1ZX0sInZvbHVtZU1vdW50cyI6W3sibW91bnRQYXRoIjoiL3RtcC9hbnNpYmxlLW9wZXJhdG9yL3J1bm5lciIsIm5hbWUiOiJydW5uZXIifV19XSwic2VydmljZUFjY291bnROYW1lIjoia2lhbGktb3BlcmF0b3IiLCJ2b2x1bWVzIjpbeyJlbXB0eURpciI6e30sIm5hbWUiOiJydW5uZXIifV19fX19XX0sInN0cmF0ZWd5IjoiZGVwbG95bWVudCJ9LCJpbnN0YWxsTW9kZXMiOlt7InN1cHBvcnRlZCI6ZmFsc2UsInR5cGUiOiJPd25OYW1lc3BhY2UifSx7InN1cHBvcnRlZCI6ZmFsc2UsInR5cGUiOiJTaW5nbGVOYW1lc3BhY2UifSx7InN1cHBvcnRlZCI6ZmFsc2UsInR5cGUiOiJNdWx0aU5hbWVzcGFjZSJ9LHsic3VwcG9ydGVkIjp0cnVlLCJ0eXBlIjoiQWxsTmFtZXNwYWNlcyJ9XSwia2V5d29yZHMiOlsic2VydmljZS1tZXNoIiwib2JzZXJ2YWJpbGl0eSIsIm1vbml0b3JpbmciLCJtYWlzdHJhIiwiaXN0aW8iXSwibGFiZWxzIjp7Im5hbWUiOiJraWFsaS1vcGVyYXRvciJ9LCJsaW5rcyI6W3sibmFtZSI6Ikluc3RhbGxhdGlvbiBHdWlkZSIsInVybCI6Imh0dHBzOi8vd3d3LmtpYWxpLmlvL2RvY3MvaW5zdGFsbGF0aW9uIn0seyJuYW1lIjoiRmVhdHVyZXMiLCJ1cmwiOiJodHRwczovL3d3dy5raWFsaS5pby9kb2NzL2ZlYXR1cmVzIn0seyJuYW1lIjoiRG9jdW1lbnRhdGlvbiBIb21lIiwidXJsIjoiaHR0cHM6Ly93d3cua2lhbGkuaW8ifSx7Im5hbWUiOiJCbG9ncyBhbmQgQXJ0aWNsZXMiLCJ1cmwiOiJodHRwczovL21lZGl1bS5jb20va2lhbGlwcm9qZWN0In0seyJuYW1lIjoiU2VydmVyIGFuZCBVSSBTb3VyY2UgQ29kZSIsInVybCI6Imh0dHBzOi8vZ2l0aHViLmNvbS9raWFsaS9raWFsaSJ9LHsibmFtZSI6Ik9wZXJhdG9yIFNvdXJjZSBDb2RlIiwidXJsIjoiaHR0cHM6Ly9naXRodWIuY29tL2tpYWxpL2tpYWxpLW9wZXJhdG9yIn1dLCJtYWludGFpbmVycyI6W3siZW1haWwiOiJraWFsaS1kZXZAZ29vZ2xlZ3JvdXBzLmNvbSIsIm5hbWUiOiJLaWFsaSBEZXZlbG9wZXJzIEdvb2dsZSBHcm91cCJ9XSwibWF0dXJpdHkiOiJzdGFibGUiLCJwcm92aWRlciI6eyJuYW1lIjoiS2lhbGkifSwicmVwbGFjZXMiOiJraWFsaS1vcGVyYXRvci52MS43My4wIiwic2VsZWN0b3IiOnsibWF0Y2hMYWJlbHMiOnsibmFtZSI6ImtpYWxpLW9wZXJhdG9yIn19LCJ2ZXJzaW9uIjoiMS43NC4wIn19
relatedImages:
- image: quay.io/kiali/kiali-operator:v1.74.0
  name: ''
- image: quay.io/openshift-community-operators/kiali@sha256:e8af5453320a398262d550c7f90c6502390418a79232d65c317b5b7d6f15b8d7
  name: ''
schema: olm.bundle
---
image: quay.io/openshift-community-operators/kiali@sha256:f39e5412047eb0b14af4b81fcb8f1a9510dd3d168429c35f3f68454f42145bbd
name: kiali-operator.v1.75.0
package: kiali
properties:
- type: olm.gvk
  value:
    group: kiali.io
    kind: Kiali
    version: v1alpha1
- type: olm.package
  value:
    packageName: kiali
    version: 1.75.0
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImFwcCI6ImtpYWxpLW9wZXJhdG9yIn0sIm5hbWUiOiJraWFsaXMua2lhbGkuaW8ifSwic3BlYyI6eyJncm91cCI6ImtpYWxpLmlvIiwibmFtZXMiOnsia2luZCI6IktpYWxpIiwibGlzdEtpbmQiOiJLaWFsaUxpc3QiLCJwbHVyYWwiOiJraWFsaXMiLCJzaW5ndWxhciI6ImtpYWxpIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX19
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: quay.io/kiali/kiali-operator:v1.75.0
  name: ''
- image: quay.io/openshift-community-operators/kiali@sha256:f39e5412047eb0b14af4b81fcb8f1a9510dd3d168429c35f3f68454f42145bbd
  name: ''
schema: olm.bundle
---
image: quay.io/openshift-community-operators/kiali@sha256:c23df0a35c3b00ef15bd0a6dfb83a1182ee3cd1f521601e2441fb2aa69c14cbc
name: kiali-operator.v1.76.0
package: kiali
properties:
- type: olm.gvk
  value:
    group: kiali.io
    kind: Kiali
    version: v1alpha1
- type: olm.gvk
  value:
    group: kiali.io
    kind: OSSMConsole
    version: v1alpha1
- type: olm.package
  value:
    packageName: kiali
    version: 1.76.0
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImFwcCI6ImtpYWxpLW9wZXJhdG9yIiwiYXBwLmt1YmVybmV0ZXMuaW8vbmFtZSI6ImtpYWxpLW9wZXJhdG9yIn0sIm5hbWUiOiJvc3NtY29uc29sZXMua2lhbGkuaW8ifSwic3BlYyI6eyJncm91cCI6ImtpYWxpLmlvIiwibmFtZXMiOnsia2luZCI6Ik9TU01Db25zb2xlIiwibGlzdEtpbmQiOiJPU1NNQ29uc29sZUxpc3QiLCJwbHVyYWwiOiJvc3NtY29uc29sZXMiLCJzaW5ndWxhciI6Im9zc21jb25zb2xlIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImFwcCI6ImtpYWxpLW9wZXJhdG9yIn0sIm5hbWUiOiJraWFsaXMua2lhbGkuaW8ifSwic3BlYyI6eyJncm91cCI6ImtpYWxpLmlvIiwibmFtZXMiOnsia2luZCI6IktpYWxpIiwibGlzdEtpbmQiOiJLaWFsaUxpc3QiLCJwbHVyYWwiOiJraWFsaXMiLCJzaW5ndWxhciI6ImtpYWxpIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX19
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: quay.io/kiali/kiali-operator:v1.76.0
  name: ''
- image: quay.io/openshift-community-operators/kiali@sha256:c23df0a35c3b00ef15bd0a6dfb83a1182ee3cd1f521601e2441fb2aa69c14cbc
  name: ''
schema: olm.bundle
---
image: quay.io/openshift-community-operators/kiali@sha256:e4ca63d2193237c42bfcfc18b2d13cab929fa7bf577688754fdcac2fd369c91f
name: kiali-operator.v1.77.0
package: kiali
properties:
- type: olm.gvk
  value:
    group: kiali.io
    kind: Kiali
    version: v1alpha1
- type: olm.gvk
  value:
    group: kiali.io
    kind: OSSMConsole
    version: v1alpha1
- type: olm.package
  value:
    packageName: kiali
    version: 1.77.0
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImFwcCI6ImtpYWxpLW9wZXJhdG9yIiwiYXBwLmt1YmVybmV0ZXMuaW8vbmFtZSI6ImtpYWxpLW9wZXJhdG9yIn0sIm5hbWUiOiJvc3NtY29uc29sZXMua2lhbGkuaW8ifSwic3BlYyI6eyJncm91cCI6ImtpYWxpLmlvIiwibmFtZXMiOnsia2luZCI6Ik9TU01Db25zb2xlIiwibGlzdEtpbmQiOiJPU1NNQ29uc29sZUxpc3QiLCJwbHVyYWwiOiJvc3NtY29uc29sZXMiLCJzaW5ndWxhciI6Im9zc21jb25zb2xlIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImFwcCI6ImtpYWxpLW9wZXJhdG9yIn0sIm5hbWUiOiJraWFsaXMua2lhbGkuaW8ifSwic3BlYyI6eyJncm91cCI6ImtpYWxpLmlvIiwibmFtZXMiOnsia2luZCI6IktpYWxpIiwibGlzdEtpbmQiOiJLaWFsaUxpc3QiLCJwbHVyYWwiOiJraWFsaXMiLCJzaW5ndWxhciI6ImtpYWxpIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX19
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: quay.io/kiali/kiali-operator:v1.77.0
  name: ''
- image: quay.io/openshift-community-operators/kiali@sha256:e4ca63d2193237c42bfcfc18b2d13cab929fa7bf577688754fdcac2fd369c91f
  name: ''
schema: olm.bundle
---
image: quay.io/openshift-community-operators/kiali@sha256:9b181366961783987f8be079e8082cb52172751e403ae15930aad7d8ced88e3c
name: kiali-operator.v1.78.0
package: kiali
properties:
- type: olm.gvk
  value:
    group: kiali.io
    kind: Kiali
    version: v1alpha1
- type: olm.gvk
  value:
    group: kiali.io
    kind: OSSMConsole
    version: v1alpha1
- type: olm.package
  value:
    packageName: kiali
    version: 1.78.0
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImFwcCI6ImtpYWxpLW9wZXJhdG9yIiwiYXBwLmt1YmVybmV0ZXMuaW8vbmFtZSI6ImtpYWxpLW9wZXJhdG9yIn0sIm5hbWUiOiJvc3NtY29uc29sZXMua2lhbGkuaW8ifSwic3BlYyI6eyJncm91cCI6ImtpYWxpLmlvIiwibmFtZXMiOnsia2luZCI6Ik9TU01Db25zb2xlIiwibGlzdEtpbmQiOiJPU1NNQ29uc29sZUxpc3QiLCJwbHVyYWwiOiJvc3NtY29uc29sZXMiLCJzaW5ndWxhciI6Im9zc21jb25zb2xlIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImFwcCI6ImtpYWxpLW9wZXJhdG9yIn0sIm5hbWUiOiJraWFsaXMua2lhbGkuaW8ifSwic3BlYyI6eyJncm91cCI6ImtpYWxpLmlvIiwibmFtZXMiOnsia2luZCI6IktpYWxpIiwibGlzdEtpbmQiOiJLaWFsaUxpc3QiLCJwbHVyYWwiOiJraWFsaXMiLCJzaW5ndWxhciI6ImtpYWxpIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX19
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: quay.io/kiali/kiali-operator:v1.78.0
  name: ''
- image: quay.io/openshift-community-operators/kiali@sha256:9b181366961783987f8be079e8082cb52172751e403ae15930aad7d8ced88e3c
  name: ''
schema: olm.bundle
---
image: quay.io/community-operator-pipeline-prod/kiali@sha256:8766525edc0450128fb41b212f09b3e25a12bed7fcf7214f7984d646e22bd154
name: kiali-operator.v1.79.0
package: kiali
properties:
- type: olm.gvk
  value:
    group: kiali.io
    kind: Kiali
    version: v1alpha1
- type: olm.gvk
  value:
    group: kiali.io
    kind: OSSMConsole
    version: v1alpha1
- type: olm.package
  value:
    packageName: kiali
    version: 1.79.0
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImFwcCI6ImtpYWxpLW9wZXJhdG9yIiwiYXBwLmt1YmVybmV0ZXMuaW8vbmFtZSI6ImtpYWxpLW9wZXJhdG9yIn0sIm5hbWUiOiJvc3NtY29uc29sZXMua2lhbGkuaW8ifSwic3BlYyI6eyJncm91cCI6ImtpYWxpLmlvIiwibmFtZXMiOnsia2luZCI6Ik9TU01Db25zb2xlIiwibGlzdEtpbmQiOiJPU1NNQ29uc29sZUxpc3QiLCJwbHVyYWwiOiJvc3NtY29uc29sZXMiLCJzaW5ndWxhciI6Im9zc21jb25zb2xlIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImFwcCI6ImtpYWxpLW9wZXJhdG9yIn0sIm5hbWUiOiJraWFsaXMua2lhbGkuaW8ifSwic3BlYyI6eyJncm91cCI6ImtpYWxpLmlvIiwibmFtZXMiOnsia2luZCI6IktpYWxpIiwibGlzdEtpbmQiOiJLaWFsaUxpc3QiLCJwbHVyYWwiOiJraWFsaXMiLCJzaW5ndWxhciI6ImtpYWxpIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX19
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: quay.io/community-operator-pipeline-prod/kiali@sha256:8766525edc0450128fb41b212f09b3e25a12bed7fcf7214f7984d646e22bd154
  name: ''
- image: quay.io/kiali/kiali-operator:v1.79.0
  name: ''
schema: olm.bundle
---
image: quay.io/community-operator-pipeline-prod/kiali@sha256:509711f2426bba107899fec9930b0d25011157e03502af20fe89146b1c5db263
name: kiali-operator.v1.80.0
package: kiali
properties:
- type: olm.gvk
  value:
    group: kiali.io
    kind: Kiali
    version: v1alpha1
- type: olm.gvk
  value:
    group: kiali.io
    kind: OSSMConsole
    version: v1alpha1
- type: olm.package
  value:
    packageName: kiali
    version: 1.80.0
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImFwcCI6ImtpYWxpLW9wZXJhdG9yIiwiYXBwLmt1YmVybmV0ZXMuaW8vbmFtZSI6ImtpYWxpLW9wZXJhdG9yIn0sIm5hbWUiOiJvc3NtY29uc29sZXMua2lhbGkuaW8ifSwic3BlYyI6eyJncm91cCI6ImtpYWxpLmlvIiwibmFtZXMiOnsia2luZCI6Ik9TU01Db25zb2xlIiwibGlzdEtpbmQiOiJPU1NNQ29uc29sZUxpc3QiLCJwbHVyYWwiOiJvc3NtY29uc29sZXMiLCJzaW5ndWxhciI6Im9zc21jb25zb2xlIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImFwcCI6ImtpYWxpLW9wZXJhdG9yIn0sIm5hbWUiOiJraWFsaXMua2lhbGkuaW8ifSwic3BlYyI6eyJncm91cCI6ImtpYWxpLmlvIiwibmFtZXMiOnsia2luZCI6IktpYWxpIiwibGlzdEtpbmQiOiJLaWFsaUxpc3QiLCJwbHVyYWwiOiJraWFsaXMiLCJzaW5ndWxhciI6ImtpYWxpIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX19
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: quay.io/community-operator-pipeline-prod/kiali@sha256:509711f2426bba107899fec9930b0d25011157e03502af20fe89146b1c5db263
  name: ''
- image: quay.io/kiali/kiali-operator:v1.80.0
  name: ''
schema: olm.bundle
---
image: quay.io/community-operator-pipeline-prod/kiali@sha256:efdb12716f62ad0fc5bf0f8b6926ef6d293fb5a0eb0cf7c2f39a37bab3b974d2
name: kiali-operator.v1.81.0
package: kiali
properties:
- type: olm.gvk
  value:
    group: kiali.io
    kind: Kiali
    version: v1alpha1
- type: olm.gvk
  value:
    group: kiali.io
    kind: OSSMConsole
    version: v1alpha1
- type: olm.package
  value:
    packageName: kiali
    version: 1.81.0
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImFwcCI6ImtpYWxpLW9wZXJhdG9yIiwiYXBwLmt1YmVybmV0ZXMuaW8vbmFtZSI6ImtpYWxpLW9wZXJhdG9yIn0sIm5hbWUiOiJvc3NtY29uc29sZXMua2lhbGkuaW8ifSwic3BlYyI6eyJncm91cCI6ImtpYWxpLmlvIiwibmFtZXMiOnsia2luZCI6Ik9TU01Db25zb2xlIiwibGlzdEtpbmQiOiJPU1NNQ29uc29sZUxpc3QiLCJwbHVyYWwiOiJvc3NtY29uc29sZXMiLCJzaW5ndWxhciI6Im9zc21jb25zb2xlIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImFwcCI6ImtpYWxpLW9wZXJhdG9yIn0sIm5hbWUiOiJraWFsaXMua2lhbGkuaW8ifSwic3BlYyI6eyJncm91cCI6ImtpYWxpLmlvIiwibmFtZXMiOnsia2luZCI6IktpYWxpIiwibGlzdEtpbmQiOiJLaWFsaUxpc3QiLCJwbHVyYWwiOiJraWFsaXMiLCJzaW5ndWxhciI6ImtpYWxpIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX19
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: quay.io/community-operator-pipeline-prod/kiali@sha256:efdb12716f62ad0fc5bf0f8b6926ef6d293fb5a0eb0cf7c2f39a37bab3b974d2
  name: ''
- image: quay.io/kiali/kiali-operator:v1.81.0
  name: ''
schema: olm.bundle
---
image: quay.io/community-operator-pipeline-prod/kiali@sha256:7a09269466c42ce471d152daf045febc86bbcbfcb3f6e69c622300c2280de640
name: kiali-operator.v1.82.0
package: kiali
properties:
- type: olm.gvk
  value:
    group: kiali.io
    kind: Kiali
    version: v1alpha1
- type: olm.gvk
  value:
    group: kiali.io
    kind: OSSMConsole
    version: v1alpha1
- type: olm.package
  value:
    packageName: kiali
    version: 1.82.0
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImFwcCI6ImtpYWxpLW9wZXJhdG9yIiwiYXBwLmt1YmVybmV0ZXMuaW8vbmFtZSI6ImtpYWxpLW9wZXJhdG9yIn0sIm5hbWUiOiJvc3NtY29uc29sZXMua2lhbGkuaW8ifSwic3BlYyI6eyJncm91cCI6ImtpYWxpLmlvIiwibmFtZXMiOnsia2luZCI6Ik9TU01Db25zb2xlIiwibGlzdEtpbmQiOiJPU1NNQ29uc29sZUxpc3QiLCJwbHVyYWwiOiJvc3NtY29uc29sZXMiLCJzaW5ndWxhciI6Im9zc21jb25zb2xlIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImFwcCI6ImtpYWxpLW9wZXJhdG9yIn0sIm5hbWUiOiJraWFsaXMua2lhbGkuaW8ifSwic3BlYyI6eyJncm91cCI6ImtpYWxpLmlvIiwibmFtZXMiOnsia2luZCI6IktpYWxpIiwibGlzdEtpbmQiOiJLaWFsaUxpc3QiLCJwbHVyYWwiOiJraWFsaXMiLCJzaW5ndWxhciI6ImtpYWxpIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX19
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: quay.io/community-operator-pipeline-prod/kiali@sha256:7a09269466c42ce471d152daf045febc86bbcbfcb3f6e69c622300c2280de640
  name: ''
- image: quay.io/kiali/kiali-operator:v1.82.0
  name: ''
schema: olm.bundle
---
image: quay.io/community-operator-pipeline-prod/kiali@sha256:3af955be39d83b46d448aeb09faf21fbdc089670de274ef3a3f5e3a8b244d3bd
name: kiali-operator.v1.83.0
package: kiali
properties:
- type: olm.gvk
  value:
    group: kiali.io
    kind: Kiali
    version: v1alpha1
- type: olm.gvk
  value:
    group: kiali.io
    kind: OSSMConsole
    version: v1alpha1
- type: olm.package
  value:
    packageName: kiali
    version: 1.83.0
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImFwcCI6ImtpYWxpLW9wZXJhdG9yIiwiYXBwLmt1YmVybmV0ZXMuaW8vbmFtZSI6ImtpYWxpLW9wZXJhdG9yIn0sIm5hbWUiOiJvc3NtY29uc29sZXMua2lhbGkuaW8ifSwic3BlYyI6eyJncm91cCI6ImtpYWxpLmlvIiwibmFtZXMiOnsia2luZCI6Ik9TU01Db25zb2xlIiwibGlzdEtpbmQiOiJPU1NNQ29uc29sZUxpc3QiLCJwbHVyYWwiOiJvc3NtY29uc29sZXMiLCJzaW5ndWxhciI6Im9zc21jb25zb2xlIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImFwcCI6ImtpYWxpLW9wZXJhdG9yIn0sIm5hbWUiOiJraWFsaXMua2lhbGkuaW8ifSwic3BlYyI6eyJncm91cCI6ImtpYWxpLmlvIiwibmFtZXMiOnsia2luZCI6IktpYWxpIiwibGlzdEtpbmQiOiJLaWFsaUxpc3QiLCJwbHVyYWwiOiJraWFsaXMiLCJzaW5ndWxhciI6ImtpYWxpIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoib3BlcmF0b3JzLmNvcmVvcy5jb20vdjFhbHBoYTEiLCJraW5kIjoiQ2x1c3RlclNlcnZpY2VWZXJzaW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiYWxtLWV4YW1wbGVzIjoiW1xuICB7XG4gICAgXCJhcGlWZXJzaW9uXCI6IFwia2lhbGkuaW8vdjFhbHBoYTFcIixcbiAgICBcImtpbmRcIjogXCJLaWFsaVwiLFxuICAgIFwibWV0YWRhdGFcIjoge1xuICAgICAgXCJuYW1lXCI6IFwia2lhbGlcIlxuICAgIH0sXG4gICAgXCJzcGVjXCI6IHtcbiAgICAgIFwidmVyc2lvblwiOiBcImRlZmF1bHRcIixcbiAgICAgIFwiaXN0aW9fbmFtZXNwYWNlXCI6IFwiaXN0aW8tc3lzdGVtXCIsXG4gICAgICBcImRlcGxveW1lbnRcIjoge1xuICAgICAgICBcImxvZ2dlclwiOiB7XG4gICAgICAgICAgXCJsb2dfbGV2ZWxcIjogXCJpbmZvXCJcbiAgICAgICAgfSxcbiAgICAgICAgXCJ2aWV3X29ubHlfbW9kZVwiOiBmYWxzZVxuICAgICAgfVxuICAgIH1cbiAgfSxcbiAge1xuICAgIFwiYXBpVmVyc2lvblwiOiBcImtpYWxpLmlvL3YxYWxwaGExXCIsXG4gICAgXCJraW5kXCI6IFwiT1NTTUNvbnNvbGVcIixcbiAgICBcIm1ldGFkYXRhXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIm9zc21jb25zb2xlXCJcbiAgICB9LFxuICAgIFwic3BlY1wiOiB7XG4gICAgICBcInZlcnNpb25cIjogXCJkZWZhdWx0XCIsXG4gICAgICBcImtpYWxpXCI6IHtcbiAgICAgICAgXCJzZXJ2aWNlTmFtZVwiOiBcIlwiLFxuICAgICAgICBcInNlcnZpY2VOYW1lc3BhY2VcIjogXCJcIlxuICAgICAgfVxuICAgIH1cbiAgfVxuXSIsImNhcGFiaWxpdGllcyI6IkRlZXAgSW5zaWdodHMiLCJjYXRlZ29yaWVzIjoiTW9uaXRvcmluZyxMb2dnaW5nIFx1MDAyNiBUcmFjaW5nIiwiY2VydGlmaWVkIjoiZmFsc2UiLCJjb250YWluZXJJbWFnZSI6InF1YXkuaW8va2lhbGkva2lhbGktb3BlcmF0b3I6djEuODMuMCIsImNyZWF0ZWRBdCI6IjIwMjQtMDQtMTVUMDc6MTM6MjZaIiwiZGVzY3JpcHRpb24iOiJUaGlzIGNvbW11bml0eSBvcGVyYXRvciBwcm92aWRlcyBLaWFsaSBhbmQgT1NTTUMuIEtpYWxpIGlzIHRoZSBJc3RpbyBvYnNlcnZhYmlsaXR5IGFuZCBtYW5hZ2VtZW50IENvbnNvbGUuIE9TU01DIGlzIHRoZSBPcGVuU2hpZnQgU2VydmljZSBNZXNoIENvbnNvbGUgcGx1Z2luLCBwb3dlcmVkIGJ5IEtpYWxpLiIsIm9sbS5za2lwUmFuZ2UiOiJcdTAwM2U9MS4wLjAgXHUwMDNjMS44My4wIiwicmVwb3NpdG9yeSI6Imh0dHBzOi8vZ2l0aHViLmNvbS9raWFsaS9raWFsaSIsInN1cHBvcnQiOiJLaWFsaSJ9LCJsYWJlbHMiOnsib3BlcmF0b3JmcmFtZXdvcmsuaW8vYXJjaC5hbWQ2NCI6InN1cHBvcnRlZCIsIm9wZXJhdG9yZnJhbWV3b3JrLmlvL2FyY2guYXJtNjQiOiJzdXBwb3J0ZWQiLCJvcGVyYXRvcmZyYW1ld29yay5pby9hcmNoLnBwYzY0bGUiOiJzdXBwb3J0ZWQiLCJvcGVyYXRvcmZyYW1ld29yay5pby9hcmNoLnMzOTB4Ijoic3VwcG9ydGVkIn0sIm5hbWUiOiJraWFsaS1vcGVyYXRvci52MS44My4wIiwibmFtZXNwYWNlIjoicGxhY2Vob2xkZXIifSwic3BlYyI6eyJhcGlzZXJ2aWNlZGVmaW5pdGlvbnMiOnt9LCJjdXN0b21yZXNvdXJjZWRlZmluaXRpb25zIjp7Im93bmVkIjpbeyJkZXNjcmlwdGlvbiI6IkEgY29uZmlndXJhdGlvbiBmaWxlIGZvciBhIEtpYWxpIGluc3RhbGxhdGlvbi4iLCJkaXNwbGF5TmFtZSI6IktpYWxpIiwiZ3JvdXAiOiJraWFsaS5pbyIsImtpbmQiOiJLaWFsaSIsIm5hbWUiOiJraWFsaXMua2lhbGkuaW8iLCJyZXNvdXJjZXMiOlt7ImtpbmQiOiJEZXBsb3ltZW50IiwidmVyc2lvbiI6ImFwcHMvdjEifSx7ImtpbmQiOiJQb2QiLCJ2ZXJzaW9uIjoidjEifSx7ImtpbmQiOiJTZXJ2aWNlIiwidmVyc2lvbiI6InYxIn0seyJraW5kIjoiQ29uZmlnTWFwIiwidmVyc2lvbiI6InYxIn0seyJraW5kIjoiT0F1dGhDbGllbnQiLCJ2ZXJzaW9uIjoib2F1dGgub3BlbnNoaWZ0LmlvL3YxIn0seyJraW5kIjoiUm91dGUiLCJ2ZXJzaW9uIjoicm91dGUub3BlbnNoaWZ0LmlvL3YxIn0seyJraW5kIjoiQ29uc29sZUxpbmsiLCJ2ZXJzaW9uIjoiY29uc29sZWxpbmtzLmNvbnNvbGUub3BlbnNoaWZ0LmlvL3YxIn1dLCJzcGVjRGVzY3JpcHRvcnMiOlt7ImRlc2NyaXB0aW9uIjoiVGhlIHZlcnNpb24gb2YgdGhlIEtpYWxpIFNlcnZlciB0byBpbnN0YWxsLiBUaGlzIGlzIHNwZWNpZmllZCBpbiB0aGUgZm9ybSAndlguWScuIENoZWNrIHRoZSBkb2N1bWVudGF0aW9uIGZvciB0aGUgdmFsdWVzIHRoYXQgYXJlIHZhbGlkIGFuZCBzdXBwb3J0ZWQuIFdoZW4gbm90IHNwZWNpZmllZCwgb3Igd2hlbiBzZXQgdG8gdGhlIHN0cmluZyAnZGVmYXVsdCcsIHRoZSBsYXRlc3Qgc3VwcG9ydGVkIHZlcnNpb24gb2YgdGhlIEtpYWxpIFNlcnZlciB3aWxsIGJlIGluc3RhbGxlZC4gRGVmYXVsdDogZGVmYXVsdCIsImRpc3BsYXlOYW1lIjoiVmVyc2lvbiIsInBhdGgiOiJ2ZXJzaW9uIiwieC1kZXNjcmlwdG9ycyI6WyJ1cm46YWxtOmRlc2NyaXB0b3I6Y29tLnRlY3RvbmljLnVpOnRleHQiXX0seyJkZXNjcmlwdGlvbiI6IlRoZSBuYW1lc3BhY2Ugd2hlcmUgdGhlIElzdGlvIGNvbnRyb2wgcGxhbmUgaXMgaW5zdGFsbGVkLiBEZWZhdWx0OiBpc3Rpby1zeXN0ZW0iLCJkaXNwbGF5TmFtZSI6IklzdGlvIE5hbWVzcGFjZSIsInBhdGgiOiJkZXBsb3ltZW50LmlzdGlvX25hbWVzcGFjZSIsIngtZGVzY3JpcHRvcnMiOlsidXJuOmFsbTpkZXNjcmlwdG9yOmNvbS50ZWN0b25pYy51aTp0ZXh0Il19LHsiZGVzY3JpcHRpb24iOiJEZXRlcm1pbmVzIHRoZSBwcmlvcml0eSBsZXZlbHMgb2YgbG9nIG1lc3NhZ2VzIEtpYWxpIHdpbGwgb3V0cHV0LiBUeXBpY2FsIHZhbHVlcyBhcmUgJ2luZm8nLCAnZGVidWcnLCBvciAndHJhY2UnLiBEZWZhdWx0OiBpbmZvIiwiZGlzcGxheU5hbWUiOiJMb2cgTGV2ZWwiLCJwYXRoIjoiZGVwbG95bWVudC5sb2dnZXIubG9nX2xldmVsIiwieC1kZXNjcmlwdG9ycyI6WyJ1cm46YWxtOmRlc2NyaXB0b3I6Y29tLnRlY3RvbmljLnVpOnNlbGVjdDppbmZvIiwidXJuOmFsbTpkZXNjcmlwdG9yOmNvbS50ZWN0b25pYy51aTpzZWxlY3Q6ZGVidWciLCJ1cm46YWxtOmRlc2NyaXB0b3I6Y29tLnRlY3RvbmljLnVpOnNlbGVjdDp0cmFjZSIsInVybjphbG06ZGVzY3JpcHRvcjpjb20udGVjdG9uaWMudWk6c2VsZWN0Ondhcm4iLCJ1cm46YWxtOmRlc2NyaXB0b3I6Y29tLnRlY3RvbmljLnVpOnNlbGVjdDplcnJvciJdfSx7ImRlc2NyaXB0aW9uIjoiV2hlbiB0cnVlLCBLaWFsaSB3aWxsIGJlIGluICd2aWV3IG9ubHknIG1vZGUsIGFsbG93aW5nIHRoZSB1c2VyIHRvIHZpZXcgYW5kIHJldHJpZXZlIG1hbmFnZW1lbnQgYW5kIG1vbml0b3JpbmcgZGF0YSBmb3IgdGhlIHNlcnZpY2UgbWVzaCwgYnV0IG5vdCBhbGxvdyB0aGUgdXNlciB0byBtb2RpZnkgdGhlIHNlcnZpY2UgbWVzaC4gRGVmYXVsdDogZmFsc2UiLCJkaXNwbGF5TmFtZSI6IlZpZXcgT25seSBNb2RlIiwicGF0aCI6ImRlcGxveW1lbnQudmlld19vbmx5X21vZGUiLCJ4LWRlc2NyaXB0b3JzIjpbInVybjphbG06ZGVzY3JpcHRvcjpjb20udGVjdG9uaWMudWk6Ym9vbGVhblN3aXRjaCJdfV0sInZlcnNpb24iOiJ2MWFscGhhMSJ9LHsiZGVzY3JpcHRpb24iOiJBIGNvbmZpZ3VyYXRpb24gZmlsZSBmb3IgYSBPcGVuU2hpZnQgU2VydmljZSBNZXNoIENvbnNvbGUgaW5zdGFsbGF0aW9uLiIsImRpc3BsYXlOYW1lIjoiT3BlblNoaWZ0IFNlcnZpY2UgTWVzaCBDb25zb2xlIiwiZ3JvdXAiOiJraWFsaS5pbyIsImtpbmQiOiJPU1NNQ29uc29sZSIsIm5hbWUiOiJvc3NtY29uc29sZXMua2lhbGkuaW8iLCJyZXNvdXJjZXMiOlt7ImtpbmQiOiJEZXBsb3ltZW50IiwidmVyc2lvbiI6ImFwcHMvdjEifSx7ImtpbmQiOiJQb2QiLCJ2ZXJzaW9uIjoidjEifSx7ImtpbmQiOiJDb25maWdNYXAiLCJ2ZXJzaW9uIjoidjEifV0sInNwZWNEZXNjcmlwdG9ycyI6W3siZGVzY3JpcHRpb24iOiJUaGUgdmVyc2lvbiBvZiBPU1NNQyB0byBpbnN0YWxsLiBUaGlzIGlzIHNwZWNpZmllZCBpbiB0aGUgZm9ybSAndlguWScuIENoZWNrIHRoZSBkb2N1bWVudGF0aW9uIGZvciB0aGUgdmFsdWVzIHRoYXQgYXJlIHZhbGlkIGFuZCBzdXBwb3J0ZWQuIFdoZW4gbm90IHNwZWNpZmllZCwgb3Igd2hlbiBzZXQgdG8gdGhlIHN0cmluZyAnZGVmYXVsdCcsIHRoZSBsYXRlc3Qgc3VwcG9ydGVkIHZlcnNpb24gb2YgT1NTTUMgd2lsbCBiZSBpbnN0YWxsZWQuIFlvdSBtdXN0IGVuc3VyZSB0aGlzIHZhbHVlIGlzIHRoZSBzYW1lIGFzIHRoZSBzcGVjLnZlcnNpb24gZmllbGQgaW4gdGhlIEtpYWxpIENSIHRoYXQgd2FzIHVzZWQgdG8gaW5zdGFsbCB0aGUgS2lhbGkgU2VydmVyLCBvdGhlcndpc2UgeW91IGFyZSBub3QgZ3VhcmFudGVlZCBPU1NNQyB3aWxsIHdvcmsgcHJvcGVybHkuIERlZmF1bHQ6IGRlZmF1bHQiLCJkaXNwbGF5TmFtZSI6IlZlcnNpb24iLCJwYXRoIjoidmVyc2lvbiIsIngtZGVzY3JpcHRvcnMiOlsidXJuOmFsbTpkZXNjcmlwdG9yOmNvbS50ZWN0b25pYy51aTp0ZXh0Il19LHsiZGVzY3JpcHRpb24iOiJUaGUgaW50ZXJuYWwgS2lhbGkgc2VydmljZSB0aGF0IHRoZSBPUyBDb25zb2xlIHdpbGwgdXNlIHRvIHByb3h5IEFQSSBjYWxscy4gSWYgZW1wdHksIGFuIGF0dGVtcHQgd2lsbCBiZSBtYWRlIHRvIGF1dG8tZGlzY292ZXIgaXQgZnJvbSB0aGUgS2lhbGkgT3BlblNoaWZ0IFJvdXRlLiIsImRpc3BsYXlOYW1lIjoiS2lhbGkgU2VydmljZSBOYW1lIiwicGF0aCI6ImtpYWxpLnNlcnZpY2VOYW1lIiwieC1kZXNjcmlwdG9ycyI6WyJ1cm46YWxtOmRlc2NyaXB0b3I6Y29tLnRlY3RvbmljLnVpOnRleHQiXX0seyJkZXNjcmlwdGlvbiI6IlRoZSBuYW1lc3BhY2Ugd2hlcmUgdGhlIEtpYWxpIHNlcnZpY2UgaXMgZGVwbG95ZWQuIElmIGVtcHR5LCBhbiBhdHRlbXB0IHdpbGwgYmUgbWFkZSB0byBhdXRvLWRpc2NvdmVyIGl0IGZyb20gdGhlIEtpYWxpIE9wZW5TaGlmdCBSb3V0ZS4gSXQgd2lsbCBhc3N1bWUgdGhhdCB0aGUgT3BlblNoaWZ0IFJvdXRlIGFuZCB0aGUgS2lhbGkgc2VydmljZSBhcmUgZGVwbG95ZWQgaW4gdGhlIHNhbWUgbmFtZXNwYWNlLiIsImRpc3BsYXlOYW1lIjoiS2lhbGkgU2VydmljZSBOYW1lc3BhY2UiLCJwYXRoIjoia2lhbGkuc2VydmljZU5hbWVzcGFjZSIsIngtZGVzY3JpcHRvcnMiOlsidXJuOmFsbTpkZXNjcmlwdG9yOmNvbS50ZWN0b25pYy51aTp0ZXh0Il19XSwidmVyc2lvbiI6InYxYWxwaGExIn1dfSwiZGVzY3JpcHRpb24iOiIjIyBBYm91dCB0aGUgbWFuYWdlZCBhcHBsaWNhdGlvblxuXG5BIE1pY3Jvc2VydmljZSBBcmNoaXRlY3R1cmUgYnJlYWtzIHVwIHRoZSBtb25vbGl0aCBpbnRvIG1hbnkgc21hbGxlciBwaWVjZXNcbnRoYXQgYXJlIGNvbXBvc2VkIHRvZ2V0aGVyLiBQYXR0ZXJucyB0byBzZWN1cmUgdGhlIGNvbW11bmljYXRpb24gYmV0d2Vlblxuc2VydmljZXMgbGlrZSBmYXVsdCB0b2xlcmFuY2UgKHZpYSB0aW1lb3V0LCByZXRyeSwgY2lyY3VpdCBicmVha2luZywgZXRjLilcbmhhdmUgY29tZSB1cCBhcyB3ZWxsIGFzIGRpc3RyaWJ1dGVkIHRyYWNpbmcgdG8gYmUgYWJsZSB0byBzZWUgd2hlcmUgY2FsbHNcbmFyZSBnb2luZy5cblxuQSBzZXJ2aWNlIG1lc2ggY2FuIG5vdyBwcm92aWRlIHRoZXNlIHNlcnZpY2VzIG9uIGEgcGxhdGZvcm0gbGV2ZWwgYW5kIGZyZWVzXG50aGUgYXBwbGljYXRpb24gd3JpdGVycyBmcm9tIHRob3NlIHRhc2tzLiBSb3V0aW5nIGRlY2lzaW9ucyBhcmUgZG9uZSBhdCB0aGVcbm1lc2ggbGV2ZWwuXG5cbktpYWxpIHdvcmtzIHdpdGggSXN0aW8sIGluIE9wZW5TaGlmdCBvciBLdWJlcm5ldGVzLCB0byB2aXN1YWxpemUgdGhlIHNlcnZpY2Vcbm1lc2ggdG9wb2xvZ3ksIHRvIHByb3ZpZGUgdmlzaWJpbGl0eSBpbnRvIGZlYXR1cmVzIGxpa2UgY2lyY3VpdCBicmVha2VycyxcbnJlcXVlc3QgcmF0ZXMgYW5kIG1vcmUuIEl0IG9mZmVycyBpbnNpZ2h0cyBhYm91dCB0aGUgbWVzaCBjb21wb25lbnRzIGF0XG5kaWZmZXJlbnQgbGV2ZWxzLCBmcm9tIGFic3RyYWN0IEFwcGxpY2F0aW9ucyB0byBTZXJ2aWNlcyBhbmQgV29ya2xvYWRzLlxuXG5TZWUgW2h0dHBzOi8vd3d3LmtpYWxpLmlvXShodHRwczovL3d3dy5raWFsaS5pbykgdG8gcmVhZCBtb3JlLlxuXG4jIyMgQWNjZXNzaW5nIHRoZSBVSVxuXG5CeSBkZWZhdWx0LCB0aGUgS2lhbGkgb3BlcmF0b3IgZXhwb3NlcyB0aGUgS2lhbGkgVUkgYXMgYW4gT3BlblNoaWZ0IFJvdXRlLlxuXG5JZiBvbiBPcGVuU2hpZnQsIHlvdSBjYW4gY3JlYXRlIGFuIE9TU01Db25zb2xlIENSIHRvIGhhdmUgdGhlIG9wZXJhdG9yXG5pbnN0YWxsIHRoZSBPcGVuU2hpZnQgU2VydmljZU1lc2ggQ29uc29sZSBwbHVnaW4gdG8gdGhlIE9wZW5TaGlmdCBDb25zb2xlXG50aHVzIHByb3ZpZGluZyBhbiBpbnRlcmZhY2UgZGlyZWN0bHkgaW50ZWdyYXRlZCB3aXRoIHRoZSBPcGVuU2hpZnQgQ29uc29sZS5cblxuIyMgQWJvdXQgdGhpcyBPcGVyYXRvclxuXG4jIyMgS2lhbGkgQ3VzdG9tIFJlc291cmNlIENvbmZpZ3VyYXRpb24gU2V0dGluZ3NcblxuRm9yIHF1aWNrIGRlc2NyaXB0aW9ucyBvZiBhbGwgdGhlIHNldHRpbmdzIHlvdSBjYW4gY29uZmlndXJlIGluIHRoZSBLaWFsaVxuQ3VzdG9tIFJlc291cmNlIChDUiksIHNlZVxuW3RoZSBraWFsaS5pbyBkb2NzXShodHRwczovL2tpYWxpLmlvL2RvY3MvY29uZmlndXJhdGlvbi9raWFsaXMua2lhbGkuaW8vKS5cblxuIyMgUHJlcmVxdWlzaXRlcyBmb3IgZW5hYmxpbmcgdGhpcyBPcGVyYXRvclxuXG5Ub2RheSBLaWFsaSB3b3JrcyB3aXRoIElzdGlvLiBTbyBiZWZvcmUgeW91IGluc3RhbGwgS2lhbGksIHlvdSBtdXN0IGhhdmVcbmFscmVhZHkgaW5zdGFsbGVkIElzdGlvLlxuSWYgeW91IGFscmVhZHkgaGF2ZSBLaWFsaSBpbiB5b3VyIElzdGlvIGVudmlyb25tZW50IGFuZCB5b3Ugd2FudCB0b1xuaW5zdGFsbCBLaWFsaSB2aWEgdGhlIEtpYWxpIE9wZXJhdG9yLCB1bmluc3RhbGwgdGhlIGluc3RhbGxlZCBLaWFsaSBmaXJzdC4iLCJkaXNwbGF5TmFtZSI6IktpYWxpIENvbW11bml0eSBPcGVyYXRvciIsImljb24iOlt7ImJhc2U2NGRhdGEiOiJQRDk0Yld3Z2RtVnljMmx2YmowaU1TNHdJaUJsYm1OdlpHbHVaejBpZFhSbUxUZ2lQejRLUENFdExTQkhaVzVsY21GMGIzSTZJRUZrYjJKbElFbHNiSFZ6ZEhKaGRHOXlJREl5TGpBdU1Td2dVMVpISUVWNGNHOXlkQ0JRYkhWbkxVbHVJQzRnVTFaSElGWmxjbk5wYjI0NklEWXVNREFnUW5WcGJHUWdNQ2tnSUMwdFBnbzhjM1puSUhabGNuTnBiMjQ5SWpFdU1TSWdhV1E5SWt4aGVXVnlYekVpSUhodGJHNXpQU0pvZEhSd09pOHZkM2QzTG5jekxtOXlaeTh5TURBd0wzTjJaeUlnZUcxc2JuTTZlR3hwYm1zOUltaDBkSEE2THk5M2QzY3Vkek11YjNKbkx6RTVPVGt2ZUd4cGJtc2lJSGc5SWpCd2VDSWdlVDBpTUhCNElnb0pJSFpwWlhkQ2IzZzlJakFnTUNBeE1qZ3dJREV5T0RBaUlITjBlV3hsUFNKbGJtRmliR1V0WW1GamEyZHliM1Z1WkRwdVpYY2dNQ0F3SURFeU9EQWdNVEk0TURzaUlIaHRiRHB6Y0dGalpUMGljSEpsYzJWeWRtVWlQZ284YzNSNWJHVWdkSGx3WlQwaWRHVjRkQzlqYzNNaVBnb0pMbk4wTUh0bWFXeHNPaU13TVRNeE5EUTdmUW9KTG5OME1YdG1hV3hzT2lNd01Ea3pSRVE3ZlFvOEwzTjBlV3hsUGdvOFp6NEtDVHh3WVhSb0lHTnNZWE56UFNKemREQWlJR1E5SWswNE1UQXVPU3d4T0RBdU9XTXRNalV6TGpZc01DMDBOVGt1TVN3eU1EVXVOUzAwTlRrdU1TdzBOVGt1TVhNeU1EVXVOU3cwTlRrdU1TdzBOVGt1TVN3ME5Ua3VNVk14TWpjd0xEZzVNeTQyTERFeU56QXNOalF3Q2drSlV6RXdOalF1TlN3eE9EQXVPU3c0TVRBdU9Td3hPREF1T1hvZ1RUZ3hNQzQ1TERFd01qa3VNbU10TWpFMUxEQXRNemc1TGpJdE1UYzBMak10TXpnNUxqSXRNemc1TGpKak1DMHlNVFVzTVRjMExqTXRNemc1TGpJc016ZzVMakl0TXpnNUxqSlRNVEl3TUM0eExEUXlOU3d4TWpBd0xqRXNOalF3Q2drSlV6RXdNalV1T1N3eE1ESTVMaklzT0RFd0xqa3NNVEF5T1M0eWVpSXZQZ29KUEhCaGRHZ2dZMnhoYzNNOUluTjBNU0lnWkQwaVRUWTFNeTR6TERJNE5HTXRNVE0yTGpRc05qQXVOUzB5TXpFdU5pd3hPVGN1TVMweU16RXVOaXd6TlRaak1Dd3hOVGd1T0N3NU5TNHlMREk1TlM0MUxESXpNUzQyTERNMU5tTTVPQzQwTFRnM0xqRXNNVFl3TGpRdE1qRTBMak1zTVRZd0xqUXRNelUyQ2drSlF6Z3hNeTQzTERRNU9DNHpMRGMxTVM0MkxETTNNUzR4TERZMU15NHpMREk0TkhvaUx6NEtDVHh3WVhSb0lHTnNZWE56UFNKemRERWlJR1E5SWswek5URXVPQ3cyTkRCak1DMHhNRGt1T0N3ek9DNDJMVEl4TUM0MUxERXdNaTQ0TFRJNE9TNDFZeTB6T1M0MkxURTRMakl0T0RNdU5pMHlPQzR6TFRFek1DMHlPQzR6UXpFMU1DNDVMRE15TWk0eUxERXdMRFEyTkM0MUxERXdMRFkwTUFvSkNYTXhOREF1T1N3ek1UY3VPQ3d6TVRRdU5pd3pNVGN1T0dNME5pNHpMREFzT1RBdU5DMHhNQzR4TERFek1DMHlPQzR6UXpNNU1DNHpMRGcxTUM0MUxETTFNUzQ0TERjME9TNDRMRE0xTVM0NExEWTBNSG9pTHo0S1BDOW5QZ284TDNOMlp6NEsiLCJtZWRpYXR5cGUiOiJpbWFnZS9zdmcreG1sIn1dLCJpbnN0YWxsIjp7InNwZWMiOnsiY2x1c3RlclBlcm1pc3Npb25zIjpbeyJydWxlcyI6W3siYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsiY29uZmlnbWFwcyIsImVuZHBvaW50cyIsInBvZHMiLCJzZXJ2aWNlYWNjb3VudHMiLCJzZXJ2aWNlcyIsInNlcnZpY2VzL2ZpbmFsaXplcnMiXSwidmVyYnMiOlsiY3JlYXRlIiwiZGVsZXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJuYW1lc3BhY2VzIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJwYXRjaCJdfSx7ImFwaUdyb3VwcyI6WyIiXSwicmVzb3VyY2VzIjpbInNlY3JldHMiXSwidmVyYnMiOlsiY3JlYXRlIiwibGlzdCIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZU5hbWVzIjpbImNhY2VydHMiLCJpc3Rpby1jYS1zZWNyZXQiXSwicmVzb3VyY2VzIjpbInNlY3JldHMiXSwidmVyYnMiOlsiZ2V0Il19LHsiYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZU5hbWVzIjpbImtpYWxpLXNpZ25pbmcta2V5Il0sInJlc291cmNlcyI6WyJzZWNyZXRzIl0sInZlcmJzIjpbImRlbGV0ZSIsImdldCIsImxpc3QiLCJwYXRjaCIsInVwZGF0ZSIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbImFwcHMiXSwicmVzb3VyY2VzIjpbImRlcGxveW1lbnRzIiwicmVwbGljYXNldHMiXSwidmVyYnMiOlsiY3JlYXRlIiwiZGVsZXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsiYXV0b3NjYWxpbmciXSwicmVzb3VyY2VzIjpbImhvcml6b250YWxwb2RhdXRvc2NhbGVycyJdLCJ2ZXJicyI6WyJjcmVhdGUiLCJkZWxldGUiLCJnZXQiLCJsaXN0IiwicGF0Y2giLCJ1cGRhdGUiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyJtb25pdG9yaW5nLmNvcmVvcy5jb20iXSwicmVzb3VyY2VzIjpbInNlcnZpY2Vtb25pdG9ycyJdLCJ2ZXJicyI6WyJjcmVhdGUiLCJnZXQiXX0seyJhcGlHcm91cHMiOlsiYXBwcyJdLCJyZXNvdXJjZU5hbWVzIjpbImtpYWxpLW9wZXJhdG9yIl0sInJlc291cmNlcyI6WyJkZXBsb3ltZW50cy9maW5hbGl6ZXJzIl0sInZlcmJzIjpbInVwZGF0ZSJdfSx7ImFwaUdyb3VwcyI6WyJraWFsaS5pbyJdLCJyZXNvdXJjZXMiOlsiKiJdLCJ2ZXJicyI6WyJjcmVhdGUiLCJkZWxldGUiLCJnZXQiLCJsaXN0IiwicGF0Y2giLCJ1cGRhdGUiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyJhdXRob3JpemF0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsic2VsZnN1YmplY3RhY2Nlc3NyZXZpZXdzIl0sInZlcmJzIjpbImxpc3QiXX0seyJhcGlHcm91cHMiOlsicmJhYy5hdXRob3JpemF0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsiY2x1c3RlcnJvbGViaW5kaW5ncyIsImNsdXN0ZXJyb2xlcyIsInJvbGViaW5kaW5ncyIsInJvbGVzIl0sInZlcmJzIjpbImNyZWF0ZSIsImRlbGV0ZSIsImdldCIsImxpc3QiLCJwYXRjaCIsInVwZGF0ZSIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbImFwaWV4dGVuc2lvbnMuazhzLmlvIl0sInJlc291cmNlcyI6WyJjdXN0b21yZXNvdXJjZWRlZmluaXRpb25zIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyJleHRlbnNpb25zIiwibmV0d29ya2luZy5rOHMuaW8iXSwicmVzb3VyY2VzIjpbImluZ3Jlc3NlcyJdLCJ2ZXJicyI6WyJjcmVhdGUiLCJkZWxldGUiLCJnZXQiLCJsaXN0IiwicGF0Y2giLCJ1cGRhdGUiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyJyb3V0ZS5vcGVuc2hpZnQuaW8iXSwicmVzb3VyY2VzIjpbInJvdXRlcyIsInJvdXRlcy9jdXN0b20taG9zdCJdLCJ2ZXJicyI6WyJjcmVhdGUiLCJkZWxldGUiLCJnZXQiLCJsaXN0IiwicGF0Y2giLCJ1cGRhdGUiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyJvYXV0aC5vcGVuc2hpZnQuaW8iXSwicmVzb3VyY2VzIjpbIm9hdXRoY2xpZW50cyJdLCJ2ZXJicyI6WyJjcmVhdGUiLCJkZWxldGUiLCJnZXQiLCJsaXN0IiwicGF0Y2giLCJ1cGRhdGUiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyJjb25maWcub3BlbnNoaWZ0LmlvIl0sInJlc291cmNlcyI6WyJjbHVzdGVyb3BlcmF0b3JzIl0sInZlcmJzIjpbImxpc3QiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyJjb25maWcub3BlbnNoaWZ0LmlvIl0sInJlc291cmNlTmFtZXMiOlsia3ViZS1hcGlzZXJ2ZXIiXSwicmVzb3VyY2VzIjpbImNsdXN0ZXJvcGVyYXRvcnMiXSwidmVyYnMiOlsiZ2V0Il19LHsiYXBpR3JvdXBzIjpbImNvbnNvbGUub3BlbnNoaWZ0LmlvIl0sInJlc291cmNlcyI6WyJjb25zb2xlbGlua3MiXSwidmVyYnMiOlsiY3JlYXRlIiwiZGVsZXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsiY29uc29sZS5vcGVuc2hpZnQuaW8iXSwicmVzb3VyY2VzIjpbImNvbnNvbGVwbHVnaW5zIl0sInZlcmJzIjpbImNyZWF0ZSIsImRlbGV0ZSIsImdldCIsImxpc3QiLCJwYXRjaCIsInVwZGF0ZSIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbIm9wZXJhdG9yLm9wZW5zaGlmdC5pbyJdLCJyZXNvdXJjZXMiOlsiY29uc29sZXMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJjb25maWdtYXBzIiwiZW5kcG9pbnRzIiwicG9kcy9sb2ciXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsibmFtZXNwYWNlcyIsInBvZHMiLCJyZXBsaWNhdGlvbmNvbnRyb2xsZXJzIiwic2VydmljZXMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIiwicGF0Y2giXX0seyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJwb2RzL3BvcnRmb3J3YXJkIl0sInZlcmJzIjpbImNyZWF0ZSIsInBvc3QiXX0seyJhcGlHcm91cHMiOlsiZXh0ZW5zaW9ucyIsImFwcHMiXSwicmVzb3VyY2VzIjpbImRhZW1vbnNldHMiLCJkZXBsb3ltZW50cyIsInJlcGxpY2FzZXRzIiwic3RhdGVmdWxzZXRzIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJ3YXRjaCIsInBhdGNoIl19LHsiYXBpR3JvdXBzIjpbImJhdGNoIl0sInJlc291cmNlcyI6WyJjcm9uam9icyIsImpvYnMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIiwicGF0Y2giXX0seyJhcGlHcm91cHMiOlsiY29uZmlnLmlzdGlvLmlvIiwibmV0d29ya2luZy5pc3Rpby5pbyIsImF1dGhlbnRpY2F0aW9uLmlzdGlvLmlvIiwicmJhYy5pc3Rpby5pbyIsInNlY3VyaXR5LmlzdGlvLmlvIiwiZXh0ZW5zaW9ucy5pc3Rpby5pbyIsInRlbGVtZXRyeS5pc3Rpby5pbyIsImdhdGV3YXkubmV0d29ya2luZy5rOHMuaW8iXSwicmVzb3VyY2VzIjpbIioiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIiwiY3JlYXRlIiwiZGVsZXRlIiwicGF0Y2giXX0seyJhcGlHcm91cHMiOlsiYXBwcy5vcGVuc2hpZnQuaW8iXSwicmVzb3VyY2VzIjpbImRlcGxveW1lbnRjb25maWdzIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJ3YXRjaCIsInBhdGNoIl19LHsiYXBpR3JvdXBzIjpbInByb2plY3Qub3BlbnNoaWZ0LmlvIl0sInJlc291cmNlcyI6WyJwcm9qZWN0cyJdLCJ2ZXJicyI6WyJnZXQiXX0seyJhcGlHcm91cHMiOlsicm91dGUub3BlbnNoaWZ0LmlvIl0sInJlc291cmNlcyI6WyJyb3V0ZXMiXSwidmVyYnMiOlsiZ2V0Il19LHsiYXBpR3JvdXBzIjpbImF1dGhlbnRpY2F0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsidG9rZW5yZXZpZXdzIl0sInZlcmJzIjpbImNyZWF0ZSJdfV0sInNlcnZpY2VBY2NvdW50TmFtZSI6ImtpYWxpLW9wZXJhdG9yIn1dLCJkZXBsb3ltZW50cyI6W3sibmFtZSI6ImtpYWxpLW9wZXJhdG9yIiwic3BlYyI6eyJyZXBsaWNhcyI6MSwic2VsZWN0b3IiOnsibWF0Y2hMYWJlbHMiOnsiYXBwIjoia2lhbGktb3BlcmF0b3IifX0sInRlbXBsYXRlIjp7Im1ldGFkYXRhIjp7ImFubm90YXRpb25zIjp7InByb21ldGhldXMuaW8vcGF0aCI6Ii9tZXRyaWNzIiwicHJvbWV0aGV1cy5pby9wb3J0IjoiODA4MCIsInByb21ldGhldXMuaW8vc2NyYXBlIjoidHJ1ZSJ9LCJsYWJlbHMiOnsiYXBwIjoia2lhbGktb3BlcmF0b3IiLCJhcHAua3ViZXJuZXRlcy5pby9uYW1lIjoia2lhbGktb3BlcmF0b3IiLCJhcHAua3ViZXJuZXRlcy5pby9wYXJ0LW9mIjoia2lhbGktb3BlcmF0b3IiLCJhcHAua3ViZXJuZXRlcy5pby92ZXJzaW9uIjoidjEuODMuMCIsIm5hbWUiOiJraWFsaS1vcGVyYXRvciIsInZlcnNpb24iOiJ2MS44My4wIn0sIm5hbWUiOiJraWFsaS1vcGVyYXRvciJ9LCJzcGVjIjp7ImNvbnRhaW5lcnMiOlt7ImFyZ3MiOlsiLS16YXAtbG9nLWxldmVsPWluZm8iLCItLWxlYWRlci1lbGVjdGlvbi1pZD1raWFsaS1vcGVyYXRvciIsIi0td2F0Y2hlcy1maWxlPS4vd2F0Y2hlcy1vcy55YW1sIl0sImVudiI6W3sibmFtZSI6IldBVENIX05BTUVTUEFDRSIsInZhbHVlRnJvbSI6eyJmaWVsZFJlZiI6eyJmaWVsZFBhdGgiOiJtZXRhZGF0YS5hbm5vdGF0aW9uc1snb2xtLnRhcmdldE5hbWVzcGFjZXMnXSJ9fX0seyJuYW1lIjoiUE9EX05BTUUiLCJ2YWx1ZUZyb20iOnsiZmllbGRSZWYiOnsiZmllbGRQYXRoIjoibWV0YWRhdGEubmFtZSJ9fX0seyJuYW1lIjoiUE9EX05BTUVTUEFDRSIsInZhbHVlRnJvbSI6eyJmaWVsZFJlZiI6eyJmaWVsZFBhdGgiOiJtZXRhZGF0YS5uYW1lc3BhY2UifX19LHsibmFtZSI6IkFMTE9XX0FEX0hPQ19LSUFMSV9OQU1FU1BBQ0UiLCJ2YWx1ZSI6ImZhbHNlIn0seyJuYW1lIjoiQUxMT1dfQURfSE9DX0tJQUxJX0lNQUdFIiwidmFsdWUiOiJmYWxzZSJ9LHsibmFtZSI6IkFMTE9XX0FEX0hPQ19PU1NNQ09OU09MRV9JTUFHRSIsInZhbHVlIjoiZmFsc2UifSx7Im5hbWUiOiJBTExPV19TRUNVUklUWV9DT05URVhUX09WRVJSSURFIiwidmFsdWUiOiJmYWxzZSJ9LHsibmFtZSI6IkFMTE9XX0FMTF9BQ0NFU1NJQkxFX05BTUVTUEFDRVMiLCJ2YWx1ZSI6InRydWUifSx7Im5hbWUiOiJBQ0NFU1NJQkxFX05BTUVTUEFDRVNfTEFCRUwiLCJ2YWx1ZSI6IiJ9LHsibmFtZSI6IlBST0ZJTEVfVEFTS1NfVEFTS19PVVRQVVRfTElNSVQiLCJ2YWx1ZSI6IjEwMCJ9LHsibmFtZSI6IkFOU0lCTEVfREVCVUdfTE9HUyIsInZhbHVlIjoiVHJ1ZSJ9LHsibmFtZSI6IkFOU0lCTEVfVkVSQk9TSVRZX0tJQUxJX0tJQUxJX0lPIiwidmFsdWUiOiIxIn0seyJuYW1lIjoiQU5TSUJMRV9WRVJCT1NJVFlfT1NTTUNPTlNPTEVfS0lBTElfSU8iLCJ2YWx1ZSI6IjEifSx7Im5hbWUiOiJBTlNJQkxFX0NPTkZJRyIsInZhbHVlIjoiL2V0Yy9hbnNpYmxlL2Fuc2libGUuY2ZnIn0seyJuYW1lIjoiQU5TSUJMRV9MT0NBTF9URU1QIiwidmFsdWUiOiIvdG1wL2Fuc2libGUvdG1wIn0seyJuYW1lIjoiQU5TSUJMRV9SRU1PVEVfVEVNUCIsInZhbHVlIjoiL3RtcC9hbnNpYmxlL3RtcCJ9XSwiaW1hZ2UiOiJxdWF5LmlvL2tpYWxpL2tpYWxpLW9wZXJhdG9yOnYxLjgzLjAiLCJpbWFnZVB1bGxQb2xpY3kiOiJJZk5vdFByZXNlbnQiLCJuYW1lIjoib3BlcmF0b3IiLCJwb3J0cyI6W3siY29udGFpbmVyUG9ydCI6ODA4MCwibmFtZSI6Imh0dHAtbWV0cmljcyJ9XSwicmVzb3VyY2VzIjp7InJlcXVlc3RzIjp7ImNwdSI6IjEwbSIsIm1lbW9yeSI6IjY0TWkifX0sInNlY3VyaXR5Q29udGV4dCI6eyJhbGxvd1ByaXZpbGVnZUVzY2FsYXRpb24iOmZhbHNlLCJjYXBhYmlsaXRpZXMiOnsiZHJvcCI6WyJBTEwiXX0sInByaXZpbGVnZWQiOmZhbHNlLCJyZWFkT25seVJvb3RGaWxlc3lzdGVtIjp0cnVlLCJydW5Bc05vblJvb3QiOnRydWV9LCJ2b2x1bWVNb3VudHMiOlt7Im1vdW50UGF0aCI6Ii90bXAiLCJuYW1lIjoidG1wIn1dfV0sInNlcnZpY2VBY2NvdW50TmFtZSI6ImtpYWxpLW9wZXJhdG9yIiwidm9sdW1lcyI6W3siZW1wdHlEaXIiOnt9LCJuYW1lIjoidG1wIn1dfX19fV19LCJzdHJhdGVneSI6ImRlcGxveW1lbnQifSwiaW5zdGFsbE1vZGVzIjpbeyJzdXBwb3J0ZWQiOmZhbHNlLCJ0eXBlIjoiT3duTmFtZXNwYWNlIn0seyJzdXBwb3J0ZWQiOmZhbHNlLCJ0eXBlIjoiU2luZ2xlTmFtZXNwYWNlIn0seyJzdXBwb3J0ZWQiOmZhbHNlLCJ0eXBlIjoiTXVsdGlOYW1lc3BhY2UifSx7InN1cHBvcnRlZCI6dHJ1ZSwidHlwZSI6IkFsbE5hbWVzcGFjZXMifV0sImtleXdvcmRzIjpbInNlcnZpY2UtbWVzaCIsIm9ic2VydmFiaWxpdHkiLCJtb25pdG9yaW5nIiwibWFpc3RyYSIsImlzdGlvIl0sImxhYmVscyI6eyJuYW1lIjoia2lhbGktb3BlcmF0b3IifSwibGlua3MiOlt7Im5hbWUiOiJJbnN0YWxsYXRpb24gR3VpZGUiLCJ1cmwiOiJodHRwczovL3d3dy5raWFsaS5pby9kb2NzL2luc3RhbGxhdGlvbiJ9LHsibmFtZSI6IkZlYXR1cmVzIiwidXJsIjoiaHR0cHM6Ly93d3cua2lhbGkuaW8vZG9jcy9mZWF0dXJlcyJ9LHsibmFtZSI6IkRvY3VtZW50YXRpb24gSG9tZSIsInVybCI6Imh0dHBzOi8vd3d3LmtpYWxpLmlvIn0seyJuYW1lIjoiQmxvZ3MgYW5kIEFydGljbGVzIiwidXJsIjoiaHR0cHM6Ly9tZWRpdW0uY29tL2tpYWxpcHJvamVjdCJ9LHsibmFtZSI6IlNlcnZlciBhbmQgVUkgU291cmNlIENvZGUiLCJ1cmwiOiJodHRwczovL2dpdGh1Yi5jb20va2lhbGkva2lhbGkifSx7Im5hbWUiOiJPcGVyYXRvciBTb3VyY2UgQ29kZSIsInVybCI6Imh0dHBzOi8vZ2l0aHViLmNvbS9raWFsaS9raWFsaS1vcGVyYXRvciJ9LHsibmFtZSI6Ik9wZW5TaGlmdCBTZXJ2aWNlIE1lc2ggQ29uc29sZSBDb2RlIiwidXJsIjoiaHR0cHM6Ly9naXRodWIuY29tL2tpYWxpL29wZW5zaGlmdC1zZXJ2aWNlbWVzaC1wbHVnaW4ifV0sIm1haW50YWluZXJzIjpbeyJlbWFpbCI6ImtpYWxpLWRldkBnb29nbGVncm91cHMuY29tIiwibmFtZSI6IktpYWxpIERldmVsb3BlcnMgR29vZ2xlIEdyb3VwIn1dLCJtYXR1cml0eSI6InN0YWJsZSIsInByb3ZpZGVyIjp7Im5hbWUiOiJLaWFsaSJ9LCJyZXBsYWNlcyI6ImtpYWxpLW9wZXJhdG9yLnYxLjgyLjAiLCJzZWxlY3RvciI6eyJtYXRjaExhYmVscyI6eyJuYW1lIjoia2lhbGktb3BlcmF0b3IifX0sInZlcnNpb24iOiIxLjgzLjAifX0=
relatedImages:
- image: quay.io/community-operator-pipeline-prod/kiali@sha256:3af955be39d83b46d448aeb09faf21fbdc089670de274ef3a3f5e3a8b244d3bd
  name: ''
- image: quay.io/kiali/kiali-operator:v1.83.0
  name: ''
schema: olm.bundle
---
image: quay.io/community-operator-pipeline-prod/kiali@sha256:07ac331a600c8a5180404e8fd930c0259d8c4b69a8782fb93ca8aa7c49f6a9e8
name: kiali-operator.v1.84.0
package: kiali
properties:
- type: olm.gvk
  value:
    group: kiali.io
    kind: Kiali
    version: v1alpha1
- type: olm.gvk
  value:
    group: kiali.io
    kind: OSSMConsole
    version: v1alpha1
- type: olm.package
  value:
    packageName: kiali
    version: 1.84.0
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImFwcCI6ImtpYWxpLW9wZXJhdG9yIiwiYXBwLmt1YmVybmV0ZXMuaW8vbmFtZSI6ImtpYWxpLW9wZXJhdG9yIn0sIm5hbWUiOiJvc3NtY29uc29sZXMua2lhbGkuaW8ifSwic3BlYyI6eyJncm91cCI6ImtpYWxpLmlvIiwibmFtZXMiOnsia2luZCI6Ik9TU01Db25zb2xlIiwibGlzdEtpbmQiOiJPU1NNQ29uc29sZUxpc3QiLCJwbHVyYWwiOiJvc3NtY29uc29sZXMiLCJzaW5ndWxhciI6Im9zc21jb25zb2xlIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImFwcCI6ImtpYWxpLW9wZXJhdG9yIn0sIm5hbWUiOiJraWFsaXMua2lhbGkuaW8ifSwic3BlYyI6eyJncm91cCI6ImtpYWxpLmlvIiwibmFtZXMiOnsia2luZCI6IktpYWxpIiwibGlzdEtpbmQiOiJLaWFsaUxpc3QiLCJwbHVyYWwiOiJraWFsaXMiLCJzaW5ndWxhciI6ImtpYWxpIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX19
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: quay.io/community-operator-pipeline-prod/kiali@sha256:07ac331a600c8a5180404e8fd930c0259d8c4b69a8782fb93ca8aa7c49f6a9e8
  name: ''
- image: quay.io/kiali/kiali-operator:v1.84.0
  name: ''
schema: olm.bundle
---
image: quay.io/community-operator-pipeline-prod/kiali@sha256:2ffdfb20368b2fca592b2be36aff027fdf0b86a59654189ef0147e820d151d20
name: kiali-operator.v1.85.0
package: kiali
properties:
- type: olm.gvk
  value:
    group: kiali.io
    kind: Kiali
    version: v1alpha1
- type: olm.gvk
  value:
    group: kiali.io
    kind: OSSMConsole
    version: v1alpha1
- type: olm.package
  value:
    packageName: kiali
    version: 1.85.0
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImFwcCI6ImtpYWxpLW9wZXJhdG9yIiwiYXBwLmt1YmVybmV0ZXMuaW8vbmFtZSI6ImtpYWxpLW9wZXJhdG9yIn0sIm5hbWUiOiJvc3NtY29uc29sZXMua2lhbGkuaW8ifSwic3BlYyI6eyJncm91cCI6ImtpYWxpLmlvIiwibmFtZXMiOnsia2luZCI6Ik9TU01Db25zb2xlIiwibGlzdEtpbmQiOiJPU1NNQ29uc29sZUxpc3QiLCJwbHVyYWwiOiJvc3NtY29uc29sZXMiLCJzaW5ndWxhciI6Im9zc21jb25zb2xlIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImFwcCI6ImtpYWxpLW9wZXJhdG9yIn0sIm5hbWUiOiJraWFsaXMua2lhbGkuaW8ifSwic3BlYyI6eyJncm91cCI6ImtpYWxpLmlvIiwibmFtZXMiOnsia2luZCI6IktpYWxpIiwibGlzdEtpbmQiOiJLaWFsaUxpc3QiLCJwbHVyYWwiOiJraWFsaXMiLCJzaW5ndWxhciI6ImtpYWxpIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX19
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: quay.io/community-operator-pipeline-prod/kiali@sha256:2ffdfb20368b2fca592b2be36aff027fdf0b86a59654189ef0147e820d151d20
  name: ''
- image: quay.io/kiali/kiali-operator:v1.85.0
  name: ''
schema: olm.bundle
---
image: quay.io/community-operator-pipeline-prod/kiali@sha256:46504665e293171a726f1155d0e3fa4608235f06c747ca9544994ba53f028b57
name: kiali-operator.v1.86.0
package: kiali
properties:
- type: olm.gvk
  value:
    group: kiali.io
    kind: Kiali
    version: v1alpha1
- type: olm.gvk
  value:
    group: kiali.io
    kind: OSSMConsole
    version: v1alpha1
- type: olm.package
  value:
    packageName: kiali
    version: 1.86.0
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImFwcCI6ImtpYWxpLW9wZXJhdG9yIiwiYXBwLmt1YmVybmV0ZXMuaW8vbmFtZSI6ImtpYWxpLW9wZXJhdG9yIn0sIm5hbWUiOiJvc3NtY29uc29sZXMua2lhbGkuaW8ifSwic3BlYyI6eyJncm91cCI6ImtpYWxpLmlvIiwibmFtZXMiOnsia2luZCI6Ik9TU01Db25zb2xlIiwibGlzdEtpbmQiOiJPU1NNQ29uc29sZUxpc3QiLCJwbHVyYWwiOiJvc3NtY29uc29sZXMiLCJzaW5ndWxhciI6Im9zc21jb25zb2xlIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImFwcCI6ImtpYWxpLW9wZXJhdG9yIn0sIm5hbWUiOiJraWFsaXMua2lhbGkuaW8ifSwic3BlYyI6eyJncm91cCI6ImtpYWxpLmlvIiwibmFtZXMiOnsia2luZCI6IktpYWxpIiwibGlzdEtpbmQiOiJLaWFsaUxpc3QiLCJwbHVyYWwiOiJraWFsaXMiLCJzaW5ndWxhciI6ImtpYWxpIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX19
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: quay.io/community-operator-pipeline-prod/kiali@sha256:46504665e293171a726f1155d0e3fa4608235f06c747ca9544994ba53f028b57
  name: ''
- image: quay.io/kiali/kiali-operator:v1.86.0
  name: ''
schema: olm.bundle
---
image: quay.io/community-operator-pipeline-prod/kiali@sha256:190bd2a0aa683f6792de61f4cc035559238773d4f97b77e6e3eee5efa25794c3
name: kiali-operator.v1.87.0
package: kiali
properties:
- type: olm.gvk
  value:
    group: kiali.io
    kind: Kiali
    version: v1alpha1
- type: olm.gvk
  value:
    group: kiali.io
    kind: OSSMConsole
    version: v1alpha1
- type: olm.package
  value:
    packageName: kiali
    version: 1.87.0
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImFwcCI6ImtpYWxpLW9wZXJhdG9yIiwiYXBwLmt1YmVybmV0ZXMuaW8vbmFtZSI6ImtpYWxpLW9wZXJhdG9yIn0sIm5hbWUiOiJvc3NtY29uc29sZXMua2lhbGkuaW8ifSwic3BlYyI6eyJncm91cCI6ImtpYWxpLmlvIiwibmFtZXMiOnsia2luZCI6Ik9TU01Db25zb2xlIiwibGlzdEtpbmQiOiJPU1NNQ29uc29sZUxpc3QiLCJwbHVyYWwiOiJvc3NtY29uc29sZXMiLCJzaW5ndWxhciI6Im9zc21jb25zb2xlIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImFwcCI6ImtpYWxpLW9wZXJhdG9yIn0sIm5hbWUiOiJraWFsaXMua2lhbGkuaW8ifSwic3BlYyI6eyJncm91cCI6ImtpYWxpLmlvIiwibmFtZXMiOnsia2luZCI6IktpYWxpIiwibGlzdEtpbmQiOiJLaWFsaUxpc3QiLCJwbHVyYWwiOiJraWFsaXMiLCJzaW5ndWxhciI6ImtpYWxpIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX19
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: quay.io/community-operator-pipeline-prod/kiali@sha256:190bd2a0aa683f6792de61f4cc035559238773d4f97b77e6e3eee5efa25794c3
  name: ''
- image: quay.io/kiali/kiali-operator:v1.87.0
  name: ''
schema: olm.bundle
---
image: quay.io/community-operator-pipeline-prod/kiali@sha256:2a7db381b652d54370249e65fe8076d9c6908b645dcaf257681bea4e02d26d19
name: kiali-operator.v1.88.0
package: kiali
properties:
- type: olm.gvk
  value:
    group: kiali.io
    kind: Kiali
    version: v1alpha1
- type: olm.gvk
  value:
    group: kiali.io
    kind: OSSMConsole
    version: v1alpha1
- type: olm.package
  value:
    packageName: kiali
    version: 1.88.0
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImFwcCI6ImtpYWxpLW9wZXJhdG9yIiwiYXBwLmt1YmVybmV0ZXMuaW8vbmFtZSI6ImtpYWxpLW9wZXJhdG9yIn0sIm5hbWUiOiJvc3NtY29uc29sZXMua2lhbGkuaW8ifSwic3BlYyI6eyJncm91cCI6ImtpYWxpLmlvIiwibmFtZXMiOnsia2luZCI6Ik9TU01Db25zb2xlIiwibGlzdEtpbmQiOiJPU1NNQ29uc29sZUxpc3QiLCJwbHVyYWwiOiJvc3NtY29uc29sZXMiLCJzaW5ndWxhciI6Im9zc21jb25zb2xlIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImFwcCI6ImtpYWxpLW9wZXJhdG9yIn0sIm5hbWUiOiJraWFsaXMua2lhbGkuaW8ifSwic3BlYyI6eyJncm91cCI6ImtpYWxpLmlvIiwibmFtZXMiOnsia2luZCI6IktpYWxpIiwibGlzdEtpbmQiOiJLaWFsaUxpc3QiLCJwbHVyYWwiOiJraWFsaXMiLCJzaW5ndWxhciI6ImtpYWxpIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX19
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: quay.io/community-operator-pipeline-prod/kiali@sha256:2a7db381b652d54370249e65fe8076d9c6908b645dcaf257681bea4e02d26d19
  name: ''
- image: quay.io/kiali/kiali-operator:v1.88.0
  name: ''
schema: olm.bundle
---
image: quay.io/community-operator-pipeline-prod/kiali@sha256:b3c0660220dbe4d8afaf182486a5b41a655b0d280c6e61f69adcbfaa41972bf7
name: kiali-operator.v1.89.0
package: kiali
properties:
- type: olm.gvk
  value:
    group: kiali.io
    kind: Kiali
    version: v1alpha1
- type: olm.gvk
  value:
    group: kiali.io
    kind: OSSMConsole
    version: v1alpha1
- type: olm.package
  value:
    packageName: kiali
    version: 1.89.0
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImFwcCI6ImtpYWxpLW9wZXJhdG9yIiwiYXBwLmt1YmVybmV0ZXMuaW8vbmFtZSI6ImtpYWxpLW9wZXJhdG9yIn0sIm5hbWUiOiJvc3NtY29uc29sZXMua2lhbGkuaW8ifSwic3BlYyI6eyJncm91cCI6ImtpYWxpLmlvIiwibmFtZXMiOnsia2luZCI6Ik9TU01Db25zb2xlIiwibGlzdEtpbmQiOiJPU1NNQ29uc29sZUxpc3QiLCJwbHVyYWwiOiJvc3NtY29uc29sZXMiLCJzaW5ndWxhciI6Im9zc21jb25zb2xlIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImFwcCI6ImtpYWxpLW9wZXJhdG9yIn0sIm5hbWUiOiJraWFsaXMua2lhbGkuaW8ifSwic3BlYyI6eyJncm91cCI6ImtpYWxpLmlvIiwibmFtZXMiOnsia2luZCI6IktpYWxpIiwibGlzdEtpbmQiOiJLaWFsaUxpc3QiLCJwbHVyYWwiOiJraWFsaXMiLCJzaW5ndWxhciI6ImtpYWxpIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX19
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: quay.io/community-operator-pipeline-prod/kiali@sha256:b3c0660220dbe4d8afaf182486a5b41a655b0d280c6e61f69adcbfaa41972bf7
  name: ''
- image: quay.io/kiali/kiali-operator:v1.89.0
  name: ''
schema: olm.bundle
---
image: quay.io/community-operator-pipeline-prod/kiali@sha256:ade8272dd7a3b86ddfa0602a3d4bc467f6c28c06985f30c89d94de10a9815ee8
name: kiali-operator.v2.0.0
package: kiali
properties:
- type: olm.gvk
  value:
    group: kiali.io
    kind: Kiali
    version: v1alpha1
- type: olm.gvk
  value:
    group: kiali.io
    kind: OSSMConsole
    version: v1alpha1
- type: olm.package
  value:
    packageName: kiali
    version: 2.0.0
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImFwcCI6ImtpYWxpLW9wZXJhdG9yIiwiYXBwLmt1YmVybmV0ZXMuaW8vbmFtZSI6ImtpYWxpLW9wZXJhdG9yIn0sIm5hbWUiOiJvc3NtY29uc29sZXMua2lhbGkuaW8ifSwic3BlYyI6eyJncm91cCI6ImtpYWxpLmlvIiwibmFtZXMiOnsia2luZCI6Ik9TU01Db25zb2xlIiwibGlzdEtpbmQiOiJPU1NNQ29uc29sZUxpc3QiLCJwbHVyYWwiOiJvc3NtY29uc29sZXMiLCJzaW5ndWxhciI6Im9zc21jb25zb2xlIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImFwcCI6ImtpYWxpLW9wZXJhdG9yIn0sIm5hbWUiOiJraWFsaXMua2lhbGkuaW8ifSwic3BlYyI6eyJncm91cCI6ImtpYWxpLmlvIiwibmFtZXMiOnsia2luZCI6IktpYWxpIiwibGlzdEtpbmQiOiJLaWFsaUxpc3QiLCJwbHVyYWwiOiJraWFsaXMiLCJzaW5ndWxhciI6ImtpYWxpIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFhbHBoYTEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX19
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: quay.io/community-operator-pipeline-prod/kiali@sha256:ade8272dd7a3b86ddfa0602a3d4bc467f6c28c06985f30c89d94de10a9815ee8
  name: ''
- image: quay.io/kiali/kiali-operator:v2.0.0
  name: ''
schema: olm.bundle
