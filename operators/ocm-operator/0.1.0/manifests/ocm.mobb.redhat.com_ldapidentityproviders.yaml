apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: ldapidentityproviders.ocm.mobb.redhat.com
spec:
  group: ocm.mobb.redhat.com
  names:
    categories:
    - idps
    - identityproviders
    kind: LDAPIdentityProvider
    listKind: LDAPIdentityProviderList
    plural: ldapidentityproviders
    singular: ldapidentityprovider
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: LDAPIdentityProvider is the Schema for the ldapidentityproviders
          API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: LDAPIdentityProviderSpec defines the desired state of LDAPIdentityProvider.
            properties:
              attributes:
                description: attributes maps LDAP attributes to identities
                properties:
                  email:
                    description: email is the list of attributes whose values should
                      be used as the email address. Optional. If unspecified, no email
                      is set for the identity
                    items:
                      type: string
                    type: array
                  id:
                    description: id is the list of attributes whose values should
                      be used as the user ID. Required. First non-empty attribute
                      is used. At least one attribute is required. If none of the
                      listed attribute have a value, authentication fails. LDAP standard
                      identity attribute is "dn"
                    items:
                      type: string
                    type: array
                  name:
                    description: name is the list of attributes whose values should
                      be used as the display name. Optional. If unspecified, no display
                      name is set for the identity LDAP standard display name attribute
                      is "cn"
                    items:
                      type: string
                    type: array
                  preferredUsername:
                    description: preferredUsername is the list of attributes whose
                      values should be used as the preferred username. LDAP standard
                      login attribute is "uid"
                    items:
                      type: string
                    type: array
                type: object
              bindDN:
                description: bindDN is an optional DN to bind with during the search
                  phase.
                type: string
              bindPassword:
                description: bindPassword is an optional reference to a secret by
                  name containing a password to bind with during the search phase.
                  The key "bindPassword" is used to locate the data. If specified
                  and the secret or expected key is not found, the identity provider
                  is not honored. This should exist in the same namespace as the operator.
                properties:
                  name:
                    description: name is the metadata.name of the referenced secret
                    type: string
                required:
                - name
                type: object
              ca:
                description: ca is an optional reference to a config map by name containing
                  the PEM-encoded CA bundle. It is used as a trust anchor to validate
                  the TLS certificate presented by the remote server. The key "ca.crt"
                  is used to locate the data. If specified and the config map or expected
                  key is not found, the identity provider is not honored. If the specified
                  ca data is not valid, the identity provider is not honored. If empty,
                  the default system roots are used. The namespace for this config
                  map is openshift-config.
                properties:
                  name:
                    description: name is the metadata.name of the referenced config
                      map
                    type: string
                required:
                - name
                type: object
              clusterName:
                description: Cluster ID in OpenShift Cluster Manager by which this
                  should be managed for.  The cluster ID can be obtained on the Clusters
                  page for the individual cluster.  It may also be known as the 'External
                  ID' in some CLI clients.  It shows up in the format of 'xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx'
                  where the 'x' represents any alphanumeric character.
                type: string
                x-kubernetes-validations:
                - message: clusterName is immutable
                  rule: (self == oldSelf)
              displayName:
                description: Friendly display name as displayed in the OpenShift Cluster
                  Manager console.  If this is empty, the metadata.name field of the
                  parent resource is used to construct the display name.  This is
                  limited to 15 characters as per the backend API limitation.
                maxLength: 15
                minLength: 4
                type: string
                x-kubernetes-validations:
                - message: displayName is immutable
                  rule: (self == oldSelf)
              insecure:
                default: false
                description: 'insecure, if true, indicates the connection should not
                  use TLS WARNING: Should not be set to `true` with the URL scheme
                  "ldaps://" as "ldaps://" URLs always attempt to connect using TLS,
                  even when `insecure` is set to `true` When `true`, "ldap://" URLS
                  connect insecurely. When `false`, "ldap://" URLs are upgraded to
                  a TLS connection using StartTLS as specified in https://tools.ietf.org/html/rfc2830.'
                type: boolean
              mappingMethod:
                default: claim
                description: Mapping method to use for the identity provider. See
                  https://docs.openshift.com/container-platform/latest/authentication/understanding-identity-provider.html#identity-provider-parameters_understanding-identity-provider
                  for a detailed description of what these mean.  Must be one of claim
                  (default), lookup, generate, or add.
                enum:
                - claim
                - lookup
                - generate
                - add
                type: string
              url:
                description: 'url is an RFC 2255 URL which specifies the LDAP search
                  parameters to use. The syntax of the URL is: ldap://host:port/basedn?attribute?scope?filter'
                type: string
            required:
            - insecure
            - url
            type: object
          status:
            description: LDAPIdentityProviderStatus defines the observed state of
              LDAPIdentityProvider.
            properties:
              clusterID:
                description: Represents the programmatic cluster ID of the cluster,
                  as determined during reconciliation.  This is used to reduce the
                  number of API calls to look up a cluster ID based on the cluster
                  name.
                type: string
                x-kubernetes-validations:
                - message: status.clusterID is immutable
                  rule: (self == oldSelf)
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              providerID:
                description: Represents the programmatic identity provider ID of the
                  IDP, as determined during reconciliation.  This is used to reduce
                  the number of API calls to look up a cluster ID based on the identity
                  provider name.
                type: string
                x-kubernetes-validations:
                - message: status.providerID is immutable
                  rule: (self == oldSelf)
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
