apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.1
  creationTimestamp: null
  name: veleroes.oadp.openshift.io
spec:
  group: oadp.openshift.io
  names:
    kind: Velero
    listKind: VeleroList
    plural: veleroes
    singular: velero
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Velero is the Schema for the veleroes API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: VeleroSpec defines the desired state of Velero
            properties:
              backupImages:
                description: BackupImages is used to specify whether you want to deploy
                  a registry for enabling backup and restore of images
                type: boolean
              backupStorageLocations:
                description: BackupStorageLocations defines the list of desired configuration
                  to use for BackupStorageLocations
                items:
                  description: BackupStorageLocationSpec defines the desired state
                    of a Velero BackupStorageLocation
                  properties:
                    accessMode:
                      description: AccessMode defines the permissions for the backup
                        storage location.
                      enum:
                      - ReadOnly
                      - ReadWrite
                      type: string
                    backupSyncPeriod:
                      description: BackupSyncPeriod defines how frequently to sync
                        backup API objects from object storage. A value of 0 disables
                        sync.
                      nullable: true
                      type: string
                    config:
                      additionalProperties:
                        type: string
                      description: Config is for provider-specific configuration fields.
                      type: object
                    credential:
                      description: Credential contains the credential information
                        intended to be used with this location
                      properties:
                        key:
                          description: The key of the secret to select from.  Must
                            be a valid secret key.
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                        optional:
                          description: Specify whether the Secret or its key must
                            be defined
                          type: boolean
                      required:
                      - key
                      type: object
                    default:
                      description: Default indicates this location is the default
                        backup storage location.
                      type: boolean
                    objectStorage:
                      description: ObjectStorageLocation specifies the settings necessary
                        to connect to a provider's object storage.
                      properties:
                        bucket:
                          description: Bucket is the bucket to use for object storage.
                          type: string
                        caCert:
                          description: CACert defines a CA bundle to use when verifying
                            TLS connections to the provider.
                          format: byte
                          type: string
                        prefix:
                          description: Prefix is the path inside a bucket to use for
                            Velero storage. Optional.
                          type: string
                      required:
                      - bucket
                      type: object
                    provider:
                      description: Provider is the provider of the backup storage.
                      type: string
                    validationFrequency:
                      description: ValidationFrequency defines how frequently to validate
                        the corresponding object storage. A value of 0 disables validation.
                      nullable: true
                      type: string
                  required:
                  - objectStorage
                  - provider
                  type: object
                type: array
              customVeleroPlugins:
                description: CustomVeleroPlugins defines the custom plugin to be installed
                  with Velero
                items:
                  properties:
                    image:
                      type: string
                    name:
                      type: string
                  required:
                  - image
                  - name
                  type: object
                type: array
              defaultVeleroPlugins:
                description: DefaultVeleroPlugins defines the list of default plugins
                  (aws, gcp, azure, openshift, csi) to be installed with Velero
                items:
                  type: string
                type: array
              enableRestic:
                description: EnableRestic is a boolean to specify if restic daemonset
                  instance should be created or not
                type: boolean
              noDefaultBackupLocation:
                description: If you need to install Velero without a default backup
                  storage location NoDefaultBackupLocation flag is required for confirmation
                type: boolean
              noobaa:
                description: Noobaa is a boolean to specify if we should install backup
                  storage from OCS operator with Noobaa
                type: boolean
              podAnnotations:
                additionalProperties:
                  type: string
                description: add annotations to pods deployed by operator
                type: object
              podDnsConfig:
                description: PodDNSConfig defines the DNS parameters of a pod in addition
                  to those generated from DNSPolicy. https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-dns-config
                properties:
                  nameservers:
                    description: A list of DNS name server IP addresses. This will
                      be appended to the base nameservers generated from DNSPolicy.
                      Duplicated nameservers will be removed.
                    items:
                      type: string
                    type: array
                  options:
                    description: A list of DNS resolver options. This will be merged
                      with the base options generated from DNSPolicy. Duplicated entries
                      will be removed. Resolution options given in Options will override
                      those that appear in the base DNSPolicy.
                    items:
                      description: PodDNSConfigOption defines DNS resolver options
                        of a pod.
                      properties:
                        name:
                          description: Required.
                          type: string
                        value:
                          type: string
                      type: object
                    type: array
                  searches:
                    description: A list of DNS search domains for host-name lookup.
                      This will be appended to the base search paths generated from
                      DNSPolicy. Duplicated search paths will be removed.
                    items:
                      type: string
                    type: array
                type: object
              podDnsPolicy:
                description: DNSPolicy defines how a pod's DNS will be configured.
                  https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-s-dns-policy
                type: string
              resticNodeSelector:
                additionalProperties:
                  type: string
                description: ResticNodeSelector defines the nodeSelector to be supplied
                  to Restic podSpec
                type: object
              resticResourceAllocations:
                description: ResticResourceAllocations defines the CPU and Memory
                  resource allocations for the restic Pod
                properties:
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Limits describes the maximum amount of compute resources
                      allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Requests describes the minimum amount of compute
                      resources required. If Requests is omitted for a container,
                      it defaults to Limits if that is explicitly specified, otherwise
                      to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                type: object
              resticSupplementalGroups:
                description: ResticSupplementalGroups defines the linux groups to
                  be applied to the Restic Pod
                items:
                  format: int64
                  type: integer
                type: array
              resticTimeout:
                description: ResticTimeout defines the Restic timeout, default value
                  is 1h
                type: string
              resticTolerations:
                description: ResticTolerations defines the list of tolerations to
                  be applied to Restic daemonset
                items:
                  description: The pod this Toleration is attached to tolerates any
                    taint that matches the triple <key,value,effect> using the matching
                    operator <operator>.
                  properties:
                    effect:
                      description: Effect indicates the taint effect to match. Empty
                        means match all taint effects. When specified, allowed values
                        are NoSchedule, PreferNoSchedule and NoExecute.
                      type: string
                    key:
                      description: Key is the taint key that the toleration applies
                        to. Empty means match all taint keys. If the key is empty,
                        operator must be Exists; this combination means to match all
                        values and all keys.
                      type: string
                    operator:
                      description: Operator represents a key's relationship to the
                        value. Valid operators are Exists and Equal. Defaults to Equal.
                        Exists is equivalent to wildcard for value, so that a pod
                        can tolerate all taints of a particular category.
                      type: string
                    tolerationSeconds:
                      description: TolerationSeconds represents the period of time
                        the toleration (which must be of effect NoExecute, otherwise
                        this field is ignored) tolerates the taint. By default, it
                        is not set, which means tolerate the taint forever (do not
                        evict). Zero and negative values will be treated as 0 (evict
                        immediately) by the system.
                      format: int64
                      type: integer
                    value:
                      description: Value is the taint value the toleration matches
                        to. If the operator is Exists, the value should be empty,
                        otherwise just a regular string.
                      type: string
                  type: object
                type: array
              restoreResourcesVersionPriority:
                description: RestoreResourceVersionPriority represents a configmap
                  that will be created if defined for use in conjunction with `EnableAPIGroupVersions`
                  feature flag Defining this field automatically add EnableAPIGroupVersions
                  to the velero server feature flag
                type: string
              unsupportedOverrides:
                additionalProperties:
                  type: string
                type: object
              veleroFeatureFlags:
                description: VeleroFeatureFlags defines the list of features to enable
                  for Velero instance
                items:
                  type: string
                type: array
              veleroResourceAllocations:
                description: VeleroResourceAllocations defines the CPU and Memory
                  resource allocations for the Velero Pod
                properties:
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Limits describes the maximum amount of compute resources
                      allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Requests describes the minimum amount of compute
                      resources required. If Requests is omitted for a container,
                      it defaults to Limits if that is explicitly specified, otherwise
                      to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                type: object
              veleroTolerations:
                description: VeleroTolerations defines the list of tolerations to
                  be applied to Velero deployment
                items:
                  description: The pod this Toleration is attached to tolerates any
                    taint that matches the triple <key,value,effect> using the matching
                    operator <operator>.
                  properties:
                    effect:
                      description: Effect indicates the taint effect to match. Empty
                        means match all taint effects. When specified, allowed values
                        are NoSchedule, PreferNoSchedule and NoExecute.
                      type: string
                    key:
                      description: Key is the taint key that the toleration applies
                        to. Empty means match all taint keys. If the key is empty,
                        operator must be Exists; this combination means to match all
                        values and all keys.
                      type: string
                    operator:
                      description: Operator represents a key's relationship to the
                        value. Valid operators are Exists and Equal. Defaults to Equal.
                        Exists is equivalent to wildcard for value, so that a pod
                        can tolerate all taints of a particular category.
                      type: string
                    tolerationSeconds:
                      description: TolerationSeconds represents the period of time
                        the toleration (which must be of effect NoExecute, otherwise
                        this field is ignored) tolerates the taint. By default, it
                        is not set, which means tolerate the taint forever (do not
                        evict). Zero and negative values will be treated as 0 (evict
                        immediately) by the system.
                      format: int64
                      type: integer
                    value:
                      description: Value is the taint value the toleration matches
                        to. If the operator is Exists, the value should be empty,
                        otherwise just a regular string.
                      type: string
                  type: object
                type: array
              volumeSnapshotLocations:
                description: VolumeSnapshotLocations defines the list of desired configuration
                  to use for VolumeSnapshotLocations
                items:
                  description: VolumeSnapshotLocationSpec defines the specification
                    for a Velero VolumeSnapshotLocation.
                  properties:
                    config:
                      additionalProperties:
                        type: string
                      description: Config is for provider-specific configuration fields.
                      type: object
                    provider:
                      description: Provider is the provider of the volume storage.
                      type: string
                  required:
                  - provider
                  type: object
                type: array
            type: object
          status:
            description: VeleroStatus defines the observed state of Velero
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{     // Represents the observations of a
                    foo's current state.     // Known .status.conditions.type are:
                    \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                    \    // +patchStrategy=merge     // +listType=map     // +listMapKey=type
                    \    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                    \n     // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
