apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    olm.skipRange: ">=2.2.0 <2.3.4"
    operators.openshift.io/infrastructure-features: '["disconnected"]'
    operators.openshift.io/valid-subscription: '["Confluent Platform License"]'
    capabilities: Auto Pilot
    categories: "Streaming & Messaging"
    containerImage: docker.io/confluentinc/confluent-operator@sha256:b5b278a043c79b2da86acfa9bd60dd4d6e3d8989caf24f303af9a05b916c519f
    support: Confluent, Inc.
    alm-examples: |-
      [
        {
          "apiVersion": "platform.confluent.io/v1beta1",
          "kind": "Zookeeper",
          "metadata": {
            "name": "zookeeper"
          },
          "spec": {
            "replicas": 3,
            "image": {
              "application": "confluentinc/cp-zookeeper@sha256:71c476d6c5d6a82b1e1b42055f6693f1f4789a95ecbb5c8bb2b437655742c819",
              "init": "confluentinc/confluent-init-container@sha256:12d8c4ece587e5671602bca9b6c109f919771649eb8bb53d8cd0e2ff83abc185"
            },
            "dataVolumeCapacity": "10Gi",
            "logVolumeCapacity": "10Gi"
          }
        },
        {
          "apiVersion": "platform.confluent.io/v1beta1",
          "kind": "Kafka",
          "metadata": {
            "name": "kafka"
          },
          "spec": {
            "replicas": 3,
            "image": {
              "application": "confluentinc/docker.io/confluentinc/cp-server@sha256:89ae87a6a366ba2aea2d95388e33f09fde2eda33eb4f55bf3f256aa0c661240f",
              "init": "confluentinc/confluent-init-container@sha256:12d8c4ece587e5671602bca9b6c109f919771649eb8bb53d8cd0e2ff83abc185"
            },
            "dataVolumeCapacity": "10Gi",
            "metricReporter": {"enabled": true}
          }
        },
        {
          "apiVersion": "platform.confluent.io/v1beta1",
          "kind": "KafkaRestProxy",
          "metadata": {
            "name": "kafkarestproxy"
          },
          "spec": {
            "replicas": 3,
            "image": {
              "application": "confluentinc/cp-kafka-rest@sha256:b797b1e3baa7075f7322c785319edc68596cad5f834cc5c44a5d9d58d7bb66bb",
              "init": "confluentinc/confluent-init-container@sha256:12d8c4ece587e5671602bca9b6c109f919771649eb8bb53d8cd0e2ff83abc185"
            },
            "metricReporter": {"enabled": true}
          }
        },
        {
          "apiVersion": "platform.confluent.io/v1beta1",
          "kind": "Connect",
          "metadata": {
            "name": "connect"
          },
          "spec": {
            "replicas": 1,
            "image": {
              "application": "confluentinc/cp-server-connect@sha256:90cece568a8502135c9c808cca9b73d087ee6ee9ab20e8024b7b2556d4dfd68e",
              "init": "confluentinc/confluent-init-container@sha256:12d8c4ece587e5671602bca9b6c109f919771649eb8bb53d8cd0e2ff83abc185"
            },
            "dependencies": {
              "kafka": {
                "bootstrapEndpoint": "kafka:9071"
              }
            }
          }
        },
        {
          "apiVersion": "platform.confluent.io/v1beta1",
          "kind": "KsqlDB",
          "metadata": {
            "name": "ksqldb"
          },
          "spec": {
            "replicas": 1,
            "image": {
              "application": "confluentinc/cp-ksqldb-server@sha256:cf47fd558d55a28134e6ff8fa314cbfcafd625127eb505125f15d7b54531fa54",
              "init": "confluentinc/confluent-init-container@sha256:12d8c4ece587e5671602bca9b6c109f919771649eb8bb53d8cd0e2ff83abc185"
            },
            "dataVolumeCapacity": "10Gi"
          }
        },
        {
          "apiVersion": "platform.confluent.io/v1beta1",
          "kind": "ControlCenter",
          "metadata": {
            "name": "controlcenter"
          },
          "spec": {
            "replicas": 1,
            "image": {
              "application": "confluentinc/cp-enterprise-control-center@sha256:ef7ccb79a03fe80c654881e607fe0f606407de0282927cbf768326d1b78b50a9",
              "init": "confluentinc/confluent-init-container@sha256:12d8c4ece587e5671602bca9b6c109f919771649eb8bb53d8cd0e2ff83abc185"
            },
            "dataVolumeCapacity": "10Gi",
            "dependencies": {
              "schemaRegistry": {
                "url": "http://schemaregistry.confluent.svc.cluster.local:8081"
              },
              "ksqldb": [
                {
                  "name": "ksqldb",
                  "url": "http://ksqldb.confluent.svc.cluster.local:8088"
                }
              ],
              "connect": [
                {
                  "name": "connect",
                  "url": "http://connect.confluent.svc.cluster.local:8083"
                }
              ]
            }
          }
        },
        {
          "apiVersion": "platform.confluent.io/v1beta1",
          "kind": "SchemaRegistry",
          "metadata": {
            "name": "schemaregistry"
          },
          "spec": {
            "replicas": 1,
            "image": {
              "application": "confluentinc/cp-schema-registry@sha256:f868c489323760a971923fd26b35657da7612a54b1d2594550714db7548405f3",
              "init": "confluentinc/confluent-init-container@sha256:12d8c4ece587e5671602bca9b6c109f919771649eb8bb53d8cd0e2ff83abc185"
            }
          }
        }
      ]
  name: confluent-for-kubernetes.v2.3.4
spec:
  displayName: Confluent for Kubernetes
  description: >-
    Confluent for Kubernetes (CFK) is a cloud-native control plane for deploying and managing
    Confluent in your private cloud environment. It provides standard and simple interface to
    customize, deploy, and manage Confluent Platform through declarative API.

    The 2.3.3 version of the package installs CFK 2.3.4 and 7.1.x CP. It has been minified to
    remove less-commonly-used CRDs to fit into the OLM max bundle size for OpenShift <=4.8:
    https://github.com/redhat-openshift-ecosystem/certified-operators/issues/552. Field
    descriptions have also all been removed; these are documented here:
    https://docs.confluent.io/operator/2.3/co-api.html

    Confluent for Kubernetes runs on Kubernetes, the runtime for private cloud architectures.
  keywords:
    - Confluent
    - Kafka
    - Kubernetes
    - Private Cloud
    - Cloud-Native
    - Event Streaming
    - Data in Motion
  maintainers:
    - email: jlee@confluent.io
      name: Justin Lee
  provider:
    name: Confluent, Inc.
    url: https://confluent.io
  version: "2.3.4"
  links:
  - name: Documentation
    url: https://docs.confluent.io/operator/current/overview.html
  - name: Examples and Tutorials
    url: https://github.com/confluentinc/confluent-kubernetes-examples
  - name: Product Overview (Blog)
    url: https://www.confluent.io/blog/confluent-for-kubernetes-offers-cloud-native-kafka-automation/
  maturity: stable
  relatedImages:
    - name: confluent-operator
      image: docker.io/confluentinc/confluent-operator@sha256:b5b278a043c79b2da86acfa9bd60dd4d6e3d8989caf24f303af9a05b916c519f
    - name: confluent-init-container
      image: docker.io/confluentinc/confluent-init-container@sha256:12d8c4ece587e5671602bca9b6c109f919771649eb8bb53d8cd0e2ff83abc185
    - name: cp-zookeeper
      image: docker.io/confluentinc/cp-zookeeper@sha256:71c476d6c5d6a82b1e1b42055f6693f1f4789a95ecbb5c8bb2b437655742c819
    - name: cp-server
      image: docker.io/confluentinc/docker.io/confluentinc/cp-server@sha256:89ae87a6a366ba2aea2d95388e33f09fde2eda33eb4f55bf3f256aa0c661240f
    - name: cp-kafka-rest
      image: docker.io/confluentinc/cp-kafka-rest@sha256:b797b1e3baa7075f7322c785319edc68596cad5f834cc5c44a5d9d58d7bb66bb
    - name: cp-ksqldb-server
      image: docker.io/confluentinc/cp-ksqldb-server@sha256:cf47fd558d55a28134e6ff8fa314cbfcafd625127eb505125f15d7b54531fa54
    - name: cp-schema-registry
      image: docker.io/confluentinc/cp-schema-registry@sha256:f868c489323760a971923fd26b35657da7612a54b1d2594550714db7548405f3
    - name: cp-server-connect
      image: docker.io/confluentinc/cp-server-connect@sha256:90cece568a8502135c9c808cca9b73d087ee6ee9ab20e8024b7b2556d4dfd68e
    - name: cp-enterprise-control-center
      image: docker.io/confluentinc/cp-enterprise-control-center@sha256:ef7ccb79a03fe80c654881e607fe0f606407de0282927cbf768326d1b78b50a9
  customresourcedefinitions:
    owned:
    - description: >-
        Placeholder; removed for Openshift <= 4.8
      displayName: Schema Exporter
      kind: SchemaExporter
      name: schemaexporters.platform.confluent.io
      version: v1beta1
    - description: >-
        Cluster Links are lightweight, persistent bridges that enable you to
        seamlessly move data between clusters.
      displayName: Cluster Link
      kind: ClusterLink
      name: clusterlinks.platform.confluent.io
      version: v1beta1
    - description: >-
        Placeholder; removed for Openshift <= 4.8
      displayName: Confluent Role Binding
      kind: ConfluentRolebinding
      name: confluentrolebindings.platform.confluent.io
      version: v1beta1
    - description: >-
        Placeholder; removed for Openshift <= 4.8
      displayName: Connector
      kind: Connector
      name: connectors.platform.confluent.io
      version: v1beta1
    - description: >-
        Connect enables you to easily stream data from common data sources to Confluent
        and to stream data from Confluent to common data stores
      displayName: Connect
      kind: Connect
      name: connects.platform.confluent.io
      version: v1beta1
    - description: >-
        Confluent Control Center is a web-based UI for managing and monitoring Confluent
      displayName: Control Center
      kind: ControlCenter
      name: controlcenters.platform.confluent.io
      version: v1beta1
    - description: >-
        Kafka REST Class encapsulates authentication information for any Confluent Kafka
        REST API. Instances of Kafka REST Class are referenced in other Confluent resources
        such as Topics, to control how and where Topics are created when using Confluent for
        Kubernetes to manage topics.
      displayName: Kafka REST Class
      kind: KafkaRestClass
      name: kafkarestclasses.platform.confluent.io
      version: v1beta1
    - description: >-
        Placeholder; removed for Openshift <= 4.8
      displayName: Confluent REST Proxy
      kind: KafkaRestProxy
      name: kafkarestproxies.platform.confluent.io
      version: v1beta1
    - description: >-
        A Kafka cluster is the central component of the Confluent data streaming platform,
        enabling you to easily access, store, and manage data as continuous, real-time streams.
      displayName: Kafka
      kind: Kafka
      name: kafkas.platform.confluent.io
      version: v1beta1
    - description: >-
        The primary unit of data in Kafka is the Event or Message. Events are organized and
        durably stored into Topics.
      displayName: Topic
      kind: KafkaTopic
      name: kafkatopics.platform.confluent.io
      version: v1beta1
    - description: >-
        Placeholder; removed for Openshift <= 4.8
      displayName: ksqlDB
      kind: KsqlDB
      name: ksqldbs.platform.confluent.io
      version: v1beta1
    - description: Placeholder; removed for Openshift <= 4.8
      displayName: Migration Job
      kind: MigrationJob
      name: migrationjobs.platform.confluent.io
      version: v1beta1
    - description: >-
        Confluent Schema Registry provides a serving layer for your metadata. It provides a
        RESTful interface for storing and retrieving your Avro®, JSON Schema, and Protobuf
        schemas, so that you can work with structured Event data in your Kafka Topics.
      displayName: Schema Registry
      kind: SchemaRegistry
      name: schemaregistries.platform.confluent.io
      version: v1beta1
    - description: >-
        Placeholder; removed for Openshift <= 4.8
      displayName: Schema
      kind: Schema
      name: schemas.platform.confluent.io
      version: v1beta1
    - description: >-
        A ZooKeeper cluster is a dependency for deploying a Kafka cluster, and is used to store
        metadata about the Kafka cluster and its clients.
      displayName: ZooKeeper
      kind: Zookeeper
      name: zookeepers.platform.confluent.io
      version: v1beta1
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: true
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  icon:
  - base64data: ""
    mediatype: "image/png"
  install:
    strategy: deployment
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - cluster.confluent.com
          resources:
          - zookeeperclusters
          - zookeeperclusters/status
          - zookeeperclusters/scale
          - zookeeperclusters/finalizers
          - kafkaclusters
          - kafkaclusters/status
          - kafkaclusters/scale
          - kafkaclusters/finalizers
          verbs:
          - '*'
        - apiGroups:
          - operator.confluent.cloud
          resources:
          - physicalstatefulclusters
          - physicalstatefulclusters/scale
          - physicalstatefulclusters/status
          - physicalstatefulclusters/finalizers
          verbs:
          - '*'
        - apiGroups:
          - platform.confluent.io
          resources:
          - '*'
          verbs:
          - '*'
        - apiGroups:
          - policy
          resources:
          - poddisruptionbudgets
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - route.openshift.io
          resources:
          - routes
          - routes/custom-host
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - apps
          resources:
          - statefulsets
          - statefulsets/scale
          - statefulsets/status
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - configmaps
          - persistentvolumeclaims
          - secrets
          - secrets/finalizers
          - pods
          - services
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        - apiGroups:
          - networking.k8s.io
          resources:
          - ingresses
          - ingresses/status
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - get
        serviceAccountName: confluent-for-kubernetes
      deployments:
      - name: confluent-operator
        spec:
          replicas: 1
          selector:
            matchLabels:
              app.kubernetes.io/name: "confluent-operator"
              app.kubernetes.io/instance: confluent-operator
          strategy:
            rollingUpdate:
              maxSurge: 1
              maxUnavailable: 0
            type: RollingUpdate
          template:
            metadata:
              annotations:
                prometheus.io/path: "/metrics"
                prometheus.io/port: "7778"
                prometheus.io/scrape: "true"
              labels:
                app: "confluent-operator"
                app.kubernetes.io/name: "confluent-operator"
                app.kubernetes.io/instance: confluent-operator
                confluent-platform: "true"
                version: "0.435.67"
            spec:
              containers:
              - args:
                - --debug=false
                name: confluent-operator
                image: docker.io/confluentinc/confluent-operator@sha256:b5b278a043c79b2da86acfa9bd60dd4d6e3d8989caf24f303af9a05b916c519f
                imagePullPolicy: IfNotPresent
                terminationMessagePath: /dev/termination-log
                terminationMessagePolicy: File
                readinessProbe:
                  httpGet:
                    port: 8080
                    path: /readyz
                livenessProbe:
                  httpGet:
                    port: 8080
                    path: /healthz
                resources:
                  limits:
                    cpu: 500m
                    memory: 512Mi
                  requests:
                    cpu: 100m
                    memory: 256Mi
                env:
                  - name: NAMESPACE
                    valueFrom:
                      fieldRef:
                        fieldPath: metadata.namespace
                  - name: NODEIP
                    valueFrom:
                      fieldRef:
                        fieldPath: status.hostIP
                  - name: DD_ENTITY_ID
                    valueFrom:
                      fieldRef:
                        fieldPath: metadata.uid
              serviceAccountName: confluent-for-kubernetes
              restartPolicy: Always
              terminationGracePeriodSeconds: 30
      permissions:
      - rules:
        - apiGroups:
          - cluster.confluent.com
          resources:
          - zookeeperclusters
          - zookeeperclusters/status
          - zookeeperclusters/scale
          - zookeeperclusters/finalizers
          - kafkaclusters
          - kafkaclusters/status
          - kafkaclusters/scale
          - kafkaclusters/finalizers
          verbs:
          - '*'
        - apiGroups:
          - operator.confluent.cloud
          resources:
          - physicalstatefulclusters
          - physicalstatefulclusters/scale
          - physicalstatefulclusters/status
          - physicalstatefulclusters/finalizers
          verbs:
          - '*'
        - apiGroups:
          - platform.confluent.io
          resources:
          - '*'
          verbs:
          - '*'
        - apiGroups:
          - policy
          resources:
          - poddisruptionbudgets
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - route.openshift.io
          resources:
          - routes
          - routes/custom-host
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - apps
          resources:
          - statefulsets
          - statefulsets/scale
          - statefulsets/status
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - configmaps
          - persistentvolumeclaims
          - secrets
          - secrets/finalizers
          - pods
          - services
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        - apiGroups:
          - networking.k8s.io
          resources:
          - ingresses
          - ingresses/status
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - get
        serviceAccountName: confluent-for-kubernetes
