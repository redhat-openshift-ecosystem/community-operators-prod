apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "apachespark.apache.org/v1alpha1",
          "kind": "Spark",
          "metadata": {
            "annotations": {
              "helm.sdk.operatorframework.io/install-disable-crds": "true"
            },
            "name": "spark-operator"
          },
          "spec": {
            "affinity": {},
            "batchScheduler": {
              "enable": false
            },
            "controllerThreads": 10,
            "fullnameOverride": "",
            "image": {
              "pullPolicy": "IfNotPresent",
              "repository": "ghcr.io/googlecloudplatform/spark-operator",
              "tag": ""
            },
            "imagePullSecrets": [],
            "ingressUrlFormat": "",
            "istio": {
              "enabled": false
            },
            "labelSelectorFilter": "",
            "leaderElection": {
              "lockName": "spark-operator-lock",
              "lockNamespace": ""
            },
            "logLevel": 2,
            "metrics": {
              "enable": true,
              "endpoint": "/metrics",
              "port": 10254,
              "portName": "metrics",
              "prefix": ""
            },
            "nameOverride": "",
            "nodeSelector": {},
            "podAnnotations": {},
            "podLabels": {},
            "podMonitor": {
              "enable": false,
              "jobLabel": "spark-operator-podmonitor",
              "labels": {},
              "podMetricsEndpoint": {
                "interval": "5s",
                "scheme": "http"
              }
            },
            "podSecurityContext": {},
            "rbac": {
              "create": false,
              "createClusterRole": true,
              "createRole": true
            },
            "replicaCount": 1,
            "resourceQuotaEnforcement": {
              "enable": false
            },
            "resources": {},
            "resyncInterval": 30,
            "securityContext": {},
            "serviceAccounts": {
              "spark": {
                "annotations": {},
                "create": true,
                "name": ""
              },
              "sparkoperator": {
                "annotations": {},
                "create": true,
                "name": ""
              }
            },
            "sparkJobNamespace": "",
            "tolerations": [],
            "uiService": {
              "enable": true
            },
            "volumeMounts": [],
            "volumes": [],
            "webhook": {
              "cleanupAnnotations": {
                "helm.sh/hook": "pre-delete, pre-upgrade",
                "helm.sh/hook-delete-policy": "hook-succeeded"
              },
              "enable": false,
              "initAnnotations": {
                "helm.sh/hook": "pre-install, pre-upgrade",
                "helm.sh/hook-weight": "50"
              },
              "namespaceSelector": "",
              "port": 8080,
              "timeout": 30
            }
          }
        },
        {
          "apiVersion": "sparkoperator.k8s.io/v1beta2",
          "kind": "ScheduledSparkApplication",
          "metadata": {
            "name": "spark-pi-scheduled",
            "namespace": "spark-operator"
          },
          "spec": {
            "concurrencyPolicy": "Allow",
            "schedule": "@every 5m",
            "template": {
              "driver": {
                "coreLimit": "1200m",
                "cores": 1,
                "labels": {
                  "version": "3.1.1"
                },
                "memory": "512m",
                "serviceAccount": "spark-sample-spark",
                "volumeMounts": [
                  {
                    "mountPath": "/tmp",
                    "name": "test-volume"
                  }
                ]
              },
              "executor": {
                "cores": 1,
                "instances": 1,
                "labels": {
                  "version": "3.1.1"
                },
                "memory": "512m",
                "volumeMounts": [
                  {
                    "mountPath": "/tmp",
                    "name": "test-volume"
                  }
                ]
              },
              "image": "gcr.io/spark-operator/spark:v3.1.1",
              "imagePullPolicy": "Always",
              "mainApplicationFile": "local:///opt/spark/examples/jars/spark-examples_2.12-3.1.1.jar",
              "mainClass": "org.apache.spark.examples.SparkPi",
              "mode": "cluster",
              "restartPolicy": {
                "type": "Never"
              },
              "sparkVersion": "3.1.1",
              "type": "Scala",
              "volumes": [
                {
                  "hostPath": {
                    "path": "/tmp",
                    "type": "Directory"
                  },
                  "name": "test-volume"
                }
              ]
            }
          }
        },
        {
          "apiVersion": "sparkoperator.k8s.io/v1beta2",
          "kind": "SparkApplication",
          "metadata": {
            "name": "pyspark-pi",
            "namespace": "spark-operator"
          },
          "spec": {
            "driver": {
              "coreLimit": "1200m",
              "cores": 1,
              "labels": {
                "version": "3.1.1"
              },
              "memory": "512m",
              "serviceAccount": "spark-sample-spark"
            },
            "executor": {
              "cores": 1,
              "instances": 1,
              "labels": {
                "version": "3.1.1"
              },
              "memory": "512m"
            },
            "image": "gcr.io/spark-operator/spark-py:v3.1.1",
            "imagePullPolicy": "Always",
            "mainApplicationFile": "local:///opt/spark/examples/src/main/python/pi.py",
            "mode": "cluster",
            "pythonVersion": "3",
            "restartPolicy": {
              "onFailureRetries": 3,
              "onFailureRetryInterval": 10,
              "onSubmissionFailureRetries": 5,
              "onSubmissionFailureRetryInterval": 20,
              "type": "OnFailure"
            },
            "sparkVersion": "3.1.1",
            "type": "Python"
          }
        },
        {
          "apiVersion": "sparkoperator.k8s.io/v1beta2",
          "kind": "SparkApplication",
          "metadata": {
            "name": "spark-pi",
            "namespace": "spark-operator"
          },
          "spec": {
            "driver": {
              "coreLimit": "1200m",
              "cores": 1,
              "labels": {
                "version": "3.1.1"
              },
              "memory": "512m",
              "serviceAccount": "spark-sample-spark",
              "volumeMounts": [
                {
                  "mountPath": "/tmp",
                  "name": "test-volume"
                }
              ]
            },
            "executor": {
              "cores": 1,
              "instances": 1,
              "labels": {
                "version": "3.1.1"
              },
              "memory": "512m",
              "volumeMounts": [
                {
                  "mountPath": "/tmp",
                  "name": "test-volume"
                }
              ]
            },
            "image": "gcr.io/spark-operator/spark:v3.1.1",
            "imagePullPolicy": "Always",
            "mainApplicationFile": "local:///opt/spark/examples/jars/spark-examples_2.12-3.1.1.jar",
            "mainClass": "org.apache.spark.examples.SparkPi",
            "mode": "cluster",
            "restartPolicy": {
              "type": "Never"
            },
            "sparkVersion": "3.1.1",
            "type": "Scala",
            "volumes": [
              {
                "hostPath": {
                  "path": "/tmp",
                  "type": "Directory"
                },
                "name": "test-volume"
              }
            ]
          }
        }
      ]
    capabilities: Basic Install
    categories: Big Data
    containerImage: quay.io/opdev/spark-helm-operator-controller:0.0.1
    createdAt: "2023-07-13T14:52:38Z"
    description: An experimental operator that installs the spark on k8s operator
      from its helm chart.
    operatorframework.io/initialization-resource: "{\n  \"apiVersion\": \"apachespark.apache.org/v1alpha1\",\n
      \ \"kind\": \"Spark\",\n  \"metadata\": {\n    \"name\": \"spark-operator\"\n
      \ },\n  \"spec\": {\n    \"affinity\": {},\n    \"batchScheduler\": {\n      \"enable\":
      false\n    },\n    \"controllerThreads\": 10,\n    \"fullnameOverride\": \"\",\n
      \   \"image\": {\n      \"pullPolicy\": \"IfNotPresent\",\n      \"repository\":
      \"ghcr.io/googlecloudplatform/spark-operator\",\n      \"tag\": \"\"\n    },\n
      \   \"imagePullSecrets\": [],\n    \"ingressUrlFormat\": \"\",\n    \"istio\":
      {\n      \"enabled\": false\n    },\n    \"labelSelectorFilter\": \"\",\n    \"leaderElection\":
      {\n      \"lockName\": \"spark-operator-lock\",\n      \"lockNamespace\": \"\"\n
      \   },\n    \"logLevel\": 2,\n    \"metrics\": {\n      \"enable\": true,\n
      \     \"endpoint\": \"/metrics\",\n      \"port\": 10254,\n      \"portName\":
      \"metrics\",\n      \"prefix\": \"\"\n    },\n    \"nameOverride\": \"\",\n
      \   \"nodeSelector\": {},\n    \"podAnnotations\": {},\n    \"podLabels\": {},\n
      \   \"podMonitor\": {\n      \"enable\": false,\n      \"jobLabel\": \"spark-operator-podmonitor\",\n
      \     \"labels\": {},\n      \"podMetricsEndpoint\": {\n        \"interval\":
      \"5s\",\n        \"scheme\": \"http\"\n      }\n    },\n    \"podSecurityContext\":
      {},\n    \"rbac\": {\n      \"create\": false,\n      \"createClusterRole\":
      true,\n      \"createRole\": true\n    },\n    \"replicaCount\": 1,\n    \"resourceQuotaEnforcement\":
      {\n      \"enable\": false\n    },\n    \"resources\": {},\n    \"resyncInterval\":
      30,\n    \"securityContext\": {},\n    \"serviceAccounts\": {\n      \"spark\":
      {\n        \"annotations\": {},\n        \"create\": true,\n        \"name\":
      \"\"\n      },\n      \"sparkoperator\": {\n        \"annotations\": {},\n        \"create\":
      true,\n        \"name\": \"\"\n      }\n    },\n    \"sparkJobNamespace\": \"\",\n
      \   \"tolerations\": [],\n    \"uiService\": {\n      \"enable\": true\n    },\n
      \   \"volumeMounts\": [],\n    \"volumes\": [],\n    \"webhook\": {\n      \"cleanupAnnotations\":
      {\n        \"helm.sh/hook\": \"pre-delete, pre-upgrade\",\n        \"helm.sh/hook-delete-policy\":
      \"hook-succeeded\"\n      },\n      \"enable\": false,\n      \"initAnnotations\":
      {\n        \"helm.sh/hook\": \"pre-install, pre-upgrade\",\n        \"helm.sh/hook-weight\":
      \"50\"\n      },\n      \"namespaceSelector\": \"\",\n      \"port\": 8080,\n
      \     \"timeout\": 30\n    }\n  }\n}    "
    operatorframework.io/suggested-namespace: spark-operator
    operators.operatorframework.io/builder: operator-sdk-v1.30.0
    operators.operatorframework.io/project_layout: hybrid.helm.sdk.operatorframework.io/v1-alpha
  name: spark-helm-operator.v0.0.1
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: Deploys a scheduled spark application based on the spec provided
      displayName: Scheduled Spark Application
      kind: ScheduledSparkApplication
      name: scheduledsparkapplications.sparkoperator.k8s.io
      version: v1beta2
    - description: Deploys a spark application based on the spec provided
      displayName: Spark Application
      kind: SparkApplication
      name: sparkapplications.sparkoperator.k8s.io
      version: v1beta2
    - description: Deploys the spark operator based on the google cloud platform helm
        chart
      displayName: Spark Operator
      kind: Spark
      name: sparks.apachespark.apache.org
      version: v1alpha1
  description: An experimental helm based operator that wraps the spark on k8s helm
    chart from google cloud platform enabling installation and workload management
    of Apache Spark
  displayName: Spark Helm Operator
  icon:
  - base64data: 
    mediatype: image/svg+xml
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - get
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
        - apiGroups:
          - apachespark.apache.org
          resources:
          - sparks
          - sparks/status
          - sparks/finalizers
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - serviceaccounts
          verbs:
          - '*'
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - rolebindings
          - roles
          verbs:
          - '*'
        - apiGroups:
          - apps
          resources:
          - deployments
          verbs:
          - '*'
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - clusterrolebindings
          - clusterroles
          - rolebindings
          - roles
          verbs:
          - '*'
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        serviceAccountName: spark-helm-operator-controller-manager
      deployments:
      - label:
          app.kubernetes.io/component: manager
          app.kubernetes.io/created-by: spark-helm-operator
          app.kubernetes.io/instance: controller-manager
          app.kubernetes.io/managed-by: kustomize
          app.kubernetes.io/name: deployment
          app.kubernetes.io/part-of: spark-helm-operator
          control-plane: controller-manager
        name: spark-helm-operator-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              control-plane: controller-manager
          strategy: {}
          template:
            metadata:
              annotations:
                kubectl.kubernetes.io/default-container: manager
              labels:
                control-plane: controller-manager
            spec:
              affinity:
                nodeAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                    nodeSelectorTerms:
                    - matchExpressions:
                      - key: kubernetes.io/arch
                        operator: In
                        values:
                        - amd64
                        - arm64
                        - ppc64le
                        - s390x
                      - key: kubernetes.io/os
                        operator: In
                        values:
                        - linux
              containers:
              - args:
                - --secure-listen-address=0.0.0.0:8443
                - --upstream=http://127.0.0.1:8080/
                - --logtostderr=true
                - --v=0
                image: gcr.io/kubebuilder/kube-rbac-proxy:v0.13.1
                name: kube-rbac-proxy
                ports:
                - containerPort: 8443
                  name: https
                  protocol: TCP
                resources:
                  limits:
                    cpu: 500m
                    memory: 128Mi
                  requests:
                    cpu: 5m
                    memory: 64Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
              - args:
                - --health-probe-bind-address=:8081
                - --metrics-bind-address=127.0.0.1:8080
                - --leader-elect
                - --leader-election-id=spark-helm-operator
                image: quay.io/opdev/spark-helm-operator-controller:0.0.1
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                  initialDelaySeconds: 15
                  periodSeconds: 20
                name: manager
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: 8081
                  initialDelaySeconds: 5
                  periodSeconds: 10
                resources:
                  limits:
                    cpu: 500m
                    memory: 128Mi
                  requests:
                    cpu: 10m
                    memory: 64Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
              securityContext:
                runAsNonRoot: true
              serviceAccountName: spark-helm-operator-controller-manager
              terminationGracePeriodSeconds: 10
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        serviceAccountName: spark-helm-operator-controller-manager
    strategy: deployment
  installModes:
  - supported: false
    type: OwnNamespace
  - supported: false
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - big data
  - map reduce
  - data science
  links:
  - name: Spark Helm Operator
    url: https://github.com/skattoju/spark-helm-operator
  maintainers:
  - email: skattoju@redhat.com
    name: Sid Kattoju
  maturity: alpha
  minKubeVersion: 1.23.0
  provider:
    name: opdev
    url: opdev.github.io
  version: 0.0.1
