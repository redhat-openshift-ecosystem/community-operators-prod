apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: azureauthengineroles.redhatcop.redhat.io
spec:
  group: redhatcop.redhat.io
  names:
    kind: AzureAuthEngineRole
    listKind: AzureAuthEngineRoleList
    plural: azureauthengineroles
    singular: azureauthenginerole
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AzureAuthEngineRole is the Schema for the azureauthengineroles
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AzureAuthEngineRoleSpec defines the desired state of AzureAuthEngineRole
            properties:
              authentication:
                description: Authentication is the kube auth configuraiton to be used
                  to execute this request
                properties:
                  namespace:
                    description: Namespace is the Vault namespace to be used in all
                      the operations withing this connection/authentication. Only
                      available in Vault Enterprise.
                    type: string
                  path:
                    default: kubernetes
                    description: Path is the path of the role used for this kube auth
                      authentication. The operator will try to authenticate at {[namespace/]}auth/{spec.path}
                    pattern: ^(?:/?[\w;:@&=\$-\.\+]*)+/?
                    type: string
                  role:
                    description: Role the role to be used during authentication
                    type: string
                  serviceAccount:
                    default:
                      name: default
                    description: ServiceAccount is the service account used for the
                      kube auth authentication
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                type: object
              boundGroupIDs:
                description: The list of group ids that login is restricted to. kubebuilder:validation:UniqueItems=true
                items:
                  type: string
                type: array
                x-kubernetes-list-type: set
              boundLocations:
                description: The list of locations that login is restricted to. kubebuilder:validation:UniqueItems=true
                items:
                  type: string
                type: array
                x-kubernetes-list-type: set
              boundResourceGroups:
                description: The list of resource groups that login is restricted
                  to. kubebuilder:validation:UniqueItems=true
                items:
                  type: string
                type: array
                x-kubernetes-list-type: set
              boundScaleSets:
                description: The list of scale set names that the login is restricted
                  to. kubebuilder:validation:UniqueItems=true
                items:
                  type: string
                type: array
                x-kubernetes-list-type: set
              boundServicePrincipalIDs:
                description: The list of Service Principal IDs that login is restricted
                  to. kubebuilder:validation:UniqueItems=true
                items:
                  type: string
                type: array
                x-kubernetes-list-type: set
              boundSubscriptionIDs:
                description: The list of subscription IDs that login is restricted
                  to. kubebuilder:validation:UniqueItems=true
                items:
                  type: string
                type: array
                x-kubernetes-list-type: set
              connection:
                description: Connection represents the information needed to connect
                  to Vault. This operator uses the standard Vault environment variables
                  to connect to Vault. If you need to override those settings and
                  for example connect to a different Vault instance, you can do with
                  this section of the CR.
                properties:
                  address:
                    description: 'Address Address of the Vault server expressed as
                      a URL and port, for example: https://127.0.0.1:8200/'
                    type: string
                  maxRetries:
                    description: MaxRetries Maximum number of retries when certain
                      error codes are encountered. The default is 2, for three total
                      attempts. Set this to 0 or less to disable retrying. Error codes
                      that are retried are 412 (client consistency requirement not
                      satisfied) and all 5xx except for 501 (not implemented).
                    type: integer
                  tLSConfig:
                    properties:
                      cacert:
                        description: Cacert Path to a PEM-encoded CA certificate file
                          on the local disk. This file is used to verify the Vault
                          server's SSL certificate. This environment variable takes
                          precedence over a cert passed via the secret.
                        type: string
                      skipVerify:
                        description: SkipVerify Do not verify Vault's presented certificate
                          before communicating with it. Setting this variable is not
                          recommended and voids Vault's security model.
                        type: boolean
                      tlsSecret:
                        description: 'TLSSecret namespace-local secret containing
                          the tls material for the connection. the expected keys for
                          the secret are: ca bundle -> "ca.crt", certificate -> "tls.crt",
                          key -> "tls.key"'
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      tlsServerName:
                        description: TLSServerName Name to use as the SNI host when
                          connecting via TLS.
                        type: string
                    type: object
                  timeOut:
                    description: Timeout Timeout variable. The default value is 60s.
                    type: string
                type: object
              name:
                description: Name of the role.
                type: string
              path:
                description: Path at which to make the configuration. The final path
                  in Vault will be {[spec.authentication.namespace]}/auth/{spec.path}/groups/{metadata.name}.
                  The authentication role must have the following capabilities = [
                  "create", "read", "update", "delete"] on that path.
                pattern: ^(?:/?[\w;:@&=\$-\.\+]*)+/?
                type: string
              policies:
                description: 'DEPRECATED: Please use the token_policies parameter
                  instead. List of token policies to encode onto generated tokens.
                  Depending on the auth method, this list may be supplemented by user/group/other
                  values. kubebuilder:validation:UniqueItems=true'
                items:
                  type: string
                type: array
                x-kubernetes-list-type: set
              tokenBoundCIDRs:
                description: List of CIDR blocks. If set, specifies blocks of IP addresses
                  which can authenticate successfully, and ties the resulting token
                  to these blocks as well. kubebuilder:validation:UniqueItems=true
                items:
                  type: string
                type: array
                x-kubernetes-list-type: set
              tokenExplicitMaxTTL:
                default: ""
                description: If set, will encode an explicit max TTL onto the token.
                  This is a hard cap even if token_ttl and token_max_ttl would otherwise
                  allow a renewal.
                type: string
              tokenMaxTTL:
                default: ""
                description: The maximum lifetime for generated tokens. This current
                  value of this will be referenced at renewal time.
                type: string
              tokenNoDefaultPolicy:
                default: false
                description: If set, the default policy will not be set on generated
                  tokens; otherwise it will be added to the policies set in token_policies.
                type: boolean
              tokenNumUses:
                default: 0
                description: The maximum number of times a generated token may be
                  used (within its lifetime); 0 means unlimited. If you require the
                  token to have the ability to create child tokens, you will need
                  to set this value to 0.
                format: int64
                type: integer
              tokenPeriod:
                default: 0
                description: The maximum allowed period value when a periodic token
                  is requested from this role.
                format: int64
                type: integer
              tokenPolicies:
                description: List of token policies to encode onto generated tokens.
                  Depending on the auth method, this list may be supplemented by user/group/other
                  values. kubebuilder:validation:UniqueItems=true
                items:
                  type: string
                type: array
                x-kubernetes-list-type: set
              tokenTTL:
                default: ""
                description: The incremental lifetime for generated tokens. This current
                  value of this will be referenced at renewal time.
                type: string
              tokenType:
                default: ""
                description: 'The type of token that should be generated. Can be service,
                  batch, or default to use the mount''s tuned default (which unless
                  changed will be service tokens). For token store roles, there are
                  two additional possibilities: default-service and default-batch
                  which specify the type to return unless the client requests a different
                  type at generation time. For machine based authentication cases,
                  you should use batch type tokens.'
                type: string
            required:
            - name
            type: object
          status:
            description: AzureAuthEngineRoleStatus defines the observed state of AzureAuthEngineRole
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
