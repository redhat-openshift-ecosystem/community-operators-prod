apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: directvolumemigrationprogresses.migration.openshift.io
spec:
  group: migration.openshift.io
  names:
    kind: DirectVolumeMigrationProgress
    listKind: DirectVolumeMigrationProgressList
    plural: directvolumemigrationprogresses
    shortNames:
    - dvmp
    singular: directvolumemigrationprogress
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.clusterRef.name
      name: Cluster
      type: string
    - jsonPath: .status.podName
      name: Pod Name
      type: string
    - jsonPath: .spec.podNamespace
      name: Pod Namespace
      type: string
    - jsonPath: .status.totalProgressPercentage
      name: Progress Percent
      type: string
    - jsonPath: .status.lastObservedTransferRate
      name: Transfer Rate
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DirectVolumeMigrationProgress is the Schema for the directvolumemigrationprogresses
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DirectVolumeMigrationProgressSpec defines the desired state
              of DirectVolumeMigrationProgress
            properties:
              clusterRef:
                description: 'ObjectReference contains enough information to let you
                  inspect or modify the referred object. --- New uses of this type
                  are discouraged because of difficulty describing its usage when
                  embedded in APIs.  1. Ignored fields.  It includes many fields which
                  are not generally honored.  For instance, ResourceVersion and FieldPath
                  are both very rarely valid in actual usage.  2. Invalid usage help.  It
                  is impossible to add specific help for individual usage.  In most
                  embedded usages, there are particular     restrictions like, "must
                  refer only to types A and B" or "UID not honored" or "name must
                  be restricted".     Those cannot be well described when embedded.  3.
                  Inconsistent validation.  Because the usages are different, the
                  validation rules are different by usage, which makes it hard for
                  users to predict what will happen.  4. The fields are both imprecise
                  and overly precise.  Kind is not a precise mapping to a URL. This
                  can produce ambiguity     during interpretation and require a REST
                  mapping.  In most cases, the dependency is on the group,resource
                  tuple     and the version of the actual struct is irrelevant.  5.
                  We cannot easily change it.  Because this type is embedded in many
                  locations, updates to this type     will affect numerous schemas.  Don''t
                  make new APIs embed an underspecified API type they do not control.
                  Instead of using this type, create a locally provided and used type
                  that is well-focused on your reference. For example, ServiceReferences
                  for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                  .'
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
              podNamespace:
                type: string
              podRef:
                description: 'ObjectReference contains enough information to let you
                  inspect or modify the referred object. --- New uses of this type
                  are discouraged because of difficulty describing its usage when
                  embedded in APIs.  1. Ignored fields.  It includes many fields which
                  are not generally honored.  For instance, ResourceVersion and FieldPath
                  are both very rarely valid in actual usage.  2. Invalid usage help.  It
                  is impossible to add specific help for individual usage.  In most
                  embedded usages, there are particular     restrictions like, "must
                  refer only to types A and B" or "UID not honored" or "name must
                  be restricted".     Those cannot be well described when embedded.  3.
                  Inconsistent validation.  Because the usages are different, the
                  validation rules are different by usage, which makes it hard for
                  users to predict what will happen.  4. The fields are both imprecise
                  and overly precise.  Kind is not a precise mapping to a URL. This
                  can produce ambiguity     during interpretation and require a REST
                  mapping.  In most cases, the dependency is on the group,resource
                  tuple     and the version of the actual struct is irrelevant.  5.
                  We cannot easily change it.  Because this type is embedded in many
                  locations, updates to this type     will affect numerous schemas.  Don''t
                  make new APIs embed an underspecified API type they do not control.
                  Instead of using this type, create a locally provided and used type
                  that is well-focused on your reference. For example, ServiceReferences
                  for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                  .'
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
              podSelector:
                additionalProperties:
                  type: string
                type: object
            type: object
          status:
            description: DirectVolumeMigrationProgressStatus defines the observed
              state of DirectVolumeMigrationProgress
            properties:
              conditions:
                items:
                  description: Condition Type - The condition type. Status - The condition
                    status. Reason - The reason for the condition. Message - The human
                    readable description of the condition. Durable - The condition
                    is not un-staged. Items - A list of `items` associated with the
                    condition used to replace [] in `Message`. staging - A condition
                    has been explicitly set/updated.
                  properties:
                    category:
                      type: string
                    durable:
                      type: boolean
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      type: string
                  required:
                  - category
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              containerElapsedTime:
                description: ContainerElapsedTime total execution time of Rsync Pod
                type: string
              creationTimestamp:
                description: CreationTimestamp pod creation time
                format: date-time
                type: string
              exitCode:
                description: ExitCode exit code of terminated Rsync Pod
                format: int32
                type: integer
              lastObservedProgressPercent:
                description: LastObservedProgressPercent progress of Rsync in percentage
                type: string
              lastObservedTransferRate:
                description: LastObservedTransferRate rate of transfer of Rsync
                type: string
              logMessage:
                description: LogMessage few lines of tailed log of the Rsync Pod
                type: string
              observedDigest:
                type: string
              phase:
                description: PodPhase phase of the Rsync Pod
                type: string
              podName:
                description: PodName name of the Rsync Pod
                type: string
              rsyncElapsedTime:
                description: RsyncElapsedTime total elapsed time of Rsync operation
                type: string
              rsyncPodStatuses:
                description: RsyncPodStatuses history of all Rsync attempts
                items:
                  description: RsyncPodStatus defines observed state of an Rsync attempt
                  properties:
                    containerElapsedTime:
                      description: ContainerElapsedTime total execution time of Rsync
                        Pod
                      type: string
                    creationTimestamp:
                      description: CreationTimestamp pod creation time
                      format: date-time
                      type: string
                    exitCode:
                      description: ExitCode exit code of terminated Rsync Pod
                      format: int32
                      type: integer
                    lastObservedProgressPercent:
                      description: LastObservedProgressPercent progress of Rsync in
                        percentage
                      type: string
                    lastObservedTransferRate:
                      description: LastObservedTransferRate rate of transfer of Rsync
                      type: string
                    logMessage:
                      description: LogMessage few lines of tailed log of the Rsync
                        Pod
                      type: string
                    phase:
                      description: PodPhase phase of the Rsync Pod
                      type: string
                    podName:
                      description: PodName name of the Rsync Pod
                      type: string
                  type: object
                type: array
              totalProgressPercentage:
                description: TotalProgressPercentage cumulative percentage of all
                  Rsync attempts
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
