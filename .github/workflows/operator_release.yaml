name: Operator release 
on:
  push:
    branches:
      - master
      - main

  workflow_dispatch:
    inputs:
      release:
        description: 'Force to run release'
        required: true
        default: '0'   
      delete:
        description: 'Remove operator virtually from git (cockroachdb or cockroachdb/5.0.4) for debuging only'
        required: false
        default: ''

env:
  OPP_DEBUG: 1
  OPP_CONTAINER_OPT: "-t"
  OPP_SCRIPT_URL: "https://raw.githubusercontent.com/redhat-openshift-ecosystem/community-operators-pipeline/ci/latest/ci/scripts/opp.sh"
  OPP_SCRIPT_ENV_URL: "https://raw.githubusercontent.com/redhat-openshift-ecosystem/community-operators-pipeline/ci/latest/ci/scripts/opp-env.sh"
  OPP_SCRIPT_ISS_URL: "https://raw.githubusercontent.com/redhat-openshift-ecosystem/community-operators-pipeline/ci/latest/ci/scripts/opp-iss.sh"
  OPP_SCRIPT_CLEANUP_URL: "https://raw.githubusercontent.com/redhat-openshift-ecosystem/community-operators-pipeline/ci/latest/ci/scripts/opp-disk-cleanup-on-startup.sh"
  OPP_SCRIPT_TRIGGER_OHIO_URL: "https://raw.githubusercontent.com/redhat-openshift-ecosystem/community-operators-pipeline/ci/latest/ci/scripts/opp-trigger-operatorhubio-ci.sh"
  OPP_IMAGE: "quay.io/operator_testing/operator-test-playbooks:latest"
  OPP_ANSIBLE_PULL_REPO: "https://github.com/redhat-openshift-ecosystem/operator-test-playbooks"
  OPP_ANSIBLE_PULL_BRANCH: "upstream-community"
  OPP_PROD: 1
  OPP_MIRROR_LATEST_TAG: "v4.6"
  OPP_PRODUCTION_TYPE: "ocp"
  OPP_RELEASE_BUNDLE_REGISTRY: "quay.io"
  OPP_RELEASE_BUNDLE_ORGANIZATION: "openshift-community-operators"
  OPP_RELEASE_INDEX_REGISTRY: "quay.io"
  OPP_RELEASE_INDEX_ORGANIZATION: "openshift-community-operators"
  OPP_RELEASE_INDEX_NAME: "catalog_tmp"
  OPP_MIRROR_INDEX_REGISTRY: "quay.io"
  OPP_MIRROR_INDEX_ORGANIZATION: "redhat"
  OPP_MIRROR_INDEX_NAME: "redhat----community-operator-index"
  OPP_MIRROR_INDEX_ENABLED: "1"
  OPP_MIRROR_INDEX_MULTIARCH_BASE: "registry.redhat.io/openshift4/ose-operator-registry"
  OPP_MULTIARCH_SUPPORTED_VERSIONS: "v4.5 v4.6 v4.7 v4.8 v4.9"
  OPP_MIRROR_INDEX_MULTIARCH_POSTFIX: "s"
  IIB_INPUT_REGISTRY_USER: "mavala"
  OPP_REGISTRY_MIRROR_USER: "redhat+iib_community"
  OPP_THIS_REPO_BASE: "https://github.com"
  OPP_THIS_REPO: "redhat-openshift-ecosystem/community-operators-prod"
  OPP_THIS_BRANCH: "main"
  OPP_REVIEWERS_ENABLED: 0


  OPP_ALLOW_FORCE_RELEASE: ${{ github.event.inputs.release }}
  OPP_REMOVE_OPERATOR_AFTER_CLONE_PATH: "${{ github.event.inputs.delete }}"
  REGISTRY_RELEASE_API_TOKEN: ${{ secrets.REGISTRY_RELEASE_API_TOKEN }}
  REGISTRY_MIRROR_PW: ${{ secrets.REGISTRY_MIRROR_PW }}
  GODEBUG: x509ignoreCN=0
  CI_OHIO_TRIGGER_TOKEN: ${{ secrets.CI_OHIO_TRIGGER_TOKEN }}
  OHIO_REGISTRY_TOKEN: ${{ secrets.OHIO_REGISTRY_TOKEN }}
  QUAY_APPREG_TOKEN: ${{ secrets.QUAY_APPREG_TOKEN }}
  QUAY_COURIER_TOKEN: ${{ secrets.QUAY_COURIER_TOKEN }}
  REPO_GHA_PAT: ${{ secrets.REPO_GHA_PAT }}

jobs:
  pr-check:
    name: "PR-traffic-light"
    runs-on: ubuntu-latest
    steps:
      - name: Block until there is no running workflow
        uses: softprops/turnstyle@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Checkout code
        uses: actions/checkout@v2
      - id: files
        uses: jitterbit/get-changed-files@v1
        continue-on-error: true
      - id: prinfo
        uses: actions-ecosystem/action-get-merged-pull-request@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: python -m pip install --upgrade pip yq
      - name: Operator traffic light
        id: op-traffic-light
        env:
          OPP_ADDED_MODIFIED_FILES: "${{ steps.files.outputs.added_modified }}"
          OPP_MODIFIED_FILES: "${{ steps.files.outputs.modified }}"
          OPP_RENAMED_FILES: "${{ steps.files.outputs.renamed }}"
          OPP_REMOVED_FILES: "${{ steps.files.outputs.removed }}"
          OPP_LABELS: "${{ steps.prinfo.outputs.labels }}"
        run: |
          echo "PR : ${{ steps.prinfo.outputs.number }}"
          echo "labels : ${{ steps.prinfo.outputs.labels }}"
          echo "OPP_LABELS=$OPP_LABELS"
          echo "Using script '$OPP_SCRIPT_ENV_URL' ..."
          bash <(curl -sL $OPP_SCRIPT_ENV_URL)

    outputs:
      opp_labels: "${{ steps.prinfo.outputs.labels }}"
      opp_test_ready: "${{ steps.op-traffic-light.outputs.opp_test_ready }}"
      opp_release_ready: "${{ steps.op-traffic-light.outputs.opp_release_ready }}"
      opp_stream: "${{ steps.op-traffic-light.outputs.opp_stream }}"
      opp_name: "${{ steps.op-traffic-light.outputs.opp_name }}"
      opp_version: "${{ steps.op-traffic-light.outputs.opp_version }}"
      opp_ci_yaml_only: "${{ steps.op-traffic-light.outputs.opp_ci_yaml_only }}"
      opp_ver_overwrite: "${{ steps.op-traffic-light.outputs.opp_ver_overwrite }}"
      opp_op_delete: "${{ steps.op-traffic-light.outputs.opp_op_delete }}"
      opp_release_delete_appreg: "${{ steps.op-traffic-light.outputs.opp_release_delete_appreg }}"
      opp_pr_title: "${{ steps.op-traffic-light.outputs.opp_pr_title }}"
      opp_auto_packagemanifest_cluster_version_label: "${{ steps.op-traffic-light.outputs.opp_auto_packagemanifest_cluster_version_label }}"
  remove-ocp:
    name: "Remove / ocp"

    needs: pr-check
    if: needs.pr-check.outputs.opp_release_ready == '1'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        index-tag: ['v4.6-db', 'v4.7-db', 'v4.8-db', 'v4.9-db', 'v4.10-db', 'v4.11-rc']

      fail-fast: false
    steps:
      - name: Remove operator from index
        if: needs.pr-check.outputs.opp_op_delete == '1' && needs.pr-check.outputs.opp_name != ''

        env:
          OPP_LABELS: "${{ needs.pr-check.outputs.opp_labels }}"
          OPP_AUTO_PACKAGEMANIFEST_CLUSTER_VERSION_LABEL: "${{ needs.pr-check.outputs.opp_auto_packagemanifest_cluster_version_label }}"
          OPERATOR_INDEX_TAG: ${{ matrix.index-tag }}
        run: |

          echo "OPP_LABELS=$OPP_LABELS"
          echo "op_delete_${OPERATOR_INDEX_TAG} operators/${{ needs.pr-check.outputs.opp_name }}/dummy $OPP_THIS_REPO $OPP_THIS_BRANCH"
          bash <(curl -sL $OPP_SCRIPT_URL) op_delete_${OPERATOR_INDEX_TAG} operators/${{ needs.pr-check.outputs.opp_name }}/dummy $OPP_THIS_REPO $OPP_THIS_BRANCH

      - name: Operator release (operator version overwrite)
        if: needs.pr-check.outputs.opp_ci_yaml_only == '0' && needs.pr-check.outputs.opp_ver_overwrite == '1' && needs.pr-check.outputs.opp_name != '' && needs.pr-check.outputs.opp_version != ''
        env:
          OPP_LABELS: "${{ needs.pr-check.outputs.opp_labels }}"
          OPP_AUTO_PACKAGEMANIFEST_CLUSTER_VERSION_LABEL: "${{ needs.pr-check.outputs.opp_auto_packagemanifest_cluster_version_label }}"
          OPP_IIB_INSTALL: 0
          IIB_INPUT_REGISTRY_TOKEN: ${{ secrets.IIB_INPUT_REGISTRY_TOKEN }}
          OPERATOR_INDEX_TAG: ${{ matrix.index-tag }}
        run: |
          echo "OPP_LABELS=$OPP_LABELS"
          FAKE_RC=false
          FAKE_TYPE=$(echo $OPERATOR_INDEX_TAG | cut -d '-' -f 2)
          [[ $FAKE_TYPE == *rc* ]] && FAKE_RC=true || true

          echo "op_delete_${OPERATOR_INDEX_TAG} operators/${{ needs.pr-check.outputs.opp_name }}/${{ needs.pr-check.outputs.opp_version }} $OPP_THIS_REPO $OPP_THIS_BRANCH"
          bash <(curl -sL $OPP_SCRIPT_URL) op_delete_${OPERATOR_INDEX_TAG} operators/${{ needs.pr-check.outputs.opp_name }}/${{ needs.pr-check.outputs.opp_version }} $OPP_THIS_REPO $OPP_THIS_BRANCH || $FAKE_RC

  operators-ocp:
    name: "Index check / ocp"
    needs: [pr-check, remove-ocp ]

    if: needs.pr-check.outputs.opp_release_ready == '1'
    runs-on: ubuntu-latest
    steps:
      - name: List of missing operators
        id: operators
        env:
          OPP_LABELS: "${{ needs.pr-check.outputs.opp_labels }}"
          OPP_AUTO_PACKAGEMANIFEST_CLUSTER_VERSION_LABEL: "${{ needs.pr-check.outputs.opp_auto_packagemanifest_cluster_version_label }}"
          OPP_IIB_INSTALL: 0
          IIB_INPUT_REGISTRY_TOKEN: ${{ secrets.IIB_INPUT_REGISTRY_TOKEN }}
          OPERATOR_INDEX_TAG: "orange_v4.6 orange_v4.7 orange_v4.8 orange_v4.9 orange_v4.10 orange_v4.11"

          OPP_INDEX_CHECK_ONLY: 1
        run: |

          echo "OPP_LABELS=$OPP_LABELS"
          echo "'$OPERATOR_INDEX_TAG' operators/sync $OPP_THIS_REPO $OPP_THIS_BRANCH"
          bash <(curl -sL $OPP_SCRIPT_URL) "$OPERATOR_INDEX_TAG" operators/sync $OPP_THIS_REPO $OPP_THIS_BRANCH

      - name: Index check
        run: |
          echo "Operators : ${{ steps.operators.outputs.opp_uncomplete_operators }}"
          echo "Operators (v4.6) : ${{ steps.operators.outputs.opp_uncomplete_operators_v4_6 }}"
          echo "Operators (v4.7) : ${{ steps.operators.outputs.opp_uncomplete_operators_v4_7 }}"
          echo "Operators (v4.8) : ${{ steps.operators.outputs.opp_uncomplete_operators_v4_8 }}"
          echo "Operators (v4.9) : ${{ steps.operators.outputs.opp_uncomplete_operators_v4_9 }}"
          echo "Operators (v4.10) : ${{ steps.operators.outputs.opp_uncomplete_operators_v4_10 }}"
          echo "Operators (v4.11) : ${{ steps.operators.outputs.opp_uncomplete_operators_v4_11 }}"

      - name: Operator info
        id: op-info
        env:

          OPP_FORCE_OPERATORS: ${{ steps.operators.outputs.opp_uncomplete_operators }}

          OPP_AUTO_LABEL: 1
          ANSIBLE_FORCE_COLOR: 1
          ANSIBLE_DISPLAY_SKIPPED_HOSTS: 0
          ANSIBLE_STDOUT_CALLBACK: "yaml"
        run: |
          OPP_FORCE_OPERATORS=${OPP_FORCE_OPERATORS// /,}
          echo $OPP_FORCE_OPERATORS
          [ "$OPP_AUTO_LABEL" = '1' ] && ANSIBLE_ARGS="-e automatic_cluster_version_label=true" || ANSIBLE_ARGS="-e automatic_cluster_version_label=false"
          ansible-pull -U $OPP_ANSIBLE_PULL_REPO -C $OPP_ANSIBLE_PULL_BRANCH -i localhost, -e run_upstream=true -e run_prepare_catalog_repo_upstream=true -e catalog_repo=$OPP_THIS_REPO_BASE/$OPP_THIS_REPO -e catalog_repo_branch=$OPP_THIS_BRANCH upstream/local.yml --tags reset_tools,operator_info -e operator_base_dir=/tmp/community-operators-for-catalog/operators -e operators=$OPP_FORCE_OPERATORS -e cluster_type=$OPP_PRODUCTION_TYPE -e strict_cluster_version_labels=true -e stream_kind=openshift_upstream -e production_registry_namespace=$OPP_RELEASE_BUNDLE_REGISTRY/$OPP_RELEASE_BUNDLE_ORGANIZATION $ANSIBLE_ARGS
      - name: Upload operator_info
        uses: actions/upload-artifact@v2
        with:
          name: operator_info
          path: "/tmp/operator-test/op_info.yaml"
      - name: Upload converted operators
        uses: actions/upload-artifact@v2
        with:
          name: operators_converted
          path: "/tmp/operator-test/operators"
      - shell: bash
        run: |
          [ -f /tmp/operator-test/op_info.yaml ] && cat /tmp/operator-test/op_info.yaml || echo "::set-output name=opp_uncomplete_operators::"          
    outputs:
      opp_uncomplete_operators: "${{ steps.operators.outputs.opp_uncomplete_operators }}"
      opp_uncomplete_operators_v4_6: "${{ steps.operators.outputs.opp_uncomplete_operators_v4_6 }}"
      opp_uncomplete_operators_v4_7: "${{ steps.operators.outputs.opp_uncomplete_operators_v4_7 }}"
      opp_uncomplete_operators_v4_8: "${{ steps.operators.outputs.opp_uncomplete_operators_v4_8 }}"
      opp_uncomplete_operators_v4_9: "${{ steps.operators.outputs.opp_uncomplete_operators_v4_9 }}"
      opp_uncomplete_operators_v4_10: "${{ steps.operators.outputs.opp_uncomplete_operators_v4_10 }}"
      opp_uncomplete_operators_v4_11: "${{ steps.operators.outputs.opp_uncomplete_operators_v4_11 }}"

  bundles-ocp:
    name: "Bundles / ocp"
    needs: [ pr-check, remove-ocp, operators-ocp ]
    if: needs.pr-check.outputs.opp_release_ready == '1' && needs.operators-ocp.outputs.opp_uncomplete_operators != ''

    runs-on: ubuntu-latest
    steps:
      - name: Download operator_info
        uses: actions/download-artifact@v2
        with:
          name: operator_info
          path: /tmp/operator-test/
      - name: Download converted operators
        uses: actions/download-artifact@v2
        with:
          name: operators_converted
          path: /tmp/operator-test/operators
      - name: Build bundles
        env:
          OPP_LABELS: "${{ needs.pr-check.outputs.opp_labels }}"
          OPP_AUTO_PACKAGEMANIFEST_CLUSTER_VERSION_LABEL: "${{ needs.pr-check.outputs.opp_auto_packagemanifest_cluster_version_label }}"
          OPP_IIB_INSTALL: 0
          IIB_INPUT_REGISTRY_TOKEN: ${{ secrets.IIB_INPUT_REGISTRY_TOKEN }}
          OPERATOR_INDEX_TAG: latest
          OPP_SKIP_INDEX: 1
          OPP_FORCE_OPERATORS: "${{ needs.operators-ocp.outputs.opp_uncomplete_operators }}"

        run: |
          echo "OPP_LABELS=$OPP_LABELS"
          echo "OPP_FORCE_OPERATORS=$OPP_FORCE_OPERATORS"
          FAKE_RC=false
          FAKE_TYPE=$(echo $OPERATOR_INDEX_TAG | cut -d '-' -f 2)
          [[ $FAKE_TYPE == *rc* ]] && FAKE_RC=true || true
          echo "orange_${OPERATOR_INDEX_TAG} operators/sync $OPP_THIS_REPO $OPP_THIS_BRANCH"
          bash <(curl -sL $OPP_SCRIPT_URL) orange_${OPERATOR_INDEX_TAG} operators/sync $OPP_THIS_REPO $OPP_THIS_BRANCH || $FAKE_RC

  release-ocp:
    name: "Index / ocp"
    needs: [ pr-check, operators-ocp, bundles-ocp ]
    if: needs.pr-check.outputs.opp_release_ready == '1' && needs.operators-ocp.outputs.opp_uncomplete_operators != ''

    runs-on: ubuntu-latest
    strategy:
      matrix:
        index-tag: ['v4.6-db', 'v4.7-db', 'v4.8-db', 'v4.9-db', 'v4.10-db', 'v4.11-rc']

      fail-fast: false
    steps:
      - name: Download operator_info
        uses: actions/download-artifact@v2
        with:
          name: operator_info
          path: /tmp/operator-test/
      - name: Download converted operators
        uses: actions/download-artifact@v2
        with:
          name: operators_converted
          path: /tmp/operator-test/operators
      - name: Index sync
        env:
          OPP_LABELS: "${{ needs.pr-check.outputs.opp_labels }}"
          OPP_AUTO_PACKAGEMANIFEST_CLUSTER_VERSION_LABEL: "${{ needs.pr-check.outputs.opp_auto_packagemanifest_cluster_version_label }}"
          OPP_IIB_INSTALL: 1

          OPP_FORCE_INDEX_UPDATE: 1
          IIB_INPUT_REGISTRY_TOKEN: ${{ secrets.IIB_INPUT_REGISTRY_TOKEN }}
          IIB_OUTPUT_REGISTRY_TOKEN: ${{ secrets.IIB_OUTPUT_REGISTRY_TOKEN }}
          OPERATOR_INDEX_TAG: ${{ matrix.index-tag }}
          # OPP_FORCE_OPERATORS: "${{ needs.operators-ocp.outputs.opp_uncomplete_operators }}"
          OPP_FORCE_OPERATORS: ""
          OPP_FORCE_OPERATORS_v4_6: "${{ needs.operators-ocp.outputs.opp_uncomplete_operators_v4_6 }}"
          OPP_FORCE_OPERATORS_v4_7: "${{ needs.operators-ocp.outputs.opp_uncomplete_operators_v4_7 }}"
          OPP_FORCE_OPERATORS_v4_8: "${{ needs.operators-ocp.outputs.opp_uncomplete_operators_v4_8 }}"
          OPP_FORCE_OPERATORS_v4_9: "${{ needs.operators-ocp.outputs.opp_uncomplete_operators_v4_9 }}"
          OPP_FORCE_OPERATORS_v4_10: "${{ needs.operators-ocp.outputs.opp_uncomplete_operators_v4_10 }}"
          OPP_FORCE_OPERATORS_v4_11: "${{ needs.operators-ocp.outputs.opp_uncomplete_operators_v4_11 }}"

        run: |
          echo "OPP_LABELS=$OPP_LABELS"
          FAKE_RC=false
          FAKE_TYPE=$(echo $OPERATOR_INDEX_TAG | cut -d '-' -f 2)
          [[ $FAKE_TYPE == *rc* ]] && FAKE_RC=true || true

          echo "orange_${OPERATOR_INDEX_TAG} operators/sync $OPP_THIS_REPO $OPP_THIS_BRANCH"
          bash <(curl -sL $OPP_SCRIPT_URL) orange_${OPERATOR_INDEX_TAG} operators/sync $OPP_THIS_REPO $OPP_THIS_BRANCH || $FAKE_RC

      - name: Prepare variables for the sign process
        id: openshift-vars
        env:
          OPERATOR_INDEX_TAG_RAW: ${{ matrix.index-tag }}
          OPP_AUTO_PACKAGEMANIFEST_CLUSTER_VERSION_LABEL: "${{ needs.pr-check.outputs.opp_auto_packagemanifest_cluster_version_label }}"
        run: |
          docker login ${OPP_MIRROR_INDEX_REGISTRY} -u $OPP_REGISTRY_MIRROR_USER -p $REGISTRY_MIRROR_PW
          OPERATOR_INDEX_TAG=$(echo ${OPERATOR_INDEX_TAG_RAW} |cut -d'-' -f1)
          skopeo inspect docker://${OPP_MIRROR_INDEX_REGISTRY}/${OPP_MIRROR_INDEX_ORGANIZATION}/${OPP_MIRROR_INDEX_NAME}:${OPERATOR_INDEX_TAG} > /dev/null # error out if needed
          OPERATOR_INDEX_DIGEST=$(skopeo inspect docker://${OPP_MIRROR_INDEX_REGISTRY}/${OPP_MIRROR_INDEX_ORGANIZATION}/${OPP_MIRROR_INDEX_NAME}:${OPERATOR_INDEX_TAG} | jq -r ".Digest")
          OPERATOR_INDEX_RESOLVED="${OPP_MIRROR_INDEX_REGISTRY}/${OPP_MIRROR_INDEX_ORGANIZATION}/${OPP_MIRROR_INDEX_NAME}@${OPERATOR_INDEX_DIGEST}"
          OPERATOR_INDEX="${OPP_MIRROR_INDEX_REGISTRY}/${OPP_MIRROR_INDEX_ORGANIZATION}/${OPP_MIRROR_INDEX_NAME}:${OPERATOR_INDEX_TAG}"
          echo $OPERATOR_INDEX_RESOLVED
          echo $OPERATOR_INDEX
          echo "::set-output name=operator_index_resolved::${OPERATOR_INDEX_RESOLVED}"
          echo "::set-output name=operator_index::${OPERATOR_INDEX}"
      - name: Initialize sign process
        uses: operator-framework/community-operators@webhook
        continue-on-error: true
        env:
          INDEX_SHA: "${{ steps.openshift-vars.outputs.index_sha }}"
          webhook_type: 'json-extended'
          webhook_url: 'https://api.enterprise.redhat.com/hydra/umb-bridge/v1/publish'
          webhook_secret: ${{ secrets.SIGNATURE_WEBHOOK_SECRET }}
          data: "{\"index_image\": \"${{ steps.openshift-vars.outputs.operator_index }}\", \"index_image_resolved\": \"${{ steps.openshift-vars.outputs.operator_index_resolved }}\"}"

  push-to-quay-ocp:
    name: "Push to quay / ocp"

    needs: pr-check
    if: needs.pr-check.outputs.opp_release_ready == '1' && needs.pr-check.outputs.opp_name != '' && needs.pr-check.outputs.opp_version != ''
    runs-on: ubuntu-latest
    env:
      DELETE_APPREG: "${{ needs.pr-check.outputs.opp_release_delete_appreg }}"
      OPP_VERSION: "${{ needs.pr-check.outputs.opp_version }}"
    steps:
      - name: Push to quay
        run: |
          echo "push_to_quay operators/${{ needs.pr-check.outputs.opp_name }}/${{ needs.pr-check.outputs.opp_version }} $OPP_THIS_REPO $OPP_THIS_BRANCH"
          bash <(curl -sL $OPP_SCRIPT_URL) push_to_quay operators/${{ needs.pr-check.outputs.opp_name }}/${{ needs.pr-check.outputs.opp_version }} $OPP_THIS_REPO $OPP_THIS_BRANCH || true

#   release-sha-ocp:
#     name: "Index production / ocp"
#     needs: [ pr-check, release-ocp ]
# 
#     if: needs.pr-check.outputs.opp_release_ready == '1' && ( github.event.inputs.mirror_index_to_final_location == '' || github.event.inputs.mirror_index_to_final_location != '0')
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
# # #         index-tag: ['v4.6-db', 'v4.7-db', 'v4.8-db', 'v4.9-db', 'v4.10-db', 'v4.11-rc']
# # # 
#       fail-fast: false
#     steps:
      # - name: Download operator_info
      #   uses: actions/download-artifact@v2
      #   with:
      #     name: operator_info
      #     path: /tmp/operator-test/
      # - name: Download converted operators
      #   uses: actions/download-artifact@v2
      #   with:
      #     name: operators_converted
      #     path: /tmp/operator-test/operators

      # - name: Release final index
      #   env:
      #     OPERATOR_INDEX_TAG: ${{ matrix.index-tag }}
      #     IIB_INPUT_REGISTRY_TOKEN: ${{ secrets.IIB_INPUT_REGISTRY_TOKEN }}
      #     IIB_OUTPUT_REGISTRY_TOKEN: ${{ secrets.IIB_OUTPUT_REGISTRY_TOKEN }}
      #   run: |
      #     FAKE_RC=false
      #     FAKE_TYPE=$(echo $OPERATOR_INDEX_TAG | cut -d '-' -f 2)
      #     [[ $FAKE_TYPE == *rc* ]] && FAKE_RC=true || true

      #     echo "openshift: $OPERATOR_INDEX_TAG"
      #     bash <(curl -sL $OPP_SCRIPT_ISS_URL) openshift $OPERATOR_INDEX_TAG || $FAKE_RC
# 

  slack-notification:
    name: "Slack notification"
    needs: [ pr-check, remove-ocp, operators-ocp, bundles-ocp, release-ocp, push-to-quay-ocp ]

    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Report Status
        uses: ravsamhq/notify-slack-action@master
        with:
          notification_title: 'Release pipeline failed: ${{ needs.pr-check.outputs.opp_pr_title }}'
          footer: 'monitoring'
#          status: ${{ needs.pr-check.result }}
          status: 'failure'
          notify_when: 'failure'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.ACTION_MONITORING_SLACK }}
        continue-on-error: true
