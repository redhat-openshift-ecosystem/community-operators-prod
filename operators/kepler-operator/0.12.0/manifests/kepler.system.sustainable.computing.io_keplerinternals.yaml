apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.1
  creationTimestamp: null
  name: keplerinternals.kepler.system.sustainable.computing.io
spec:
  group: kepler.system.sustainable.computing.io
  names:
    kind: KeplerInternal
    listKind: KeplerInternalList
    plural: keplerinternals
    singular: keplerinternal
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.exporter.deployment.port
      name: Port
      type: integer
    - jsonPath: .status.exporter.desiredNumberScheduled
      name: Desired
      type: integer
    - jsonPath: .status.exporter.currentNumberScheduled
      name: Current
      type: integer
    - jsonPath: .status.exporter.updatedNumberScheduled
      name: Up-to-date
      type: integer
    - jsonPath: .status.exporter.numberReady
      name: Ready
      type: integer
    - jsonPath: .status.exporter.numberAvailable
      name: Available
      type: integer
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .spec.exporter.deployment.image
      name: Image
      type: string
    - jsonPath: .spec.exporter.deployment.nodeSelector
      name: Node-Selector
      priority: 10
      type: string
    - jsonPath: .spec.exporter.deployment.tolerations
      name: Tolerations
      priority: 10
      type: string
    - jsonPath: .status.estimator.status
      name: Estimator
      type: string
    - jsonPath: .status.modelServer.status
      name: Model-Server
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: KeplerInternal is the Schema for the keplers internal API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: KeplerInternalSpec defines the desired state of KeplerInternal
            properties:
              estimator:
                description: Estimator Spec
                properties:
                  container:
                    properties:
                      components:
                        properties:
                          initUrl:
                            type: string
                          selector:
                            properties:
                              filterConditions:
                                type: string
                              modelName:
                                type: string
                            type: object
                          sidecar:
                            default: false
                            type: boolean
                        type: object
                      total:
                        properties:
                          initUrl:
                            type: string
                          selector:
                            properties:
                              filterConditions:
                                type: string
                              modelName:
                                type: string
                            type: object
                          sidecar:
                            default: false
                            type: boolean
                        type: object
                    type: object
                  image:
                    type: string
                  node:
                    properties:
                      components:
                        properties:
                          initUrl:
                            type: string
                          selector:
                            properties:
                              filterConditions:
                                type: string
                              modelName:
                                type: string
                            type: object
                          sidecar:
                            default: false
                            type: boolean
                        type: object
                      total:
                        properties:
                          initUrl:
                            type: string
                          selector:
                            properties:
                              filterConditions:
                                type: string
                              modelName:
                                type: string
                            type: object
                          sidecar:
                            default: false
                            type: boolean
                        type: object
                    type: object
                type: object
              exporter:
                properties:
                  deployment:
                    properties:
                      image:
                        description: Image of kepler-exporter to be deployed
                        minLength: 3
                        type: string
                      namespace:
                        description: Namespace where kepler-exporter will be deployed
                        minLength: 1
                        type: string
                      nodeSelector:
                        additionalProperties:
                          type: string
                        default:
                          kubernetes.io/os: linux
                        description: Defines which Nodes the Pod is scheduled on
                        type: object
                      port:
                        default: 9103
                        format: int32
                        maximum: 65535
                        minimum: 1
                        type: integer
                      tolerations:
                        default:
                        - effect: ""
                          key: ""
                          operator: Exists
                          value: ""
                        description: If specified, define Pod's tolerations
                        items:
                          description: The pod this Toleration is attached to tolerates
                            any taint that matches the triple <key,value,effect> using
                            the matching operator <operator>.
                          properties:
                            effect:
                              description: Effect indicates the taint effect to match.
                                Empty means match all taint effects. When specified,
                                allowed values are NoSchedule, PreferNoSchedule and
                                NoExecute.
                              type: string
                            key:
                              description: Key is the taint key that the toleration
                                applies to. Empty means match all taint keys. If the
                                key is empty, operator must be Exists; this combination
                                means to match all values and all keys.
                              type: string
                            operator:
                              description: Operator represents a key's relationship
                                to the value. Valid operators are Exists and Equal.
                                Defaults to Equal. Exists is equivalent to wildcard
                                for value, so that a pod can tolerate all taints of
                                a particular category.
                              type: string
                            tolerationSeconds:
                              description: TolerationSeconds represents the period
                                of time the toleration (which must be of effect NoExecute,
                                otherwise this field is ignored) tolerates the taint.
                                By default, it is not set, which means tolerate the
                                taint forever (do not evict). Zero and negative values
                                will be treated as 0 (evict immediately) by the system.
                              format: int64
                              type: integer
                            value:
                              description: Value is the taint value the toleration
                                matches to. If the operator is Exists, the value should
                                be empty, otherwise just a regular string.
                              type: string
                          type: object
                        type: array
                    required:
                    - image
                    - namespace
                    type: object
                  redfish:
                    description: RedfishSpec for connecting to Redfish API
                    properties:
                      probeInterval:
                        default: 60s
                        description: ProbeInterval controls how frequently power info
                          is queried from Redfish
                        type: string
                      secretRef:
                        description: SecretRef refers to the name of secret which
                          contains credentials to initialize RedfishClient
                        maxLength: 63
                        minLength: 1
                        type: string
                      skipSSLVerify:
                        default: false
                        description: SkipSSLVerify controls if RedfishClient will
                          skip verifying server
                        type: boolean
                    required:
                    - secretRef
                    type: object
                required:
                - deployment
                type: object
              modelServer:
                description: Kepler Model Server Spec
                properties:
                  enabled:
                    default: false
                    type: boolean
                  errKey:
                    default: ""
                    type: string
                  image:
                    type: string
                  listPath:
                    default: ""
                    type: string
                  path:
                    default: ""
                    type: string
                  pipelineUrl:
                    default: ""
                    type: string
                  port:
                    default: 8100
                    maximum: 65535
                    minimum: 1
                    type: integer
                  requestPath:
                    default: ""
                    type: string
                  storage:
                    properties:
                      persistentVolumeClaim:
                        description: PersistentVolumeClaimSpec describes the common
                          attributes of storage devices and allows a Source for provider-specific
                          attributes
                        properties:
                          accessModes:
                            description: 'accessModes contains the desired access
                              modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                            items:
                              type: string
                            type: array
                          dataSource:
                            description: 'dataSource field can be used to specify
                              either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                              * An existing PVC (PersistentVolumeClaim) If the provisioner
                              or an external controller can support the specified
                              data source, it will create a new volume based on the
                              contents of the specified data source. When the AnyVolumeDataSource
                              feature gate is enabled, dataSource contents will be
                              copied to dataSourceRef, and dataSourceRef contents
                              will be copied to dataSource when dataSourceRef.namespace
                              is not specified. If the namespace is specified, then
                              dataSourceRef will not be copied to dataSource.'
                            properties:
                              apiGroup:
                                description: APIGroup is the group for the resource
                                  being referenced. If APIGroup is not specified,
                                  the specified Kind must be in the core API group.
                                  For any other third-party types, APIGroup is required.
                                type: string
                              kind:
                                description: Kind is the type of resource being referenced
                                type: string
                              name:
                                description: Name is the name of resource being referenced
                                type: string
                            required:
                            - kind
                            - name
                            type: object
                            x-kubernetes-map-type: atomic
                          dataSourceRef:
                            description: 'dataSourceRef specifies the object from
                              which to populate the volume with data, if a non-empty
                              volume is desired. This may be any object from a non-empty
                              API group (non core object) or a PersistentVolumeClaim
                              object. When this field is specified, volume binding
                              will only succeed if the type of the specified object
                              matches some installed volume populator or dynamic provisioner.
                              This field will replace the functionality of the dataSource
                              field and as such if both fields are non-empty, they
                              must have the same value. For backwards compatibility,
                              when namespace isn''t specified in dataSourceRef, both
                              fields (dataSource and dataSourceRef) will be set to
                              the same value automatically if one of them is empty
                              and the other is non-empty. When namespace is specified
                              in dataSourceRef, dataSource isn''t set to the same
                              value and must be empty. There are three important differences
                              between dataSource and dataSourceRef: * While dataSource
                              only allows two specific types of objects, dataSourceRef
                              allows any non-core object, as well as PersistentVolumeClaim
                              objects. * While dataSource ignores disallowed values
                              (dropping them), dataSourceRef preserves all values,
                              and generates an error if a disallowed value is specified.
                              * While dataSource only allows local objects, dataSourceRef
                              allows objects in any namespaces. (Beta) Using this
                              field requires the AnyVolumeDataSource feature gate
                              to be enabled. (Alpha) Using the namespace field of
                              dataSourceRef requires the CrossNamespaceVolumeDataSource
                              feature gate to be enabled.'
                            properties:
                              apiGroup:
                                description: APIGroup is the group for the resource
                                  being referenced. If APIGroup is not specified,
                                  the specified Kind must be in the core API group.
                                  For any other third-party types, APIGroup is required.
                                type: string
                              kind:
                                description: Kind is the type of resource being referenced
                                type: string
                              name:
                                description: Name is the name of resource being referenced
                                type: string
                              namespace:
                                description: Namespace is the namespace of resource
                                  being referenced Note that when a namespace is specified,
                                  a gateway.networking.k8s.io/ReferenceGrant object
                                  is required in the referent namespace to allow that
                                  namespace's owner to accept the reference. See the
                                  ReferenceGrant documentation for details. (Alpha)
                                  This field requires the CrossNamespaceVolumeDataSource
                                  feature gate to be enabled.
                                type: string
                            required:
                            - kind
                            - name
                            type: object
                          resources:
                            description: 'resources represents the minimum resources
                              the volume should have. If RecoverVolumeExpansionFailure
                              feature is enabled users are allowed to specify resource
                              requirements that are lower than previous value but
                              must still be higher than capacity recorded in the status
                              field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                            properties:
                              limits:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: 'Limits describes the maximum amount
                                  of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                type: object
                              requests:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: 'Requests describes the minimum amount
                                  of compute resources required. If Requests is omitted
                                  for a container, it defaults to Limits if that is
                                  explicitly specified, otherwise to an implementation-defined
                                  value. Requests cannot exceed Limits. More info:
                                  https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                type: object
                            type: object
                          selector:
                            description: selector is a label query over volumes to
                              consider for binding.
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: A label selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: values is an array of string values.
                                        If the operator is In or NotIn, the values
                                        array must be non-empty. If the operator is
                                        Exists or DoesNotExist, the values array must
                                        be empty. This array is replaced during a
                                        strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: matchLabels is a map of {key,value} pairs.
                                  A single {key,value} in the matchLabels map is equivalent
                                  to an element of matchExpressions, whose key field
                                  is "key", the operator is "In", and the values array
                                  contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                            x-kubernetes-map-type: atomic
                          storageClassName:
                            description: 'storageClassName is the name of the StorageClass
                              required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                            type: string
                          volumeAttributesClassName:
                            description: 'volumeAttributesClassName may be used to
                              set the VolumeAttributesClass used by this claim. If
                              specified, the CSI driver will create or update the
                              volume with the attributes defined in the corresponding
                              VolumeAttributesClass. This has a different purpose
                              than storageClassName, it can be changed after the claim
                              is created. An empty string value means that no VolumeAttributesClass
                              will be applied to the claim but it''s not allowed to
                              reset this field to empty string once it is set. If
                              unspecified and the PersistentVolumeClaim is unbound,
                              the default VolumeAttributesClass will be set by the
                              persistentvolume controller if it exists. If the resource
                              referred to by volumeAttributesClass does not exist,
                              this PersistentVolumeClaim will be set to a Pending
                              state, as reflected by the modifyVolumeStatus field,
                              until such as a resource exists. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#volumeattributesclass
                              (Alpha) Using this field requires the VolumeAttributesClass
                              feature gate to be enabled.'
                            type: string
                          volumeMode:
                            description: volumeMode defines what type of volume is
                              required by the claim. Value of Filesystem is implied
                              when not included in claim spec.
                            type: string
                          volumeName:
                            description: volumeName is the binding reference to the
                              PersistentVolume backing this claim.
                            type: string
                        type: object
                    type: object
                  url:
                    default: ""
                    type: string
                type: object
              openshift:
                properties:
                  dashboard:
                    properties:
                      enabled:
                        default: false
                        type: boolean
                    type: object
                  enabled:
                    default: true
                    type: boolean
                required:
                - enabled
                type: object
            required:
            - exporter
            type: object
          status:
            description: KeplerInternalStatus represents status of KeplerInternal
            properties:
              estimator:
                properties:
                  status:
                    type: string
                type: object
              exporter:
                description: ExporterStatus defines the observed state of Kepler Exporter
                properties:
                  conditions:
                    description: conditions represent the latest available observations
                      of the kepler-exporter
                    items:
                      properties:
                        lastTransitionTime:
                          description: lastTransitionTime is the last time the condition
                            transitioned from one status to another. This should be
                            when the underlying condition changed.  If that is not
                            known, then using the time when the API field changed
                            is acceptable.
                          format: date-time
                          type: string
                        message:
                          description: message is a human readable message indicating
                            details about the transition. This may be an empty string.
                          maxLength: 32768
                          type: string
                        observedGeneration:
                          description: observedGeneration represents the .metadata.generation
                            that the condition was set based upon. For instance, if
                            .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                            is 9, the condition is out of date with respect to the
                            current state of the instance.
                          format: int64
                          minimum: 0
                          type: integer
                        reason:
                          description: reason contains a programmatic identifier indicating
                            the reason for the condition's last transition.
                          type: string
                        status:
                          description: status of the condition, one of True, False,
                            Unknown.
                          type: string
                        type:
                          description: Type of Kepler Condition - Reconciled, Available
                            ...
                          type: string
                      required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  currentNumberScheduled:
                    description: The number of nodes that are running at least 1 kepler
                      pod and are supposed to run the kepler pod.
                    format: int32
                    type: integer
                  desiredNumberScheduled:
                    description: The total number of nodes that should be running
                      the kepler pod (including nodes correctly running the kepler
                      pod).
                    format: int32
                    type: integer
                  numberAvailable:
                    description: The number of nodes that should be running the kepler
                      pod and have one or more of the kepler pod running and available
                    format: int32
                    type: integer
                  numberMisscheduled:
                    description: The number of nodes that are running the kepler pod,
                      but are not supposed to run the kepler pod.
                    format: int32
                    type: integer
                  numberReady:
                    description: numberReady is the number of nodes that should be
                      running the kepler pod and have one or more of the kepler pod
                      running with a Ready Condition.
                    format: int32
                    type: integer
                  numberUnavailable:
                    description: The number of nodes that should be running the kepler
                      pod and have none of the kepler pod running and available
                    format: int32
                    type: integer
                  updatedNumberScheduled:
                    description: The total number of nodes that are running updated
                      kepler pod
                    format: int32
                    type: integer
                required:
                - conditions
                - currentNumberScheduled
                - desiredNumberScheduled
                - numberMisscheduled
                - numberReady
                type: object
              modelServer:
                properties:
                  status:
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
