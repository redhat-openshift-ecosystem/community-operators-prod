apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "slinky.slurm.net/v1alpha1",
          "kind": "Controller",
          "metadata": {
            "labels": {
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/part-of": "slurm",
              "app.kubernetes.io/version": "25.05",
              "helm.sh/chart": "slurm-0.4.0"
            },
            "name": "slurm",
            "namespace": "slurm"
          },
          "spec": {
            "epilogScriptRefs": null,
            "extraConf": "PartitionName=all Nodes=ALL Default=YES MaxTime=UNLIMITED State=UP\n",
            "jwtHs256KeyRef": {
              "key": "jwt_hs256.key",
              "name": "slurm-auth-jwths256"
            },
            "logfile": {
              "image": "docker.io/library/alpine:latest",
              "resources": {}
            },
            "persistence": {
              "accessModes": [
                "ReadWriteOnce"
              ],
              "enabled": true,
              "resources": {
                "requests": {
                  "storage": "4Gi"
                }
              }
            },
            "prologScriptRefs": null,
            "reconfigure": {
              "image": "ghcr.io/slinkyproject/slurmctld:25.05-ubuntu24.04",
              "resources": {}
            },
            "slurmKeyRef": {
              "key": "slurm.key",
              "name": "slurm-auth-slurm"
            },
            "slurmctld": {
              "args": [],
              "image": "ghcr.io/slinkyproject/slurmctld:25.05-ubuntu24.04",
              "resources": {}
            },
            "template": {
              "metadata": {
                "labels": {
                  "app.kubernetes.io/managed-by": "Helm",
                  "app.kubernetes.io/part-of": "slurm",
                  "app.kubernetes.io/version": "25.05",
                  "helm.sh/chart": "slurm-0.4.0"
                }
              },
              "spec": {
                "affinity": {},
                "imagePullSecrets": null,
                "initContainers": [],
                "nodeSelector": {
                  "kubernetes.io/os": "linux"
                },
                "priorityClassName": null,
                "tolerations": []
              }
            }
          }
        },
        {
          "apiVersion": "slinky.slurm.net/v1alpha1",
          "kind": "LoginSet",
          "metadata": {
            "labels": {
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/part-of": "slurm",
              "app.kubernetes.io/version": "25.05",
              "helm.sh/chart": "slurm-0.4.0",
              "loginset.slinky.slurm.net/name": "slurm-login-slinky"
            },
            "name": "slurm-login-slinky",
            "namespace": "slurm"
          },
          "spec": {
            "controllerRef": {
              "name": "slurm",
              "namespace": "slurm"
            },
            "login": {
              "env": [],
              "image": "ghcr.io/slinkyproject/login:25.05-ubuntu24.04",
              "resources": {},
              "securityContext": {
                "privileged": true
              },
              "volumeMounts": []
            },
            "replicas": 1,
            "service": {
              "type": "LoadBalancer"
            },
            "sssdConfRef": {
              "key": "sssd.conf",
              "name": "slurm-login-slinky-sssd-conf"
            },
            "template": {
              "metadata": {
                "labels": {
                  "app.kubernetes.io/managed-by": "Helm",
                  "app.kubernetes.io/part-of": "slurm",
                  "app.kubernetes.io/version": "25.05",
                  "helm.sh/chart": "slurm-0.4.0",
                  "loginset.slinky.slurm.net/name": "slurm-login-slinky"
                }
              },
              "spec": {
                "affinity": {},
                "imagePullSecrets": null,
                "initContainers": [],
                "nodeSelector": {
                  "kubernetes.io/os": "linux"
                },
                "priorityClassName": null,
                "tolerations": [],
                "volumes": []
              }
            }
          }
        },
        {
          "apiVersion": "slinky.slurm.net/v1alpha1",
          "kind": "NodeSet",
          "metadata": {
            "labels": {
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/part-of": "slurm",
              "app.kubernetes.io/version": "25.05",
              "helm.sh/chart": "slurm-0.4.0",
              "nodeset.slinky.slurm.net/name": "slurm-worker-slinky"
            },
            "name": "slurm-worker-slinky",
            "namespace": "slurm"
          },
          "spec": {
            "controllerRef": {
              "name": "slurm",
              "namespace": "slurm"
            },
            "logfile": {
              "image": "docker.io/library/alpine:latest",
              "resources": {}
            },
            "partition": {
              "enabled": true
            },
            "replicas": 1,
            "slurmd": {
              "args": [],
              "env": [
                {
                  "name": "POD_CPUS",
                  "value": "0"
                },
                {
                  "name": "POD_MEMORY",
                  "value": "0"
                }
              ],
              "image": "ghcr.io/slinkyproject/slurmd:25.05-ubuntu24.04",
              "resources": {},
              "volumeMounts": []
            },
            "template": {
              "metadata": {
                "labels": {
                  "app.kubernetes.io/managed-by": "Helm",
                  "app.kubernetes.io/part-of": "slurm",
                  "app.kubernetes.io/version": "25.05",
                  "helm.sh/chart": "slurm-0.4.0",
                  "nodeset.slinky.slurm.net/name": "slurm-worker-slinky"
                }
              },
              "spec": {
                "affinity": {},
                "hostname": "slinky-",
                "imagePullSecrets": null,
                "initContainers": [],
                "nodeSelector": {
                  "kubernetes.io/os": "linux"
                },
                "priorityClassName": null,
                "tolerations": [],
                "volumes": []
              }
            },
            "updateStrategy": {
              "rollingUpdate": {
                "maxUnavailable": "100%"
              },
              "type": "RollingUpdate"
            }
          }
        },
        {
          "apiVersion": "slinky.slurm.net/v1alpha1",
          "kind": "RestApi",
          "metadata": {
            "labels": {
              "app.kubernetes.io/managed-by": "Helm",
              "app.kubernetes.io/part-of": "slurm",
              "app.kubernetes.io/version": "25.05",
              "helm.sh/chart": "slurm-0.4.0"
            },
            "name": "slurm",
            "namespace": "slurm"
          },
          "spec": {
            "controllerRef": {
              "name": "slurm",
              "namespace": "slurm"
            },
            "replicas": 1,
            "slurmrestd": {
              "args": [],
              "env": [],
              "image": "ghcr.io/slinkyproject/slurmrestd:25.05-ubuntu24.04",
              "resources": {}
            },
            "template": {
              "metadata": {
                "labels": {
                  "app.kubernetes.io/managed-by": "Helm",
                  "app.kubernetes.io/part-of": "slurm",
                  "app.kubernetes.io/version": "25.05",
                  "helm.sh/chart": "slurm-0.4.0"
                }
              },
              "spec": {
                "affinity": {},
                "imagePullSecrets": null,
                "initContainers": [],
                "nodeSelector": {
                  "kubernetes.io/os": "linux"
                },
                "priorityClassName": null,
                "tolerations": []
              }
            }
          }
        }
      ]
    capabilities: Basic Install
    categories: AI/Machine Learning, Big Data
    certified: "false"
    containerImage: ghcr.io/slinkyproject/slurm-operator:0.4.0
    createdAt: "2025-10-23T17:32:21Z"
    description: Run Slurm on Kubernetes, by SchedMD. A Slinky project.
    features.operators.openshift.io/disconnected: "false"
    features.operators.openshift.io/fips-compliant: "false"
    features.operators.openshift.io/proxy-aware: "false"
    features.operators.openshift.io/tls-profiles: "false"
    features.operators.openshift.io/token-auth-aws: "false"
    features.operators.openshift.io/token-auth-azure: "false"
    features.operators.openshift.io/token-auth-gcp: "false"
    operatorframework.io/suggested-namespace: slinky
    operators.operatorframework.io/builder: operator-sdk-v1.39.2
    operators.operatorframework.io/project_layout: unknown
    repository: https://github.com/redhat-hpc/slinky-on-openshift
    support: SchedMD
  labels:
    operatorframework.io/arch.amd64: supported
    operatorframework.io/os.linux: supported
  name: slurm-operator.v0.4.0
  namespace: slurm-operator
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
      - description: Accounting is the Schema for the accountings API
        displayName: Accounting
        kind: Accounting
        name: accountings.slinky.slurm.net
        version: v1alpha1
      - description: Controller is the Schema for the controllers API
        displayName: Controller
        kind: Controller
        name: controllers.slinky.slurm.net
        version: v1alpha1
      - description:
          A set of homogeneous login nodes (submit node, jump host) for Slurm,
          which manage user identity via SSSD.
        displayName: LoginSet
        kind: LoginSet
        name: loginsets.slinky.slurm.net
        version: v1alpha1
      - description:
          A set of homogeneous Slurm workers (compute nodes), which are delegated
          to execute the Slurm workload.
        displayName: NodeSet
        kind: NodeSet
        name: nodesets.slinky.slurm.net
        version: v1alpha1
      - description: Restapi is the Schema for the restapis API
        displayName: RestAPI
        kind: RestApi
        name: restapis.slinky.slurm.net
        version: v1alpha1
      - description:
          Token CRD to define a secret containing a JWT, generated from an
          HS256 Key
        displayName: Token
        kind: Token
        name: tokens.slinky.slurm.net
        version: v1alpha1
  description: |
    # Kubernetes Operator for Slurm Clusters

    Run [Slurm] on [Kubernetes], by [SchedMD]. A [Slinky] project.

    ## Overview

    [Slurm] and [Kubernetes] are workload managers originally designed for different
    kinds of workloads. In broad strokes: Kubernetes excels at scheduling workloads
    that typically run for an indefinite amount of time, with potentially vague
    resource requirements, on a single node, with loose policy, but can scale its
    resource pool infinitely to meet demand; Slurm excels at quickly scheduling
    workloads that run for a finite amount of time, with well defined resource
    requirements and topology, on multiple nodes, with strict policy, but its
    resource pool is known.

    This project enables the best of both workload managers, unified on Kubernetes.
    It contains a [Kubernetes] operator to deploy and manage certain components of
    [Slurm] clusters. This repository implements [custom-controllers] and
    [custom resource definitions (CRDs)][crds] designed for the lifecycle (creation,
    upgrade, graceful shutdown) of Slurm clusters.

    ### Slurm Cluster

    Slurm clusters are very flexible and can be configured in various ways. Our
    Slurm helm chart provides a reference implementation that is highly customizable
    and tries to expose everything Slurm has to offer.

    ## Features

    ### NodeSets

    A set of homogeneous Slurm workers (compute nodes), which are delegated to
    execute the Slurm workload.

    The operator will take into consideration the running workload among Slurm nodes
    as it needs to scale-in, upgrade, or otherwise handle node failures. Slurm nodes
    will be marked as [drain][slurm-drain] before their eventual termination pending
    scale-in or upgrade.

    Slurm node states (e.g. Idle, Allocated, Mixed, Down, Drain, Not Responding,
    etc...) are applied to each NodeSet pod via their pod conditions; each NodeSet
    pod contains a pod status that reflects their own Slurm node state.

    The operator supports NodeSet scale to zero, scaling the resource down to zero
    replicas. Hence, any Horizontal Pod Autoscaler (HPA) that also support scale to
    zero can be best paired with NodeSets.

    ### LoginSets

    A set of homogeneous login nodes (submit node, jump host) for Slurm, which
    manage user identity via SSSD.

    The operator supports LoginSet scale to zero, scaling the resource down to zero
    replicas. Hence, any Horizontal Pod Autoscaler (HPA) that also support scale to
    zero can be best paired with LoginSets.

    ### Hybrid Support

    Sometimes a Slurm cluster has some, but not all, of its components in
    Kubernetes. The operator and its CRD are designed support these use cases.

    ### Slurm

    Slurm is a full featured HPC workload manager. To highlight a few features:

    - [**Accounting**][slurm-accounting]: collect accounting information for every
      job and job step executed.
    - [**Partitions**][slurm-arch]: job queues with sets of resources and
      constraints (e.g. job size limit, job time limit, users permitted).
    - [**Reservations**][slurm-reservations]: reserve resources for jobs being
      executed by select users and/or select accounts.
    - [**Job Dependencies**][slurm-dependency]: defer the start of jobs until the
      specified dependencies have been satisfied.
    - [**Job Containers**][slurm-containers]: jobs which run an unprivileged OCI
      container bundle.
    - [**MPI**][slurm-mpi]: launch parallel MPI jobs, supports various MPI
      implementations.
    - [**Priority**][slurm-priority]: assigns priorities to jobs upon submission and
      on an ongoing basis (e.g. as they age).
    - [**Preemption**][slurm-preempt]: stop one or more low-priority jobs to let a
      high-priority job run.
    - [**QoS**][slurm-qos]: sets of policies affecting scheduling priority,
      preemption, and resource limits.
    - [**Fairshare**][slurm-fairshare]: distribute resources equitably among users
      and accounts based on historical usage.
    - [**Node Health Check**][slurm-healthcheck]: periodically check node health via
      script.

    ## Compatibility

    | Software   |                             Minimum Version                              |
    | :--------- | :----------------------------------------------------------------------: |
    | Kubernetes | [v1.29](https://kubernetes.io/blog/2023/12/13/kubernetes-v1-29-release/) |
    | Slurm      | [25.05](https://www.schedmd.com/slurm-version-25-05-0-is-now-available/) |

    ## Documentation

    Project documentation is located in the docs directory of [this repository](https://github.com/SlinkyProject/slurm-operator)

    There is also supplemental work in the community for enabling [Slinky On OpenShift](https://github.com/redhat-hpc/slinky-on-openshift)

    ## Support and Development

    Feature requests, code contributions, and bug reports are welcome!

    Github/Gitlab submitted issues and PRs/MRs are handled on a best effort basis.

    The SchedMD official issue tracker is at <https://support.schedmd.com/>.

    To schedule a demo or simply to reach out, please
    [contact SchedMD][contact-schedmd].

    ## License

    Copyright (C) SchedMD LLC.

    Licensed under the
    [Apache License, Version 2.0](http://www.apache.org/licenses/LICENSE-2.0) you
    may not use project except in compliance with the license.

    Unless required by applicable law or agreed to in writing, software distributed
    under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
    CONDITIONS OF ANY KIND, either express or implied. See the License for the
    specific language governing permissions and limitations under the License.

    <!-- links -->


    [cert-manager]: https://cert-manager.io/docs/installation/helm/
    [contact-schedmd]: https://www.schedmd.com/slurm-resources/contact-schedmd/
    [crds]: https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/#customresourcedefinitions
    [custom-controllers]: https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/#custom-controllers

    [kubernetes]: https://kubernetes.io/
    [schedmd]: https://schedmd.com/
    [slinky]: https://slinky.ai/
    [slinky-docs]: https://slinky.schedmd.com/
    [slurm]: https://slurm.schedmd.com/overview.html
    [slurm-accounting]: https://slurm.schedmd.com/accounting.html
    [slurm-arch]: https://slurm.schedmd.com/quickstart.html#arch
    [slurm-containers]: https://slurm.schedmd.com/containers.html
    [slurm-dependency]: https://slurm.schedmd.com/sbatch.html#OPT_dependency

    [slurm-drain]: https://slurm.schedmd.com/scontrol.html#OPT_DRAIN
    [slurm-fairshare]: https://slurm.schedmd.com/fair_tree.html
    [slurm-healthcheck]: https://slurm.schedmd.com/slurm.conf.html#OPT_HealthCheckProgram
    [slurm-mpi]: https://slurm.schedmd.com/mpi_guide.html
    [slurm-preempt]: https://slurm.schedmd.com/preempt.html
    [slurm-priority]: https://slurm.schedmd.com/priority_multifactor.html
    [slurm-qos]: https://slurm.schedmd.com/qos.html
    [slurm-reservations]: https://slurm.schedmd.com/reservations.html
  displayName: Slurm Operator
  icon:
    - base64data: 
      mediatype: image/svg+xml
  install:
    spec:
      clusterPermissions:
        - rules:
            - apiGroups:
                - ""
              resources:
                - configmaps
                - events
                - persistentvolumeclaims
                - pods
                - secrets
                - services
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - ""
              resources:
                - nodes
              verbs:
                - get
                - list
                - watch
            - apiGroups:
                - ""
              resources:
                - pods/status
              verbs:
                - get
                - patch
                - update
            - apiGroups:
                - apps
              resources:
                - controllerrevisions
                - deployments
                - statefulsets
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - slinky.slurm.net
              resources:
                - accountings
                - controllers
                - loginsets
                - nodesets
                - restapis
                - tokens
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - slinky.slurm.net
              resources:
                - accountings/finalizers
                - controllers/finalizers
                - loginsets/finalizers
                - nodesets/finalizers
                - restapis/finalizers
                - tokens/finalizers
              verbs:
                - update
            - apiGroups:
                - slinky.slurm.net
              resources:
                - accountings/status
                - controllers/status
                - loginsets/status
                - nodesets/status
                - restapis/status
                - tokens/status
              verbs:
                - get
                - patch
                - update
            - apiGroups:
                - security.openshift.io
              resourceNames:
                - privileged
              resources:
                - securitycontextconstraints
              verbs:
                - use
            - apiGroups:
                - ""
              resources:
                - secrets
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - ""
              resources:
                - secrets/finalizers
              verbs:
                - update
            - apiGroups:
                - slinky.slurm.net
              resources:
                - tokens
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - slinky.slurm.net
              resources:
                - tokens/finalizers
              verbs:
                - update
            - apiGroups:
                - slinky.slurm.net
              resources:
                - tokens/status
              verbs:
                - get
                - patch
                - update
          serviceAccountName: slurm-operator
        - rules:
            - apiGroups:
                - slinky.slurm.net
              resources:
                - accountings
                - controllers
                - loginsets
                - nodesets
                - restapis
                - tokens
              verbs:
                - create
                - delete
                - update
            - apiGroups:
                - ""
              resources:
                - configmaps
              verbs:
                - get
                - list
                - watch
          serviceAccountName: slurm-operator-webhook
      deployments:
        - label:
            app.kubernetes.io/instance: slurm-operator
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: slurm-operator
            app.kubernetes.io/version: "25.05"
            helm.sh/chart: slurm-operator-0.4.0
          name: slurm-operator
          spec:
            replicas: 1
            revisionHistoryLimit: 0
            selector:
              matchLabels:
                app.kubernetes.io/instance: slurm-operator
                app.kubernetes.io/name: slurm-operator
            strategy: {}
            template:
              metadata:
                labels:
                  app.kubernetes.io/instance: slurm-operator
                  app.kubernetes.io/managed-by: Helm
                  app.kubernetes.io/name: slurm-operator
                  app.kubernetes.io/version: "25.05"
                  helm.sh/chart: slurm-operator-0.4.0
              spec:
                containers:
                  - args:
                      - --accounting-workers
                      - "4"
                      - --controller-workers
                      - "4"
                      - --loginset-workers
                      - "4"
                      - --nodeset-workers
                      - "4"
                      - --restapi-workers
                      - "4"
                      - --token-workers
                      - "4"
                      - --slurmclient-workers
                      - "2"
                      - --zap-log-level
                      - info
                    image: ghcr.io/slinkyproject/slurm-operator:0.4.0
                    imagePullPolicy: IfNotPresent
                    livenessProbe:
                      httpGet:
                        path: /healthz
                        port: 8081
                    name: slurm-operator
                    readinessProbe:
                      httpGet:
                        path: /readyz
                        port: 8081
                    resources: {}
                hostname: slurm-operator
                serviceAccountName: slurm-operator
        - label:
            app.kubernetes.io/instance: slurm-operator
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: slurm-operator-webhook
            app.kubernetes.io/version: "25.05"
            helm.sh/chart: slurm-operator-0.4.0
          name: slurm-operator-webhook
          spec:
            replicas: 1
            selector:
              matchLabels:
                app.kubernetes.io/instance: slurm-operator
                app.kubernetes.io/name: slurm-operator-webhook
            strategy:
              rollingUpdate:
                maxSurge: 1
                maxUnavailable: 0
              type: RollingUpdate
            template:
              metadata:
                labels:
                  app.kubernetes.io/instance: slurm-operator
                  app.kubernetes.io/managed-by: Helm
                  app.kubernetes.io/name: slurm-operator-webhook
                  app.kubernetes.io/version: "25.05"
                  helm.sh/chart: slurm-operator-0.4.0
              spec:
                containers:
                  - args:
                      - --zap-log-level
                      - info
                    image: ghcr.io/slinkyproject/slurm-operator-webhook:0.4.0
                    imagePullPolicy: IfNotPresent
                    livenessProbe:
                      httpGet:
                        path: /healthz
                        port: 8081
                    name: webhook
                    readinessProbe:
                      httpGet:
                        path: /readyz
                        port: 8081
                    resources: {}
                    volumeMounts:
                      - mountPath: /tmp/k8s-webhook-server/serving-certs/
                        name: certificates
                        readOnly: true
                hostname: slurm-operator-webhook
                serviceAccountName: slurm-operator-webhook
                volumes:
                  - name: certificates
                    secret:
                      defaultMode: 420
                      secretName: slurm-operator-webhook-ca
    strategy: deployment
  installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
  keywords:
    - slurm-operator
    - slurm
    - slinky
  links:
    - name: Slinky on OpenShift
      url: https://github.com/redhat-hpc/slinky-on-openshift
    - name: Slurm Operator
      url: https://github.com/SlinkyProject/slurm-operator
  maintainers:
    - email: jkincl@redhat.com
      name: Jason Kincl
  maturity: alpha
  minKubeVersion: 1.29.0
  provider:
    name: SchedMD
    url: https://www.schedmd.com/slinky
  version: 0.4.0
  webhookdefinitions:
    - admissionReviewVersions:
        - v1
        - v1beta1
        - v1alpha1
      containerPort: 443
      deploymentName: slurm-operator-webhook
      generateName: accountings-validate.slinky.slurm.net
      rules:
        - apiGroups:
            - slinky.slurm.net
          apiVersions:
            - "*"
          operations:
            - CREATE
            - UPDATE
          resources:
            - accountings
          scope: Namespaced
      sideEffects: None
      targetPort: 9443
      timeoutSeconds: 10
      type: ValidatingAdmissionWebhook
      webhookPath: /validate-slinky-slurm-net-v1alpha1-accounting
    - admissionReviewVersions:
        - v1
        - v1beta1
        - v1alpha1
      containerPort: 443
      deploymentName: slurm-operator-webhook
      generateName: accountings.slinky.slurm.net
      rules:
        - apiGroups:
            - slinky.slurm.net
          apiVersions:
            - "*"
          operations:
            - CREATE
            - UPDATE
          resources:
            - accountings
          scope: Namespaced
      sideEffects: None
      targetPort: 9443
      timeoutSeconds: 10
      type: MutatingAdmissionWebhook
      webhookPath: /mutate-slinky-slurm-net-v1alpha1-accounting
    - admissionReviewVersions:
        - v1
        - v1beta1
        - v1alpha1
      containerPort: 443
      deploymentName: slurm-operator-webhook
      generateName: controllers-validate.slinky.slurm.net
      rules:
        - apiGroups:
            - slinky.slurm.net
          apiVersions:
            - "*"
          operations:
            - CREATE
            - UPDATE
          resources:
            - controllers
          scope: Namespaced
      sideEffects: None
      targetPort: 9443
      timeoutSeconds: 10
      type: ValidatingAdmissionWebhook
      webhookPath: /validate-slinky-slurm-net-v1alpha1-controller
    - admissionReviewVersions:
        - v1
        - v1beta1
        - v1alpha1
      containerPort: 443
      deploymentName: slurm-operator-webhook
      generateName: controllers.slinky.slurm.net
      rules:
        - apiGroups:
            - slinky.slurm.net
          apiVersions:
            - "*"
          operations:
            - CREATE
            - UPDATE
          resources:
            - controllers
          scope: Namespaced
      sideEffects: None
      targetPort: 9443
      timeoutSeconds: 10
      type: MutatingAdmissionWebhook
      webhookPath: /mutate-slinky-slurm-net-v1alpha1-controller
    - admissionReviewVersions:
        - v1
        - v1beta1
        - v1alpha1
      containerPort: 443
      deploymentName: slurm-operator-webhook
      generateName: loginsets-validate.slinky.slurm.net
      rules:
        - apiGroups:
            - slinky.slurm.net
          apiVersions:
            - "*"
          operations:
            - CREATE
            - UPDATE
          resources:
            - loginsets
          scope: Namespaced
      sideEffects: None
      targetPort: 9443
      timeoutSeconds: 10
      type: ValidatingAdmissionWebhook
      webhookPath: /validate-slinky-slurm-net-v1alpha1-loginset
    - admissionReviewVersions:
        - v1
        - v1beta1
        - v1alpha1
      containerPort: 443
      deploymentName: slurm-operator-webhook
      generateName: loginsets.slinky.slurm.net
      rules:
        - apiGroups:
            - slinky.slurm.net
          apiVersions:
            - "*"
          operations:
            - CREATE
            - UPDATE
          resources:
            - loginsets
          scope: Namespaced
      sideEffects: None
      targetPort: 9443
      timeoutSeconds: 10
      type: MutatingAdmissionWebhook
      webhookPath: /mutate-slinky-slurm-net-v1alpha1-loginset
    - admissionReviewVersions:
        - v1
        - v1beta1
        - v1alpha1
      containerPort: 443
      deploymentName: slurm-operator-webhook
      generateName: nodesets-validate.slinky.slurm.net
      rules:
        - apiGroups:
            - slinky.slurm.net
          apiVersions:
            - "*"
          operations:
            - CREATE
            - UPDATE
          resources:
            - nodesets
          scope: Namespaced
      sideEffects: None
      targetPort: 9443
      timeoutSeconds: 10
      type: ValidatingAdmissionWebhook
      webhookPath: /validate-slinky-slurm-net-v1alpha1-nodeset
    - admissionReviewVersions:
        - v1
        - v1beta1
        - v1alpha1
      containerPort: 443
      deploymentName: slurm-operator-webhook
      generateName: nodesets.slinky.slurm.net
      rules:
        - apiGroups:
            - slinky.slurm.net
          apiVersions:
            - "*"
          operations:
            - CREATE
            - UPDATE
          resources:
            - nodesets
          scope: Namespaced
      sideEffects: None
      targetPort: 9443
      timeoutSeconds: 10
      type: MutatingAdmissionWebhook
      webhookPath: /mutate-slinky-slurm-net-v1alpha1-nodeset
    - admissionReviewVersions:
        - v1
        - v1beta1
        - v1alpha1
      containerPort: 443
      deploymentName: slurm-operator-webhook
      generateName: restapis-validate.slinky.slurm.net
      rules:
        - apiGroups:
            - slinky.slurm.net
          apiVersions:
            - "*"
          operations:
            - CREATE
            - UPDATE
          resources:
            - restapis
          scope: Namespaced
      sideEffects: None
      targetPort: 9443
      timeoutSeconds: 10
      type: ValidatingAdmissionWebhook
      webhookPath: /validate-slinky-slurm-net-v1alpha1-restapi
    - admissionReviewVersions:
        - v1
        - v1beta1
        - v1alpha1
      containerPort: 443
      deploymentName: slurm-operator-webhook
      generateName: restapis.slinky.slurm.net
      rules:
        - apiGroups:
            - slinky.slurm.net
          apiVersions:
            - "*"
          operations:
            - CREATE
            - UPDATE
          resources:
            - restapis
          scope: Namespaced
      sideEffects: None
      targetPort: 9443
      timeoutSeconds: 10
      type: MutatingAdmissionWebhook
      webhookPath: /mutate-slinky-slurm-net-v1alpha1-restapi
    - admissionReviewVersions:
        - v1
        - v1beta1
        - v1alpha1
      containerPort: 443
      deploymentName: slurm-operator-webhook
      generateName: tokens-validate.slinky.slurm.net
      rules:
        - apiGroups:
            - slinky.slurm.net
          apiVersions:
            - "*"
          operations:
            - CREATE
            - UPDATE
          resources:
            - tokens
          scope: Namespaced
      sideEffects: None
      targetPort: 9443
      timeoutSeconds: 10
      type: ValidatingAdmissionWebhook
      webhookPath: /validate-slinky-slurm-net-v1alpha1-token
    - admissionReviewVersions:
        - v1
        - v1beta1
        - v1alpha1
      containerPort: 443
      deploymentName: slurm-operator-webhook
      generateName: tokens.slinky.slurm.net
      rules:
        - apiGroups:
            - slinky.slurm.net
          apiVersions:
            - "*"
          operations:
            - CREATE
            - UPDATE
          resources:
            - tokens
          scope: Namespaced
      sideEffects: None
      targetPort: 9443
      timeoutSeconds: 10
      type: MutatingAdmissionWebhook
      webhookPath: /mutate-slinky-slurm-net-v1alpha1-token
