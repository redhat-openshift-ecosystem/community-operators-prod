apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "charts.kubecost.com/v1alpha1",
          "kind": "CostAnalyzer",
          "metadata": {
            "name": "costanalyzer-sample"
          },
          "spec": {
            "affinity": {},
            "awsstore": {
              "createServiceAccount": false,
              "priorityClassName": "",
              "useAwsStore": false
            },
            "clusterController": {
              "enabled": false,
              "image": "gcr.io/kubecost1/cluster-controller:v0.12.0",
              "imagePullPolicy": "Always",
              "kubescaler": {
                "defaultResizeAll": false
              },
              "namespaceTurndown": {
                "rbac": {
                  "enabled": true
                }
              },
              "priorityClassName": ""
            },
            "costEventsAudit": {
              "enabled": false
            },
            "extraObjects": [],
            "extraVolumeMounts": [],
            "extraVolumes": [],
            "federatedETL": {
              "federatedCluster": false,
              "federator": {
                "clusters": [],
                "enabled": false,
                "resources": {}
              },
              "primaryCluster": false,
              "redirectS3Backup": false,
              "useExistingS3Config": false,
              "useMultiClusterDB": false
            },
            "global": {
              "additionalLabels": {},
              "advancedReports": {
                "enabled": false,
                "reports": [
                  {
                    "aggregateBy": "namespace",
                    "cloudBreakdown": "service",
                    "cloudJoin": "label:kubernetes_namespace",
                    "filters": [
                      {
                        "property": "cluster",
                        "value": "cluster-one"
                      }
                    ],
                    "title": "Example Advanced Report 0",
                    "window": "7d"
                  }
                ]
              },
              "amp": {
                "enabled": false,
                "prometheusServerEndpoint": "https://localhost:8085/\u003cworkspaceId\u003e/",
                "remoteWriteService": "https://aps-workspaces.us-west-2.amazonaws.com/workspaces/\u003cworkspaceId\u003e/api/v1/remote_write",
                "sigv4": {
                  "region": "us-west-2"
                }
              },
              "assetReports": {
                "enabled": false,
                "reports": [
                  {
                    "accumulate": false,
                    "aggregateBy": "type",
                    "filters": [
                      {
                        "property": "cluster",
                        "value": "cluster-one"
                      }
                    ],
                    "title": "Example Asset Report 0",
                    "window": "today"
                  }
                ]
              },
              "cloudCostReports": {
                "enabled": false,
                "reports": [
                  {
                    "accumulate": false,
                    "aggregateBy": "service",
                    "title": "Cloud Cost Report 0",
                    "window": "today"
                  }
                ]
              },
              "containerSecurityContext": {
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": [
                    "ALL"
                  ]
                },
                "privileged": false,
                "readOnlyRootFilesystem": true
              },
              "gcpstore": {
                "enabled": false
              },
              "gmp": {
                "enabled": false,
                "gmpProxy": {
                  "enabled": false,
                  "image": "gke.gcr.io/prometheus-engine/frontend:v0.4.1-gke.0",
                  "imagePullPolicy": "Always",
                  "name": "gmp-proxy",
                  "port": 8085,
                  "projectId": "YOUR_PROJECT_ID"
                },
                "prometheusServerEndpoint": "http://localhost:8085/"
              },
              "grafana": {
                "domainName": "cost-analyzer-grafana.default.svc",
                "enabled": true,
                "proxy": true,
                "scheme": "http"
              },
              "mimirProxy": {
                "enabled": false,
                "image": "nginxinc/nginx-unprivileged",
                "mimirEndpoint": "$mimir_endpoint",
                "name": "mimir-proxy",
                "orgIdentifier": "$your_tenant_ID",
                "port": 8085
              },
              "notifications": {
                "alertmanager": {
                  "enabled": false,
                  "fqdn": "http://cost-analyzer-prometheus-server.default.svc"
                }
              },
              "podAnnotations": {},
              "prometheus": {
                "enabled": true,
                "fqdn": "http://cost-analyzer-prometheus-server.default.svc"
              },
              "savedReports": {
                "enabled": false,
                "reports": [
                  {
                    "accumulate": false,
                    "aggregateBy": "namespace",
                    "chartDisplay": "category",
                    "filters": [
                      {
                        "property": "cluster",
                        "value": "cluster-one,cluster*"
                      },
                      {
                        "property": "namespace",
                        "value": "kubecost"
                      }
                    ],
                    "idle": "separate",
                    "rate": "cumulative",
                    "title": "Example Saved Report 0",
                    "window": "today"
                  },
                  {
                    "accumulate": false,
                    "aggregateBy": "controllerKind",
                    "chartDisplay": "category",
                    "filters": [
                      {
                        "property": "label",
                        "value": "app:cost*,environment:kube*"
                      },
                      {
                        "property": "namespace",
                        "value": "kubecost"
                      }
                    ],
                    "idle": "share",
                    "rate": "monthly",
                    "title": "Example Saved Report 1",
                    "window": "month"
                  },
                  {
                    "accumulate": true,
                    "aggregateBy": "service",
                    "chartDisplay": "category",
                    "filters": [],
                    "idle": "hide",
                    "rate": "daily",
                    "title": "Example Saved Report 2",
                    "window": "2020-11-11T00:00:00Z,2020-12-09T23:59:59Z"
                  }
                ]
              },
              "securityContext": {
                "runAsNonRoot": true,
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "thanos": {
                "enabled": false
              }
            },
            "grafana": {
              "adminPassword": "strongpassword",
              "adminUser": "admin",
              "affinity": {},
              "dashboardProviders": {},
              "dashboards": {},
              "dashboardsConfigMaps": {},
              "datasources": {},
              "deploymentStrategy": "RollingUpdate",
              "downloadDashboardsImage": {
                "pullPolicy": "IfNotPresent",
                "repository": "curlimages/curl",
                "tag": "latest"
              },
              "env": {},
              "envFromSecret": "",
              "extraSecretMounts": [],
              "global": {
                "additionalLabels": {},
                "advancedReports": {
                  "enabled": false,
                  "reports": [
                    {
                      "aggregateBy": "namespace",
                      "cloudBreakdown": "service",
                      "cloudJoin": "label:kubernetes_namespace",
                      "filters": [
                        {
                          "property": "cluster",
                          "value": "cluster-one"
                        }
                      ],
                      "title": "Example Advanced Report 0",
                      "window": "7d"
                    }
                  ]
                },
                "amp": {
                  "enabled": false,
                  "prometheusServerEndpoint": "https://localhost:8085/\u003cworkspaceId\u003e/",
                  "remoteWriteService": "https://aps-workspaces.us-west-2.amazonaws.com/workspaces/\u003cworkspaceId\u003e/api/v1/remote_write",
                  "sigv4": {
                    "region": "us-west-2"
                  }
                },
                "assetReports": {
                  "enabled": false,
                  "reports": [
                    {
                      "accumulate": false,
                      "aggregateBy": "type",
                      "filters": [
                        {
                          "property": "cluster",
                          "value": "cluster-one"
                        }
                      ],
                      "title": "Example Asset Report 0",
                      "window": "today"
                    }
                  ]
                },
                "cloudCostReports": {
                  "enabled": false,
                  "reports": [
                    {
                      "accumulate": false,
                      "aggregateBy": "service",
                      "title": "Cloud Cost Report 0",
                      "window": "today"
                    }
                  ]
                },
                "containerSecurityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": {
                    "drop": [
                      "ALL"
                    ]
                  },
                  "privileged": false,
                  "readOnlyRootFilesystem": true
                },
                "gcpstore": {
                  "enabled": false
                },
                "gmp": {
                  "enabled": false,
                  "gmpProxy": {
                    "enabled": false,
                    "image": "gke.gcr.io/prometheus-engine/frontend:v0.4.1-gke.0",
                    "imagePullPolicy": "Always",
                    "name": "gmp-proxy",
                    "port": 8085,
                    "projectId": "YOUR_PROJECT_ID"
                  },
                  "prometheusServerEndpoint": "http://localhost:8085/"
                },
                "grafana": {
                  "domainName": "cost-analyzer-grafana.default.svc",
                  "enabled": true,
                  "proxy": true,
                  "scheme": "http"
                },
                "mimirProxy": {
                  "enabled": false,
                  "image": "nginxinc/nginx-unprivileged",
                  "mimirEndpoint": "$mimir_endpoint",
                  "name": "mimir-proxy",
                  "orgIdentifier": "$your_tenant_ID",
                  "port": 8085
                },
                "notifications": {
                  "alertmanager": {
                    "enabled": false,
                    "fqdn": "http://cost-analyzer-prometheus-server.default.svc"
                  }
                },
                "podAnnotations": {},
                "prometheus": {
                  "enabled": true,
                  "fqdn": "http://cost-analyzer-prometheus-server.default.svc"
                },
                "savedReports": {
                  "enabled": false,
                  "reports": [
                    {
                      "accumulate": false,
                      "aggregateBy": "namespace",
                      "chartDisplay": "category",
                      "filters": [
                        {
                          "property": "cluster",
                          "value": "cluster-one,cluster*"
                        },
                        {
                          "property": "namespace",
                          "value": "kubecost"
                        }
                      ],
                      "idle": "separate",
                      "rate": "cumulative",
                      "title": "Example Saved Report 0",
                      "window": "today"
                    },
                    {
                      "accumulate": false,
                      "aggregateBy": "controllerKind",
                      "chartDisplay": "category",
                      "filters": [
                        {
                          "property": "label",
                          "value": "app:cost*,environment:kube*"
                        },
                        {
                          "property": "namespace",
                          "value": "kubecost"
                        }
                      ],
                      "idle": "share",
                      "rate": "monthly",
                      "title": "Example Saved Report 1",
                      "window": "month"
                    },
                    {
                      "accumulate": true,
                      "aggregateBy": "service",
                      "chartDisplay": "category",
                      "filters": [],
                      "idle": "hide",
                      "rate": "daily",
                      "title": "Example Saved Report 2",
                      "window": "2020-11-11T00:00:00Z,2020-12-09T23:59:59Z"
                    }
                  ]
                },
                "securityContext": {
                  "runAsNonRoot": true,
                  "seccompProfile": {
                    "type": "RuntimeDefault"
                  }
                },
                "thanos": {
                  "enabled": false
                }
              },
              "grafana.ini": {
                "analytics": {
                  "check_for_updates": true
                },
                "auth.anonymous": {
                  "enabled": true,
                  "org_name": "Main Org.",
                  "org_role": "Editor"
                },
                "grafana_net": {
                  "url": "https://grafana.net"
                },
                "log": {
                  "mode": "console"
                },
                "paths": {
                  "data": "/var/lib/grafana/data",
                  "logs": "/var/log/grafana",
                  "plugins": "/var/lib/grafana/plugins",
                  "provisioning": "/etc/grafana/provisioning"
                },
                "server": {
                  "root_url": "%(protocol)s://%(domain)s:%(http_port)s/grafana",
                  "serve_from_sub_path": true
                }
              },
              "image": {
                "pullPolicy": "IfNotPresent",
                "repository": "grafana/grafana",
                "tag": "9.4.7"
              },
              "ingress": {
                "annotations": {},
                "enabled": false,
                "hosts": [
                  "chart-example.local"
                ],
                "labels": {},
                "path": "/",
                "pathType": "Prefix",
                "tls": []
              },
              "ldap": {
                "config": "",
                "existingSecret": ""
              },
              "livenessProbe": {
                "failureThreshold": 10,
                "httpGet": {
                  "path": "/api/health",
                  "port": 3000
                },
                "initialDelaySeconds": 60,
                "timeoutSeconds": 30
              },
              "nodeSelector": {},
              "persistence": {
                "enabled": false
              },
              "plugins": [],
              "priorityClassName": "",
              "rbac": {
                "create": true,
                "grafana": {
                  "containerSecurityContext": {
                    "securityContext": {
                      "allowPrivilegeEscalation": false,
                      "capabilities": {
                        "drop": [
                          "ALL"
                        ]
                      },
                      "readOnlyRootFilesystem": true,
                      "runAsNonRoot": true,
                      "seccompProfile": {
                        "type": "RuntimeDefault"
                      }
                    }
                  }
                },
                "initContainers": {
                  "containerSecurityContext": {
                    "securityContext": {
                      "allowPrivilegeEscalation": false,
                      "capabilities": {
                        "drop": [
                          "ALL"
                        ]
                      },
                      "readOnlyRootFilesystem": true,
                      "runAsNonRoot": true,
                      "seccompProfile": {
                        "type": "RuntimeDefault"
                      }
                    }
                  }
                },
                "pspEnabled": false,
                "pspUseAppArmor": true,
                "sidecar": {
                  "containerSecurityContext": {
                    "securityContext": {
                      "allowPrivilegeEscalation": false,
                      "capabilities": {
                        "drop": [
                          "ALL"
                        ]
                      },
                      "readOnlyRootFilesystem": true,
                      "runAsNonRoot": true,
                      "seccompProfile": {
                        "type": "RuntimeDefault"
                      }
                    }
                  }
                }
              },
              "readinessProbe": {
                "httpGet": {
                  "path": "/api/health",
                  "port": 3000
                }
              },
              "replicas": 1,
              "resources": {},
              "securityContext": {
                "fsGroup": 472,
                "runAsUser": 472
              },
              "service": {
                "annotations": {},
                "labels": {},
                "port": 80,
                "type": "ClusterIP"
              },
              "serviceAccount": {
                "create": true,
                "name": null
              },
              "sidecar": {
                "dashboards": {
                  "annotations": {},
                  "enabled": true,
                  "error_throttle_sleep": 0,
                  "folder": "/tmp/dashboards",
                  "label": "grafana_dashboard"
                },
                "datasources": {
                  "enabled": false,
                  "error_throttle_sleep": 0,
                  "label": "grafana_datasource"
                },
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "kiwigrid/k8s-sidecar",
                  "tag": "1.25.1"
                },
                "resources": null
              },
              "smtp": {
                "existingSecret": ""
              },
              "tolerations": []
            },
            "ingress": {
              "annotations": null,
              "enabled": false,
              "hosts": [
                "cost-analyzer.local"
              ],
              "labels": null,
              "pathType": "ImplementationSpecific",
              "paths": [
                "/"
              ],
              "tls": []
            },
            "initChownData": {
              "resources": {}
            },
            "initChownDataImage": "busybox",
            "kubecostAdmissionController": {
              "enabled": false
            },
            "kubecostDeployment": {
              "annotations": {},
              "labels": {},
              "leaderFollower": {
                "enabled": false
              },
              "podSecurityContext": {
                "runAsNonRoot": true,
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "queryService": {
                "configVolumeSize": "1Gi",
                "containerSecurityContext": {
                  "allowPrivilegeEscalation": true,
                  "capabilities": {
                    "drop": [
                      "ALL"
                    ]
                  },
                  "readOnlyRootFilesystem": false
                },
                "databaseVolumeSize": "100Gi",
                "resources": {
                  "requests": {
                    "cpu": "1000m",
                    "memory": "500Mi"
                  }
                },
                "securityContext": {
                  "fsGroup": 65534,
                  "runAsGroup": 65534,
                  "runAsNonRoot": false,
                  "runAsUser": 65534,
                  "seccompProfile": {
                    "type": "RuntimeDefault"
                  }
                },
                "storageClass": ""
              },
              "queryServiceReplicas": 0,
              "replicas": 1
            },
            "kubecostFrontend": {
              "containerSecurityContext": {
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": [
                    "ALL"
                  ]
                },
                "readOnlyRootFilesystem": true,
                "runAsNonRoot": true,
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "enabled": true,
              "image": "gcr.io/kubecost1/frontend",
              "imagePullPolicy": "Always",
              "ipv6": {
                "enabled": true
              },
              "livenessProbe": {
                "enabled": true,
                "failureThreshold": 200,
                "initialDelaySeconds": 30,
                "periodSeconds": 10
              },
              "resources": {
                "requests": {
                  "cpu": "10m",
                  "memory": "55Mi"
                }
              }
            },
            "kubecostMetrics": {
              "exporter": {
                "additionalLabels": {},
                "affinity": {},
                "enabled": false,
                "extraArgs": [],
                "nodeSelector": {},
                "port": 9005,
                "priorityClassName": "",
                "prometheusScrape": true,
                "resources": {},
                "service": {
                  "annotations": {}
                },
                "serviceMonitor": {
                  "additionalLabels": {},
                  "enabled": false,
                  "metricRelabelings": [],
                  "relabelings": []
                },
                "tolerations": []
              }
            },
            "kubecostModel": {
              "allocation": null,
              "cloudCost": {
                "enabled": true,
                "labelList": {
                  "IsIncludeList": false,
                  "labels": ""
                },
                "topNItems": 1000
              },
              "containerSecurityContext": {
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": [
                    "ALL"
                  ]
                },
                "readOnlyRootFilesystem": true,
                "runAsNonRoot": true,
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "etl": true,
              "etlDailyStoreDurationDays": 91,
              "etlFileStoreEnabled": true,
              "etlHourlyStoreDurationHours": 49,
              "etlReadOnlyMode": false,
              "etlWeeklyStoreDurationWeeks": 53,
              "extraArgs": [],
              "image": "gcr.io/kubecost1/cost-model",
              "imagePullPolicy": "Always",
              "livenessProbe": {
                "enabled": false,
                "failureThreshold": 200,
                "initialDelaySeconds": 30,
                "periodSeconds": 10
              },
              "maxQueryConcurrency": 5,
              "outOfClusterPromMetricsEnabled": false,
              "resources": {
                "requests": {
                  "cpu": "200m",
                  "memory": "55Mi"
                }
              },
              "warmCache": false,
              "warmSavingsCache": true
            },
            "kubecostNetworkCosts": {
              "containerSecurityContext": {},
              "securityContext": {}
            },
            "kubecostToken": null,
            "networkCosts": {
              "additionalLabels": {},
              "additionalSecurityContext": {},
              "affinity": {},
              "annotations": {},
              "config": {
                "destinations": {
                  "cross-region": [],
                  "direct-classification": [],
                  "in-region": [],
                  "in-zone": [
                    "127.0.0.0/8",
                    "169.254.0.0/16",
                    "10.0.0.0/8",
                    "172.16.0.0/12",
                    "192.168.0.0/16"
                  ],
                  "internet": []
                },
                "services": {
                  "amazon-web-services": false,
                  "azure-cloud-services": false,
                  "google-cloud-services": false
                }
              },
              "enabled": false,
              "extraArgs": [],
              "healthCheckProbes": {},
              "image": "gcr.io/kubecost1/kubecost-network-costs:v0.16.8",
              "imagePullPolicy": "Always",
              "nodeSelector": {},
              "podMonitor": {
                "additionalLabels": {},
                "enabled": false
              },
              "podSecurityPolicy": {
                "enabled": false
              },
              "port": 3001,
              "priorityClassName": "",
              "prometheusScrape": false,
              "resources": {
                "limits": {
                  "cpu": "500m"
                },
                "requests": {
                  "cpu": "50m",
                  "memory": "20Mi"
                }
              },
              "service": {
                "annotations": {},
                "labels": {}
              },
              "tolerations": [],
              "trafficLogging": true,
              "updateStrategy": {
                "type": "RollingUpdate"
              }
            },
            "networkPolicy": {
              "costAnalyzer": {
                "additionalLabels": {},
                "annotations": {},
                "enabled": false
              },
              "denyEgress": true,
              "enabled": false,
              "sameNamespace": true
            },
            "nodeSelector": {},
            "oidc": {
              "authURL": "https://my.auth.server/authorize",
              "clientID": "",
              "clientSecret": "",
              "discoveryURL": "https://my.auth.server/.well-known/openid-configuration",
              "enabled": false,
              "loginRedirectURL": "http://my.kubecost.url/model/oidc/authorize",
              "rbac": {
                "enabled": false,
                "groups": [
                  {
                    "claimName": "roles",
                    "claimValues": [
                      "admin",
                      "superusers"
                    ],
                    "enabled": false,
                    "name": "admin"
                  },
                  {
                    "claimName": "roles",
                    "claimValues": [
                      "readonly"
                    ],
                    "enabled": false,
                    "name": "readonly"
                  },
                  {
                    "claimName": "roles",
                    "claimValues": [
                      "editor"
                    ],
                    "enabled": false,
                    "name": "editor"
                  }
                ]
              },
              "secretName": "kubecost-oidc-secret"
            },
            "persistentVolume": {
              "annotations": {},
              "dbSize": "32.0Gi",
              "enabled": true,
              "labels": {},
              "size": "32Gi"
            },
            "podSecurityPolicy": {
              "enabled": false
            },
            "pricingCsv": {
              "enabled": false,
              "location": {
                "URI": "s3://kc-csv-test/pricing_schema.csv",
                "csvAccessCredentials": "pricing-schema-access-secret",
                "provider": "AWS",
                "region": "us-east-1"
              }
            },
            "priority": {
              "enabled": false,
              "name": ""
            },
            "prometheus": {
              "alertRelabelConfigs": null,
              "alertmanager": {
                "affinity": {},
                "baseURL": "http://localhost:9093",
                "configFileName": "alertmanager.yml",
                "configFromSecret": "",
                "configMapOverrideName": "",
                "enabled": false,
                "extraArgs": {},
                "extraEnv": {},
                "extraSecretMounts": [],
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "quay.io/prometheus/alertmanager",
                  "tag": "v0.25.0"
                },
                "ingress": {
                  "annotations": {},
                  "enabled": false,
                  "extraLabels": {},
                  "extraPaths": [],
                  "hosts": [],
                  "tls": []
                },
                "name": "alertmanager",
                "nodeSelector": {},
                "persistentVolume": {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "annotations": {},
                  "enabled": true,
                  "existingClaim": "",
                  "mountPath": "/data",
                  "size": "2Gi",
                  "subPath": ""
                },
                "podAnnotations": {},
                "podDisruptionBudget": {
                  "enabled": false,
                  "maxUnavailable": 1
                },
                "podLabels": {},
                "podSecurityPolicy": {
                  "annotations": {}
                },
                "prefixURL": "",
                "priorityClassName": "",
                "replicaCount": 1,
                "resources": {},
                "securityContext": {
                  "fsGroup": 1001,
                  "runAsGroup": 1001,
                  "runAsNonRoot": true,
                  "runAsUser": 1001
                },
                "service": {
                  "annotations": {},
                  "clusterIP": "",
                  "externalIPs": [],
                  "labels": {},
                  "loadBalancerIP": "",
                  "loadBalancerSourceRanges": [],
                  "servicePort": 80,
                  "sessionAffinity": "None",
                  "type": "ClusterIP"
                },
                "statefulSet": {
                  "enabled": false,
                  "headless": {
                    "annotations": {},
                    "labels": {},
                    "servicePort": 80
                  },
                  "podManagementPolicy": "OrderedReady"
                },
                "strategy": {
                  "rollingUpdate": null,
                  "type": "Recreate"
                },
                "tolerations": []
              },
              "alertmanagerFiles": {
                "alertmanager.yml": {
                  "global": {},
                  "receivers": [
                    {
                      "name": "default-receiver"
                    }
                  ],
                  "route": {
                    "group_interval": "5m",
                    "group_wait": "10s",
                    "receiver": "default-receiver",
                    "repeat_interval": "3h"
                  }
                }
              },
              "configmapReload": {
                "alertmanager": {
                  "enabled": true,
                  "extraArgs": {},
                  "extraConfigmapMounts": [],
                  "extraVolumeDirs": [],
                  "image": {
                    "pullPolicy": "IfNotPresent",
                    "repository": "jimmidyson/configmap-reload",
                    "tag": "v0.9.0"
                  },
                  "name": "configmap-reload",
                  "resources": {}
                },
                "prometheus": {
                  "containerSecurityContext": {
                    "allowPrivilegeEscalation": false,
                    "capabilities": {
                      "drop": [
                        "ALL"
                      ]
                    },
                    "readOnlyRootFilesystem": true,
                    "runAsNonRoot": true,
                    "seccompProfile": {
                      "type": "RuntimeDefault"
                    }
                  },
                  "enabled": true,
                  "extraArgs": {},
                  "extraConfigmapMounts": [],
                  "extraVolumeDirs": [],
                  "image": {
                    "pullPolicy": "IfNotPresent",
                    "repository": "jimmidyson/configmap-reload",
                    "tag": "v0.9.0"
                  },
                  "name": "configmap-reload",
                  "resources": {}
                }
              },
              "extraScrapeConfigs": "- job_name: kubecost\n  honor_labels: true\n  scrape_interval: 1m\n  scrape_timeout: 60s\n  metrics_path: /metrics\n  scheme: http\n  dns_sd_configs:\n  - names:\n    - {{ template \"cost-analyzer.serviceName\" . }}\n    type: 'A'\n    port: 9003\n- job_name: kubecost-networking\n  kubernetes_sd_configs:\n    - role: pod\n  relabel_configs:\n  # Scrape only the the targets matching the following metadata\n    - source_labels: [__meta_kubernetes_pod_label_app]\n      action: keep\n      regex:  {{ template \"cost-analyzer.networkCostsName\" . }}\n",
              "global": {
                "additionalLabels": {},
                "advancedReports": {
                  "enabled": false,
                  "reports": [
                    {
                      "aggregateBy": "namespace",
                      "cloudBreakdown": "service",
                      "cloudJoin": "label:kubernetes_namespace",
                      "filters": [
                        {
                          "property": "cluster",
                          "value": "cluster-one"
                        }
                      ],
                      "title": "Example Advanced Report 0",
                      "window": "7d"
                    }
                  ]
                },
                "amp": {
                  "enabled": false,
                  "prometheusServerEndpoint": "https://localhost:8085/\u003cworkspaceId\u003e/",
                  "remoteWriteService": "https://aps-workspaces.us-west-2.amazonaws.com/workspaces/\u003cworkspaceId\u003e/api/v1/remote_write",
                  "sigv4": {
                    "region": "us-west-2"
                  }
                },
                "assetReports": {
                  "enabled": false,
                  "reports": [
                    {
                      "accumulate": false,
                      "aggregateBy": "type",
                      "filters": [
                        {
                          "property": "cluster",
                          "value": "cluster-one"
                        }
                      ],
                      "title": "Example Asset Report 0",
                      "window": "today"
                    }
                  ]
                },
                "cloudCostReports": {
                  "enabled": false,
                  "reports": [
                    {
                      "accumulate": false,
                      "aggregateBy": "service",
                      "title": "Cloud Cost Report 0",
                      "window": "today"
                    }
                  ]
                },
                "containerSecurityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": {
                    "drop": [
                      "ALL"
                    ]
                  },
                  "privileged": false,
                  "readOnlyRootFilesystem": true
                },
                "gcpstore": {
                  "enabled": false
                },
                "gmp": {
                  "enabled": false,
                  "gmpProxy": {
                    "enabled": false,
                    "image": "gke.gcr.io/prometheus-engine/frontend:v0.4.1-gke.0",
                    "imagePullPolicy": "Always",
                    "name": "gmp-proxy",
                    "port": 8085,
                    "projectId": "YOUR_PROJECT_ID"
                  },
                  "prometheusServerEndpoint": "http://localhost:8085/"
                },
                "grafana": {
                  "domainName": "cost-analyzer-grafana.default.svc",
                  "enabled": true,
                  "proxy": true,
                  "scheme": "http"
                },
                "mimirProxy": {
                  "enabled": false,
                  "image": "nginxinc/nginx-unprivileged",
                  "mimirEndpoint": "$mimir_endpoint",
                  "name": "mimir-proxy",
                  "orgIdentifier": "$your_tenant_ID",
                  "port": 8085
                },
                "notifications": {
                  "alertmanager": {
                    "enabled": false,
                    "fqdn": "http://cost-analyzer-prometheus-server.default.svc"
                  }
                },
                "podAnnotations": {},
                "prometheus": {
                  "enabled": true,
                  "fqdn": "http://cost-analyzer-prometheus-server.default.svc"
                },
                "savedReports": {
                  "enabled": false,
                  "reports": [
                    {
                      "accumulate": false,
                      "aggregateBy": "namespace",
                      "chartDisplay": "category",
                      "filters": [
                        {
                          "property": "cluster",
                          "value": "cluster-one,cluster*"
                        },
                        {
                          "property": "namespace",
                          "value": "kubecost"
                        }
                      ],
                      "idle": "separate",
                      "rate": "cumulative",
                      "title": "Example Saved Report 0",
                      "window": "today"
                    },
                    {
                      "accumulate": false,
                      "aggregateBy": "controllerKind",
                      "chartDisplay": "category",
                      "filters": [
                        {
                          "property": "label",
                          "value": "app:cost*,environment:kube*"
                        },
                        {
                          "property": "namespace",
                          "value": "kubecost"
                        }
                      ],
                      "idle": "share",
                      "rate": "monthly",
                      "title": "Example Saved Report 1",
                      "window": "month"
                    },
                    {
                      "accumulate": true,
                      "aggregateBy": "service",
                      "chartDisplay": "category",
                      "filters": [],
                      "idle": "hide",
                      "rate": "daily",
                      "title": "Example Saved Report 2",
                      "window": "2020-11-11T00:00:00Z,2020-12-09T23:59:59Z"
                    }
                  ]
                },
                "securityContext": {
                  "runAsNonRoot": true,
                  "seccompProfile": {
                    "type": "RuntimeDefault"
                  }
                },
                "thanos": {
                  "enabled": false
                }
              },
              "imagePullSecrets": null,
              "kube-state-metrics": {
                "affinity": {},
                "autosharding": {
                  "enabled": false
                },
                "collectors": {
                  "certificatesigningrequests": false,
                  "configmaps": true,
                  "cronjobs": true,
                  "daemonsets": true,
                  "deployments": true,
                  "endpoints": true,
                  "horizontalpodautoscalers": true,
                  "ingresses": false,
                  "jobs": true,
                  "limitranges": true,
                  "mutatingwebhookconfigurations": false,
                  "namespaces": true,
                  "networkpolicies": false,
                  "nodes": true,
                  "persistentvolumeclaims": true,
                  "persistentvolumes": true,
                  "poddisruptionbudgets": true,
                  "pods": true,
                  "replicasets": true,
                  "replicationcontrollers": true,
                  "resourcequotas": true,
                  "secrets": false,
                  "services": true,
                  "statefulsets": true,
                  "storageclasses": true,
                  "validatingwebhookconfigurations": false,
                  "verticalpodautoscalers": false,
                  "volumeattachments": false
                },
                "customLabels": {},
                "disabled": true,
                "enabled": true,
                "global": {
                  "additionalLabels": {},
                  "advancedReports": {
                    "enabled": false,
                    "reports": [
                      {
                        "aggregateBy": "namespace",
                        "cloudBreakdown": "service",
                        "cloudJoin": "label:kubernetes_namespace",
                        "filters": [
                          {
                            "property": "cluster",
                            "value": "cluster-one"
                          }
                        ],
                        "title": "Example Advanced Report 0",
                        "window": "7d"
                      }
                    ]
                  },
                  "amp": {
                    "enabled": false,
                    "prometheusServerEndpoint": "https://localhost:8085/\u003cworkspaceId\u003e/",
                    "remoteWriteService": "https://aps-workspaces.us-west-2.amazonaws.com/workspaces/\u003cworkspaceId\u003e/api/v1/remote_write",
                    "sigv4": {
                      "region": "us-west-2"
                    }
                  },
                  "assetReports": {
                    "enabled": false,
                    "reports": [
                      {
                        "accumulate": false,
                        "aggregateBy": "type",
                        "filters": [
                          {
                            "property": "cluster",
                            "value": "cluster-one"
                          }
                        ],
                        "title": "Example Asset Report 0",
                        "window": "today"
                      }
                    ]
                  },
                  "cloudCostReports": {
                    "enabled": false,
                    "reports": [
                      {
                        "accumulate": false,
                        "aggregateBy": "service",
                        "title": "Cloud Cost Report 0",
                        "window": "today"
                      }
                    ]
                  },
                  "containerSecurityContext": {
                    "allowPrivilegeEscalation": false,
                    "capabilities": {
                      "drop": [
                        "ALL"
                      ]
                    },
                    "privileged": false,
                    "readOnlyRootFilesystem": true
                  },
                  "gcpstore": {
                    "enabled": false
                  },
                  "gmp": {
                    "enabled": false,
                    "gmpProxy": {
                      "enabled": false,
                      "image": "gke.gcr.io/prometheus-engine/frontend:v0.4.1-gke.0",
                      "imagePullPolicy": "Always",
                      "name": "gmp-proxy",
                      "port": 8085,
                      "projectId": "YOUR_PROJECT_ID"
                    },
                    "prometheusServerEndpoint": "http://localhost:8085/"
                  },
                  "grafana": {
                    "domainName": "cost-analyzer-grafana.default.svc",
                    "enabled": true,
                    "proxy": true,
                    "scheme": "http"
                  },
                  "mimirProxy": {
                    "enabled": false,
                    "image": "nginxinc/nginx-unprivileged",
                    "mimirEndpoint": "$mimir_endpoint",
                    "name": "mimir-proxy",
                    "orgIdentifier": "$your_tenant_ID",
                    "port": 8085
                  },
                  "notifications": {
                    "alertmanager": {
                      "enabled": false,
                      "fqdn": "http://cost-analyzer-prometheus-server.default.svc"
                    }
                  },
                  "podAnnotations": {},
                  "prometheus": {
                    "enabled": true,
                    "fqdn": "http://cost-analyzer-prometheus-server.default.svc"
                  },
                  "savedReports": {
                    "enabled": false,
                    "reports": [
                      {
                        "accumulate": false,
                        "aggregateBy": "namespace",
                        "chartDisplay": "category",
                        "filters": [
                          {
                            "property": "cluster",
                            "value": "cluster-one,cluster*"
                          },
                          {
                            "property": "namespace",
                            "value": "kubecost"
                          }
                        ],
                        "idle": "separate",
                        "rate": "cumulative",
                        "title": "Example Saved Report 0",
                        "window": "today"
                      },
                      {
                        "accumulate": false,
                        "aggregateBy": "controllerKind",
                        "chartDisplay": "category",
                        "filters": [
                          {
                            "property": "label",
                            "value": "app:cost*,environment:kube*"
                          },
                          {
                            "property": "namespace",
                            "value": "kubecost"
                          }
                        ],
                        "idle": "share",
                        "rate": "monthly",
                        "title": "Example Saved Report 1",
                        "window": "month"
                      },
                      {
                        "accumulate": true,
                        "aggregateBy": "service",
                        "chartDisplay": "category",
                        "filters": [],
                        "idle": "hide",
                        "rate": "daily",
                        "title": "Example Saved Report 2",
                        "window": "2020-11-11T00:00:00Z,2020-12-09T23:59:59Z"
                      }
                    ]
                  },
                  "securityContext": {
                    "runAsNonRoot": true,
                    "seccompProfile": {
                      "type": "RuntimeDefault"
                    }
                  },
                  "thanos": {
                    "enabled": false
                  }
                },
                "hostNetwork": false,
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "registry.k8s.io/kube-state-metrics/kube-state-metrics",
                  "tag": "v1.9.8"
                },
                "namespaceOverride": "",
                "nodeSelector": {},
                "podAnnotations": {},
                "podSecurityPolicy": {
                  "annotations": {},
                  "enabled": false
                },
                "prometheus": {
                  "monitor": {
                    "additionalLabels": {},
                    "enabled": false,
                    "honorLabels": false,
                    "namespace": ""
                  }
                },
                "prometheusScrape": true,
                "rbac": {
                  "create": true
                },
                "replicas": 1,
                "securityContext": {
                  "enabled": true,
                  "fsGroup": 65534,
                  "runAsUser": 65534
                },
                "service": {
                  "annotations": {},
                  "loadBalancerIP": "",
                  "nodePort": 0,
                  "port": 8080,
                  "type": "ClusterIP"
                },
                "serviceAccount": {
                  "create": true,
                  "imagePullSecrets": []
                },
                "tolerations": []
              },
              "kubeStateMetrics": {
                "enabled": false
              },
              "networkPolicy": {
                "enabled": false
              },
              "nodeExporter": {
                "dnsPolicy": "ClusterFirstWithHostNet",
                "enabled": false,
                "extraArgs": {},
                "extraConfigmapMounts": [],
                "extraHostPathMounts": [],
                "hostNetwork": true,
                "hostPID": true,
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "prom/node-exporter",
                  "tag": "v1.5.0"
                },
                "name": "node-exporter",
                "nodeSelector": {},
                "pod": {
                  "labels": {}
                },
                "podAnnotations": {},
                "podDisruptionBudget": {
                  "enabled": false,
                  "maxUnavailable": 1
                },
                "podSecurityPolicy": {
                  "annotations": {}
                },
                "priorityClassName": "",
                "resources": {},
                "securityContext": {},
                "service": {
                  "annotations": {
                    "prometheus.io/scrape": "true"
                  },
                  "clusterIP": "None",
                  "externalIPs": [],
                  "hostPort": 9100,
                  "labels": {},
                  "loadBalancerIP": "",
                  "loadBalancerSourceRanges": [],
                  "servicePort": 9100,
                  "type": "ClusterIP"
                },
                "tolerations": [],
                "updateStrategy": {
                  "type": "RollingUpdate"
                }
              },
              "podSecurityPolicy": {
                "enabled": false
              },
              "pushgateway": {
                "enabled": false,
                "extraArgs": {},
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "prom/pushgateway",
                  "tag": "v1.5.1"
                },
                "ingress": {
                  "annotations": {},
                  "enabled": false,
                  "extraPaths": [],
                  "hosts": [],
                  "tls": []
                },
                "name": "pushgateway",
                "nodeSelector": {},
                "persistentVolume": {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "annotations": {},
                  "enabled": true,
                  "existingClaim": "",
                  "mountPath": "/data",
                  "size": "2Gi",
                  "subPath": ""
                },
                "podAnnotations": {},
                "podDisruptionBudget": {
                  "enabled": false,
                  "maxUnavailable": 1
                },
                "podSecurityPolicy": {
                  "annotations": {}
                },
                "priorityClassName": "",
                "replicaCount": 1,
                "resources": {},
                "securityContext": {
                  "runAsNonRoot": true,
                  "runAsUser": 1001
                },
                "service": {
                  "annotations": {
                    "prometheus.io/probe": "pushgateway"
                  },
                  "clusterIP": "",
                  "externalIPs": [],
                  "labels": {},
                  "loadBalancerIP": "",
                  "loadBalancerSourceRanges": [],
                  "servicePort": 9091,
                  "strategy": {
                    "rollingUpdate": null,
                    "type": "Recreate"
                  },
                  "type": "ClusterIP"
                },
                "tolerations": []
              },
              "rbac": {
                "create": true
              },
              "server": {
                "affinity": {},
                "alertmanagers": [],
                "baseURL": "",
                "configMapOverrideName": "",
                "configPath": "/etc/config/prometheus.yml",
                "containerSecurityContext": {
                  "allowPrivilegeEscalation": false,
                  "capabilities": {
                    "drop": [
                      "ALL"
                    ]
                  },
                  "readOnlyRootFilesystem": true,
                  "runAsNonRoot": true,
                  "seccompProfile": {
                    "type": "RuntimeDefault"
                  }
                },
                "emptyDir": {
                  "sizeLimit": ""
                },
                "enabled": true,
                "env": [],
                "extraArgs": {
                  "query.max-concurrency": 1,
                  "query.max-samples": 100000000
                },
                "extraConfigmapMounts": [],
                "extraFlags": [
                  "web.enable-lifecycle"
                ],
                "extraHostPathMounts": [],
                "extraInitContainers": [],
                "extraSecretMounts": [],
                "extraVolumeMounts": [],
                "extraVolumes": [],
                "global": {
                  "evaluation_interval": "1m",
                  "external_labels": {
                    "cluster_id": "cluster-one"
                  },
                  "scrape_interval": "1m",
                  "scrape_timeout": "60s"
                },
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "quay.io/prometheus/prometheus",
                  "tag": "v2.35.0"
                },
                "ingress": {
                  "annotations": {},
                  "enabled": false,
                  "extraLabels": {},
                  "extraPaths": [],
                  "hosts": [],
                  "pathType": "Prefix",
                  "tls": []
                },
                "livenessProbeFailureThreshold": 3,
                "livenessProbeInitialDelay": 30,
                "livenessProbeSuccessThreshold": 1,
                "livenessProbeTimeout": 30,
                "name": "server",
                "nodeSelector": {},
                "persistentVolume": {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "annotations": {},
                  "enabled": true,
                  "existingClaim": "",
                  "mountPath": "/data",
                  "size": "32Gi",
                  "subPath": ""
                },
                "podAnnotations": {},
                "podDisruptionBudget": {
                  "enabled": false,
                  "maxUnavailable": 1
                },
                "podLabels": {},
                "podSecurityPolicy": {
                  "annotations": {}
                },
                "prefixURL": "",
                "priorityClassName": "",
                "readinessProbeFailureThreshold": 3,
                "readinessProbeInitialDelay": 30,
                "readinessProbeSuccessThreshold": 1,
                "readinessProbeTimeout": 30,
                "remoteRead": {},
                "remoteWrite": {},
                "replicaCount": 1,
                "resources": {},
                "retention": "15d",
                "securityContext": {
                  "fsGroup": 1001,
                  "runAsGroup": 1001,
                  "runAsNonRoot": true,
                  "runAsUser": 1001
                },
                "service": {
                  "annotations": {},
                  "clusterIP": "",
                  "externalIPs": [],
                  "gRPC": {
                    "enabled": false,
                    "servicePort": 10901
                  },
                  "labels": {},
                  "loadBalancerIP": "",
                  "loadBalancerSourceRanges": [],
                  "servicePort": 80,
                  "sessionAffinity": "None",
                  "statefulsetReplica": {
                    "enabled": false,
                    "replica": 0
                  },
                  "type": "ClusterIP"
                },
                "sidecarContainers": null,
                "statefulSet": {
                  "annotations": {},
                  "enabled": false,
                  "headless": {
                    "annotations": {},
                    "labels": {},
                    "servicePort": 80
                  },
                  "labels": {},
                  "podManagementPolicy": "OrderedReady"
                },
                "strategy": {
                  "rollingUpdate": null,
                  "type": "Recreate"
                },
                "terminationGracePeriodSeconds": 300,
                "tolerations": [],
                "verticalAutoscaler": {
                  "enabled": false
                }
              },
              "serverFiles": {
                "alerting_rules.yml": {},
                "alerts": {},
                "prometheus.yml": {
                  "rule_files": [
                    "/etc/config/recording_rules.yml",
                    "/etc/config/alerting_rules.yml",
                    "/etc/config/rules",
                    "/etc/config/alerts"
                  ],
                  "scrape_configs": [
                    {
                      "job_name": "prometheus",
                      "static_configs": [
                        {
                          "targets": [
                            "localhost:9090"
                          ]
                        }
                      ]
                    },
                    {
                      "bearer_token_file": "/var/run/secrets/kubernetes.io/serviceaccount/token",
                      "job_name": "kubernetes-nodes-cadvisor",
                      "kubernetes_sd_configs": [
                        {
                          "role": "node"
                        }
                      ],
                      "metric_relabel_configs": [
                        {
                          "action": "keep",
                          "regex": "(container_cpu_usage_seconds_total|container_memory_working_set_bytes|container_network_receive_errors_total|container_network_transmit_errors_total|container_network_receive_packets_dropped_total|container_network_transmit_packets_dropped_total|container_memory_usage_bytes|container_cpu_cfs_throttled_periods_total|container_cpu_cfs_periods_total|container_fs_usage_bytes|container_fs_limit_bytes|container_cpu_cfs_periods_total|container_fs_inodes_free|container_fs_inodes_total|container_fs_usage_bytes|container_fs_limit_bytes|container_cpu_cfs_throttled_periods_total|container_cpu_cfs_periods_total|container_network_receive_bytes_total|container_network_transmit_bytes_total|container_fs_inodes_free|container_fs_inodes_total|container_fs_usage_bytes|container_fs_limit_bytes|container_spec_cpu_shares|container_spec_memory_limit_bytes|container_network_receive_bytes_total|container_network_transmit_bytes_total|container_fs_reads_bytes_total|container_network_receive_bytes_total|container_fs_writes_bytes_total|container_fs_reads_bytes_total|cadvisor_version_info|kubecost_pv_info)",
                          "source_labels": [
                            "__name__"
                          ]
                        },
                        {
                          "action": "replace",
                          "regex": "(.+)",
                          "source_labels": [
                            "container"
                          ],
                          "target_label": "container_name"
                        },
                        {
                          "action": "replace",
                          "regex": "(.+)",
                          "source_labels": [
                            "pod"
                          ],
                          "target_label": "pod_name"
                        }
                      ],
                      "relabel_configs": [
                        {
                          "action": "labelmap",
                          "regex": "__meta_kubernetes_node_label_(.+)"
                        },
                        {
                          "replacement": "kubernetes.default.svc:443",
                          "target_label": "__address__"
                        },
                        {
                          "regex": "(.+)",
                          "replacement": "/api/v1/nodes/$1/proxy/metrics/cadvisor",
                          "source_labels": [
                            "__meta_kubernetes_node_name"
                          ],
                          "target_label": "__metrics_path__"
                        }
                      ],
                      "scheme": "https",
                      "tls_config": {
                        "ca_file": "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt",
                        "insecure_skip_verify": true
                      }
                    },
                    {
                      "bearer_token_file": "/var/run/secrets/kubernetes.io/serviceaccount/token",
                      "job_name": "kubernetes-nodes",
                      "kubernetes_sd_configs": [
                        {
                          "role": "node"
                        }
                      ],
                      "metric_relabel_configs": [
                        {
                          "action": "keep",
                          "regex": "(kubelet_volume_stats_used_bytes)",
                          "source_labels": [
                            "__name__"
                          ]
                        }
                      ],
                      "relabel_configs": [
                        {
                          "action": "labelmap",
                          "regex": "__meta_kubernetes_node_label_(.+)"
                        },
                        {
                          "replacement": "kubernetes.default.svc:443",
                          "target_label": "__address__"
                        },
                        {
                          "regex": "(.+)",
                          "replacement": "/api/v1/nodes/$1/proxy/metrics",
                          "source_labels": [
                            "__meta_kubernetes_node_name"
                          ],
                          "target_label": "__metrics_path__"
                        }
                      ],
                      "scheme": "https",
                      "tls_config": {
                        "ca_file": "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt",
                        "insecure_skip_verify": true
                      }
                    },
                    {
                      "job_name": "kubernetes-service-endpoints",
                      "kubernetes_sd_configs": [
                        {
                          "role": "endpoints"
                        }
                      ],
                      "metric_relabel_configs": [
                        {
                          "action": "keep",
                          "regex": "(container_cpu_allocation|container_cpu_usage_seconds_total|container_fs_limit_bytes|container_fs_writes_bytes_total|container_gpu_allocation|container_memory_allocation_bytes|container_memory_usage_bytes|container_memory_working_set_bytes|container_network_receive_bytes_total|container_network_transmit_bytes_total|DCGM_FI_DEV_GPU_UTIL|deployment_match_labels|kube_daemonset_status_desired_number_scheduled|kube_daemonset_status_number_ready|kube_deployment_spec_replicas|kube_deployment_status_replicas|kube_deployment_status_replicas_available|kube_job_status_failed|kube_namespace_annotations|kube_namespace_labels|kube_node_info|kube_node_labels|kube_node_status_allocatable|kube_node_status_allocatable_cpu_cores|kube_node_status_allocatable_memory_bytes|kube_node_status_capacity|kube_node_status_capacity_cpu_cores|kube_node_status_capacity_memory_bytes|kube_node_status_condition|kube_persistentvolume_capacity_bytes|kube_persistentvolume_status_phase|kube_persistentvolumeclaim_info|kube_persistentvolumeclaim_resource_requests_storage_bytes|kube_pod_container_info|kube_pod_container_resource_limits|kube_pod_container_resource_limits_cpu_cores|kube_pod_container_resource_limits_memory_bytes|kube_pod_container_resource_requests|kube_pod_container_resource_requests_cpu_cores|kube_pod_container_resource_requests_memory_bytes|kube_pod_container_status_restarts_total|kube_pod_container_status_running|kube_pod_container_status_terminated_reason|kube_pod_labels|kube_pod_owner|kube_pod_status_phase|kube_replicaset_owner|kube_statefulset_replicas|kube_statefulset_status_replicas|kubecost_cluster_info|kubecost_cluster_management_cost|kubecost_cluster_memory_working_set_bytes|kubecost_load_balancer_cost|kubecost_network_internet_egress_cost|kubecost_network_region_egress_cost|kubecost_network_zone_egress_cost|kubecost_node_is_spot|kubecost_pod_network_egress_bytes_total|node_cpu_hourly_cost|node_cpu_seconds_total|node_disk_reads_completed|node_disk_reads_completed_total|node_disk_writes_completed|node_disk_writes_completed_total|node_filesystem_device_error|node_gpu_count|node_gpu_hourly_cost|node_memory_Buffers_bytes|node_memory_Cached_bytes|node_memory_MemAvailable_bytes|node_memory_MemFree_bytes|node_memory_MemTotal_bytes|node_network_transmit_bytes_total|node_ram_hourly_cost|node_total_hourly_cost|pod_pvc_allocation|pv_hourly_cost|service_selector_labels|statefulSet_match_labels|kubecost_pv_info|up)",
                          "source_labels": [
                            "__name__"
                          ]
                        }
                      ],
                      "relabel_configs": [
                        {
                          "action": "keep",
                          "regex": true,
                          "source_labels": [
                            "__meta_kubernetes_service_annotation_prometheus_io_scrape"
                          ]
                        },
                        {
                          "action": "keep",
                          "regex": "(.*kube-state-metrics|.*node-exporter|kubecost-network-costs)",
                          "source_labels": [
                            "__meta_kubernetes_endpoints_name"
                          ]
                        },
                        {
                          "action": "replace",
                          "regex": "(https?)",
                          "source_labels": [
                            "__meta_kubernetes_service_annotation_prometheus_io_scheme"
                          ],
                          "target_label": "__scheme__"
                        },
                        {
                          "action": "replace",
                          "regex": "(.+)",
                          "source_labels": [
                            "__meta_kubernetes_service_annotation_prometheus_io_path"
                          ],
                          "target_label": "__metrics_path__"
                        },
                        {
                          "action": "replace",
                          "regex": "([^:]+)(?::\\d+)?;(\\d+)",
                          "replacement": "$1:$2",
                          "source_labels": [
                            "__address__",
                            "__meta_kubernetes_service_annotation_prometheus_io_port"
                          ],
                          "target_label": "__address__"
                        },
                        {
                          "action": "labelmap",
                          "regex": "__meta_kubernetes_service_label_(.+)"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_namespace"
                          ],
                          "target_label": "kubernetes_namespace"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_service_name"
                          ],
                          "target_label": "kubernetes_name"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_pod_node_name"
                          ],
                          "target_label": "kubernetes_node"
                        }
                      ]
                    }
                  ]
                },
                "recording_rules.yml": {},
                "rules": {
                  "groups": [
                    {
                      "name": "CPU",
                      "rules": [
                        {
                          "expr": "sum(rate(container_cpu_usage_seconds_total{container!=\"\"}[5m]))",
                          "record": "cluster:cpu_usage:rate5m"
                        },
                        {
                          "expr": "rate(container_cpu_usage_seconds_total{container!=\"\"}[5m])",
                          "record": "cluster:cpu_usage_nosum:rate5m"
                        },
                        {
                          "expr": "avg(irate(container_cpu_usage_seconds_total{container!=\"POD\", container!=\"\"}[5m])) by (container,pod,namespace)",
                          "record": "kubecost_container_cpu_usage_irate"
                        },
                        {
                          "expr": "sum(container_memory_working_set_bytes{container!=\"POD\",container!=\"\"}) by (container,pod,namespace)",
                          "record": "kubecost_container_memory_working_set_bytes"
                        },
                        {
                          "expr": "sum(container_memory_working_set_bytes{container!=\"POD\",container!=\"\"})",
                          "record": "kubecost_cluster_memory_working_set_bytes"
                        }
                      ]
                    },
                    {
                      "name": "Savings",
                      "rules": [
                        {
                          "expr": "sum(avg(kube_pod_owner{owner_kind!=\"DaemonSet\"}) by (pod) * sum(container_cpu_allocation) by (pod))",
                          "labels": {
                            "daemonset": "false"
                          },
                          "record": "kubecost_savings_cpu_allocation"
                        },
                        {
                          "expr": "sum(avg(kube_pod_owner{owner_kind=\"DaemonSet\"}) by (pod) * sum(container_cpu_allocation) by (pod)) / sum(kube_node_info)",
                          "labels": {
                            "daemonset": "true"
                          },
                          "record": "kubecost_savings_cpu_allocation"
                        },
                        {
                          "expr": "sum(avg(kube_pod_owner{owner_kind!=\"DaemonSet\"}) by (pod) * sum(container_memory_allocation_bytes) by (pod))",
                          "labels": {
                            "daemonset": "false"
                          },
                          "record": "kubecost_savings_memory_allocation_bytes"
                        },
                        {
                          "expr": "sum(avg(kube_pod_owner{owner_kind=\"DaemonSet\"}) by (pod) * sum(container_memory_allocation_bytes) by (pod)) / sum(kube_node_info)",
                          "labels": {
                            "daemonset": "true"
                          },
                          "record": "kubecost_savings_memory_allocation_bytes"
                        }
                      ]
                    }
                  ]
                }
              },
              "serviceAccounts": {
                "alertmanager": {
                  "create": true,
                  "name": null
                },
                "nodeExporter": {
                  "create": true,
                  "name": null
                },
                "pushgateway": {
                  "create": true,
                  "name": null
                },
                "server": {
                  "annotations": {},
                  "create": true,
                  "name": null
                }
              },
              "sidecarContainers": {
                "containerSecurityContext": {
                  "securityContext": {
                    "allowPrivilegeEscalation": false,
                    "capabilities": {
                      "drop": [
                        "ALL"
                      ]
                    },
                    "readOnlyRootFilesystem": true,
                    "runAsNonRoot": true,
                    "seccompProfile": {
                      "type": "RuntimeDefault"
                    }
                  }
                }
              }
            },
            "prometheusRule": {
              "additionalLabels": {},
              "enabled": false
            },
            "remoteWrite": {
              "postgres": {
                "auth": {
                  "password": "admin"
                },
                "enabled": false,
                "initImage": "gcr.io/kubecost1/sql-init",
                "initImagePullPolicy": "Always",
                "installLocal": true,
                "persistentVolume": {
                  "size": "200Gi"
                },
                "priorityClassName": "",
                "remotePostgresAddress": ""
              }
            },
            "reporting": {
              "errorReporting": true,
              "logCollection": true,
              "productAnalytics": true,
              "valuesReporting": true
            },
            "route": {
              "annotations": {},
              "enabled": false
            },
            "saml": {
              "appRootURL": "http://localhost:9090",
              "authTimeout": 1440,
              "enabled": false,
              "idpMetadataURL": "https://dev-elu2z98r.auth0.com/samlp/metadata/c6nY4M37rBP0qSO1IYIqBPPyIPxLS8v2",
              "rbac": {
                "enabled": false,
                "groups": [
                  {
                    "assertionName": "http://schemas.auth0.com/userType",
                    "assertionValues": [
                      "admin",
                      "superusers"
                    ],
                    "enabled": false,
                    "name": "admin"
                  },
                  {
                    "assertionName": "http://schemas.auth0.com/userType",
                    "assertionValues": [
                      "readonly"
                    ],
                    "enabled": false,
                    "name": "readonly"
                  },
                  {
                    "assertionName": "http://schemas.auth0.com/userType",
                    "assertionValues": [
                      "editor"
                    ],
                    "enabled": true,
                    "name": "editor"
                  }
                ]
              },
              "redirectURL": "https://dev-elu2z98r.auth0.com/v2/logout",
              "secretName": "kubecost-authzero"
            },
            "service": {
              "annotations": {},
              "labels": {},
              "port": 9090,
              "targetPort": 9090,
              "type": "ClusterIP"
            },
            "serviceAccount": {
              "annotations": {},
              "create": true
            },
            "serviceMonitor": {
              "additionalLabels": {},
              "enabled": false,
              "metricRelabelings": [],
              "networkCosts": {
                "additionalLabels": {},
                "enabled": false,
                "metricRelabelings": [],
                "relabelings": [],
                "scrapeTimeout": "10s"
              },
              "relabelings": []
            },
            "sigV4Proxy": {
              "extraEnv": null,
              "host": "aps-workspaces.us-west-2.amazonaws.com",
              "image": "public.ecr.aws/aws-observability/aws-sigv4-proxy:latest",
              "imagePullPolicy": "Always",
              "name": "aps",
              "port": 8005,
              "region": "us-west-2"
            },
            "supportNFS": false,
            "systemProxy": {
              "enabled": false,
              "httpProxyUrl": "",
              "httpsProxyUrl": "",
              "noProxy": ""
            },
            "tolerations": []
          }
        }
      ]
    capabilities: Basic Install
    categories: Monitoring
    containerImage: gcr.io/kubecost1/operator/kubecost-operator-controller:v1.106.0
    createdAt: "2023-09-18T18:35:32Z"
    support: Stackwatch
    operators.operatorframework.io/builder: operator-sdk-v1.31.0
    operators.operatorframework.io/project_layout: helm.sdk.operatorframework.io/v1
    description: |-
      An operator that deploys Kubecost 1.106.0 via the Helm chart.
  name: kubecost-operator.v1.106.0
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - kind: CostAnalyzer
      name: costanalyzers.charts.kubecost.com
      version: v1alpha1
      displayName: CostAnalyzer
      description: The CostAnalyzer API describes a deployment of Kubecost and its dependencies.
  description: Operator that deploys Kubecost.
  displayName: Kubecost
  icon:
  - base64data: ""
    mediatype: "image/png"
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - namespaces
          - nodes
          - persistentvolumes
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
        - apiGroups:
          - charts.kubecost.com
          resources:
          - costanalyzers
          - costanalyzers/status
          - costanalyzers/finalizers
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - clusterrolebindings
          - clusterroles
          verbs:
          - '*'
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - rolebindings
          - roles
          verbs:
          - '*'
        - apiGroups:
          - apps
          resources:
          - deployments
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - configmaps
          - persistentvolumeclaims
          - secrets
          - serviceaccounts
          - services
          verbs:
          - '*'
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        serviceAccountName: kubecost-operator-controller-manager
      deployments:
      - label:
          app.kubernetes.io/component: manager
          app.kubernetes.io/created-by: kubecost-operator
          app.kubernetes.io/instance: controller-manager
          app.kubernetes.io/managed-by: kustomize
          app.kubernetes.io/name: deployment
          app.kubernetes.io/part-of: kubecost-operator
          control-plane: controller-manager
        name: kubecost-operator-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              control-plane: controller-manager
          strategy: {}
          template:
            metadata:
              annotations:
                kubectl.kubernetes.io/default-container: manager
              labels:
                control-plane: controller-manager
            spec:
              affinity:
                nodeAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                    nodeSelectorTerms:
                    - matchExpressions:
                      - key: kubernetes.io/arch
                        operator: In
                        values:
                        - amd64
                        - arm64
                        - ppc64le
                        - s390x
                      - key: kubernetes.io/os
                        operator: In
                        values:
                        - linux
              containers:
              - args:
                - --secure-listen-address=0.0.0.0:8443
                - --upstream=http://127.0.0.1:8080/
                - --logtostderr=true
                - --v=0
                image: gcr.io/kubebuilder/kube-rbac-proxy:v0.13.1
                name: kube-rbac-proxy
                ports:
                - containerPort: 8443
                  name: https
                  protocol: TCP
                resources:
                  limits:
                    cpu: 500m
                    memory: 512Mi
                  requests:
                    cpu: 5m
                    memory: 64Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
              - args:
                - --health-probe-bind-address=:8081
                - --metrics-bind-address=127.0.0.1:8080
                - --leader-elect
                - --leader-election-id=kubecost-operator
                image: gcr.io/kubecost1/operator/kubecost-operator-controller:v1.106.0
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                  initialDelaySeconds: 15
                  periodSeconds: 20
                name: manager
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: 8081
                  initialDelaySeconds: 5
                  periodSeconds: 10
                resources:
                  limits:
                    cpu: 500m
                    memory: 512Mi
                  requests:
                    cpu: 10m
                    memory: 64Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
              securityContext:
                runAsNonRoot: true
              serviceAccountName: kubecost-operator-controller-manager
              terminationGracePeriodSeconds: 10
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        serviceAccountName: kubecost-operator-controller-manager
    strategy: deployment
  installModes:
  - supported: false
    type: OwnNamespace
  - supported: false
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - kubecost
  - cost
  - kubernetes
  links:
  - name: Kubecost
    url: https://www.kubecost.com
  maintainers:
  - email: czoller@kubecost.com
    name: Chip Zoller
  maturity: alpha
  provider:
    name: Stackwatch
    url: www.kubecost.com
  version: 1.106.0
